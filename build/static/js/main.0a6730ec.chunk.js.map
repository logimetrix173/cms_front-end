{"version":3,"sources":["constants/constants.js","components/AmbientModuleTemp.js","components/BiaxialLineChart.js","components/Byagwat/BlockTable.js","components/CustomCard.js","components/CustomCard2.js","components/CustomCards.js","components/PowerGenerationGauge.js","components/UI/SiteCalendar.js","components/Compass.js","components/Wind.js","AppContext.js","components/UI/SitestatusBar.js","pages/Byagwat.js","components/Kherakhurd/BlockTable.js","pages/Kherakhurd.js","components/InverterEfficiency/CustomBarChart.js","components/InverterEfficiency/CustomLineChart.js","pages/InverterEfficiency.js","components/mlPredictions/BiaxialLineChart.js","pages/Predictions.js","components/Comparison/Comparison.js","components/Badisidd/NoteDialog.js","pages/Sites.js","components/Hindupur/BlockTable.js","pages/Hindupur.js","components/Sircilla/BlockTable.js","pages/Sircilla.js","components/Gadarpur/BlockTable.js","pages/Gadarpur.js","constants/csvParameters.js","pages/CustomCSV.js","components/Yemmiganur/BlockTable.js","pages/Yemmiganur.js","components/Mahoba/BlockTable.js","pages/Mahoba.js","components/Balangir/BlockTable.js","pages/Balangir.js","components/BhadlaL2/BlockTable.js","pages/BhadlaL2.js","components/Jhandekalan/BlockTable.js","pages/Jhandekalan.js","components/Nangla/BlockTable.js","pages/Nangla.js","components/BhadlaL3/BlockTable.js","pages/BhadlaL3.js","components/SCB/CustomizedTable.js","components/SCB/CustomizedLineChart.js","components/SCB/SCBOnline.js","components/SCB/SCBCustom.js","pages/SCB.js","components/Mankhera/BlockTable.js","pages/Mankhera.js","components/Jhunir/BlockTable.js","pages/Jhunir.js","components/Bhongir/BlockTable.js","pages/Bhongir.js","components/Padmajiwadi/BlockTable.js","pages/Padmajiwadi.js","components/Mothkur/BlockTable.js","pages/Mothkur.js","components/Sadashivpet/BlockTable.js","pages/Sadashivpet.js","components/Pattikonda/BlockTable.js","pages/Pattikonda.js","components/Rayachoti/BlockTable.js","pages/Rayachoti.js","components/Bikaner/BlockTable.js","pages/Bikaner.js","components/Santhipuram/BlockTable.js","pages/Santhipuram.js","components/Chittorgarh/AmbientModuleTemp.js","components/Chittorgarh/BiaxialLineChart.js","components/Chittorgarh/BlockTable.js","components/Chittorgarh/CustomCard2.js","components/Chittorgarh/CustomCard2b.js","components/Chittorgarh/CustomCards.js","components/Chittorgarh/PowerGenerationGauge.js","components/Chittorgarh/Compass.js","components/Chittorgarh/Wind.js","components/Chittorgarh/Compass2.js","components/Chittorgarh/Wind2.js","pages/Chittorgarh.js","components/Chattisgarh/BlockTable.js","pages/Chattisgarh.js","components/Balanagar/BlockTable.js","pages/Balanagar.js","components/Kosigi/BlockTable.js","pages/Kosigi.js","components/Sandur/BlockTable.js","pages/Sandur.js","components/Kudligi/BlockTable.js","pages/Kudligi.js","components/Gulelgudda/BlockTable.js","pages/Gulelgudda.js","components/Hukkeri/BlockTable.js","pages/Hukkeri.js","pages/AddSite.js","components/Kittur/BlockTable.js","pages/Kittur.js","components/Bazpur/BlockTable.js","pages/Bazpur.js","components/Bidar/BlockTable.js","pages/Bidar.js","components/Sidlaghatta/BlockTable.js","pages/Sidlaghatta.js","components/Khilchipur/BlockTable.js","pages/Khilchipur.js","components/Khambhat/BlockTable.js","pages/Khambhat.js","components/Alerts/CustomTable.js","components/UI/AlertsDropdown.js","pages/Alerts.js","components/Analytics/Energy.js","pages/Analytics.js","components/Performance/SiteRanking/CustomBarChart.js","components/UI/MultiDropdownSingle.js","components/Performance/SiteRanking.js","components/Performance/Inverters/InvertersWakeUpChart.js","components/Performance/Inverters/InvertersWakeUpChartSingle.js","components/Performance/Inverters/InverersWakeUpChartCard.js","components/Performance/Inverters/InvertersWakeUp.js","components/Performance/PeakPower/PeakPowerChart.js","components/Performance/PeakPower/PeakPowerChartSingle.js","components/Performance/PeakPower/PeakPowerChartCard.js","components/Performance/PeakPower/PeakPower.js","components/UI/MultiDropdown.js","components/Performance/PRRanking/PRRankingChartSingle.js","components/Performance/PRRanking/PRRankingChartCard.js","components/Performance/PRRanking/PRRanking.js","components/LossAnalytics/LossTable.js","components/LossAnalytics/LossChart.js","pages/LossAnalytics.js","components/Performance/HighTemp/HighTempTable.js","components/Performance/HighTemp/HighTemp.js","components/Performance/TableSensor/Dates.js","components/Performance/TableSensor/Gallary.js","components/Performance/TableSensor/Ideal.js","components/Performance/TableSensor/TableSensor.js","constants/SiteNames.js","components/Performance/InvPerformance/InvertersTable.js","components/Performance/InvPerformance/Dates.js","components/UI/CustomDropdown.js","components/UI/CustomSingleDate.js","components/Performance/InvPerformance/InvPerformance.js","components/Performance/ScbPerformance/ScbSnackbar.js","components/Performance/ScbPerformance/Dates.js","components/Performance/ScbPerformance/ScbPerformance.js","components/Performance/TrendLine/Dates.js","components/Performance/TrendLine/SingleDropdown.js","components/Performance/TrendLine/MultiDropdown.js","components/Performance/TrendLine/TrendlineBiaxialLineChart.js","components/Performance/TrendLine/TrendLine.js","pages/Performance.js","components/Chittuguppa/BlockTable.js","pages/Chittuguppa.js","components/Farhatabad/BlockTable.js","pages/Farhatabad.js","components/Godhur/BlockTable.js","pages/Godhur.js","components/Manthani/BlockTable.js","pages/Manthani.js","components/BankaM/BlockTable.js","pages/BankaM.js","components/BankaN/BlockTable.js","pages/BankaN.js","components/Maddur/BlockTable.js","pages/Maddur.js","components/CSV/QuickCSV.js","pages/CSV.js","components/Admin/DataAvailabilityBarChart.js","components/Admin/DataAvailability.js","components/Admin/CreateUser/NewUser.js","constants/UserAccess/options.js","components/Admin/Users/ManageUsers/ManageUser.js","components/Admin/Users/ManageUser.js","components/Admin/ManageInverters/InvertersTable.js","components/Admin/ManageInverters/ManageInverters.js","components/Admin/ManageSites/SimpleDialog.js","components/Admin/ManageSites/SitesTable.js","components/UI/CustomSnackbar.js","components/Admin/ManageSites/ManageSites.js","components/Admin/Logs/LogTable.js","components/UI/SitesDropdown.js","components/Admin/Logs/Logs.js","components/Admin/SLD/SLD.js","components/Admin/SLD/initial-elements.js","components/Admin/RemoteConfig/ConfigTable.js","components/Admin/RemoteConfig/RemoteConfig.js","components/Admin/Replication/Replication.js","components/Admin/ManageInvScb/InvertersScbTable.js","components/Admin/ManageInvScb/ManageInvScb.js","components/Admin/MessageFeat/MessageTable.js","components/Admin/MessageFeat/Message.js","components/Admin/Alertadmin/AlertadminTable.js","components/Admin/Alertadmin/Alertadmin.js","pages/Admin.js","components/Badisidd/AmbientModuleTemp.js","components/Badisidd/BiaxialLineChart.js","components/Badisidd/BlockTable.js","components/Badisidd/CustomCard2.js","components/Badisidd/GhiGtiCard.js","components/Badisidd/CustomCards.js","components/Badisidd/PowerGenerationGauge.js","components/Badisidd/Compass.js","components/Badisidd/Wind.js","components/Badisidd/Compass2.js","components/Badisidd/Wind2.js","components/Badisidd/Compass3.js","components/Badisidd/Compass4.js","components/Badisidd/Compass5.js","pages/Badisidd.js","components/mlPredictions/Mltable.js","pages/Mlprediction.js","layout/CustomDrawer.js","pages/Dashboard.js","components/Footer.js","pages/Login.js","pages/Signup.js","utils/CustomSnackbar.js","App.js","index.js"],"names":["SERVER_URL","CustomizedLabel","x","y","fill","value","index","dx","dy","fontFamily","textAnchor","AmbientModuleTemp","ambientTemp","moduleTemp","humidity","data","name","Number","Card","elevation","style","paddingTop","paddingBottom","paddingLeft","paddingRight","height","display","flexDirection","alignItems","justifyContent","Typography","variant","BarChart","width","margin","right","barSize","XAxis","dataKey","scale","padding","left","YAxis","domain","CartesianGrid","strokeDasharray","Bar","isAnimationActive","background","label","map","entry","Cell","cursor","BiaxialLineChart","interval","leftAxisY","rightAxisY","useState","ghi","gti","pg","opacity","setOpacity","ResponsiveContainer","LineChart","yAxisId","orientation","Tooltip","Legend","content","payload","gap","color","fontSize","onClick","prevState","selectLine","String","toUpperCase","Line","type","stroke","strokeWidth","strokeOpacity","activeDot","r","dot","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","body","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","tableContainer","maxHeight","CustomizedSubRow","rowBackgroundColor","component","scope","heading","align","isNaN","inv1","toFixed","inv2","inv3","inv4","CustomizedRow","InverterTable","values","classes","tableRows","setTableRows","React","openRowsS","setOpenRowsS","openRowsPV","setopenRowsPV","CustomizedRowGroup","title","tag","openRows","colSpan","IconButton","size","onRowDropDownClick","useEffect","subRowsS","subRowsPV","otherRows","firstIndexRowS","firstIndexRowPV","i","length","match","push","newRows","splice","TableContainer","Paper","className","Table","stickyHeader","TableHead","TableBody","CustomCard","imagePath","imageHeight","Grid","container","src","alt","marginRight","item","justify","CustomCard2","firstTitle","secondTitle","firstValue","secondValue","xs","CustomCards","day_generation","revenue","peak_power","plant_pr","grid_availability","plant_availability","Fragment","revenueNum","revenueStr","lastThree","substring","otherNumbers","replace","getFormattedRevenue","PowerGenerationGauge","totalExport","maxValue","totalExportNum","setTotalExportNum","marginLeft","marginTop","columns","gauge","format","show","min","max","pattern","options","animation","duration","SiteCalendar","setOpenDateTimePicker","setIsNextCount","Compass","rotate","needle","document","getElementById","rotationValue","transformOrigin","transform","viewBox","xmlns","id","cx","cy","d","x1","y1","x2","y2","defaultProps","Wind","windDirection","windSpeed","rain","textAlign","marginBottom","CustomContext","createContext","AppContext","children","enabledLinearProgress","setEnabledLinearProgress","intervalTime","setIntervalTime","enableDarkTheme","setEnableDarkTheme","logoutMsg","setLogoutMsg","open","severity","message","snackbar","setSnackbar","Provider","AppState","useContext","SitestatusBar","sitestatusBar","status","timestamp","handleClickOpen","handleTimeReset","getMinDateForPicker","selectedDate","getFormattedDateAndTimeString","openDateTimePicker","handleDateChange","capacity","paddingInline","undefined","CircularProgress","utils","DateFnsUtils","visibility","onClose","onChange","minDate","Alert","props","grow","flexGrow","gaugeChartStyle","spacing","formControl","minWidth","modalCardStyle","gridBreakpoint","breakpoints","up","Byagwat","handleSessionExpire","userToken","localStorage","getItem","serverUrl","Date","getTime","mainTime","setMainTime","setStatus","setTimestamp","cardsValues","setCardsValues","setTotalExport","setGaugePercent","setAmbientTemp","setModuleTemp","setHumidity","setWindDirection","setWindSpeed","setRain","time","irradianceGenerationData","setIrradianceGenerationData","blockTableId","setBlockTableId","blockTableObjects","setBlockTableObjects","isNextCount","getSiteData","getEnablePacket","getIsNext","timeSliderLabel2","openTimeSliderSuccessAlert","setOpenTimeSliderSuccessAlert","setSelectedDate","isTimeReset","setIsTimeReset","handleTimeSliderToggleClose","getInverterValues","block","startTime","endTime","beginTime","axios","get","headers","jwtToken","enablePacket","clientPacketTime","isNext","then","response","arrayOfObjectsX","arrayFromObject","Object","entries","inv1Value","NaN","inv2Value","inv3Value","inv4Value","error","formatInverterValues","catch","newEndTime","now","fiveAM","setHours","getStatusAndTime","getCardsValues","getTotalExport","ambientTempStr","moduleTempStr","humidityStr","getTemperatures","windDirectionStr","direction","windSpeedStr","speed","getWindDirectionAndSpeed","getIrradianceGenerationData","innerText","toLocaleString","hour","minute","hour12","setInterval","clearInterval","setJustifyProp","useLayoutEffect","window","matchMedia","matches","setDate","getDate","date","padStart","getMonth","getFullYear","FormControl","Select","event","target","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","inv5","inv6","Kherakhurd","inv5Value","inv6Value","CustomBarChart","enableScroll","lowestValueIndex","lowestValue","highestValueIndex","highestValue","chartData","CustomTooltip","active","blockName","toDecimal","brushStartIndex","setBrushStartIndex","top","bottom","tickFormatter","Brush","endIndex","obj","startIndex","LabelList","position","formatter","datum","columnCount","CustomLineChart","lines","invObj","j","dataMin","allowDataOverflow","marginInline","selectEmpty","menuPaper","InverterEfficiency","source","CancelToken","selectedSite","setSelectedSite","lineChartMin","getAPDP","arrayAP","arrayDP","key","startsWith","objectAP","objectDP","formattedBarChartData","barBlock","arrayInv","invValue","truncatedInv","blockNames","siteName","blocks","inverters","Math","ceil","selectedBarBlock","generateBlockNames","barChartData","setBarChartData","createdon_client","lineChartData","setLineChartData","setSelectedBarBlock","selectedLineBlock","setSelectedLineBlock","fetchData","lineBlock","cancelToken","token","barBlockStr","lineBlockStr","modifiedSite","includes","toLocaleLowerCase","post","blockId","site","console","log","dateStr","getHours","getMinutes","aggregatedLines","firstObjectLength","keys","sortable","sort","a","b","red","blue","allColors","split","formattedLineChartData","cancel","enableBarChartScroll","setEnableBarChartScroll","labelId","MenuProps","paper","getContentAnchorEl","JSON","parse","toLowerCase","setTime","Array","from","element","Switch","checked","htmlFor","placeholder","step","actual","predicted","generationData","setGenerationData","generationInterval","generationLeftYDomain","setGenerationLeftYDomain","ML_URL","formattedData","predictedMax","actualMax","timeStr","formatGenerationData","marginBlock","getStartTime","getMaxNow","generation","maxNum","generationNum","getMaxLabel","Comparison","powerGeneration","maxTime","comparisonData","setComparisonData","email","round","totalCapacity","currentCapacity","peakReached","peakReachedTime","ProgressBar","animated","toLocaleTimeString","field","typography","pxToRem","fontWeight","fontWeightRegular","msg","NoteDialog","handleClose","showNotemsg","sendNotemsg","getNotemsg","notemsg","deleteNotemsg","setNotemsg","setOpen","setMsgid","setAlertopen","alertopen","expandedId","setExpandedId","handlealertClose","Dialog","DialogTitle","Container","Accordion","expanded","AccordionSummary","expandIcon","prev","ariaControls","AccordionDetails","notes","DialogContent","DialogContentText","DialogActions","Button","autoFocus","Sites","handleSiteClickInParent","setShowNotemsg","header","order","sortBy","setSortBy","ip","GHI","GTI","network","sitesArray","setSitesArray","sortValues","getSitesData","sortedSitesArray","setItem","stringify","totalSites","online","offline","forEach","siteNamesCount","siteNames","sitesJSON","getFormattedDate","setHeadersOrder","handleOrderChange","headerOrder","headerOrderRev","newHeadersOrder","headerId","querySelectorAll","table","row","href","preventDefault","handleSiteClick","textDecoration","placement","Hindupur","blockStr","Sircilla","Gadarpur","uncheckedCommon","uncheckedInverters","inverterSlots","uncheckedInverterSlots","inverterStrings","uncheckedInverterStrings","dateStyle","formControlLabelStyle","border","boxShadow","borderBottom","MuiAccordion","minHeight","MuiAccordionSummary","MuiAccordionDetails","getFromDate","newDate","getToDate","CustomCSV","localsite","el","setSite","getBlockNames","find","v","selectedBlock","setSelectedBlock","fromDate","setFromDate","toDate","setToDate","globalSelectAll","setGlobalSelectAll","commonSelectAll","setCommmonSelectAll","invertersSelectAll","setInvertersSelectAll","inverterSlotsSelectAll","setInverterSlotsSelectAll","inverterStringsSelectAll","setInverterStringsSelectAll","disableDownload","setDisableDownload","openSnackbar","setOpenSnackbar","alertMessage","setAlertMessage","commonParams","setCommonParams","invertersParams","setInvertersParams","inverterSlotsParams","setInverterSlotsParams","inverterStringsParams","setInverterStringsParams","variants","setVariants","frequency","setFrequency","variantsKies","selectedVariant","setSelectedVariant","findVariant","handleSnackbarClose","fetchCSV","parameters","route","fileName","responseType","downloadUrl","URL","createObjectURL","Blob","link","createElement","filename","setAttribute","appendChild","click","remove","getCustomCSV","iterateParams","params","aggregatedParameters","param","InputLabel","maxWidth","multiple","renderValue","selected","join","paddingBlock","Checkbox","indeterminate","ListItemText","primary","indexOf","autoOk","disableToolbar","KeyboardButtonProps","variantsLength","object","combinedVariants","oldVariants","newVariants","FormControlLabel","control","fromDateTime","disabled","defaultExpanded","stopPropagation","FormGroup","changedParams","handleCommonParamChange","handleInvertersParamChange","handleInverterSlotsParamChange","handleInverterStringsParamChange","Yemmiganur","inv7","inv8","Mahoba","inv7Value","inv8Value","Balangir","BhadlaL2","Jhandekalan","Nangla","BhadlaL3","CustomizedTable","page","setPage","pageCount","setPageCount","paginatedData","setPaginatedData","energyHeaders","setEnergyHeaders","getEnergyDifference","lastValue","slice","maxEnergyDifference","maxEnergyDifferenceKey","difference","formatEnergyHeaders","i1","i2","i3","i4","i5","i6","i7","i8","i9","i10","i11","i12","e1","e2","e3","e4","e5","e6","e7","e8","e9","e10","e11","e12","intertemp","vdc","totalenergy","Pagination","count","shape","CustomizedLineChart","temperature","offset","_","SCBOnline","disabledViewBtn","setDisabledViewBtn","customizedTableData","setCustomizedTableData","customizedLineChartData","setCustomizedLineChartData","scb","setSCB","totalSCB","setBlock","totalBlocks","inverter","setInverter","totalInverters","leftYMin","enableExcelBtn","setEnableExcelBtn","enableEnergyCSVBtn","setEnableEnergyCSVBtn","smb","rawData","reverse","getCurrentDataForLineChart","currentData","letter","coeData","elementArray","coeValuesInRow","maxCoeInRow","innerElement","numInnerElement","formatCurrentOrEnergyDataForTable","formattedDataForTable","siteFormControl","endDate","textField","SCBCustom","enableDayEnergyCSVBtn","setEnableDayEnergyCSVBtn","tabs","TabPanel","other","role","hidden","Box","a11yProps","BasicTabs","setValue","Tabs","newValue","Tab","Mankhera","Jhunir","Bhongir","Padmajiwadi","Mothkur","Sadashivpet","Pattikonda","Rayachoti","Bikaner","Santhipuram","tableInterval","defaultValue","ambientTemp2","moduleTemp2","humidity2","angle","tickMargin","ghi2","gti2","setInverters","zIndex","Compass2","Chittorgarh","setAmbientTemp2","setModuleTemp2","setHumidity2","windDirection2","setWindDirection2","windSpeed2","setWindSpeed2","rain2","setRain2","invArray","invsObject","ambientTempStr2","moduleTempStr2","humidityStr2","windDirectionStr2","direction2","windSpeedStr2","speed2","rainStr2","Chattisgarh","Balanagar","endpoint","Kosigi","Sandur","Kudligi","Gulelgudda","Hukkeri","AddSite","Kittur","Bazpur","Bidar","Sidlaghatta","Khilchipur","Khambhat","handleNotificationClick","ticketForModal","formatTime","ticket","alarm","state","inputlabel","AlertsDropdown","items","selectedItems","handleChange","isAllSelected","isChecked","selectedAll","ListItemIcon","indeterminateColor","listItemText","StyledKeyboardDatePicker","styled","KeyboardDatePicker","chips","flexWrap","chip","noLabel","alertsValue","issueValue","Alerts","handleTicketModal","useTheme","alertsData","setAlertsData","siteNamesAndBlocks","getSites","sites","siteOptions","category","setCategory","issue","setIssue","disabledCSVBtn","setDisabledCSVBtn","fetchAlertsData","remarks","alertsInterval","NoSsr","views","inputVariant","inputProps","fetchAlertsDataWithDisableBtn","EquipmentOptions","equipment","handleEquipmentChange","equipmentKey","getTitle","value1","value2","title1","title2","Energy","location","setLocation","equipment1","equipment2","equipment3","equipment4","equipment5","setEquipment","energyData","setEnergyData","fetchEnergyData","none","calculateDifference","value1Num","abs","EquipmentBox","customId","borderRadius","invEnergy","overflowY","innerEl","e","getTopPosition","labelRect","getBoundingClientRect","getLeftPosition","element1Id","element2Id","differenceElId","element1","element2","differenceEl","element1Rect","element2Rect","differenceElRect","leftPosition","Analytics","renderLegend","wrapperStyle","plantPr","prBudget","barCategoryGap","barGap","MultiDropdownSingle","formControlStyle","SiteRanking","parameter","setParameter","setSort","filter","setFilter","barChartDataOG","setBarChartDataOG","fetchPerformance","today","parseFloat","sortElements","InputProps","getCustomTime","InvertersWakeUpChart","rank","cells","fillIndex","getDataForScroll","InverersWakeUpChartCard","barChartDataParent","isSingleDay","highestRankIndex","highestRank","lowestRankIndex","lowestRank","applyColors","InvertersWakeUp","disabledDownload","setDisabledDownload","setIsSingleDay","toDateTime","day","sx","PeakPowerChart","PeakPowerChartSingle","PeakPowerChartCard","PeakPower","dataWithColors","Rank","MultiDropdown","getNames","PRRankingChartSingle","multiDay","rankOneCount","actualPr","toLocaleDateString","PRRankingChartCard","groupName","PRRanking","groups","setGroups","selectedGroups","setSelectedGroups","isAllGroupsSelected","setMultiDay","group","uniqueValues","Set","matched","LossTable","rows","setRows","tableAsc","setTableAsc","toggleTableSort","propertyName","sortedRows","overflowX","whiteSpace","Time","Site","budgetRev","actualRev","GhiCorrRevenue","AbsoluteLoss","GHIImpact","PALossorGain","GALossorGain","TempLossorGainGHI","AuxConsumption","TotalLoss","RemainingLoss","finalDataEfficiency","LossChart","alignY","leftY","rightY","CustomizedDot","customIndex","points","objArray","getLinesForOpacity","getLineColor","isLeftY","dataMax","colorIndex","getLeftYItems","getRightYItems","parameters1","parameters2","SimpleTabs","fetchSitesOptions","setSiteOptions","selectedSites","setSelectedSites","selectedSitesForChart","setSelectedSitesForChart","getInitialFromDate","getInitialToDate","chartFromDate","setChartFromDate","chartToDate","setChartToDate","disabledTableViewBtn","setDisabledTableViewBtn","disabledChartViewBtn","setDisabledChartViewBtn","charts","setCharts","chartYAlign","setChartYAlign","fetchRows","parameter1","setParameter1","parameter2","setParameter2","fetchChartData","newCharts","chart","HighTempTable","getRowTextColor","percentageDifference","inverterName","ambTemp","cabtemp","HighTemp","MaterialUIPickers","overflow","imageList","light","titleBar","getCustomDate","timestampStr","SingleLineImageList","itemData","handleImageClick","scrollLeft","ldr1","ldr2","ldr3","ldr4","imgUrl","Ideal","TableSensor","openImageModal","setOpenImageModal","selectedImage","setSelectedImage","selectedImageInfo","setSelectedImageInfo","tableId","setTableId","sensorId","setSensorId","setData","images","setImages","getIdealImages","sitename","getImages","url","info","Modal","tempSitesBlocksInverters","createData","calories","fat","carbs","protein","InvertersTable","tableDataObj","column","innerIdx","disable","CustomDropdown","selectedItem","CustomSingleDate","InvPerformance","updateInverter","refreshInverterTable","sitesBlocksInverters","setSitesBlocksInverters","selectedBlocks","setSelectedBlocks","tableData","setTableData","setSelectedSiteForTable","setSelectedBlocksForTable","selectedSiteForTable","selectedBlocksForTable","tableDate","setTableDate","getEndTimeForTable","getColor","num","err","techName","techMob","ref","ScbSnackbar","handleToggle","reason","ScbPerformance","setChecked","snackbarState","setSnackbarState","allSiteInverter","setAllSiteInverter","selectedInverter","setSelectedInverter","getInverterOptions","foundInveters","inv","singleblock","bool","SingleDropdown","TrendlineBiaxialLineChart","tick","y1CategoryParameters","random","TrendLine","gety1parameters","newArray","y1Category","ele","gety2parameters","y2Category","val","setY1Category","y1Parameter","setY1Parameter","y1ParameterOptions","setY1ParameterOptions","setY2Category","y2Parameter","setY2Parameter","y2ParameterOptions","setY2ParameterOptions","newY1Array","handleMultipleY1Category","newY2Array","handleMultipleY2Category","selectedInverters","setSelectedInverters","scrollButtons","Chittuguppa","Farhatabad","Godhur","Manthani","BankaM","BankaN","Maddur","QuickCSV","history","useHistory","isSiteSelected","setIsSiteSelected","displayDownloadExcelAlert","setDisplayDownloadExcelAlert","noDataFound","setNoDataFound","disabledDownloadExcelButton","setDisabledDownloadExcelButton","prevDay","excelFromDate","setExcelFromDate","excelToDate","setExcelToDate","getCSV","compareExcelDates","to","FormHelperText","isDifferenceNegative","CSV","DataAvailabilityBarChart","Percentage","verticalAlign","DataAvailability","timePeriod","setTimePeriod","newFromDate","newToDate","avatar","secondary","main","form","submit","alertStyle","backdrop","drawer","menu","notifications","alerts","deleteButton","borderColor","paginationicon","tablePaginationActions","menuItem","flexShrink","ManageUser","setShow","users","setUsers","rowsPerPage","setRowsPerPage","user","setUser","setRole","selectedProfile","setSelectedProfile","selectedNotifications","setSelectedNotifications","selectedAlerts","setSelectedAlerts","userStatus","setUserStatus","setEmail","newPassword","setNewPassword","selectedLocations","setSelectedLocations","areAllLocationsSelected","isAllNotificationsSelected","isAllAlertsSelected","selectedMenu","setSelectedMenu","areAllMenuSelected","previousEmail","setPreviousEmail","getUsers","sortedUser","currentUser","locations","disabledCreateBtn","setDisabledCreateBtn","disabledUpdateBtn","setDisabledUpdateBtn","handleUserStatusUpdate","searchField","setSearchField","TextField","required","firstname","handleUserFirstNameChange","lastname","fullWidth","password","employeerole","notificationtype","alerttype","searchedData","trim","searchInput","charAt","handleUserStatusChange","clickedUser","handleUserChange","confirm","handleUserDelete","action_by","TablePagination","rowsPerPageOptions","selectBack","selectDropdown","sp","tablePagination","caption","tablePaginationCaption","selectIcon","tablePaginationSelectIcon","select","tablePaginationSelect","actions","onChangePage","newPage","onChangeRowsPerPage","parseInt","userDetails","alert","handleInverterUpdate","inv_group","inverter_make","inverter_num","inverter_type","slots","scb_connected","strings_connected","connected_module_make","module_rating","ac_capacity_kw","dc_capacity_kw","da_ratio","dc_overloading","peak1","peak2","omegaid","techname","techmob","clipping_threshold","ManageInverters","tableDataCopy","setTableDataCopy","searchedInverter","SimpleDialog","detailsError","setDetailsError","gutterBottom","noValidate","autoComplete","onSubmit","multiline","InputLabelProps","endIcon","handlealertClickOpen","SitesTable","updateSite","totalblocks","billingrates","dbpool","systemid","systemip","nationalhead_email","zonalhead_email","siteincharge_email","mob_no","ho_coordinator","emails","editedby","CustomSnackbar","ManageSites","refreshSiteEditTable","notesite","setNotesite","msgid","handleSiteValuesChange","handleView","sortedData","readOnly","searchedSite","noteMsg","LogTable","getSiteName","siteId","site_id","error_type","errors","insertion_time","remote_time","Logs","fetchLogs","isArray","names","found","ids","errorType","onInit","reactFlowInstance","checkValue","getNumber","digit","number","OverviewFlow","siteNamesValue","useNodesState","nodes","setNodes","onNodesChange","useEdgesState","edges","setEdges","onEdgesChange","getBlocks","numbers","setBlocks","verticalCount","instantGeneration","totalGeneration","targetPosition","inverterNodeId","DC_I","DC_V","sourcePosition","edgeId","edgeCount","stringYPos","stringSum","inverter_strings","string","stringIndex","stringNodeId","getNodesAndEdges","onConnect","eds","addEdge","fitView","nodesConnectable","nodesDraggable","attributionPosition","showInteractive","ConfigTable","handleRowSelect","system_name","csv_filename_date","data_frequency_day","data_frequency_night","data_frequency_time_range","logfile_csv","none_value","opc_host","opc_reconnection_interval","opc_server","rabbit_host","rabbit_log_queue","rabbit_password","rabbit_port","rabbit_queue","rabbit_username","insertion_timestamp","updation_timestamp","modalStyle","modalContentStyle","RemoteConfig","selectedRow","setSelectedRow","openModal","setOpenModal","fetchConfig","handleUpdate","handleRowValueChange","taglist","Replication","fetchReplicationStatus","handleRefresh","InvertersScbTable","updateInverterScb","s1_status","s1","s1_field","s2_status","s2","s2_field","s3_status","s3","s3_field","s4_status","s4","s4_field","s5_status","s5","s5_field","s6_status","s6","s6_field","s7_status","s7","s7_field","s8_status","s8","s8_field","s9_status","s9","s9_field","s10_status","s10","s10_field","s11_status","s11","s11_field","s12_status","s12","s12_field","s13_status","s13","s13_field","s14_status","s14","s14_field","s15_status","s15","s15_field","s16_status","s16","s16_field","s17_status","s17","s17_field","s18_status","s18","s18_field","s19_status","s19","s19_field","s20_status","s20","s20_field","s21_status","s21","s21_field","s22_status","s22","s22_field","s23_status","s23","s23_field","s24_status","s24","s24_field","s25_status","s25","s25_field","s26_status","s26","s26_field","s27_status","s27","s27_field","s28_status","s28","s28_field","s29_status","s29","s29_field","s30_status","s30","s30_field","s31_status","s31","s31_field","s32_status","s32","s32_field","ManageInvScb","button","TabIndicatorProps","SLD","temperatureData","ambienttemp1","ambienttemp2","ambienttemp3","ambienttemp4","ambienttemp5","moduletemp1","moduletemp2","moduletemp3","moduletemp4","moduletemp5","humidity1","humidity3","humidity4","humidity5","ghi1","ghi3","ghi4","ghi5","gti1","gti3","gti4","gti5","GhiGtiCard","elements","ghiTitle","gtiTitle","ghiValue","gtiValue","gtiLocation","getValue","getLocationValue","ga","pa","ghiLocation","ghi1location","gti1location","ghi2location","gti2location","ghi3location","gti3location","ghi4location","gti4location","ghi5location","gti5location","Badisidd","setCustomGeneration","setTemperatureData","getGeneration","winddirection1","windspeed1","rainStr","rain1","winddirection2","windspeed2","Mlprediction","drawerWidth","GreenCheckbox","green","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","hide","drawerOpen","drawerClose","toolbar","mixins","text","sectionDesktop","flexContent","expandMoreIconButtonStyle","userNotificationIconButtonStyle","companyNameStyle","notificationAccordionheading","notificationAccordionSubheading","customizeToolbar","linearProgressPrimaryColor","inputOutlineColor","outlineColor","CustomDrawer","username","siteNamesCaps","setSitesSidePanelData","fetchNotificationsData","notificationInterval","openDrawer","setOpenDrawer","anchorEl","setAnchorEl","notificationsAnchorEl","setNotificationsAnchorEl","notificationsPopoverId","Boolean","openAccountMenu","getMenu","kies","listItemIndex","setListItemIndex","handleModalClose","setModalState","openCSVModal","openTicketModal","openInverterModal","openInverterScbModal","openSiteEditModal","handleLogout","handletokenlogout","clear","reload","modalState","clickedNotificationData","setClickedNotificationData","handleListItemMenuClick","setSelectedSiteFromChild","selectedSiteFromChild","setSitestatusBar","openSitesSidePanel","setOpenSitesSidePanel","sitesSidePanelData","openSidePanel","setOpenSidePanel","totalNotifications","setTotalNotifications","notificationsData","setNotificationsData","getFormattedDateForNotification","notificationNewStatus","setNotificationNewStatus","notificationRemarksRef","useRef","disabledNotificationSubmitBtn","setDisabledNotificationSubmitBtn","alertData","setAlertData","selectedInverterScb","setSelectedInverterScb","selectedSiteEdit","setSelectedSiteEdit","setRefreshInverterTable","setRefreshSiteEditTable","AppBar","clsx","Toolbar","edge","noWrap","sidePanel","Badge","badgeContent","currentTarget","Menu","keepMounted","Popover","LinearProgress","Drawer","moment","Divider","List","ListItem","pointerEvents","outline","FormLabel","RadioGroup","Radio","current","ticketNumber","notificationStatus","handleNotificationSubmit","Dashboard","Copyright","footer","Footer","forwardRef","footerPosition","footerBottomPosition","LoginPage","textRef","footerRef","setPassword","loginError","setLoginError","openBackdrop","setOpenBackdrop","isAuthSnackbarOpened","setIsAuthSnackBarOpened","setFooterPosition","setFooterBottomPosition","alreadyLogin","setAlreadyLogin","isAuthSnackbarOpenedLSItem","removeItem","onresize","offsetTop","innerHeight","Link","Backdrop","SignupPage","setFirstname","setLastname","confirmPassowrd","setConfirmPassword","alertPasswordMatch","setAlertPasswordMatch","setSignupError","userExist","setUserExist","sm","App","createTheme","deepOrange","disabledBackground","ThemeProvider","CssBaseline","path","exact","render","ReactDOM"],"mappings":"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B,OAAIH,GAAc,EACT,IAEA,KAuDPI,GAAmB,KAEvB,GACErQ,oBAAS,GADX,qBAAOsQ,GAAP,MAAmCC,GAAnC,MAiFA,GAAwCvQ,mBAAS,IAAI0O,MAArD,qBAAOhC,GAAP,MAAqB8D,GAArB,MACA,GAAoDxQ,oBAAS,GAA7D,qBAAO4M,GAAP,MAA2BxD,GAA3B,MAEA,GAAsCpJ,oBAAS,GAA/C,qBAAOyQ,GAAP,MAAoBC,GAApB,MAEMC,GAA8B,WAClCJ,IAA8B,IAqBhCvL,qBAAU,WACR6J,EAAYnC,GAAaiC,aACxB,CAACjC,KAEJ,IAkSMkE,GAAoB,SAACC,EAAOC,EAAWC,EAASC,GAEpDC,IACGC,IAAIzC,EAAY,oBAAsBoC,EAAO,CAC5CM,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,IA/JkB,SAACpU,GAoG5B,IAlGA,IAAIqU,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IACZwD,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F,OAAQnB,QAGXoB,MAAK,SAACC,IAnKkB,SAACpU,GA4G5B,IA1GA,IAAIqU,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M,EAAYL,EAAgBtO,EAAQkC,OAASD,GAAG,IAE9CqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C2M,EAAYN,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C4M,EAAYP,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1CgQ,EAAY3D,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAEtD,MAAO6M,IAETT,EAAgBjM,KAAK,CACnBpC,QAASA,EAAQiC,GACjB9B,KAAMsO,EACNpO,K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AA/C,qBAAOyQ,GAAP,MAAoBC,GAApB,MAEMC,GAA8B,WAClCJ,IAA8B,IAqBhCvL,qBAAU,WACR6J,EAAYnC,GAAaiC,aACxB,CAACjC,KAEJ,IAuSMkE,GAAoB,SAACC,EAAOC,EAAWC,EAASC,GAEpDC,IACGC,IAAIzC,EAAY,kBAAoBoC,EAAO,CAC1CM,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,IAnKkB,SAACpU,GA4G5B,IA1GA,IAAIqU,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M,EAAYL,EAAgBtO,EAAQkC,OAASD,GAAG,IAE9CqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C2M,EAA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D,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,IAvKkB,SAACpU,GAgH5B,IA9GA,IAAIqU,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M,EAAYL,EAAgBtO,EAAQkC,OAASD,GAAG,IAE9CqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C2M,EAAYN,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C4M,EAAYP,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1CgQ,EAA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AOC,EAAWC,EAASC,GAEpDC,IACGC,IAAIzC,EAAY,kBAAoBrN,OAAOyP,GAAOyD,SAAS,EAAG,GAAI,CACjEnD,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,IAvKkB,SAACpU,GAgH5B,IA9GA,IAAIqU,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M,EAAYL,EAAgBtO,EAAQkC,OAASD,GAAG,IAE9CqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C2M,EAAYN,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C4M,EAAY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,GAgH5B,IA9GA,IAAIqU,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M,EAAYL,EAAgBtO,EAAQkC,OAASD,GAAG,IAE9CqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C2M,EAAYN,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C4M,EAAYP,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1CgQ,EAAY3D,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAEtD,MAAO6M,IAETT,EAAgBjM,KAAK,CACnBpC,QAASA,EAAQiC,GACjB9B,KAAMsO,EACNpO,KAAMsO,EACNrO,KAAMsO,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VwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,IAvKkB,SAACpU,GAgH5B,IA9GA,IAAIqU,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eAKA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M,EAAYL,EAAgBtO,EAAQkC,OAASD,GAAG,IAE9CqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C2M,EAAYN,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C4M,EAAYP,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1CgQ,EAAY3D,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAEtD,M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,GAAoB,WAGxB,IAAIyD,EAAO,IAAI3F,KACf2F,EAAKF,SAAQ,IAAIzF,MAAO0F,UAAY,GACpCC,EAAK5B,SAAS,GAAI,GAAI,EAAG,GAEzB,IAAID,EAAS,IAAI9D,KAAKE,GACtB4D,EAAOC,SAAS,EAAG,EAAG,EAAG,GACzB,IAAIzB,EAAYwB,EAAO7D,UAEvBsC,IACGC,IACCzC,EAAY,sBAAwBrN,OAAOyO,IAAcyE,SAAS,EAAG,GACrE,CACEnD,QAAS,CACPC,SAAU9C,EACVwC,UAAWuD,EAAK1F,UAChBoC,QAASnC,EACToC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAIboB,MAAK,SAACC,IAnLkB,SAACpU,GAgH5B,IA9GA,IAAIqU,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eAEA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M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ACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGY,KAAVwN,GAA0B,KAAVA,GAA0B,KAAVA,GAA0B,KAAVA,GAoClDxN,EAAQoC,KAAR,MAAApC,EAnCoB,CAClB,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,kBAMJ,IAvJ4C,eAuJnCiC,GACP,IAAI+uB,EAAW,GACfjY,MAAMC,KAAKD,MAAM,IAAIrB,QAAQvb,KAAI,SAAC8c,EAAS1f,GACzCy3B,EAAS5uB,KAAT,eAAiB,MAAQlI,OAAOX,EAAQ,GAAKmV,SAG/C,IACMJ,EAAgBrM,GAAG,KACrB+uB,EAAS,GAAT,KAAsB1iB,EAAgBrM,GAAG,IAE3C,IAAK,IAAI8R,EAAI,EAAGA,EAAI,GAAIA,IAClBzF,EAAgBtO,EAAQkC,OAAS6R,EAAI9R,GAAG,KAC1C+uB,EAASjd,GAAG,MAAQ7Z,OAAO6Z,EAAI,IAC7BzF,EAAgBtO,EAAQkC,OAAS6R,EAAI9R,GAAG,IAG9C,MAAO6M,IAET,IAAMmiB,EAAa,GACnBD,EAAS7R,SAAQ,SAAC7lB,EAAOC,GACvB03B,EAAW,MAAQ/2B,OAAOX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ACR6J,EAAYnC,GAAaiC,aACxB,CAACjC,KAEJ,IA2SMkE,GAAoB,SAACC,EAAOC,EAAWC,EAASC,GAEpDC,IACGC,IAAIzC,EAAY,sBAAwBrN,OAAOyP,GAAOyD,SAAS,EAAG,GAAI,CACrEnD,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,IAvKkB,SAACpU,GAgH5B,IA9GA,IAAIqU,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eAEA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M,EAAYL,EAAgBtO,EAAQkC,OAASD,GAAG,IAE9CqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C2M,EAAYN,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAi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CA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M,EAAYL,EAAgBtO,EAAQkC,OAASD,GAAG,IAE9CqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C2M,EAAYN,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C4M,EAAYP,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1CgQ,EAAY3D,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAEtD,MAAO6M,IAETT,EAAgBjM,KAAK,CACnBpC,QAASA,EAAQiC,GACjB9B,KAAMsO,EACNpO,KAAMsO,EACNrO,KAAMsO,EACNrO,KAAMsO,EACNiD,KAAMG,IAMVtF,GAAqB,GAAD,OAAK0B,IAsBrBU,CAAqBX,EAASpU,SAE/BgV,OAAM,SAACF,QAmBNjC,GAA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O,IAAI3F,KACf2F,EAAKF,SAAQ,IAAIzF,MAAO0F,UAAY,GACpCC,EAAK5B,SAAS,GAAI,GAAI,EAAG,GAEzB,IAAID,EAAS,IAAI9D,KAAKE,GACtB4D,EAAOC,SAAS,EAAG,EAAG,EAAG,GACzB,IAAIzB,EAAYwB,EAAO7D,UAEvBsC,IACGC,IAAIzC,EAAY,iBAAmBrN,OAAOyP,GAAOyD,SAAS,EAAG,GAAI,CAChEnD,QAAS,CACPC,SAAU9C,EACVwC,UAAWuD,EAAK1F,UAChBoC,QAASnC,EACToC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,IArLkB,SAACpU,GAgH5B,IA9GA,IAAIqU,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M,EA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,EAAG,GAAI,CACtEnD,QAAS,CACPC,SAAU9C,EACVwC,UAAWuD,EAAK1F,UAChBoC,QAASnC,EACToC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,IAhLkB,SAACpU,GAgH5B,IA9GA,IAAIqU,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M,EAAYL,EAAgBtO,EAAQkC,OAASD,GAAG,IAE9CqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C2M,EAAYN,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C4M,EAAYP,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,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qBAAU,WACR6J,EAAYnC,GAAaiC,aACxB,CAACjC,KAEJ,IA2SMkE,GAAoB,SAACC,EAAOC,EAAWC,EAASC,GAEpDC,IACGC,IAAIzC,EAAY,sBAAwBrN,OAAOyP,GAAOyD,SAAS,EAAG,GAAI,CACrEnD,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,IAvKkB,SAACpU,GAgH5B,IA9GA,IAAIqU,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eAEA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M,EAAYL,EAAgBtO,EAAQkC,OAASD,GAAG,IAE9CqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C2M,EAAYN,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElD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A,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M,EAAYL,EAAgBtO,EAAQkC,OAASD,GAAG,IAE9CqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C2M,EAAYN,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C4M,EAAYP,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1CgQ,EAAY3D,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAEtD,MAAO6M,IAETT,EAAgBjM,KAAK,CACnBpC,QAASA,EAAQiC,GACjB9B,KAAMsO,EACNpO,KAAMsO,EACNrO,KAAMsO,EACNrO,KAAMsO,EACNiD,KAAMG,IAMVtF,GAAqB,GAAD,OAAK0B,IAsBrBU,CAAqBX,EAASpU,SAE/BgV,OAAM,SAACF,QAmBNjC,GAAc,SAACa,GAOnB,IAAMD,EAAY,aACdwB,EAAavB,EAGfuB,EADE7B,GACW/B,KAAK6D,MAGLxB,EAIf,IAAIyB,EAAS,IAAI9D,KAAK4D,GACtBE,EAAOC,SAAS,EAAG,EAAG,EAAG,GACzB,IAAIzB,EAAYwB,EAAO7D,WAxfA,SAACmC,EAAWC,EAASC,GAE5CC,IACGC,IAAIzC,EAAY,iBAAkB,CACjC0C,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,GAGL3C,EAAU2C,EAASpU,KAAKgP,QACxB0C,EAAkC,IAArB0C,EAASpU,KAAKqS,SAE5B2C,OAAM,SAACF,OAseVO,CAAiB5B,EAAWwB,EAAYtB,GA7VnB,SAACF,EAAWC,EAASC,GAE1CC,IACGC,IAAIzC,EAAY,kBAAmB,CAClC0C,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,GAELxC,EAAewC,EAASpU,SAEzBgV,OAAM,SAACF,OA4UVQ,CAAe7B,EAAWwB,EAAYtB,GAtUjB,SAACF,EAAWC,EAASC,GAE1CC,IACGC,IAAIzC,EAAY,kBAAmB,CAClC0C,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,GAEL,IAAM9U,EAAQ8U,EAASpU,KAAKV,MAC5BuS,EAAe3R,OAAOZ,GAAO8G,QAAQ,IAErC0L,EAAgB5R,OAAOZ,GAAO8G,QAAQ,GAAK,OAE5C4O,OAAM,SAACF,OAkTVS,CAAe9B,EAAWwB,EAAYtB,GA5ShB,SAACF,EAAWC,EAASC,GAE3CC,IACGC,IAAIzC,EAAY,wBAAyB,CACxC0C,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,GAEL,IAAMoB,EAAiBpB,EAASpU,KAAKH,YAC/B4V,EAAgBrB,EAASpU,KAAKF,WAC9B4V,EAActB,EAASpU,KAAKD,SAElCgS,EAAe7R,OAAOsV,GAAgBpP,QAAQ,IAC9C4L,EAAc9R,OAAOuV,GAAerP,QAAQ,IAC5C6L,EAAY/R,OAAOwV,GAAatP,QAAQ,OAEzC4O,OAAM,SAACF,OAqRVa,CAAgBlC,EAAWwB,EAAYtB,GA/QR,SAACF,EAAWC,EAASC,GAEpDC,IACGC,IAAIzC,EAAY,iBAAkB,CACjC0C,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,GAEL,IAAMwB,EAAmBxB,EAASpU,KAAK6V,UACjCC,EAAe1B,EAASpU,KAAK+V,MACnB3B,EAASpU,KAAKuN,KAE9B2E,GAAiBhS,OAAO0V,GAAkBxP,QAAQ,IAClD+L,GAAajS,OAAO4V,GAAc1P,QAAQ,IAC1CgM,GAAQlS,OAAOkU,EAASpU,KAAKuN,MAAMnH,QAAQ,OAE5C4O,OAAM,SAACF,OAwPVkB,CAAyBvC,EAAWwB,EAAYtB,GAlPd,SAACF,EAAWC,EAASC,GAEvDC,IACGC,IAAIzC,EAAY,kBAAmB,CAClC0C,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,GAEL7B,GAA4B6B,EAASpU,SAEtCgV,OAAM,SAACF,OAiOVmB,CAA4BxC,EAAWwB,EAAYtB,GACnDJ,GAAkBf,GAAciB,EAAWwB,EAAYtB,IAIzDhM,qBAAU,YAGRqL,GAAmB5G,SAASC,eAAe,uBAGzC2G,GAAiBkD,WAAmC,IAAI7E,MAnevD8E,eAAe,GAAI,CAClBC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAETtS,eAieH6O,GAAYtB,GAGZ,IAAM/O,EAAW+T,aAAY,WAC3B1D,GAAYtB,KACXvD,GAEH,OAAO,WACLwI,cAAchU,MAEf,CAAC+O,IAEJ,OAAsC5O,mBAAS,iBAA/C,qBAAoB8T,IAApB,aAUA,OATAC,2BAAgB,WACJC,OAAOC,WAAW,uBACtBC,QACJJ,GAAe,iBAEfA,GAAe,gBAEhB,IAGD,gBAAC,IAAMpM,SAAP,WACE,eAACpB,EAAA,EAAD,CACEC,WAAS,EACTpI,eAAe,gBACfD,WAAW,SAHb,SAQE,eAACiO,GAAD,CACEC,cAAeA,EACfC,OAAQA,EACRC,UAAWA,EACXC,gBAAiBA,EACjBC,gBA7agB,WACtBnD,GAAe,GACf,IAAIkJ,EAAM,IAAI7D,KACd8B,GAAgB+B,GAChB1D,EAAY0D,EAAI5D,WAChB4B,IAA8B,GAC9BG,IAAe,IAwaTrH,eAAgBA,GAChBD,sBAAuBA,GACvBqD,oBAnaoB,WAG1B,OADkB,IAAIiC,KAAK,aAkarBhC,aAAcA,GACdC,8BAzkB8B,SAACL,GACrC,IAAM+H,EAAO,IAAI3F,KAAKpC,GACtB,OACE,kCACGlL,OAAOiT,EAAKD,WAAWE,SAAS,EAAG,KADtC,IAEGlT,OAAOiT,EAAKE,WAAa,GAAGD,SAAS,EAAG,KAF3C,IAEkDD,EAAKG,cACrD,2CACCH,EACEb,eAAe,GAAI,CAClBC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAETtS,kBA6jBDuL,mBAAoBA,GACpBC,iBA7biB,SAACwH,GACxB,IACE3D,IAAe,GADjB,QAGEF,GAAgB6D,GAChBjL,IAAsB,SAykBtB,sBAAK1L,MAAO,CAAE8K,UAAW,UACzB,eAACrB,GAAD,CACEC,eAAgB4H,EAAY5H,eAC5BC,QAAsC,IAA7B2H,EAAY5H,eAAwB,KAC7CE,WAAY0H,EAAY1H,WACxBrH,IAAK+O,EAAY/O,IACjBC,IAAK8O,EAAY9O,IACjBqH,SAAUyH,EAAYzH,SACtBC,kBAAmBwH,EAAYxH,kBAC/BC,mBAAoBuH,EAAYvH,qBAElC,gBAACnB,EAAA,EAAD,CACEC,WAAS,EAGTsH,QAAS,EACTnQ,MAAO,CAAE8K,UAAW,QALtB,UAOE,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACuB,GAAD,CAAsBC,YAAaA,EAAaC,SAAU,OAG5D,eAAC9B,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC1J,GAAD,CACEC,YAAaA,EACbC,WAAYA,EACZC,SAAUA,MAGd,eAACkJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC8D,GAAD,CACEC,cAAeA,GACfC,UAAWA,GACXC,KAAMA,UAIZ,gBAACpN,EAAA,EAAD,CACEC,UAAW,EACXC,MAAO,CAAE8K,UAAW,SAAUzK,OAAQ,QAASQ,MAAO,QAFxD,UAIE,eAACH,EAAA,EAAD,CACEC,QAAQ,KACR0C,MAAM,gBACNrD,MAAO,CACL6K,WAAY,SACZC,UAAW,OACXsC,aAAc,UANlB,qCAYA,eAAClL,GAAD,CACEvC,KAAMsS,GACN9P,SAAU,GACVC,UAAW,CAAC,EAAG,MACfC,WAAY,CAAC,EAAG,SAIpB,eAACuG,EAAA,EAAD,CACEC,WAAS,EACT7I,MAAO,CACL8K,UAAW,QAHf,SAME,gBAAClC,EAAA,EAAD,CAAMK,MAAI,EAACO,GAAI,GAAf,UACE,gBAACZ,EAAA,EAAD,CACEC,WAAS,EACTsH,QAAS,EACT3P,WAAW,SACXR,MAAO,CAAEoN,aAAc,SAJzB,UAME,eAACxE,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACvI,EAAA,EAAD,CAAYC,QAAQ,KAAK0C,MAAM,gBAA/B,+BAIF,eAACuF,EAAA,EAAD,CAAMK,MAAI,EAACb,UAAW9B,EAAQ0J,OAC9B,eAACpH,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACvI,EAAA,EAAD,CAAYV,MAAO,CAAE6K,WAAY,UAAjC,4BACkB,SAGpB,eAACjC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC8N,EAAA,EAAD,CAAa3O,UAAW9B,EAAQ8J,YAAhC,SACE,gBAAC4G,EAAA,EAAD,CAAQ/X,MAAOkT,GAAcvC,SA3UjB,SAACqH,GACzB7E,GAAgB6E,EAAMC,OAAOjY,OAC7B,IAAI0X,EAAO,IAAI3F,KACf2F,EAAKF,SAAQ,IAAIzF,MAAO0F,UAAY,GACpCC,EAAK5B,SAAS,GAAI,GAAI,EAAG,GAEzB,IAAID,EAAS,IAAI9D,KAAKE,GACtB4D,EAAOC,SAAS,EAAG,EAAG,EAAG,GACzB,IAAIzB,EAAYwB,EAAO7D,UAEvBiC,GAAkB+D,EAAMC,OAAOjY,MAAO0X,EAAK1F,UAAWC,EAAUoC,IAiUpD,UACE,eAAC6D,EAAA,EAAD,CAAUlY,MAAO,EAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,EAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,EAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,EAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,EAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,EAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,EAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,EAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,EAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,GAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,GAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,GAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,GAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,GAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,GAAjB,2BAKR,eAAC,GAAD,CAAYoH,OAAQgM,UAYxB,eAAC+E,EAAA,EAAD,CACEnJ,KAAM2E,GACNyE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,iBAAkB,IAClB7H,QAASsD,GAPX,SASE,eAAC,GAAD,CAAOtD,QAASsD,GAA6B/E,SAAS,UAAtD,8BAKF,sBAAKlO,MAAO,CAAEoN,aAAc,a,gECl+B5BhJ,GAAkBC,cAAW,SAACC,GAAD,MAAY,CAC7CC,KAAM,CACJC,gBAAiB,UACjBnB,MAAOiB,EAAMG,QAAQC,OAAOC,OAG9BC,KAAM,MANgBP,CASpBQ,MAEEC,GAAiBT,cAAW,SAACC,GAAD,MAAY,CAC5CS,KAAM,CACJ,qBAAsB,CACpBP,gBAAiBF,EAAMG,QAAQO,OAAOC,WAHrBZ,CAMnBa,MAEEC,GAAYC,YAAW,CAC3BC,eAAgB,CAAExE,MAAO,UAGZ,SAASwtB,GAAT,GAIX,IAHF1uB,EAGC,EAHDA,KAEAy4B,GACC,EAFDC,eAEC,EADDD,yBAGM9xB,EAAUnB,KAEhB,EAAwB7C,mBAAS,GAAjC,mBAAOgsB,EAAP,KAAaC,EAAb,KAEA,EAAkCjsB,mBAAS,GAA3C,mBAAOksB,EAAP,KAAkBC,EAAlB,KAEA,EAA0CnsB,mBAAS,IAAnD,mBAAOosB,EAAP,KAAsBC,EAAtB,KAEM2J,EAAa,SAAC1pB,GAClB,IAAI+H,EAAO,IAAI3F,KAAiB,IAAZpC,GACpB,OACElL,OAAOiT,EAAKD,WAAWE,SAAS,EAAG,GACnC,IACAlT,OAAOiT,EAAKE,WAAa,GAAGD,SAAS,EAAG,GACxC,IACAlT,OAAOiT,EAAKG,eAAekY,MAAM,GACjC,KACAtrB,OAAOiT,EAAKsG,YAAYrG,SAAS,EAAG,GACpC,IACAlT,OAAOiT,EAAKuG,cAActG,SAAS,EAAG,IAI1CtP,qBAAU,WACJ3H,IACF4uB,GAAQ,kBAAO5uB,EAAKkI,OAAS,EAAI,EAAI,KACrC4mB,GAAa,kBAAO9uB,EAAKkI,OAAS,EAAIyT,KAAKC,KAAK5b,EAAKkI,OAAS,IAAM,KACpE8mB,GAAiB,kBAAOhvB,EAAKkI,OAAS,EAAIlI,EAAKqvB,MAAM,EAAG,IAAM,SAE/D,CAACrvB,IAQJ,OACE,iCACE,eAACuI,GAAA,EAAD,CAAgBzC,UAAW0C,KAAOC,UAAW9B,EAAQjB,eAArD,SACE,gBAACgD,GAAA,EAAD,CAAO,aAAW,mBAAmBjB,KAAK,QAA1C,UACE,eAACmB,GAAA,EAAD,UACE,gBAACrD,GAAA,EAAD,WACE,eAAC,GAAD,CACElF,MACE,GAFJ,SAQE,+CAEF,gBAAC,GAAD,CAAiB4F,MAAM,OAAvB,UACG,IACD,gDAEF,gBAAC,GAAD,CAAiBA,MAAM,OAAvB,UACG,IACD,kDAEF,gBAAC,GAAD,CAAiBA,MAAM,OAAvB,UACG,IACD,qDAEF,gBAAC,GAAD,CAAiBA,MAAM,OAAvB,UACG,IACD,8CAEF,gBAAC,GAAD,CAAiBA,MAAM,OAAvB,UACG,IACD,+CAEF,gBAAC,GAAD,CAAiBA,MAAM,OAAvB,UACG,IACD,uDAIN,gBAAC4C,GAAA,EAAD,WACGkmB,EAAc5sB,KAAI,SAAC6jB,EAAKzmB,GAAN,OACjB,gBAAC,GAAD,WACE,eAAC,GAAD,CACEuG,UAAU,KACVC,MAAM,MACN1F,MAAO,CACLiC,OAAQpC,OAAO8lB,EAAI4S,SAAW,UAC9Bl1B,MAAO,QAETE,QAAS,WAEPsN,aAAa4T,QAAQ,cAAe,sBACpC2T,EAAwBzS,IAV5B,SAaGA,EAAI4S,SAGP,eAAC,GAAD,CACE3yB,MAAM,OACN5F,MAAO,CACLqD,MACiB,SAAfsiB,EAAIhX,OACA,MACe,YAAfgX,EAAIhX,OACJ,SACA,SARV,SAWGgX,EAAIhX,SAEP,eAAC,GAAD,CAAiB/I,MAAM,OAAvB,SACGlC,OAAOiiB,EAAI4S,QAAQ9b,SAAS,MACzB,IACA6b,EAAW3S,EAAI/W,aAErB,eAAC,GAAD,CAAiBhJ,MAAM,OAAvB,SACGlC,OAAOiiB,EAAI4S,QAAQ9b,SAAS,MACzB,IACA6b,EAAW3S,EAAI/W,aAErB,eAAC,GAAD,CAAiBhJ,MAAM,OAAvB,SAA+B+f,EAAI9I,OACnC,eAAC,GAAD,CAAiBjX,MAAM,OAAvB,SAA+B+f,EAAI6S,QACnC,gBAAC,GAAD,CAAiB5yB,MAAM,OAAvB,UACGlC,OAAOiiB,EAAI8S,OAAOzJ,MAAM,EAAG,GAAGrrB,cAC9BD,OAAOiiB,EAAI8S,OAAOzJ,MAAM,QA5CR9vB,MAgDG,IAAzBwvB,EAAc7mB,QACb,eAAC,GAAD,UACE,eAAC,GAAD,CAAiBjC,MAAM,OAAvB,kCAMV,sBACE5F,MAAO,CACL8K,UAAW,QACXxK,QAAS,OACTG,eAAgB,YAJpB,SAOE,eAACuwB,GAAA,EAAD,CACEC,MAAOzC,EACPF,KAAMA,EACN1e,SApHiB,SAACqH,EAAOhY,GAC/B,IAAIyvB,EAAgB/uB,EAAKqvB,MAAM,IAAM/vB,EAAQ,GAAI,GAAKA,GACtD0vB,EAAiBD,GACjBH,EAAQtvB,IAkHFiyB,MAAM,iBCpLhB,I,GAAM/rB,GAAYC,aAAW,SAACd,GAAD,MAAY,CAEvC8L,YAAa,CACXtP,OAAQwD,EAAM6L,QAAQ,IAGxB2J,YAAa,CACXhP,UAAWxG,EAAM6L,QAAQ,IAE3BuoB,WAAY,CACV5tB,UAAW,UACXtG,gBAAiB,cACjBnB,MAAO,UAEPjC,QAAS,WAIE,SAASu3B,GAAT,GAKX,IAJF92B,EAIC,EAJDA,MAIC,IAHD+2B,aAGC,MAHO,GAGP,MAFDC,qBAEC,MAFe,GAEf,EADDC,EACC,EADDA,aAEMxyB,EAAUnB,KAEV4zB,EACJH,EAAM/wB,OAAS,GAAKgxB,EAAchxB,SAAW+wB,EAAM/wB,OAG/CmxB,EAAY,SAACJ,EAAO3vB,GACxB,IAAI+vB,GAAY,EAMhB,OALAJ,EAAM9T,SAAQ,SAAClG,GACTA,IAAY3V,IACd+vB,GAAY,MAGTA,GAGT,OACE,gBAACjiB,EAAA,EAAD,CACEpW,QAAQ,WACRyH,UAAW9B,EAAQ8J,YACnBpQ,MAAO,CAAE2rB,SAAU,QAAS7gB,UAAW,UACvC1D,KAAK,QAJP,UAME,eAACskB,GAAA,EAAD,CAAYpf,GAAE,UAAKzK,EAAL,iBAA2BuG,UAAW9B,EAAQoyB,WAA5D,SACG72B,IAEH,gBAACmV,EAAA,EAAD,CAEEkH,QAAO,UAAKrc,EAAL,iBACPyK,GAAE,UAAKzK,EAAL,WACF7B,MAAO,CAAEsD,SAAU,GAAIjD,OAAQ,OAC/BpB,MAAO45B,EACPjpB,SAAUkpB,EACVlN,UAAQ,EACRC,YAAa,SAAClsB,GAAD,OAAUA,EAAKosB,KAAK,OACjC5N,UAAW,CACT7X,QAAS,CAAE8X,MAAO9X,EAAQyT,WAC1BsE,mBAAoB,kBAAM,OAX9B,UAcE,gBAAClH,EAAA,EAAD,CACElY,MAAM,MACNqH,QAAS,CACPvB,KAAMg0B,EAAgBzyB,EAAQ2yB,YAAc,IAE9Cj5B,MAAO,CAAEgsB,aAAc,GALzB,UAOE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvB5kB,KAAK,QACL/D,MAAM,UACNiD,QAAS,CAAE4lB,cAAe5lB,EAAQ6yB,oBAClCra,QAASia,GAAkC,IAAjBH,EAAM/wB,OAChCqkB,cACE2M,EAAchxB,OAAS,GAAKgxB,EAAchxB,OAAS+wB,EAAM/wB,WAI/D,eAACskB,EAAA,EAAD,CAEE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAAQ,aACRpsB,MAAO,CAAEC,WAAY,eAGxB24B,EAAM92B,KAAI,SAAC8c,EAAS1f,GACnB,OACE,gBAACiY,EAAA,EAAD,CAAsBlY,MAAO2f,EAAS5e,MAAO,CAAEgsB,aAAc,GAA7D,UACE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvBlN,QAASka,EAAUH,EAAeja,GAClCxX,KAAK,QACL/D,MAAM,cAGV,eAAC8oB,EAAA,EAAD,CACE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAASxN,EACT5e,MAAO,CAAEC,WAAY,cAZVf,YCvE3B,IAAMm6B,GAA2BC,aAAOC,KAAPD,CAAH,iTAkBxBn0B,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvC8L,YAAa,CACXtP,OAAQwD,EAAM6L,QAAQ,GACtBE,SAAU,GACVsb,SAAU,KAEZ6N,MAAO,CACLl5B,QAAS,OACTm5B,SAAU,QAEZC,KAAM,CACJ54B,OAAQ,GAEV64B,QAAS,CACP7uB,UAAWxG,EAAM6L,QAAQ,IAE3BuoB,WAAY,CACV5tB,UAAW,UACXtG,gBAAiB,cACjBnB,MAAO,UACPjC,QAAS,OAEXuV,KAAM,CAKJgV,SAAU,SAIRiO,GAAc,CAAC,OAAQ,UAAW,YAClCC,GAAa,CAAC,UAAW,UAAW,WA4xB3BC,OA7vBf,YAII,IAHFC,EAGC,EAHDA,kBACA3B,EAEC,EAFDA,wBACAznB,EACC,EADDA,oBAEA,EACEpC,KAD6Bb,GAA/B,EAAQD,sBAAR,EAA+BC,0BAA0BW,EAAzD,EAAyDA,YAErD4L,EAAS1G,IAAM2G,YAAYD,SAEzB3T,EAAUnB,KAGhB,GAFc60B,cAEsB13B,mBAAS,KAA7C,mBAAO23B,EAAP,KAAmBC,EAAnB,KAEMC,EAAqB7b,KAAKC,MAC9B1N,aAAaC,QAAQ,uBAGjBspB,EAAW,WAAiC,IAAhCC,EAA+B,uDAAvBF,EACxB,OAAOE,EAAMv4B,KAAI,SAAC+a,GAAD,OAAUA,EAAKjd,SAYlC,EAAwC0C,mBACrCuO,aAAaC,QAAQ,gBAElBD,aAAaC,QAAQ,gBAAgB+M,MAAM,KAD3Cuc,KAFN,mBAAOjgB,EAAP,KAAqBC,EAArB,KAMA,EAAsC9X,mBAAS83B,KAA/C,mBAAOE,EAAP,KAUA,GAVA,KAGEhc,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBjJ,OAAS,IAC3DsS,EAAatS,OACXyW,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBjJ,QAK9BvF,sBAAxB,mBAAaolB,GAAb,WAEA,EAAgCplB,qBAAhC,mBAAOi4B,EAAP,KAAiBC,EAAjB,KAOA,EAA4B/zB,IAAMnE,SAAS,CAAC,OAAQ,YAApD,mBAAOqM,EAAP,KAAeyC,EAAf,KAEA,EAA0B3K,IAAMnE,SAC7BuO,aAAaC,QAAQ,eAElBD,aAAaC,QAAQ,eAAe+M,MAAM,KAD1C,CAAC,UAAW,UAAW,YAF7B,mBAAO4c,EAAP,KAAcC,EAAd,KAQApzB,qBAAU,WACRogB,EAAQ,KAER8S,EAAY,OAEX,IAEH,MAA8Cl4B,oBAAS,GAAvD,mBAAOkvB,EAAP,KAAwBC,EAAxB,KACA,GAA4CnvB,oBAAS,GAArD,qBAAOq4B,GAAP,MAAuBC,GAAvB,MAEMxT,GAAc,SAACzQ,GACnB,IAAI0Q,EAAU,IAAIrW,KAAK2F,EAAK1F,WAE5B,OADAoW,EAAQtS,SAAS,EAAG,EAAG,EAAG,GACnBsS,GAGHC,GAAY,SAAC3Q,GACjB,IAAI0Q,EAAU,IAAIrW,KAAK2F,EAAK1F,WAE5B,OADAoW,EAAQtS,SAAS,GAAI,GAAI,GAAI,KACtBsS,GAGT,GAAgC/kB,oBAAS,WAEvC,IAAIqU,EAAO,IAAI3F,KAAK,aACpB,OAAOoW,GAAYzQ,MAHrB,qBAAOqR,GAAP,MAAiBC,GAAjB,MAMA,GAA4B3lB,oBAAS,WACnC,IAAIqU,EAAO,IAAI3F,KACf,OAAOsW,GAAU3Q,MAFnB,qBAAOuR,GAAP,MAAeC,GAAf,MAmFM0S,GAAkB,WAStB,IAAInnB,EAAW7C,aAAaC,QAAQ,aAEpCpD,GAAyB,GAGzBwsB,EAAc,IAEd3mB,IACGoJ,KACC/d,EAAa,uBACb,CAMEub,aAAetJ,aAAaC,QAAQ,gBAEhCD,aAAaC,QAAQ,gBAAgB+M,MAAM,KAD3C1D,EAIJsgB,MAAQ5pB,aAAaC,QAAQ,eAEzBD,aAAaC,QAAQ,eAAe+M,MAAM,KAD1C4c,EAGJF,WAgBA5rB,SACAqZ,SAAUA,GAAS/W,UACnBiX,OAAQA,GAAOjX,UACf0P,MAAO9P,aAAaC,QAAQ,cAE9B,CACEsL,YAAanC,EAAOoC,MACpB5I,QAAS,CAAEC,SAAUA,KAGxBI,MAAK,SAACC,GACLrG,GAAyB,GAErBhK,OAAOqQ,EAASpU,KAAK,GAAG44B,QAAQ9b,SAAS,MAE3Cyd,EAAc,CACZ,CACE3B,OAAQ,iBACR5pB,OAAQ,IACRkO,KAAM,IACN2b,MAAO,IACPC,MAAO,IACPqC,QAAS,oBAIbZ,EAAc,aAAInmB,EAASpU,UAG9BgV,OAAM,SAACF,GAAW,IAAD,EAChB/G,GAAyB,GACO,OAAvB,OAAL+G,QAAK,IAALA,GAAA,UAAAA,EAAOV,gBAAP,eAAiBpF,SACnBgC,QAyFF0Z,GAAQ,yCAAG,qCAAA7M,EAAA,6DAEX9J,EAAW7C,aAAaC,QAAQ,aACpC8pB,IAAkB,GAClBltB,GAAyB,GAJV,kBAMU6F,IAAMoJ,KAC3B/d,EAAa,2BACb,CACEub,aAAetJ,aAAaC,QAAQ,gBAEhCD,aAAaC,QAAQ,gBAAgB+M,MAAM,KAD3C1D,EAGJsgB,MAAQ5pB,aAAaC,QAAQ,eAEzBD,aAAaC,QAAQ,eAAe+M,MAAM,KAD1C4c,EAEJF,SAAUA,EACV5rB,OAAQA,EAERqZ,SAAUA,GAAS/W,UACnBiX,OAAQA,GAAOjX,UACf0P,MAAO9P,aAAaC,QAAQ,cAM9B,CACEsL,YAAanC,EAAOoC,MACpB5I,QAAS,CAAEC,SAAUA,KA7BZ,OAMPK,EANO,OAgCb+I,QAAQC,IAAIhJ,EAASpU,MACf+qB,EAAcpU,OAAOqU,IAAIC,gBAAgB,IAAIC,KAAK,CAAC9W,EAASpU,SAC5DmrB,EAAO/e,SAASgf,cAAc,MAC/BnF,KAAO8E,EACRM,EApCS,UAoCKhD,GAAStR,UApCd,YAqCXsR,GAASnR,WAAa,EArCX,eAsCNqR,GAAOxR,UAtCD,YAsCcwR,GAAOrR,WAAa,EAtClC,QAuCbiU,EAAKG,aAAa,WAAYD,GAC9Bjf,SAASnH,KAAKsmB,YAAYJ,GAC1BA,EAAKK,QACLL,EAAKM,SACL1d,GAAyB,GACzBktB,IAAkB,GA5CL,kDA+CbvsB,GAAY,SAAC7K,GAAD,mBAAC,eACRA,GADO,IAEVyK,MAAM,EACNC,SAAU,QACVC,QAAS,sBAEXT,GAAyB,GACzBktB,IAAkB,GAtDL,0DAAH,qDA4Fd,OA/BAtzB,qBAAU,WACRuzB,KAGA,IAAIE,EAAiB7kB,YAAY2kB,GAAiB,KAKlD,OAAO,WACL1kB,cAAc4kB,GACd9gB,EAAO8D,YAER,IAmBD,uBAAK/d,MAAO,CAAE8K,UAAW,UAAzB,UACE,gBAAClC,EAAA,EAAD,CACEC,WAAS,EAIT2M,UAAU,MACV/U,eAAe,aACfD,WAAW,aAPb,UAgCE,eAACoI,EAAA,EAAD,CAAMK,MAAI,EAAV,SAOE,eAAC0vB,GAAD,CACE92B,MAAM,QACN+2B,MAAO0B,EACPzB,cAAe1e,EACf2e,aArVe,SAAC7hB,GAiBxB,IAAIhY,EAAQgY,EAAMC,OAAOjY,MACzB4R,aAAa4T,QACX,eAC4B,QAA5BxlB,EAAMA,EAAM4I,OAAS,GAAeyyB,EAAcr7B,GAGpB,QAA5BA,EAAMA,EAAM4I,OAAS,GAMzBuS,EAAgBnb,GALdmb,EACED,EAAatS,SAAWyyB,EAAYzyB,OAAS,GAAKyyB,QAiUlD,eAAC1xB,EAAA,EAAD,CAAMK,MAAI,EAAV,SA2BE,eAAC0vB,GAAD,CACE92B,MAAM,QACN+2B,MAAOiB,GACPhB,cAAe4B,EACf3B,aAnZU,SAAC7hB,EAAOwD,GAC1B5J,aAAa4T,QAAQ,cAAexN,EAAMC,OAAOjY,OAMjD,IAAIA,EAAQgY,EAAMC,OAAOjY,MACzB4R,aAAa4T,QACX,cAC4B,QAA5BxlB,EAAMA,EAAM4I,OAAS,GACjB,CAAC,UAAW,UAAW,WACvB5I,GAE0B,QAA5BA,EAAMA,EAAM4I,OAAS,GAIzB6yB,EAASz7B,GAHPy7B,EAASD,EAAM5yB,SAAWgyB,GAAWhyB,OAAS,GAAKgyB,SAwYjD,eAACjxB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE8K,UAAW,IAA/B,SAQGyvB,GACC,gBAACxjB,EAAA,EAAD,CACE3O,UAAW9B,EAAQ8J,YACnBzP,QAAQ,WACRyG,KAAK,QAHP,UAKE,eAACskB,GAAA,EAAD,CACEpf,GAAE,wBACFlE,UAAW9B,EAAQoyB,WAFrB,sBAMA,gBAAC1hB,EAAA,EAAD,CACE1K,GAAG,qBACHrN,MAAOs7B,EACPv6B,MAAO,CAAEsD,SAAU,GAAIjD,OAAQ,OAE/BuP,SAAU,SAACqH,GAAD,OAAWujB,EAAYvjB,EAAMC,OAAOjY,QALhD,UAOE,eAACkY,EAAA,EAAD,CAAUlY,MAAO,IAAjB,uBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,WAAjB,oCA0ER,eAAC2J,EAAA,EAAD,CAAMK,MAAI,EAAV,SASE,eAAC0vB,GAAD,CACE92B,MAAM,QACN+2B,MAAOgB,GACPf,cAAelqB,EACfmqB,aA7hBW,SAAC7hB,EAAOwD,GAC3B5J,aAAa4T,QAAQ,eAAgBxN,EAAMC,OAAOjY,OAMlD,IAAIA,EAAQgY,EAAMC,OAAOjY,MACO,QAA5BA,EAAMA,EAAM4I,OAAS,GAIzBuJ,EAAUnS,GAHRmS,EAAUzC,EAAO9G,SAAW+xB,GAAY/xB,OAAS,GAAK+xB,SAyhBpD,eAAChxB,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC,KAAD,CAAyBuG,MAAOC,IAAhC,SACE,gBAAC7G,EAAA,EAAD,CACEC,WAAS,EACTsH,QAAS,EACTnQ,MAAO,CAAE8K,UAAW,OAAQD,WAAY,QAH1C,UAKE,eAACjC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC+xB,GAAA,EAAD,UACE,eAAC3B,GAAD,CACEjxB,UAAW9B,EAAQqQ,KACnBvP,KAAK,QACL6zB,MAAO,CAAC,OAAQ,QAAS,QACzBC,aAAa,WACb5O,QAAQ,EAGRrhB,OAAO,aACPqB,GAAG,0BACHzK,MAAM,OACNs5B,WAAY,CACVn7B,MAAO,CAAEsD,SAAU,GAAIjD,OAAQ,WAEjCpB,MAAO+oB,GACPpY,SArPW,SAAC+G,GAC5BsR,GAAYb,GAAYzQ,KAqPR6V,oBAAqB,CACnB,eAAgB,aAElBxsB,MAAO,CAAEa,MAAO,eAItB,eAAC+H,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC+xB,GAAA,EAAD,UACE,eAAC3B,GAAD,CACEjxB,UAAW9B,EAAQqQ,KACnBvP,KAAK,QACLklB,QAAQ,EACR2O,MAAO,CAAC,OAAQ,QAAS,QAIzBC,aAAa,WACbjwB,OAAO,aACPqB,GAAG,wBACHzK,MAAM,KACN5C,MAAOipB,GACPiT,WAAY,CAAEn7B,MAAO,CAAEsD,SAAU,GAAIjD,OAAQ,WAC7CuP,SAzQS,SAAC+G,GAC1BwR,GAAUb,GAAU3Q,KAyQJ6V,oBAAqB,CACnB,aAAc,WAEhBxsB,MAAO,CAAEa,MAAO,sBAwB5B,eAAC+H,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,OAAQC,UAAW,UAAnD,SACE,eAACyY,EAAA,EAAD,CACE5iB,QAAQ,WACRyG,KAAK,QACLpH,MAAO,CAGLsD,SAAU,OACVjD,OAAQ,QAEVgD,MAAM,UACNE,QAxSS,YA5KmB,WASpCmK,GAAyB,GACzB+jB,GAAmB,GAEnB,IAAI/d,EAAW7C,aAAaC,QAAQ,aAIpCopB,EAAc,IAEd3mB,IACGoJ,KACC/d,EAAa,uBACb,CAEEub,aAAetJ,aAAaC,QAAQ,gBAEhCD,aAAaC,QAAQ,gBAAgB+M,MAAM,KAD3C1D,EAGJsgB,MAAQ5pB,aAAaC,QAAQ,eAEzBD,aAAaC,QAAQ,eAAe+M,MAAM,KAD1C4c,EAEJF,SAAUA,EAWV5rB,OAAQA,EAERqZ,SAAUA,GAAS/W,UACnBiX,OAAQA,GAAOjX,UACf0P,MAAO9P,aAAaC,QAAQ,cAE9B,CACEsL,YAAanC,EAAOoC,MACpB5I,QAAS,CAAEC,SAAUA,KAGxBI,MAAK,SAACC,GAELrG,GAAyB,GACrBhK,OAAOqQ,EAASpU,KAAK,GAAG44B,QAAQ9b,SAAS,MAE3Cyd,EAAc,CACZ,CACE3B,OAAQ,iBACR5pB,OAAQ,IACRkO,KAAM,IACN2b,MAAO,IACPC,MAAO,IACPqC,QAAS,oBAIbZ,EAAc,aAAInmB,EAASpU,OAE7B8xB,GAAmB,MAEpB9c,OAAM,SAACF,GAAW,IAAD,EAChB/G,GAAyB,GACzB+jB,GAAmB,GACa,OAAvB,OAALhd,QAAK,IAALA,GAAA,UAAAA,EAAOV,gBAAP,eAAiBpF,SACnBgC,OAiGNyqB,IAwSQnO,SAAUuE,EAXZ,SAaGA,EAAkB,UAAY,WAGnC,eAAC5oB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,OAAQC,UAAW,UAAnD,SACE,eAACyY,EAAA,EAAD,CACE5iB,QAAQ,WACR0C,MAAM,UACN+D,KAAK,QACLpH,MAAO,CAGLsD,SAAU,OACVjD,OAAQ,QAEVkD,QAAS8mB,GACT4C,SAAU0N,GAXZ,SAaGA,GAAiB,cAAgB,aAIxC,eAAC,GAAD,CACEh7B,KAAMs6B,EACN5B,eAtUiB,SAAC1S,GACtBoU,EAAkBpU,IAsUdyS,wBAAyBA,QCr0BjC,SAAStoB,GAAMC,GACb,OAAO,eAAC,IAAD,aAAUhQ,UAAW,EAAGY,QAAQ,UAAaoP,IAGtD,IAAM5K,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvC0L,KAAM,CACJC,SAAU,GAEZ0jB,UAAW,CACT9yB,MAAO,SAILw6B,GAAmB,SAAC,GAInB,IAHLC,EAGI,EAHJA,UACAC,EAEI,EAFJA,sBACAC,EACI,EADJA,aAEA,OACE,gBAACxkB,EAAA,EAAD,CACEkH,QAAQ,yBACR5R,GAAG,mBACHrN,MAAOq8B,EACP1rB,SAAU,SAACqH,GAAD,OAAWskB,EAAsBtkB,EAAOukB,IAJpD,UASE,eAACrkB,EAAA,EAAD,CAAUlY,MAAO,OAAjB,SACE,mDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,SAAjB,SACE,oDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,WAAjB,SACE,qDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,iBAAjB,SACE,4DAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,QAAjB,SACE,mDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,WAAjB,SACE,gDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,cAAjB,SACE,uDAMFw8B,GAAW,SAACC,EAAQC,GACxB,IAAIC,EAAS,GACTC,EAAS,GACb,OAAQH,GACN,IAAK,SACHE,EAAS,UACT,MACF,IAAK,WACHA,EAAS,WACT,MACF,IAAK,iBACHA,EAAS,kBACT,MACF,IAAK,QACHA,EAAS,SACT,MACF,IAAK,WACHA,EAAS,MACT,MACF,IAAK,cACHA,EAAS,SACT,MACF,QACEA,EAAS,GAGb,OAAQD,GACN,IAAK,SACHE,EAAS,UACT,MACF,IAAK,WACHA,EAAS,WACT,MACF,IAAK,iBACHA,EAAS,kBACT,MACF,IAAK,QACHA,EAAS,SACT,MACF,IAAK,WACHA,EAAS,MACT,MACF,IAAK,cACHA,EAAS,SACT,MACF,QACEA,EAAS,GAGb,MAAM,sBAAN,OAA6BD,EAA7B,gBAA2CC,IAG9B,SAASC,GAAT,GAA0C,IAAxBnrB,EAAuB,EAAvBA,oBACzBrK,EAAUnB,KAERuI,EAA6Ba,KAA7Bb,yBAEFkD,EAAYC,aAAaC,QAAQ,aAEvC,EAAwCxO,mBAAS,YAAjD,mBAAO6X,EAAP,KAAqBC,EAArB,KACA,EAA0B9X,mBAAS,GAAnC,mBAAO6Q,EAAP,KAEA,GAFA,KAEgC7Q,mBAAS,IAAzC,mBAAOy5B,EAAP,KAAiBC,EAAjB,KACA,EAAkC15B,mBAAS,CACzC25B,WAAY,OACZC,WAAY,OACZC,WAAY,OACZC,WAAY,OACZC,WAAY,SALd,mBAAOf,EAAP,KAAkBgB,EAAlB,KAOA,EAAkCh6B,mBAAS,KAA3C,mBAEA,GAFA,UAEoCA,sBAApC,mBAAOi6B,EAAP,KAAmBC,EAAnB,KAEMC,EAAkB,SAACzU,EAAUE,EAAQrL,EAAMkf,GAE/CruB,GAAyB,GACzB6F,IACGoJ,KACC/d,EAAa,qBACb,CACEie,KAAMA,EACNkf,SAAU,IAAMr4B,OAAOq4B,GAAUnlB,SAAS,EAAG,GAC7CoR,SAAUA,EACVE,OAAQA,GAEV,CAAEzU,QAAS,CAAEC,SAAU7C,aAAaC,QAAQ,gBAE7CgD,MAAK,SAACC,GAELyoB,GAAc,SAACh5B,GACb,OAAO,2BAAKuQ,EAASpU,MAArB,IAA2B+8B,KAAM,OAEnChvB,GAAyB,MAE1BiH,OAAM,SAACF,GAAW,IAAD,EACgB,OAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOV,gBAAP,eAAiBpF,SACnBgC,IAEFjD,GAAyB,OAkBzB6tB,EAAwB,SAACtkB,EAAOukB,GACpCc,GAAa,SAAC94B,GAAD,mBAAC,eACTA,GADQ,kBAEVg4B,EAAevkB,EAAMC,OAAOjY,YAYjC,EAAgCqD,oBAAS,IAAI0O,MAAOC,WAApD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAwC7O,mBAAS,IAAI0O,MAArD,mBAAOhC,EAAP,KAAqB8D,EAArB,KACA,EAAoDxQ,oBAAS,GAA7D,mBAAO4M,EAAP,KAA2BxD,EAA3B,KACA,GACEpJ,oBAAS,GADX,qBAAOsQ,GAAP,MAAmCC,GAAnC,MAGA,GAAsCvQ,oBAAS,GAA/C,qBAAOyQ,GAAP,MAAoBC,GAApB,MAqBMC,GAA8B,WAClCJ,IAA8B,IAWhCvL,qBAAU,WACR6J,EAAYnC,EAAaiC,aACxB,CAACjC,IAEJ,IAAMoY,GAAc,SAACzQ,GACnB,IAAI0Q,EAAU,IAAIrW,KAAK2F,EAAK1F,WAE5B,OADAoW,EAAQtS,SAAS,EAAG,EAAG,EAAG,GACnBsS,GAGHC,GAAY,SAAC3Q,GACjB,IAAI0Q,EAAU,IAAIrW,KAAK2F,EAAK1F,WAE5B,OADAoW,EAAQtS,SAAS,GAAI,GAAI,GAAI,KACtBsS,GAGT,GAAgC/kB,oBAAS,WACvC,IAAIqU,EAAO,IAAI3F,KACf,OAAOoW,GAAYzQ,MAFrB,qBAAOqR,GAAP,MAAiBC,GAAjB,MAKA,GAA4B3lB,oBAAS,WACnC,IAAIqU,EAAO,IAAI3F,KACf,OAAOsW,GAAU3Q,MAFnB,qBAAOuR,GAAP,MAAeC,GAAf,MA8BA,GAA4B7lB,mBAAS,GAArC,qBAAOqM,GAAP,MAAeyC,GAAf,MACA,GAAkC9O,wBAASgN,GAA3C,qBAAOV,GAAP,MAAkByC,GAAlB,MA+CM6K,GAAY,SAAC7I,EAAS8G,GAG1B,IAAIvF,EAAavB,EAEbyB,EAAS,IAAI9D,KAAK4D,GACtBE,EAAOC,SAAS,EAAG,EAAG,EAAG,GACzB,IAAIzB,EAAYwB,EAAO7D,WAlCA,SAACmC,EAAWC,EAAS8G,GAE5CzM,GAAyB,GACzB6F,IACGC,IAAI5U,EAAa,IAAMub,EAAe,QAAS,CAC9C1G,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,KAGZS,MAAK,SAACC,GAGL3C,GAAU2C,EAASpU,KAAKgP,QACxB0C,GAAkC,IAArB0C,EAASpU,KAAKqS,MAC3BtE,GAAyB,MAE1BiH,OAAM,SAACF,GAEwB,MAA1BA,EAAMV,SAASpF,QACjBgC,IAEFjD,GAAyB,OAoB7BsH,CAAiB1B,EANfsB,EADE7B,GACW/B,KAAK6D,MAELxB,EAIyB8G,GAGxC5G,IACGoJ,KACC/d,EAAa,IAAMub,EAAe,OAClC,CACE6N,SAAU1U,EACVD,QAASuB,EACTzB,MAAO,KAAOA,GAEhB,CACEM,QAAS,CACPC,SAAU9C,KAIfkD,MAAK,SAACC,OACNY,OAAM,SAACF,GAAW,IAAD,EAGgB,OAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOV,gBAAP,eAAiBpF,SACnBgC,OAIN8rB,EACEzU,GAAS/W,UACTiX,GAAOjX,UACPkJ,EACA4hB,IAQJz0B,qBAAU,WACR4U,GAAUhL,EAAUiJ,KAUnB,CAACjJ,IAEJ,IAAMyrB,GAAsB,SAACjB,EAAQC,GACnC,IAAIiB,EAAY/8B,OAAO67B,GAGnBvM,EAFYtvB,OAAO87B,GAEMiB,EAE7B,OAAOthB,KAAKuhB,IACVh9B,OAAOsvB,GACJppB,QAAQ,GACRuE,QAAQ,UAAW,MAIpBwyB,GAAe,SAAC,GAAuC,IAArC79B,EAAoC,EAApCA,MAAOu8B,EAA6B,EAA7BA,aAAcuB,EAAe,EAAfA,SAG3C,IAAKR,EACH,OACE,sBAAKv8B,MAAO,CAAEK,OAAQ,SAAtB,SACE,sBACEL,MAAO,CACL8K,UAAW,SACX+b,OAAQ,sBACRmW,aAAc,MACd57B,QAAS,QACT+L,UAAW,UAEbb,GAAIywB,EARN,SAUGl9B,OAAOZ,GACL8G,QAAQ,GACRuE,QAAQ,UAAW,QAM9B,IAAI2yB,EAAY/oB,OAAOC,QAAQooB,EAAWU,WAE1C,OAAQzB,GACN,IAAK,OAiBL,IAAK,SAiBL,IAAK,QACH,OACE,sBAAKx7B,MAAO,CAAEK,OAAQ,SAAtB,SACE,sBACEL,MAAO,CACL8K,UAAW,SACX+b,OAAQ,sBACRmW,aAAc,MACd57B,QAAS,QACT+L,UAAW,UAEbb,GAAIywB,EARN,SAUG99B,MAIT,IAAK,WAEH,OACE,uBACEe,MAAO,CACL8K,UAAW,SACX+b,OAAQ,sBACRmW,aAAc,MACd57B,QAAS,QACT+L,UAAW,OACX9M,OAAQ,QACR68B,UAAW,UAEb5wB,GAAIywB,EAVN,UAYE,2CACS,uBAAM/8B,MAAO,CAAEqD,MAAO,QAAtB,SAAiCpE,OAEzCg+B,EAAUn7B,KAAI,SAAC8c,GACd,OACE,iCACGA,EAAQ,GADX,IACgB,IACd,uBAAM5e,MAAO,CAAEqD,MAAO,QAAtB,SACGxD,OAAO+e,EAAQ,GAAR,WACL7Y,QAAQ,GACRuE,QAAQ,UAAW,eAOpC,IAAK,iBACH,OACE,uBACEtK,MAAO,CACL8K,UAAW,SACX+b,OAAQ,sBACRmW,aAAc,MACd57B,QAAS,QACT+L,UAAW,OACX9M,OAAQ,QACR68B,UAAW,UAEb5wB,GAAIywB,EAVN,UAYE,2CACS,uBAAM/8B,MAAO,CAAEqD,MAAO,QAAtB,SAAiCpE,OAEzCg+B,EAAUn7B,KAAI,SAAC8c,GAEd,OADgB1K,OAAOC,QAAQyK,EAAQ,GAAR,WACd9c,KAAI,SAACq7B,GACpB,OACE,iCACGve,EAAQ,GADX,KACiBue,EAAQ,GADzB,IAC8B,IAC5B,uBAAMn9B,MAAO,CAAEqD,MAAO,QAAtB,SACGxD,OAAOs9B,EAAQ,IACbp3B,QAAQ,GACRuE,QAAQ,UAAW,kBAQtC,IAAK,WACH,OACE,uBACEtK,MAAO,CACL8K,UAAW,SACX+b,OAAQ,sBACRmW,aAAc,MACd57B,QAAS,QACT+L,UAAW,OACX9M,OAAQ,QACR68B,UAAW,UAEb5wB,GAAIywB,EAVN,UAYE,2CACS,uBAAM/8B,MAAO,CAAEqD,MAAO,QAAtB,SAAiCpE,OAEzCg+B,EAAUn7B,KAAI,SAAC8c,GAEd,OADgB1K,OAAOC,QAAQyK,EAAQ,GAAR,WACd9c,KAAI,SAACq7B,GACpB,OACE,iCACGve,EAAQ,GADX,KACiBue,EAAQ,GADzB,IAC8B,IAC5B,uBAAMn9B,MAAO,CAAEqD,MAAO,QAAtB,SACGxD,OAAOs9B,EAAQ,GAAR,yBAQxB,IAAK,cACH,OACE,uBACEn9B,MAAO,CACL8K,UAAW,SACX+b,OAAQ,sBACRmW,aAAc,MACd57B,QAAS,QACT+L,UAAW,OACX9M,OAAQ,QACR68B,UAAW,UAEb5wB,GAAIywB,EAVN,UAYE,2CACS,uBAAM/8B,MAAO,CAAEqD,MAAO,QAAtB,SAAiCpE,OAEzCg+B,EAAUn7B,KAAI,SAAC8c,GAEd,OADgB1K,OAAOC,QAAQyK,EAAQ,GAAR,WACd9c,KAAI,SAACq7B,GAGpB,OADoBjpB,OAAOC,QAAQgpB,EAAQ,IACtBr7B,KAAI,SAACs7B,EAAGx1B,GAC3B,GAAIw1B,EAAE,GAAG1iB,WAAW,KAClB,OACE,iCACGkE,EAAQ,GADX,KACiBue,EAAQ,GADzB,YACsCC,EAAE,GAAGpO,MAAM,GADjD,IACsD,IACpD,uBAAMhvB,MAAO,CAAEqD,MAAO,QAAtB,SACGxD,OAAOu9B,EAAE,IACPr3B,QAAQ,GACRuE,QAAQ,UAAW,qBAU1C,QACE,OACE,sBACEtK,MAAO,CACL8K,UAAW,SACX+b,OAAQ,sBACRmW,aAAc,MACd57B,QAAS,QACT+L,UAAW,SACX7H,UAAW,SAEbgH,GAAIywB,EATN,SAWE,uBAAM/8B,MAAO,CAAEqD,MAAO,QAAtB,SAAiCpE,QAM3CqI,qBAAU,WACSyE,SAASC,eAAe,gBAExC,IAEH,IAAMqxB,GAAiB,SAACnf,GACtB,IAAIrc,EAAQkK,SAASC,eAAekS,GACpC,GAAIrc,EAAO,CACT,IAAIy7B,EAAYz7B,EAAM07B,wBACtB,OAAOjiB,KAAKsF,MAAM0c,EAAUv+B,EAAI,GAAK,KAErC,MAAO,OAILy+B,GAAkB,SAACC,EAAYC,EAAYC,GAC/C,IAAIC,EAAW7xB,SAASC,eAAeyxB,GACnCI,EAAW9xB,SAASC,eAAe0xB,GACnCI,EAAe/xB,SAASC,eAAe2xB,GAC3C,GAAIC,GAAYC,GAAYC,EAAc,CACxC,IAAIC,EAAeH,EAASL,wBACxBS,EAAeH,EAASN,wBACxBU,EAAmBH,EAAaP,wBAChCW,EACFH,EAAaj/B,EACbi/B,EAAal9B,OACZm9B,EAAal/B,GAAKi/B,EAAaj/B,EAAIi/B,EAAal9B,QAAU,EAC3Do9B,EAAiBp9B,MAAQ,EAE3B,OAAOya,KAAKsF,MAAMsd,GAAgB,KAElC,MAAO,OAIX,OACE,uBAAKl+B,MAAO,CAAE8K,UAAW,SAAUjK,MAAO,QAA1C,UACE,gBAAC+H,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,SAAS0I,QAAQ,gBAA5C,UACE,eAACN,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACL,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,WAA3B,UACE,eAACoI,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEgJ,YAAa,QAAjC,SACE,gBAAC+N,EAAA,EAAD,CAAa3O,UAAW9B,EAAQmtB,gBAAhC,UACE,eAAC/H,GAAA,EAAD,CAAYpf,GAAG,oBAAf,kBACA,eAAC0K,EAAA,EAAD,CACEkH,QAAQ,oBACR5R,GAAG,cACHrN,MAAOkb,EACPvK,SAraS,SAACqH,GACxBmD,EAAgBnD,EAAMC,OAAOjY,OAC7Bw9B,EACEzU,GAAS/W,UACTiX,GAAOjX,UACPgG,EAAMC,OAAOjY,MACb88B,IA2ZU,SAME,eAAC5kB,EAAA,EAAD,CAAUlY,MAAO,WAAjB,SACE,4DA0BR,eAAC2J,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEgJ,YAAa,QAAjC,SACE,gBAAC,KAAD,CAAyBwG,MAAOC,IAAhC,UACE,eAAC,KAAD,CACE6c,QAAQ,EACRC,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,0BACHzK,MAAM,OACN5C,MAAO+oB,GACPpY,SA1da,SAAC+G,GAC5BsR,GAAYb,GAAYzQ,IACxB8lB,EAAgB9lB,EAAK1F,UAAWiX,GAAOjX,UAAWkJ,EAAc4hB,IAydlDvP,oBAAqB,CACnB,eAAgB,aAElBxsB,MAAO,CAAEgJ,YAAa,QACtBZ,UAAW9B,EAAQqtB,YAGrB,eAAC,KAAD,CACErH,QAAQ,EACRC,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,wBACHzK,MAAM,KACN5C,MAAOipB,GACPtY,SAreW,SAAC+G,GAC1BwR,GAAUb,GAAU3Q,IACpB8lB,EAAgBzU,GAAS/W,UAAW0F,EAAK1F,UAAWkJ,EAAc4hB,IAoepDvP,oBAAqB,CACnB,aAAc,WAEhBpkB,UAAW9B,EAAQqtB,iBAIzB,eAAC/qB,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAAC8N,EAAA,EAAD,CAAa3O,UAAW9B,EAAQmtB,gBAAhC,UACE,eAAC/H,GAAA,EAAD,CAAYpf,GAAG,wBAAf,sBACA,gBAAC0K,EAAA,EAAD,CACEkH,QAAQ,wBACR5R,GAAG,kBACHrN,MAAO88B,EACPnsB,SAxlBa,SAACqH,GAC5B+kB,EAAY/kB,EAAMC,OAAOjY,OACzBw9B,EACEzU,GAAS/W,UACTiX,GAAOjX,UACPkJ,EACAlD,EAAMC,OAAOjY,QA8kBH,UAME,eAACkY,EAAA,EAAD,CAAUlY,MAAO,EAAjB,SACE,gDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,EAAjB,SACE,gDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,EAAjB,SACE,gDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,EAAjB,SACE,gDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,EAAjB,SACE,gDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,EAAjB,SACE,6DAQZ,eAAC2J,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACL,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,SAA3B,UACE,eAACoI,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEgJ,YAAa,QAAjC,SACE,gBAACJ,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,EAAA,EAAD,CAAMK,MAAI,EAAV,SACc,IAAX0F,GAIC,eAACjO,EAAA,EAAD,CAAYC,QAAQ,KAAKX,MAAO,CAAEqD,MAAO,WAAzC,qBAOA,eAAC3C,EAAA,EAAD,CAAYC,QAAQ,KAAKX,MAAO,CAAEqD,MAAO,WAAzC,sBAKJ,eAACuF,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEc,OAAQ,YAC5B,eAAC8H,EAAA,EAAD,CAAMK,MAAI,EAAV,cACiBqG,IAAdV,GACC,eAACW,GAAA,EAAD,CACEnI,KAAK,YAIP,eAAC1G,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAphBoB,SAACiO,GACrC,IAAM+H,EAAO,IAAI3F,KAAKpC,GACtB,OACE,kCACGlL,OAAOiT,EAAKD,WAAWE,SAAS,EAAG,KADtC,IAEGlT,OAAOiT,EAAKE,WAAa,GAAGD,SAAS,EAAG,KAF3C,IAEkDD,EAAKG,cACrD,2CACCH,EACEb,eAAe,GAAI,CAClBC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAETtS,iBAwgBYsL,CAA8BL,aAMzC,eAAChG,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC,KAAD,CAAyBuG,MAAOC,IAAhC,SACE,eAAC,KAAD,CACEzP,MAAO,CAAEa,MAAO,EAAG6O,WAAY,UAC/BzQ,MAAO+P,EACPf,KAAMiB,EACNS,QAAS,kBAAMjE,GAAsB,IACrCkE,SAvnBS,SAAC+G,GACxB,IACE3D,IAAe,GADjB,QAGEF,EAAgB6D,GAChBjL,GAAsB,KAmnBVT,OAAO,qBACP4E,QAhnBY,WAC1B,IAAIuD,EAAY,IAAIpC,KAMpB,MALqB,aAAjBmJ,GAEF/G,EAAUqL,QAAQ,WAGbrL,EAymBgBrE,SAIf,eAACnG,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC9B,EAAA,EAAD,CAAY5D,QAAS,kBAAMmI,GAAsB,IAAjD,SACE,eAAC,KAAD,CAAWrI,MAAM,SAASC,SAAS,cAGvC,eAACsF,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEI,aAAc,OAAQ4I,YAAa,QAAvD,SACE,eAAC7B,EAAA,EAAD,CAGE5D,QA/mBU,WACtB,IAAIsR,EAAM,IAAI7D,KACd8B,EAAgB+B,GAChB1D,EAAY0D,EAAI5D,WAChB4B,IAA8B,GAC9BG,IAAe,IAumBL,SAKE,eAAC,KAAD,CAAY3P,MAAM,UAAUC,SAAS,sBAM/C,gBAACsF,EAAA,EAAD,CACEC,WAAS,EACT7I,MAAO,CAAE8K,UAAW,UACpB5B,QAAQ,gBACR1I,WAAW,SAJb,UAME,gBAACoI,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,+BACE,qDAGF,sBAAKjJ,MAAO,CAAE8K,UAAW,SAAUzK,OAAQ,SAA3C,0BAGF,gBAACuI,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE8K,UAAW,QAA/B,UACE,eAACiM,EAAA,EAAD,CAAa3O,UAAW9B,EAAQmtB,gBAAhC,SAEE,eAAC,GAAD,CACE+H,aAAa,aACbF,UAAWA,EAAUW,WACrBV,sBAAuBA,MAG3B,eAACuB,GAAD,CACEC,SAAS,aACTvB,aAAcF,EAAUW,WACxBh9B,MACEs9B,EACI18B,OAAO08B,EAAWjB,EAAUW,aACzBl2B,QAAQ,GACRuE,QAAQ,UAAW,IACtB,kBAKV,gBAAC1B,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE8K,UAAW,QAA/B,UACE,eAACiM,EAAA,EAAD,CAAa3O,UAAW9B,EAAQmtB,gBAAhC,SAEE,eAAC,GAAD,CACE+H,aAAa,aACbF,UAAWA,EAAUY,WACrBX,sBAAuBA,MAG3B,eAACuB,GAAD,CACEC,SAAS,aACTvB,aAAcF,EAAUY,WACxBj9B,MACEs9B,EACI18B,OAAO08B,EAAWjB,EAAUY,aACzBn2B,QAAQ,GACRuE,QAAQ,UAAW,IACtB,kBAKV,gBAAC1B,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE8K,UAAW,QAA/B,UACE,eAACiM,EAAA,EAAD,CAAa3O,UAAW9B,EAAQmtB,gBAAhC,SAEE,eAAC,GAAD,CACE+H,aAAa,aACbF,UAAWA,EAAUa,WACrBZ,sBAAuBA,MAG3B,eAACuB,GAAD,CACEC,SAAS,aACTvB,aAAcF,EAAUa,WACxBl9B,MACEs9B,EACI18B,OAAO08B,EAAWjB,EAAUa,aACzBp2B,QAAQ,GACRuE,QAAQ,UAAW,IACtB,kBAKV,gBAAC1B,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE8K,UAAW,QAA/B,UACE,eAACiM,EAAA,EAAD,CAAa3O,UAAW9B,EAAQmtB,gBAAhC,SAEE,eAAC,GAAD,CACE+H,aAAa,aACbF,UAAWA,EAAUc,WACrBb,sBAAuBA,MAG3B,eAACuB,GAAD,CACEC,SAAS,aACTvB,aAAcF,EAAUc,WACxBn9B,MACEs9B,EACI18B,OAAO08B,EAAWjB,EAAUc,aACzBr2B,QAAQ,GACRuE,QAAQ,UAAW,IACtB,kBAKV,gBAAC1B,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE8K,UAAW,OAAQ1K,aAAc,QAArD,UACE,eAAC2W,EAAA,EAAD,CAAa3O,UAAW9B,EAAQmtB,gBAAhC,SAEE,eAAC,GAAD,CACE+H,aAAa,aACbF,UAAWA,EAAUe,WACrBd,sBAAuBA,MAG3B,eAACuB,GAAD,CACEC,SAAS,aACTvB,aAAcF,EAAUe,WACxBp9B,MACEs9B,EACI18B,OAAO08B,EAAWjB,EAAUe,aACzBt2B,QAAQ,GACRuE,QAAQ,UAAW,IACtB,qBAKZ,gBAAC1B,EAAA,EAAD,CACEC,WAAS,EACT7I,MAAO,CAAE8K,UAAW,QACpB5B,QAAQ,gBACR1I,WAAW,SAJb,UAME,eAACoI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,uBAAMqD,GAAG,mBAAT,8BAGF,eAAC1D,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,sBACEqD,GAAG,cACHvF,MAAO00B,GAASH,EAAUW,WAAYX,EAAUY,YAChDl8B,MAAO,CACLmZ,SAAU,WACV9X,KAAMm8B,GAAgB,aAAc,aAAc,eAClD7kB,IAAK0kB,GAAe,oBACpBhtB,SAAU,QACVwW,OAAQ,mBACRmW,aAAc,MACd57B,QAAS,QACT+L,UAAW,UAXf,SAcGovB,EACGI,GACEJ,EAAWjB,EAAUY,YACrBK,EAAWjB,EAAUW,aAEvB,iBAIR,eAACrzB,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,sBACEqD,GAAG,cACHvF,MAAO00B,GAASH,EAAUY,WAAYZ,EAAUa,YAChDn8B,MAAO,CACLmZ,SAAU,WACV9X,KAAMm8B,GAAgB,aAAc,aAAc,eAClD7kB,IAAK0kB,GAAe,oBACpBhtB,SAAU,QACVwW,OAAQ,mBACRmW,aAAc,MACd57B,QAAS,QACT+L,UAAW,UAXf,SAcGovB,EACGI,GACEJ,EAAWjB,EAAUa,YACrBI,EAAWjB,EAAUY,aAEvB,iBAGR,eAACtzB,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,sBACEqD,GAAG,cACHvF,MAAO00B,GAASH,EAAUa,WAAYb,EAAUc,YAChDp8B,MAAO,CACLmZ,SAAU,WACV9X,KAAMm8B,GAAgB,aAAc,aAAc,eAClD7kB,IAAK0kB,GAAe,oBACpBhtB,SAAU,QACVwW,OAAQ,mBACRmW,aAAc,MACd57B,QAAS,QACT+L,UAAW,UAXf,SAcGovB,EACGI,GACEJ,EAAWjB,EAAUc,YACrBG,EAAWjB,EAAUa,aAEvB,iBAGR,eAACvzB,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,sBACElC,MAAO00B,GAASH,EAAUc,WAAYd,EAAUe,YAChD/vB,GAAG,cACHtM,MAAO,CACLmZ,SAAU,WACV9X,KAAMm8B,GAAgB,aAAc,aAAc,eAClD7kB,IAAK0kB,GAAe,oBACpBhtB,SAAU,QACVwW,OAAQ,mBACRmW,aAAc,MACd57B,QAAS,QACT+L,UAAW,UAXf,SAcGovB,EACGI,GACEJ,EAAWjB,EAAUe,YACrBE,EAAWjB,EAAUc,aAEvB,oBAKV,sBAAKp8B,MAAO,CAAE+f,YAAa,YAE3B,eAAC3I,EAAA,EAAD,CACEnJ,KAAM2E,GACNyE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,iBAAkB,IAClB7H,QAASsD,GAPX,SASE,eAAC,GAAD,CAAOtD,QAASsD,GAA6B/E,SAAS,UAAtD,8BAKF,sBAAKlO,MAAO,CAAEoN,aAAc,e,oCC5lC5BjI,GAAYC,YAAW,CAC3B2uB,KAAM,CACJ,uBAAwB,CACtBvvB,gBAAiB,WAGnB,8BAA+B,CAC7BnB,MAAO,cAKb,SAAS2wB,GAASjkB,GAChB,IAAQvC,EAAqCuC,EAArCvC,SAAUvO,EAA2B8Q,EAA3B9Q,MAAOC,EAAoB6Q,EAApB7Q,MAAU+0B,EAAnC,aAA6ClkB,EAA7C,IAEA,OACE,8CACEmkB,KAAK,WACLC,OAAQl1B,IAAUC,EAClBoN,GAAE,0BAAqBpN,GACvB,uCAA+BA,IAC3B+0B,GALN,aAOGh1B,IAAUC,GACT,eAACk1B,GAAA,EAAD,UACE,eAAC1zB,EAAA,EAAD,UAAa8M,SAOvB,SAAS6mB,GAAUn1B,GACjB,MAAO,CACLoN,GAAG,WAAD,OAAapN,GACf,gBAAgB,gBAAhB,OAAiCA,IAItB,SAASi/B,GAAT,GAA6C,IAAxBxtB,EAAuB,EAAvBA,oBAClC,EAA0BlK,WAAe,GAAzC,mBAAOxH,EAAP,KAAcs1B,EAAd,KACMjuB,EAAUnB,KAKhB,OACE,gBAACivB,GAAA,EAAD,WACE,gBAACI,GAAA,EAAD,CACEx0B,MAAO,CAAEqD,MAAO,WAChB+E,UAAW9B,EAAQytB,KACnB90B,MAAOA,EACP2Q,SAVe,SAACqH,EAAOwd,GAC3BF,EAASE,IAUL,aAAW,iBALb,UAQE,eAACC,GAAA,EAAD,aAAK7yB,MAAM,UAAawyB,GAAU,KAClC,eAACK,GAAA,EAAD,aAAK7yB,MAAM,UAAawyB,GAAU,KAClC,eAACK,GAAA,EAAD,aAAK7yB,MAAM,SAAYwyB,GAAU,QAGnC,eAAC,GAAD,CAAUp1B,MAAOA,EAAOC,MAAO,EAAGc,MAAO,CAAEC,WAAY,UAAvD,SACE,eAAC67B,GAAD,CAAQnrB,oBAAqBA,MAE/B,eAAC,GAAD,CAAU1R,MAAOA,EAAOC,MAAO,EAAGc,MAAO,CAAEC,WAAY,UAAvD,oBAGA,eAAC,GAAD,CAAUhB,MAAOA,EAAOC,MAAO,EAAGc,MAAO,CAAEC,WAAY,UAAvD,sBC5DN,IAAMm+B,GAAe,SAACruB,GACpB,IAAQ5M,EAAY4M,EAAZ5M,QAER,OACE,sBAAKnD,MAAO,CAACmN,UAAW,SAAUrC,UAAW,OAA7C,SAEI3H,EAAQrB,KAAI,SAACC,EAAO7C,GAClB,MAAoB,aAAhB6C,EAAM9C,MACA,uBAA4Be,MAAO,CAACqD,MAAO,WAA3C,kDAAmBnE,IAEnB,kCAA4B,uBAAMc,MAAO,CAACqD,MAAO,WAArB,oBAA5B,OAAiF,uBAAMrD,MAAO,CAACqD,MAAO,WAArB,oBAAjF,8BAAmBnE,UASxB,SAAS4Y,GAAT,GAAsD,IAA5BM,EAA2B,EAA3BA,UAAWL,EAAgB,EAAhBA,aAqBlD,EAA8CzV,mBAAS,GAAvD,mBAAwBoW,GAAxB,WAQA,OANApR,qBAAU,YACa,IAAjByQ,GACFW,EAAmB,KAEpB,CAACX,KAEoB,IAAjBA,EACL,eAACnV,GAAA,EAAD,CAAqB5C,MAAO,CAAEK,OAAQ,QAAtC,SACE,gBAACO,EAAA,EAAD,CACEjB,KAAMyY,EACNtX,OAAQ,CACN6X,IAAK,EACL5X,MAAO,GAEP6X,OAAQ,GANZ,UASE,eAACpX,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,eAACR,GAAA,EAAD,CAAOC,QAAQ,SACf,eAACI,GAAA,EAAD,CAAOC,OAAQ,CAAC,EAAG,SAAA5B,GAAI,OAAI,QAI3B,eAACmZ,GAAA,EAAD,CACEC,SAAU,GACVnJ,SAAU,SAACoJ,GAAD,OAASN,EAAmBM,EAAIC,aAC1C/X,QAAQ,OACRb,OAAQ,GACRyD,OAAO,UACP+U,cAAe,iBAAM,MAIvB,eAAC5V,GAAA,EAAD,CAAQo7B,aAAc,CACtBp+B,WAAY,OAGZiD,QAASk7B,KAGT,eAAC18B,GAAA,EAAD,CAAKC,mBAAmB,EAAOT,QAAQ,WAAWlC,KAAK,UAAvD,SACE,eAACka,GAAA,EAAD,CACEhY,QAAQ,WACRiY,SAAS,SACTna,KAAK,OACL02B,MAAM,UAQV,gBAACh0B,GAAA,EAAD,CAAKC,mBAAmB,EAAOT,QAAQ,UAAvC,UACE,eAACgY,GAAA,EAAD,CACEhY,QAAQ,UACRiY,SAAS,SACTna,KAAK,OACL02B,MAAM,QAEPtd,EAAUtW,KAAI,SAACuX,EAAOna,GACnB,OAAIW,OAAOwZ,EAAMilB,UAAYz+B,OAAOwZ,EAAMklB,UACjC,eAACv8B,GAAA,EAAD,CAA4BhD,KAAK,WAAjC,eAAmBE,IAEnB,eAAC8C,GAAA,EAAD,CAA4BhD,KAAK,WAAjC,eAAmBE,eAOtC,eAAC0D,GAAA,EAAD,UACE,gBAAChC,EAAA,EAAD,CACEjB,KAAMyY,EACNtX,OAAQ,CACN6X,IAAK,EACL5X,MAAO,GACPM,KAAM,EACNuX,OAAQ,GAEV4lB,eAAgB,KAChBC,OAAQ,EATV,UAWE,eAACj9B,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,eAACR,GAAA,EAAD,CAAOC,QAAQ,OACbw0B,MAAO,IACPC,WAAY,GAAIryB,SAAU,GAAInB,SAAU,IAC1C,eAACb,GAAA,EAAD,CAAOC,OAAQ,CAAC,EAAG,SAAA5B,GAAI,OAAI,QAI3B,eAACsD,GAAA,EAAD,CAAQo7B,aAAc,CACtBp+B,WAAY,QAEZmZ,UAAW,SAACna,EAAO8C,EAAO7C,GAAf,MAAmC,YAAVD,EAAsB,YAAc,UACxEiE,QAASk7B,KAET,eAAC18B,GAAA,EAAD,CAAKC,mBAAmB,EAAOT,QAAQ,WAAWlC,KAAK,UAAvD,SACE,eAACka,GAAA,EAAD,CACEhY,QAAQ,WACRiY,SAAS,SACTna,KAAK,OACL02B,MAAM,MACNpyB,SAAU,MASd,gBAAC5B,GAAA,EAAD,CAAKC,mBAAmB,EAAOT,QAAQ,UAAvC,UACE,eAACgY,GAAA,EAAD,CACEhY,QAAQ,UACRiY,SAAS,SACTna,KAAK,OACL02B,MAAM,MACNpyB,SAAU,IAEX8U,EAAUtW,KAAI,SAACuX,EAAOna,GACnB,OAAIW,OAAOwZ,EAAMilB,UAAYz+B,OAAOwZ,EAAMklB,UACjC,eAACv8B,GAAA,EAAD,CAA4BhD,KAAK,WAAjC,eAAmBE,IAEnB,eAAC8C,GAAA,EAAD,CAA4BhD,KAAK,WAAjC,eAAmBE,eC9K1C,IAAMiG,GAAYC,aAAW,SAACd,GAAD,MAAY,MAI1B,SAASo6B,GAAT,GAKX,IAJF78B,EAIC,EAJDA,MAIC,IAHD+2B,aAGC,MAHO,GAGP,MAFDC,qBAEC,MAFe,GAEf,EADDC,EACC,EADDA,aAEMxyB,EAAUnB,KAEV4zB,EACJH,EAAM/wB,OAAS,GAAKgxB,EAAchxB,SAAW+wB,EAAM/wB,OAG/CmxB,EAAY,SAACJ,EAAO3vB,GACxB,IAAI+vB,GAAY,EAMhB,OALAJ,EAAM9T,SAAQ,SAAClG,GACTA,IAAY3V,IACd+vB,GAAY,MAGTA,GAGT,OACE,gBAACjiB,EAAA,EAAD,CAAa/W,MAAO,CAAE2rB,SAAU,SAAhC,UACE,eAACD,GAAA,EAAD,CAAYpf,GAAE,UAAKzK,EAAL,iBAAd,SAA0CA,IAC1C,gBAACmV,EAAA,EAAD,CACEhX,MAAO,CAAEsD,SAAU,SACnB4a,QAAO,UAAKrc,EAAL,iBACPyK,GAAE,UAAKzK,EAAL,WACF5C,MAAO45B,EACPjpB,SAAUkpB,EACVlN,UAAQ,EACRC,YAAa,SAAClsB,GAAD,OAAUA,EAAKosB,KAAK,OACjC5N,UAAW,CACT7X,QAAS,CAAE8X,MAAO9X,EAAQyT,WAC1BsE,mBAAoB,kBAAM,OAV9B,UAaE,gBAAClH,EAAA,EAAD,CACElY,MAAM,MACNqH,QAAS,CACPvB,KAAMg0B,EAAgBzyB,EAAQ2yB,YAAc,IAE9Cj5B,MAAO,CAAEgsB,aAAc,GALzB,UAOE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvB5kB,KAAK,QACL/D,MAAM,UACNiD,QAAS,CAAE4lB,cAAe5lB,EAAQ6yB,oBAClCra,QAASia,GAAkC,IAAjBH,EAAM/wB,OAChCqkB,cACE2M,EAAchxB,OAAS,GAAKgxB,EAAchxB,OAAS+wB,EAAM/wB,WAI/D,eAACskB,EAAA,EAAD,CAEE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAAQ,aACRpsB,MAAO,CAAEC,WAAY,eAGxB24B,EAAM92B,KAAI,SAAC8c,EAAS1f,GACnB,OACE,gBAACiY,EAAA,EAAD,CAAsBlY,MAAO2f,EAAS5e,MAAO,CAAEgsB,aAAc,GAA7D,UACE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvBlN,QAASka,EAAUH,EAAeja,GAClCxX,KAAK,QACL/D,MAAM,cAGV,eAAC8oB,EAAA,EAAD,CACE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAASxN,EACT5e,MAAO,CAAEC,WAAY,cAZVf,YClC3B,SAAS4Q,GAAMC,GACb,OAAO,eAAC,IAAD,aAAUhQ,UAAW,EAAGY,QAAQ,UAAaoP,IAGtD,IAAM5K,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvC0L,KAAM,CACJC,SAAU,GAEZ0jB,UAAW,CACT9yB,MAAO,KAETkZ,UAAW,CACTzU,UAAW,KAEbq5B,iBAAkB,GAClBvF,aAAc,CACZ91B,SAAU,aAIC,SAASs7B,GAAT,GAA+C,IAAxBjuB,EAAuB,EAAvBA,oBAC9BrK,EAAUnB,KACRuI,EAA6Ba,KAA7Bb,yBAER,EAA8CpL,oBAAS,GAAvD,mBAAOkvB,EAAP,KAAwBC,EAAxB,KAIM0I,GAFYtpB,aAAaC,QAAQ,aAEZwN,KAAKC,MAC9B1N,aAAaC,QAAQ,wBAMnB0W,EAAYlJ,KAAKC,MAAM1N,aAAaC,QAAQ,uBAAuBhP,KACrE,SAAC2lB,GAAD,OAAQA,EAAG7nB,QAEb,EAAwC0C,mBAAS,CAACklB,EAAU,KAA5D,mBAAOrN,EAAP,KAAqBC,EAArB,KAEA,EAAsC9X,mBARrB,WAAiC,IAAhC+3B,EAA+B,uDAAvBF,EACxB,OAAOE,EAAMv4B,KAAI,SAAC+a,GAAD,OAAUA,EAAKjd,QAOaw6B,IAA/C,mBAAOE,EAAP,KAOA,GAPA,KAGEhc,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBjJ,OAAS,IAC3DsS,EAAatS,OACXyW,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBjJ,QAEpBvF,mBAAS,OAA3C,mBAAOu8B,EAAP,KAAkBC,EAAlB,KAEA,EAAwBx8B,mBAAS,QAAjC,mBAAOib,EAAP,KAAawhB,EAAb,KAEA,EAA4Bz8B,mBAAS,QAArC,mBAAO08B,EAAP,KAAeC,EAAf,KAEA,EAAwD38B,oBAAS,GAAjE,mBAAO0b,EAAP,KAA6BC,EAA7B,KAEA,EAA4C3b,mBAAS,IAArD,mBAAO48B,EAAP,KAAuBC,EAAvB,KACA,EAAwC78B,mBAAS,IAAjD,mBAAOoZ,EAAP,KAAqBC,EAArB,KAEMyjB,EAAmB,SAACpX,EAAUE,GAClC,IAAImX,EAAQ,IAAIruB,KAChBquB,EAAMtqB,SAAS,EAAG,EAAG,EAAG,GAGxBrH,GAAyB,GACzB+jB,GAAmB,GACnBle,IACGoJ,KACC/d,EAAa,kBACb,CACEopB,SAAUA,EAAS/W,UACnBiX,OAAQA,EAAOjX,UACfouB,MAAOA,EAAMpuB,UACbopB,MAAOlgB,EACP0kB,UAAWA,GAEb,CACEprB,QAAS,CAAEC,SAAU7C,aAAaC,QAAQ,gBAG7CgD,MAAK,SAACC,GAGLorB,EAAkBprB,EAASpU,MAGzBgc,EADW,SAAT4B,EAEAxJ,EAASpU,KAAK4d,MAAK,SAACC,EAAGC,GACrB,OAAO6hB,WAAW7hB,EAAE6gB,SAAWgB,WAAW9hB,EAAE8gB,YAK9CvqB,EAASpU,KAAK4d,MAAK,SAACC,EAAGC,GACrB,OAAO6hB,WAAW9hB,EAAE8gB,SAAWgB,WAAW7hB,EAAE6gB,aAIlD5wB,GAAyB,GACzB+jB,GAAmB,MAEpB9c,OAAM,SAACF,GAAW,IAAD,EACgB,OAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOV,gBAAP,eAAiBpF,SACnBgC,IAEFjD,GAAyB,GACzB+jB,GAAmB,OAoCnB8N,GAAe,SAACtgC,GACpB,OAAQA,GACN,IAAK,OAcL,QACE0c,GAAgB,SAACnY,GAAD,OACdA,EAAU+Z,MACR,SAACC,EAAGC,GAAJ,OAAU6hB,WAAW7hB,EAAE6gB,SAAWgB,WAAW9hB,EAAE8gB,qBAVrD,IAAK,MACH3iB,GAAgB,SAACnY,GAAD,OACdA,EAAU+Z,MACR,SAACC,EAAGC,GAAJ,OAAU6hB,WAAW9hB,EAAE8gB,SAAWgB,WAAW7hB,EAAE6gB,iBAoDzD,GAAgCh8B,oBAAS,IAAI0O,MAAOC,WAApD,qBAAiBE,IAAjB,aAEA,GAAwC7O,mBAAS,IAAI0O,MAArD,qBAAOhC,GAAP,MACA,IADA,MACoD1M,oBAAS,IAA7D,qBACA,IADA,YAEEA,oBAAS,IADX,qBAAOsQ,GAAP,MAAmCC,GAAnC,MAGA,GAAsCvQ,oBAAS,GAA/C,qBAqBM2Q,IArBN,YAqBoC,WAClCJ,IAA8B,KAWhCvL,qBAAU,WACR6J,GAAYnC,GAAaiC,aACxB,CAACjC,KAEJ,IAAMoY,GAAc,SAACzQ,GACnB,IAAI0Q,EAAU,IAAIrW,KAAK2F,EAAK1F,WAE5B,OADAoW,EAAQtS,SAAS,EAAG,EAAG,EAAG,GACnBsS,GAGHC,GAAY,SAAC3Q,GACjB,IAAI0Q,EAAU,IAAIrW,KAAK2F,EAAK1F,WAE5B,OADAoW,EAAQtS,SAAS,GAAI,GAAI,GAAI,KACtBsS,GAGT,GAAgC/kB,oBAAS,WACvC,IAAIqU,EAAO,IAAI3F,KACf,OAAOoW,GAAYzQ,MAFrB,qBAAOqR,GAAP,MAAiBC,GAAjB,MAKA,GAA4B3lB,oBAAS,WACnC,IAAIqU,EAAO,IAAI3F,KACf,OAAOsW,GAAU3Q,MAFnB,qBAAOuR,GAAP,MAAeC,GAAf,MAoBA,GAA4B7lB,mBAAS,GAArC,qBACA,IADA,YACkCA,wBAASgN,IAA3C,iCA4CAhI,qBAAU,cAEP,IAmBH,OACE,uBAAKtH,MAAO,CAAE8K,UAAW,OAAQjK,MAAO,QAAxC,UACE,eAAC+H,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,SAAS0I,QAAQ,gBAA5C,SACE,eAACN,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACL,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,WAA3B,UACE,eAACoI,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEgJ,YAAa,QAAjC,SACE,eAAC01B,GAAD,CACE78B,MAAM,QACN+2B,MAAO0B,EACPzB,cAAe1e,EACf2e,aAxPW,SAAC7hB,GAiBxB,IAAIhY,EAAQgY,EAAMC,OAAOjY,MACO,QAA5BA,EAAMA,EAAM4I,OAAS,GAMzBuS,EAAgBnb,GALdmb,EACED,EAAatS,SAAWyyB,EAAYzyB,OAAS,GAAKyyB,QA6P9C,eAAC1xB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEgJ,YAAa,QAAjC,SACE,gBAAC,KAAD,CAAyBwG,MAAOC,IAAhC,UACE,eAAC,KAAD,CACE6c,QAAQ,EACRC,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,0BACHzK,MAAM,OACN5C,MAAO+oB,GACPpY,SA9Ha,SAAC+G,GAC5BsR,GAAYb,GAAYzQ,KA8HV6V,oBAAqB,CACnB,eAAgB,aAElBxsB,MAAO,CAAEgJ,YAAa,QACtBZ,UAAW9B,EAAQqtB,UACnB6L,WAAY,CACVx/B,MAAO,CACLsD,SAAU,YAKhB,eAAC,KAAD,CACEgpB,QAAQ,EACRC,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,wBACHzK,MAAM,KACN5C,MAAOipB,GACPtY,SA9IW,SAAC+G,GAC1BwR,GAAUb,GAAU3Q,KA8IN6V,oBAAqB,CACnB,aAAc,WAEhBpkB,UAAW9B,EAAQqtB,UACnB6L,WAAY,CACVx/B,MAAO,CACLsD,SAAU,iBAMpB,eAACsF,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEgJ,YAAa,WAAjC,SACE,gBAAC+N,EAAA,EAAD,CAAa3O,UAAW9B,EAAQq4B,iBAAhC,UACE,eAACjT,GAAA,EAAD,CAAYpf,GAAG,yBAAf,uBACA,eAAC0K,EAAA,EAAD,CACEkH,QAAQ,yBACR5R,GAAG,mBACHrN,MAAO4/B,EACPjvB,SAzUc,SAACqH,GAC7B6nB,EAAa7nB,EAAMC,OAAOjY,QAyUZe,MAAO,CAAEsD,SAAU,SALrB,SAOE,eAAC6T,EAAA,EAAD,CAAUlY,MAAO,KAAjB,SACE,sDAMR,eAAC2J,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACsa,EAAA,EAAD,CACEnc,KAAK,QACL/D,MAAM,UACN1C,QAAQ,WACR4C,QAzGa,WACzB67B,EAAiBpX,GAAUE,KAyGf+E,SAAUuE,EALZ,SAOGA,EAAkB,UAAY,WAGnC,eAAC5oB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAW7B,YAAa,QAAxD,SACE,gBAAC+N,EAAA,EAAD,CAAa3O,UAAW9B,EAAQq4B,iBAAhC,UACE,eAACjT,GAAA,EAAD,CAAYpf,GAAG,sBAAf,oBACA,gBAAC0K,EAAA,EAAD,CACEkH,QAAQ,sBACR5R,GAAG,gBACHrN,MAAO+/B,EACPpvB,SAtSW,SAACqH,GAC1B,IAAIhY,EAAQgY,EAAMC,OAAOjY,MAEzB,OAAQA,GACN,IAAK,MAEH0c,GAAgB,SAACnY,GACf,OAAO07B,EAAeF,QACpB,SAACpgB,GAAD,OAAa/e,OAAO+e,EAAQ0f,SAAWz+B,OAAO+e,EAAQ2f,gBAG1D,MACF,IAAK,OAEH5iB,GAAgB,SAACnY,GACf,OAAO07B,EAAeF,QACpB,SAACpgB,GAAD,OAAa/e,OAAO+e,EAAQ0f,UAAYz+B,OAAO+e,EAAQ2f,gBAG3D,MACF,QACEa,EAAiBpX,GAAUE,IAG/BqX,GAAatgC,GAEbggC,EAAUhgC,IA6QIe,MAAO,CAAEsD,SAAU,SALrB,UAOE,eAAC6T,EAAA,EAAD,CAAUlY,MAAO,OAAjB,SACE,iDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,MAAjB,SACE,gDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,OAAjB,SACE,yDAKR,eAAC2J,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEgJ,YAAa,QAAjC,SACE,gBAAC+N,EAAA,EAAD,CAAa3O,UAAW9B,EAAQq4B,iBAAhC,UACE,eAACjT,GAAA,EAAD,CAAYpf,GAAG,oBAAf,kBACA,gBAAC0K,EAAA,EAAD,CACEkH,QAAQ,oBACR5R,GAAG,cACHrN,MAAOse,EACP3N,SAlUS,SAACqH,GACxB,IAAIhY,EAAQgY,EAAMC,OAAOjY,MACzBsgC,GAAatgC,GACb8/B,EAAQ9/B,IAgUMe,MAAO,CAAEsD,SAAU,SALrB,UAOE,eAAC6T,EAAA,EAAD,CAAUlY,MAAO,OAAjB,SACE,iDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,MAAjB,SACE,+DA2Ed,eAAC2J,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,UAApC,SACE,gBAAChL,EAAA,EAAD,CACEC,UAAW,EACXC,MAAO,CACLa,MAAO,OACPR,OAAQ,QACRyK,UAAW,OACX7K,WAAY,QACZC,cAAe,UAPnB,UAUE,eAAC0I,EAAA,EAAD,CACEC,WAAS,EACTK,QAAQ,WACR1I,WAAW,SACXR,MAAO,CAAEqP,cAAe,OAAQjC,aAAc,SAJhD,SAME,gBAACxE,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,4CACA,eAAC4V,GAAA,EAAD,CACEC,QAASd,EACTpO,SAAU,kBACRqO,GAAwB,SAACza,GAAD,OAAgBA,MAE1CH,MAAM,UACNzD,KAAK,sBAIX,eAAC,GAAD,CACEwY,UAAWsD,EACX3D,aAAciG,EACd7C,SAAUhB,SAKhB,sBAAKna,MAAO,CAAE+f,YAAa,YAE3B,eAAC3I,EAAA,EAAD,CACEnJ,KAAM2E,GACNyE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,iBAAkB,IAClB7H,QAASsD,GAPX,SASE,eAAC,GAAD,CAAOtD,QAASsD,GAA6B/E,SAAS,UAAtD,8BAKF,sBAAKlO,MAAO,CAAEoN,aAAc,eC1oBlC,IAAMgxB,GAAe,SAACruB,GACpB,IAAQ5M,EAAY4M,EAAZ5M,QAER,OACE,sBAAKnD,MAAO,CAACmN,UAAW,SAAUrC,UAAW,MAAO3K,YAAa,QAAjE,SAEIgD,EAAQrB,KAAI,SAACC,EAAO7C,GAElB,OAAQ,uBAA4Bc,MAAO,CAACqD,MAAO,WAA3C,4CAAmBnE,UAS/BugC,GAAgB,SAACxgC,GACrB,IAAI0X,EAAO,IAAI3F,KAAa,IAAR/R,GACpB,OAAOyE,OAAOiT,EAAKsG,YAAYrG,SAAS,EAAG,GAAK,IAAMlT,OAAOiT,EAAKuG,cAActG,SAAS,EAAG,IAK/E,SAAS8oB,GAAT,GAA4D,IAA5BtnB,EAA2B,EAA3BA,UAAWL,EAAgB,EAAhBA,aAoBlDM,EAAgB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQnV,EAAqB,EAArBA,QAAqB,EAAZtB,MACxC,OAAIyW,GAAUnV,EAEV,+BAGE,kDAAgBA,EAAQ,GAAGA,QAAQw8B,MAAnC,SAAkF,OAAjCx8B,EAAQ,GAAGA,QAAQyL,UAAnB,gBAAiD6wB,GAAct8B,EAAQ,GAAGA,QAAQyL,YAAe,QAKjJ,MAOT,EAA8CtM,mBAAS,GAAvD,mBAAOmW,EAAP,KAAwBC,EAAxB,KAQA,OANApR,qBAAU,YACa,IAAjByQ,GACFW,EAAmB,KAEpB,CAACX,KAEoB,IAAjBA,EACL,eAACnV,GAAA,EAAD,CAAqB5C,MAAO,CAAEK,OAAQ,QAAtC,SACE,gBAACO,EAAA,EAAD,CACEjB,KAAMyY,EACNtX,OAAQ,CACN6X,IAAK,EACL5X,MAAO,GAEP6X,OAAQ,GANZ,UASE,eAACpX,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,eAACR,GAAA,EAAD,CAAOC,QAAQ,WAAWoC,SAAU,GAAInB,SAAU,EAAG2B,OAAO,UAC5D,eAACxC,GAAA,EAAD,CAAOC,OAAQ,CAAC,EAAG,SAAA5B,GAAI,OAAI2b,KAAKC,KAAK5b,OACrC,eAACqD,GAAA,EAAD,CAASE,QAAS,eAACmV,EAAD,MAGlB,eAACS,GAAA,EAAD,CACEC,SAAU,GACVnJ,SAAU,SAACoJ,GAAD,OAASN,EAAmBM,EAAIC,aAC1C/X,QAAQ,WACRb,OAAQ,GACRyD,OAAO,UACP+U,cAAe,iBAAM,MAGvB,eAAC5V,GAAA,EAAD,CAAQo7B,aAAc,CACtBp+B,WAAY,QAGZiD,QAASk7B,GAETx4B,MAAM,SAIN,gBAAClE,GAAA,EAAD,CAAKC,mBAAmB,EAAOT,QAAQ,OAAvC,UACE,eAACgY,GAAA,EAAD,CACEhY,QAAQ,OACRiY,SAAS,SACTna,KAAK,OACL02B,MAAM,QArFS,WACvB,IAAIkK,EAAQ,GAIZ,GAAIxnB,GAAaA,EAAUvQ,OAAS,EAGlC,IAFA,IAAIg4B,EAAYznB,EAAUvQ,OAAS,GAAK,GAAKuQ,EAAUvQ,OAAS,EAEvDD,EAAI6Q,EAAiB7Q,GAAK6Q,EAAkBonB,EAAWj4B,IAC9Dg4B,EAAM73B,KAAK,eAAC/F,GAAA,EAAD,CAAyBhD,KAAMoZ,EAAUxQ,GAAGvE,OAA5C,eAAmBuE,KAIlC,OAAOg4B,EA2EAE,WAKP,eAACl9B,GAAA,EAAD,UACE,gBAAChC,EAAA,EAAD,CACEjB,KAAMyY,EACNtX,OAAQ,CACN6X,IAAK,EACL5X,MAAO,GACPM,KAAM,EACNuX,OAAQ,GAEV4lB,eAAgB,KAChBC,OAAQ,EATV,UAWE,eAACj9B,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,eAACR,GAAA,EAAD,CAAOC,QAAQ,WACbw0B,MAAO,IACPC,WAAY,GAAIryB,SAAU,GAAInB,SAAU,EAAG2B,OAAO,UACpD,eAACxC,GAAA,EAAD,CAAOC,OAAQ,CAAC,EAAG,SAAA5B,GAAI,OAAI2b,KAAKC,KAAK5b,OACrC,eAACqD,GAAA,EAAD,CAASE,QAAS,eAACmV,EAAD,MAGlB,eAACpV,GAAA,EAAD,CAAQo7B,aAAc,CACtBp+B,WAAY,QAGZiD,QAASk7B,KACT,gBAAC18B,GAAA,EAAD,CAAKC,mBAAmB,EAAOT,QAAQ,OAAvC,UACE,eAACgY,GAAA,EAAD,CACEhY,QAAQ,OACRiY,SAAS,SACTna,KAAK,OACL02B,MAAM,MACNpyB,SAAU,KAGX8U,EAAUtW,KAAI,SAACuX,EAAOna,GAMnB,OAAO,eAAC8C,GAAA,EAAD,CAA4BhD,KAAMqa,EAAMhW,OAAxC,eAAmBnE,eChKxC,IAAMk/B,GAAe,SAACruB,GACpB,IAAQ5M,EAAY4M,EAAZ5M,QAER,OACE,sBAAKnD,MAAO,CAAEmN,UAAW,SAAUrC,UAAW,MAAO3K,YAAa,QAAlE,SACGgD,EAAQrB,KAAI,SAACC,EAAO7C,GACnB,OACE,uBAA4Bc,MAAO,CAAEqD,MAAO,WAA5C,4CAAmBnE,UASvBugC,GAAgB,SAACxgC,GACrB,IAAI0X,EAAO,IAAI3F,KAAa,IAAR/R,GACpB,OACEyE,OAAOiT,EAAKsG,YAAYrG,SAAS,EAAG,GACpC,IACAlT,OAAOiT,EAAKuG,cAActG,SAAS,EAAG,IAI3B,SAAS8oB,GAAT,GAA4D,IAA5BtnB,EAA2B,EAA3BA,UAAWL,EAAgB,EAAhBA,aAmBlDM,EAAgB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQnV,EAAqB,EAArBA,QAAqB,EAAZtB,MACxC,OAAIyW,GAAUnV,EAEV,+BAGE,kDACYA,EAAQ,GAAGA,QAAQw8B,MAD/B,SAEoC,OAAjCx8B,EAAQ,GAAGA,QAAQyL,UAAnB,gBACY6wB,GAAct8B,EAAQ,GAAGA,QAAQyL,YAC1C,QAML,MAOT,EAA8CtM,mBAAS,GAAvD,mBAAOmW,EAAP,KAAwBC,EAAxB,KAQA,OANApR,qBAAU,YACa,IAAjByQ,GACFW,EAAmB,KAEpB,CAACX,KAEoB,IAAjBA,EACL,eAACnV,GAAA,EAAD,CAAqB5C,MAAO,CAAEK,OAAQ,QAAtC,SACE,gBAACO,EAAA,EAAD,CACEjB,KAAMyY,EACNtX,OAAQ,CACN6X,IAAK,EACL5X,MAAO,GAEP6X,OAAQ,GANZ,UASE,eAACpX,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,eAACR,GAAA,EAAD,CAAOC,QAAQ,WAAWoC,SAAU,GAAInB,SAAU,EAAG2B,OAAO,UAC5D,eAACxC,GAAA,EAAD,CAAOC,OAAQ,CAAC,EAAG,SAAC5B,GAAD,OAAU2b,KAAKC,KAAK5b,OACvC,eAACqD,GAAA,EAAD,CAASE,QAAS,eAACmV,EAAD,MAGlB,eAACS,GAAA,EAAD,CACEC,SAAU,GACVnJ,SAAU,SAACoJ,GAAD,OAASN,EAAmBM,EAAIC,aAC1C/X,QAAQ,WACRb,OAAQ,GACRyD,OAAO,UACP+U,cAAe,iBAAM,MAEvB,eAAC5V,GAAA,EAAD,CACEo7B,aAAc,CACZp+B,WAAY,QAGdiD,QAASk7B,GACTx4B,MAAM,SAGR,gBAAClE,GAAA,EAAD,CAAKC,mBAAmB,EAAOT,QAAQ,OAAvC,UACE,eAACgY,GAAA,EAAD,CACEhY,QAAQ,OACRiY,SAAS,SACTna,KAAK,OACL02B,MAAM,QAxFS,WACvB,IAAIkK,EAAQ,GAIZ,GAAIxnB,GAAaA,EAAUvQ,OAAS,EAGlC,IAFA,IAAIg4B,EAAYznB,EAAUvQ,OAAS,GAAK,GAAKuQ,EAAUvQ,OAAS,EAEvDD,EAAI6Q,EAAiB7Q,GAAK6Q,EAAkBonB,EAAWj4B,IAC9Dg4B,EAAM73B,KAAK,eAAC/F,GAAA,EAAD,CAAwBhD,KAAMoZ,EAAUxQ,GAAGvE,OAA3C,eAAmBuE,KAIlC,OAAOg4B,EA8EAE,WAKP,eAACl9B,GAAA,EAAD,UACE,gBAAChC,EAAA,EAAD,CACEjB,KAAMyY,EACNtX,OAAQ,CACN6X,IAAK,EACL5X,MAAO,GACPM,KAAM,EACNuX,OAAQ,GAEV4lB,eAAgB,KAChBC,OAAQ,EATV,UAWE,eAACj9B,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,eAACR,GAAA,EAAD,CACEC,QAAQ,WACRw0B,MAAO,IACPC,WAAY,GACZryB,SAAU,GACVnB,SAAU,EACV2B,OAAO,UAET,eAACxC,GAAA,EAAD,CAAOC,OAAQ,CAAC,EAAG,SAAC5B,GAAD,OAAU2b,KAAKC,KAAK5b,OACvC,eAACqD,GAAA,EAAD,CAASE,QAAS,eAACmV,EAAD,MAGlB,eAACpV,GAAA,EAAD,CACEo7B,aAAc,CACZp+B,WAAY,QAGdiD,QAASk7B,KAEX,gBAAC18B,GAAA,EAAD,CAAKC,mBAAmB,EAAOT,QAAQ,OAAvC,UACE,eAACgY,GAAA,EAAD,CACEhY,QAAQ,OACRiY,SAAS,SACTna,KAAK,OACL02B,MAAM,MACNpyB,SAAU,KAGX8U,EAAUtW,KAAI,SAACuX,EAAOna,GAMrB,OAAO,eAAC8C,GAAA,EAAD,CAA4BhD,KAAMqa,EAAMhW,OAAxC,eAAmBnE,eC/KtC,IAAMiG,GAAYC,aAAW,SAACd,GAAD,MAAY,CACrC0L,KAAM,CACJC,SAAU,GAEZ0jB,UAAW,CACT9yB,MAAO,KAETkZ,UAAW,CACTzU,UAAW,KAEbq5B,iBAAkB,GAGlBvF,aAAc,CACZ91B,SAAU,aAIC,SAASy8B,GAAT,GAA+E,IAA7CC,EAA4C,EAA5CA,mBAAoB7kB,EAAwB,EAAxBA,SAAU8kB,EAAc,EAAdA,YACvE35B,EAAUnB,KAyFhB,EAAwC7C,qBAAxC,mBAAOoZ,EAAP,KAAqBC,EAArB,KAEArU,qBAAU,WACF04B,GACArkB,EArDY,SAAChc,GACjB,IAAIugC,EAAmB,GACnBC,EAAc,KAClBxgC,EAAKmlB,SAAQ,SAAClG,EAAS1f,GACT,IAAVA,IACAihC,EAActgC,OAAO+e,EAAQ+gB,OAE7B9/B,OAAO+e,EAAQ+gB,OAASQ,IACxBA,EAActgC,OAAO+e,EAAQ+gB,MAC7BO,EAAiBhhC,GAASA,MAM9B,IAAIkhC,EAAkB,GAClBC,EAAa,KA8Bf,OA7BF1gC,EAAKmlB,SAAQ,SAAClG,EAAS1f,GACT,IAAVA,IACAmhC,EAAaxgC,OAAO+e,EAAQ+gB,OAE5B9/B,OAAO+e,EAAQ+gB,MAAQU,IACvBA,EAAaxgC,OAAO+e,EAAQ+gB,UAIhChgC,EAAKmlB,SAAQ,SAAClG,EAAS1f,GACfW,OAAO+e,EAAQ+gB,QAAUU,IACzBD,EAAgBlhC,GAASA,MAQZS,EAAKmC,KAAI,SAAC8c,EAAS1f,GACpC,OAAIA,IAAUghC,EAAiBhhC,GACtB,2BAAK0f,GAAZ,IAAqBvb,MAAO,YACnBnE,IAAUkhC,EAAgBlhC,GAC5B,2BAAK0f,GAAZ,IAAqBvb,MAAO,YAErB,2BAAKub,GAAZ,IAAqBvb,MAAO,eAWdi9B,CAAYN,MAEjC,CAACA,IAEJ,MAAwD19B,oBAAS,GAAjE,mBAAO0b,EAAP,KAA6BC,EAA7B,KAEA,EAAwB3b,mBAAS,OAAjC,mBAAOib,EAAP,KAAawhB,EAAb,KAQQQ,EAAe,SAACtgC,GACpB,OAAQA,GACN,IAAK,OAQL,QACE0c,GAAgB,SAAAnY,GAAS,OACvBA,EAAU+Z,MAAK,SAACC,EAAGC,GAAJ,OAAU6hB,WAAW7hB,EAAEkiB,MAAQL,WAAW9hB,EAAEmiB,kBAN/D,IAAK,MACHhkB,GAAgB,SAAAnY,GAAS,OACvBA,EAAU+Z,MAAK,SAACC,EAAGC,GAAJ,OAAU6hB,WAAW9hB,EAAEmiB,MAAQL,WAAW7hB,EAAEkiB,cAQrE,OACI,gBAAC7/B,EAAA,EAAD,CACAC,UAAW,EACXC,MAAO,CACLa,MAAO,OACPR,OAAQ,QACRyK,UAAW,OACX7K,WAAY,QACZC,cAAe,UAPjB,UAUA,gBAAC0I,EAAA,EAAD,CACEC,WAAS,EACTK,QAAQ,gBACR1I,WAAW,SACXR,MAAO,CAAEqP,cAAe,OAAQjC,aAAc,SAJhD,UAMI,eAACxE,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,eAACvI,EAAA,EAAD,CAAY2C,MAAM,gBAAgB1C,QAAQ,KAA1C,SAAgDwa,MAGtD,eAACvS,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,gBAACL,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,SAA3B,UACI,gBAACoI,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAACgJ,YAAa,QAAhC,UACA,4CACN,eAAC6V,GAAA,EAAD,CACEC,QAASd,EACTpO,SAAU,kBACRqO,GAAwB,SAACza,GAAD,OAAgBA,MAE1CH,MAAM,UACNzD,KAAK,oBAKT,eAACgJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,gBAACL,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,SAAS2P,QAAS,EAA7C,UACI,eAACvH,EAAA,EAAD,CAAMK,MAAI,EAAV,SACA,6CAEA,eAACL,EAAA,EAAD,CAAMK,MAAI,EAAV,SACA,eAAC8N,EAAA,EAAD,CAAa3O,UAAW9B,EAAQq4B,iBAAhC,SAGF,gBAAC3nB,EAAA,EAAD,CACEkH,QAAQ,oBACR5R,GAAG,cACHrN,MAAOse,EACP3N,SAvEW,SAACqH,GACtB,IAAIhY,EAAQgY,EAAMC,OAAOjY,MACzBsgC,EAAatgC,GACb8/B,EAAQ9/B,IAqEEe,MAAO,CAACsD,SAAU,QALpB,UAOE,eAAC6T,EAAA,EAAD,CAAUlY,MAAO,OAAjB,SACE,iDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,MAAjB,SACE,oEAaXyc,IAAiBukB,EAAc,eAACP,GAAD,CAC9BtnB,UAAWsD,EACX3D,aAAciG,EACd7C,SAAUA,IACP,eAAC,GAAD,CACL/C,UAAWsD,EACX3D,aAAciG,EACd7C,SAAUA,QCnLlB,SAASrL,GAAMC,GACb,OAAO,eAAC,IAAD,aAAUhQ,UAAW,EAAGY,QAAQ,UAAaoP,IAGtD,IAAM5K,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvC0L,KAAM,CACJC,SAAU,GAEZ0jB,UAAW,CACT9yB,MAAO,KAETkZ,UAAW,CACTzU,UAAW,KAEbq5B,iBAAkB,GAClBvF,aAAc,CACZ91B,SAAU,aAIC,SAASi9B,GAAT,GAAkD,EAAvB5vB,oBAAwB,IAC1DrK,EAAUnB,KAERuI,EAA6Ba,KAA7Bb,yBACR,EAA8CpL,oBAAS,GAAvD,mBAAOkvB,EAAP,KAAwBC,EAAxB,KACA,EAAgDnvB,oBAAS,GAAzD,mBAAOk+B,EAAP,KAAyBC,EAAzB,KAGIjZ,GADc3W,aAAaC,QAAQ,aACvBwN,KAAKC,MAAM1N,aAAaC,QAAQ,uBAAuBhP,KACrE,SAAC2lB,GAAD,OAAQA,EAAG7nB,SAEb,EAAwC0C,mBAAS,CAACklB,EAAU,KAA5D,mBAAOrN,EAAP,KAAqBC,EAArB,KAEM2e,EACJza,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBjJ,OAAS,GAC3DsS,EAAatS,SACXyW,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBjJ,OAEtD,EAAkCvF,mBAAS,MAA3C,mBAEA,GAFA,UAEwBA,mBAAS,QAAjC,mBAEA,GAFA,UAE4BA,mBAAS,SAArC,mBAEA,GAFA,UAEwDA,oBAAS,IAAjE,mBAEA,GAFA,UAE4CA,mBAAS,KAArD,mBAAO48B,EAAP,KAAuBC,EAAvB,KACA,EAAwC78B,mBAAS,IAAjD,mBAEA,GAFA,UAEoCA,mBAAS,OAA7C,mBA8DA,GA9DA,UA8DsCA,oBAAS,IAA/C,mBAAO29B,EAAP,KAAoBS,EAApB,KAEMtB,EAAmB,SAACpX,EAAUE,GAGlCuJ,GAAmB,GACnB/jB,GAAyB,GAEzB,IAAIsf,EAAehF,EAAS/W,UACxB0vB,EAAazY,EAAOjX,UAEpB2vB,EAAM1Y,EAAOxR,UAAYsR,EAAStR,UACtCgqB,GAAe,SAACl9B,GAAD,OAAuB,IAARo9B,KAE9BrtB,IACGoJ,KACC/d,EAAa,aACb,CACEwU,UAAW4Z,EACX3Z,QAASstB,EACT9jB,KAAM1C,GAER,CACE1G,QAAS,CAAEC,SAAU7C,aAAaC,QAAQ,gBAG7CgD,MAAK,SAACC,GAGLorB,EAAkBprB,EAASpU,MAe3B8xB,GAAmB,GACnB/jB,GAAyB,MAE1BiH,OAAM,WACL8c,GAAmB,GACnB/jB,GAAyB,OAmE/B,EAAgCpL,oBAAS,IAAI0O,MAAOC,WAApD,mBAAiBE,IAAjB,WAEA,GAAwC7O,mBAAS,IAAI0O,MAArD,qBAAOhC,GAAP,MACA,IADA,MACoD1M,oBAAS,IAA7D,qBACA,IADA,YAEEA,oBAAS,IADX,qBAAOsQ,GAAP,MAAmCC,GAAnC,MAGA,GAAsCvQ,oBAAS,GAA/C,qBAqBM2Q,IArBN,YAqBoC,WAClCJ,IAA8B,KAWhCvL,qBAAU,WACR6J,GAAYnC,GAAaiC,aACxB,CAACjC,KAEJ,IAAMoY,GAAc,SAACzQ,GACnB,IAAI0Q,EAAU,IAAIrW,KAAK2F,EAAK1F,WAE5B,OADAoW,EAAQtS,SAAS,EAAG,EAAG,EAAG,GACnBsS,GAGHC,GAAY,SAAC3Q,GACjB,IAAI0Q,EAAU,IAAIrW,KAAK2F,EAAK1F,WAE5B,OADAoW,EAAQtS,SAAS,GAAI,GAAI,GAAI,KACtBsS,GAGT,GAAgC/kB,oBAAS,WACvC,IAAIqU,EAAO,IAAI3F,KACf,OAAOoW,GAAYzQ,MAFrB,qBAAOqR,GAAP,MAAiBC,GAAjB,MAKA,GAA4B3lB,oBAAS,WACnC,IAAIqU,EAAO,IAAI3F,KACf,OAAOsW,GAAU3Q,MAFnB,qBAAOuR,GAAP,MAAeC,GAAf,MAoBA,GAA4B7lB,mBAAS,GAArC,qBACA,IADA,YACkCA,wBAASgN,IAA3C,iCA4CAhI,qBAAU,cAEP,IAEH,IAiBA,GAAgChF,mBAAS,CACvC2L,MAAM,EACNC,SAAU,UACVC,QAAS,6BAHX,qBAAOC,GAAP,MAAiBC,GAAjB,MAMM+b,GAAsB,WAC1B/b,IAAY,SAAC7K,GACX,OAAO,2BAAKA,GAAZ,IAAuByK,MAAM,QAsDjC,OACE,uBAAKjO,MAAO,CAAE8K,UAAW,QAASjK,MAAO,QAAzC,UACE,eAAC+H,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,SAAS0I,QAAQ,gBAA5C,SACE,eAACN,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACL,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,WAA3B,UACE,gBAACoI,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEgJ,YAAa,QAAjC,UACE,gBAAC+N,EAAA,EAAD,CACE3O,UAAW9B,EAAQq4B,iBACnB3+B,MAAO,CACLqQ,SAAU,QACVsb,SAAU,QACV3iB,YAAa,QALjB,UAQE,eAAC0iB,GAAA,EAAD,CAAYpf,GAAG,oBAAf,mBACA,gBAAC0K,EAAA,EAAD,CACEhX,MAAO,CAAEsD,SAAU,SACnB4a,QAAQ,oBACR5R,GAAG,cACHrN,MAAOkb,EACPvK,SArZS,SAACqH,GACxB,IAAMhY,EAAQgY,EAAMC,OAAOjY,MAEK,QAA5BA,EAAMA,EAAM4I,OAAS,GAUzBuS,EAAgBnb,GATdmb,EACED,EAAatS,SACXyW,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBjJ,OAChD,GACAyW,KAAKC,MAAM1N,aAAaC,QAAQ,oBA8Y1B8a,UAAQ,EACRC,YAAa,SAAClsB,GAAD,OAAUA,EAAKosB,KAAK,OACjC5N,UAAW,CACT7X,QAAS,CAAE8X,MAAO9X,EAAQyT,WAC1BsE,mBAAoB,kBAAM,OAV9B,UAaE,gBAAClH,EAAA,EAAD,CACElY,MAAM,MACNqH,QAAS,CACPvB,KAAMg0B,EAAgBzyB,EAAQ2yB,YAAc,IAE9Cj5B,MAAO,CAAEgsB,aAAc,GALzB,UAOE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvB5kB,KAAK,QACL/D,MAAM,UACNiD,QAAS,CAAE4lB,cAAe5lB,EAAQ6yB,oBAClCra,QAASia,EACT7M,cACE/R,EAAatS,OAAS,GACtBsS,EAAatS,OACXyW,KAAKC,MAAM1N,aAAaC,QAAQ,kBAC7BjJ,WAIX,eAACskB,EAAA,EAAD,CAEE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAAQ,aACRpsB,MAAO,CAAEC,WAAY,eAGxBqe,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBhP,KACjD,SAAC8c,GACC,OACE,gBAACzH,EAAA,EAAD,CAEElY,MAAO2f,EACP5e,MAAO,CAAEgsB,aAAc,GAHzB,UAKE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvBlN,QAAS3E,EAAakS,QAAQzN,IAAY,EAC1CxX,KAAK,QACL/D,MAAM,cAGV,eAAC8oB,EAAA,EAAD,CACE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAASxN,EACT5e,MAAO,CAAEC,WAAY,cAflB2e,YAwBjB,gBAAC,KAAD,CAAyBpP,MAAOC,IAAhC,UAeE,eAAC,KAAD,CACE6c,QAAQ,EACRC,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,0BACHzK,MAAM,OACN5C,MAAO+oB,GACPpY,SA3Pa,SAAC+G,GAC5BsR,GAAYb,GAAYzQ,KA2PV6V,oBAAqB,CACnB,eAAgB,aAElBxsB,MAAO,CAAEgJ,YAAa,QACtBZ,UAAW9B,EAAQqtB,UACnB6L,WAAY,CACVx/B,MAAO,CACLsD,SAAU,YAKhB,eAAC,KAAD,CACEgpB,QAAQ,EACRC,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,wBACHzK,MAAM,KACN5C,MAAOipB,GACPtY,SA3QW,SAAC+G,GAC1BwR,GAAUb,GAAU3Q,KA2QN6V,oBAAqB,CACnB,aAAc,WAEhBpkB,UAAW9B,EAAQqtB,UACnB6L,WAAY,CACVx/B,MAAO,CACLsD,SAAU,kBAapB,eAACsF,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACsa,EAAA,EAAD,CACEnc,KAAK,QACL/D,MAAM,UACN1C,QAAQ,WACR4C,QA5Na,WACzB67B,EAAiBpX,GAAUE,KA4Nf+E,SAAUuE,EALZ,SAOGA,EAAkB,UAAY,WAGnC,eAAC5oB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC0Y,EAAA,EAAD,CACEnc,KAAK,QACL/D,MAAM,UACN1C,QAAQ,WACR4C,QAvNS,WACrBk9B,GAAoB,GAEpBltB,IACGoJ,KACC/d,EAAa,oBACb,CACEwU,UAAW4U,GAAS/W,UACpBoC,QAAS6U,GAAOjX,UAChB4L,KAAM1C,GAER,CACE1G,QAAS,CACPC,SAAU7C,aAAaC,QAAQ,aAC/B2Z,aAAc,UAInB3W,MAAK,SAACC,GACL,IAAM2W,EAAcpU,OAAOqU,IAAIC,gBAC7B,IAAIC,KAAK,CAAC9W,EAASpU,QAEfmrB,EAAO/e,SAASgf,cAAc,KACpCD,EAAKlF,KAAO8E,EAEZ,IAAIM,EAAQ,oBAAgBhD,GAAStR,UAAzB,YACVsR,GAASnR,WAAa,EADZ,YAERmR,GAASlR,cAFD,YAEkBoR,GAAOxR,UAFzB,YAGVwR,GAAOrR,WAAa,EAHV,YAIRqR,GAAOpR,cAJC,QAKZgU,EAAKG,aAAa,WAAYD,GAC9Bjf,SAASnH,KAAKsmB,YAAYJ,GAC1BA,EAAKK,QACLL,EAAKM,SAELqV,GAAoB,MAErB9rB,OAAM,SAACF,GACNpG,IAAY,SAAC7K,GACX,OAAO,2BACFA,GADL,IAEEyK,MAAM,EACNC,SAAU,QACVC,QAAS,wBAGbsyB,GAAoB,OA0KZxT,SAAUuT,EALZ,SAOGA,EAAmB,cAAgB,sBA4F9C,eAAC53B,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,UAApC,SACGo0B,EAAep9B,KAAI,SAAC8c,GAAD,OAClB,eAAC,GAAD,CACEzD,SAAUyD,EAAQ/B,KAClBmjB,mBAAoBphB,EAAQvD,UAC5B4kB,YAAaA,SAKnB,sBAAKjgC,MAAO,CAAE+f,YAAa,YAE3B,eAAC3I,EAAA,EAAD,CACEnJ,KAAM2E,GACNyE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,iBAAkB,IAClB7H,QAASsD,GAPX,SASE,eAAC,GAAD,CAAOtD,QAASsD,GAA6B/E,SAAS,UAAtD,8BAKF,eAACkJ,EAAA,EAAD,CACEnJ,KAAMG,GAASH,KACfuJ,iBAAkB,IAClB7H,QAASya,GACT/S,aAAc,CAAEE,WAAY,OAAQD,SAAU,UAJhD,SAME,eAAC,GAAD,CACE3H,QAASya,GACTlc,SAAUE,GAASF,SACnB2yB,GAAI,CAAEhgC,MAAO,QAHf,SAKGuN,GAASD,YAGd,sBAAKnO,MAAO,CAAEoN,aAAc,eCjwBlC,IAAMgxB,GAAe,SAACruB,GACpB,IAAQ5M,EAAY4M,EAAZ5M,QAER,OACE,sBAAKnD,MAAO,CAAEmN,UAAW,SAAUrC,UAAW,MAAO3K,YAAa,QAAlE,SACGgD,EAAQrB,KAAI,SAACC,EAAO7C,GACnB,OACE,uBAA4Bc,MAAO,CAAEqD,MAAO,WAA5C,4CAAmBnE,UASvBugC,GAAgB,SAACxgC,GACrB,IAAI0X,EAAO,IAAI3F,KAAa,IAAR/R,GACpB,OACEyE,OAAOiT,EAAKsG,YAAYrG,SAAS,EAAG,GACpC,IACAlT,OAAOiT,EAAKuG,cAActG,SAAS,EAAG,IAI3B,SAASkqB,GAAT,GAAsD,IAA5B1oB,EAA2B,EAA3BA,UAAWL,EAAgB,EAAhBA,aAqB5CM,EAAgB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQnV,EAAqB,EAArBA,QAAqB,EAAZtB,MACxC,OAAIyW,GAAUnV,EAEV,+BAGE,kDACYA,EAAQ,GAAGA,QAAQw8B,MAD/B,0BAEax8B,EAAQ,GAAGA,QAAQlE,OAFhC,SAGoC,OAAjCkE,EAAQ,GAAGA,QAAQyL,UAAnB,gBACY6wB,GAAct8B,EAAQ,GAAGA,QAAQyL,YAC1C,QAML,MAOT,EAA8CtM,mBAAS,GAAvD,mBAAOmW,EAAP,KAAwBC,EAAxB,KAQA,OANApR,qBAAU,YACa,IAAjByQ,GACFW,EAAmB,KAEpB,CAACX,KAEoB,IAAjBA,EACL,eAACnV,GAAA,EAAD,CAAqB5C,MAAO,CAAEK,OAAQ,QAAtC,SACE,gBAACO,EAAA,EAAD,CACEjB,KAAMyY,EACNtX,OAAQ,CACN6X,IAAK,EACL5X,MAAO,GAEP6X,OAAQ,GANZ,UASE,eAACpX,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,eAACR,GAAA,EAAD,CAAOC,QAAQ,WAAWoC,SAAU,GAAInB,SAAU,EAAG2B,OAAO,UAC5D,eAACxC,GAAA,EAAD,CAAOC,OAAQ,CAAC,EAAG,SAAC5B,GAAD,OAAU2b,KAAKC,KAAK5b,OACvC,eAACqD,GAAA,EAAD,CAASE,QAAS,eAACmV,EAAD,MAGlB,eAACS,GAAA,EAAD,CACEC,SAAU,GACVnJ,SAAU,SAACoJ,GAAD,OAASN,EAAmBM,EAAIC,aAC1C/X,QAAQ,WACRb,OAAQ,GACRyD,OAAO,UACP+U,cAAe,iBAAM,MAEvB,eAAC5V,GAAA,EAAD,CACEo7B,aAAc,CACZp+B,WAAY,QAGdiD,QAASk7B,GACTx4B,MAAM,SAGR,gBAAClE,GAAA,EAAD,CAAKC,mBAAmB,EAAOT,QAAQ,OAAvC,UACE,eAACgY,GAAA,EAAD,CACEhY,QAAQ,OACRiY,SAAS,SACTna,KAAK,OACL02B,MAAM,QAzFS,WACvB,IAAIkK,EAAQ,GAIZ,GAAIxnB,GAAaA,EAAUvQ,OAAS,EAGlC,IAFA,IAAIg4B,EAAYznB,EAAUvQ,OAAS,GAAK,GAAKuQ,EAAUvQ,OAAS,EAEvDD,EAAI6Q,EAAiB7Q,GAAK6Q,EAAkBonB,EAAWj4B,IAC9Dg4B,EAAM73B,KAAK,eAAC/F,GAAA,EAAD,CAAwBhD,KAAMoZ,EAAUxQ,GAAGvE,OAA3C,eAAmBuE,KAIlC,OAAOg4B,EA+EAE,WAKP,eAACl9B,GAAA,EAAD,UACE,gBAAChC,EAAA,EAAD,CACEjB,KAAMyY,EACNtX,OAAQ,CACN6X,IAAK,EACL5X,MAAO,GACPM,KAAM,EACNuX,OAAQ,GAEV4lB,eAAgB,KAChBC,OAAQ,EATV,UAWE,eAACj9B,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,eAACR,GAAA,EAAD,CACEC,QAAQ,WACRw0B,MAAO,IACPC,WAAY,GACZryB,SAAU,GACVnB,SAAU,EACV2B,OAAO,UAET,eAACxC,GAAA,EAAD,CAAOC,OAAQ,CAAC,EAAG,SAAC5B,GAAD,OAAU2b,KAAKC,KAAK5b,OACvC,eAACqD,GAAA,EAAD,CAASE,QAAS,eAACmV,EAAD,MAGlB,eAACpV,GAAA,EAAD,CACEo7B,aAAc,CACZp+B,WAAY,QAGdiD,QAASk7B,KAEX,gBAAC18B,GAAA,EAAD,CAAKC,mBAAmB,EAAOT,QAAQ,OAAvC,UACE,eAACgY,GAAA,EAAD,CACEhY,QAAQ,OACRiY,SAAS,SACTna,KAAK,OACL02B,MAAM,MACNpyB,SAAU,KAGX8U,EAAUtW,KAAI,SAACuX,EAAOna,GAMrB,OAAO,eAAC8C,GAAA,EAAD,CAA4BhD,KAAMqa,EAAMhW,OAAxC,eAAmBnE,eC5KtC,IAAMk/B,GAAe,SAACruB,GACpB,IAAQ5M,EAAY4M,EAAZ5M,QAER,OACE,sBAAKnD,MAAO,CAAEmN,UAAW,SAAUrC,UAAW,MAAO3K,YAAa,QAAlE,SACGgD,EAAQrB,KAAI,SAACC,EAAO7C,GACnB,OACE,uBAA4Bc,MAAO,CAAEqD,MAAO,WAA5C,4CAAmBnE,UASvBugC,GAAgB,SAACxgC,GACrB,IAAI0X,EAAO,IAAI3F,KAAa,IAAR/R,GACpB,OACEyE,OAAOiT,EAAKsG,YAAYrG,SAAS,EAAG,GACpC,IACAlT,OAAOiT,EAAKuG,cAActG,SAAS,EAAG,IAI3B,SAASmqB,GAAT,GAA4D,IAA5B3oB,EAA2B,EAA3BA,UAAWL,EAAgB,EAAhBA,aAmBlDM,EAAgB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQnV,EAAqB,EAArBA,QAAqB,EAAZtB,MACxC,OAAIyW,GAAUnV,EAEV,+BAGE,kDACYA,EAAQ,GAAGA,QAAQw8B,MAD/B,0BAEax8B,EAAQ,GAAGA,QAAQlE,OAFhC,SAGoC,OAAjCkE,EAAQ,GAAGA,QAAQyL,UAAnB,gBACY6wB,GAAct8B,EAAQ,GAAGA,QAAQyL,YAC1C,QAML,MAOT,EAA8CtM,mBAAS,GAAvD,mBAAOmW,EAAP,KAAwBC,EAAxB,KAQA,OANApR,qBAAU,YACa,IAAjByQ,GACFW,EAAmB,KAEpB,CAACX,KAEoB,IAAjBA,EACL,eAACnV,GAAA,EAAD,CAAqB5C,MAAO,CAAEK,OAAQ,QAAtC,SACE,gBAACO,EAAA,EAAD,CACEjB,KAAMyY,EACNtX,OAAQ,CACN6X,IAAK,EACL5X,MAAO,GAEP6X,OAAQ,GANZ,UASE,eAACpX,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,eAACR,GAAA,EAAD,CAAOC,QAAQ,WAAWoC,SAAU,GAAInB,SAAU,EAAG2B,OAAO,UAC5D,eAACxC,GAAA,EAAD,CAAOC,OAAQ,CAAC,EAAG,SAAC5B,GAAD,OAAU2b,KAAKC,KAAK5b,OACvC,eAACqD,GAAA,EAAD,CAASE,QAAS,eAACmV,EAAD,MAGlB,eAACS,GAAA,EAAD,CACEC,SAAU,GACVnJ,SAAU,SAACoJ,GAAD,OAASN,EAAmBM,EAAIC,aAC1C/X,QAAQ,WACRb,OAAQ,GACRyD,OAAO,UACP+U,cAAe,iBAAM,MAEvB,eAAC5V,GAAA,EAAD,CACEo7B,aAAc,CACZp+B,WAAY,QAGdiD,QAASk7B,GACTx4B,MAAM,SAGR,gBAAClE,GAAA,EAAD,CAAKC,mBAAmB,EAAOT,QAAQ,OAAvC,UACE,eAACgY,GAAA,EAAD,CACEhY,QAAQ,OACRiY,SAAS,SACTna,KAAK,OACL02B,MAAM,QAzFS,WACvB,IAAIkK,EAAQ,GAIZ,GAAIxnB,GAAaA,EAAUvQ,OAAS,EAGlC,IAFA,IAAIg4B,EAAYznB,EAAUvQ,OAAS,GAAK,GAAKuQ,EAAUvQ,OAAS,EAEvDD,EAAI6Q,EAAiB7Q,GAAK6Q,EAAkBonB,EAAWj4B,IAC9Dg4B,EAAM73B,KAAK,eAAC/F,GAAA,EAAD,CAAwBhD,KAAMoZ,EAAUxQ,GAAGvE,OAA3C,eAAmBuE,KAIlC,OAAOg4B,EA+EAE,WAKP,eAACl9B,GAAA,EAAD,UACE,gBAAChC,EAAA,EAAD,CACEjB,KAAMyY,EACNtX,OAAQ,CACN6X,IAAK,EACL5X,MAAO,GACPM,KAAM,EACNuX,OAAQ,GAEV4lB,eAAgB,KAChBC,OAAQ,EATV,UAWE,eAACj9B,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,eAACR,GAAA,EAAD,CACEC,QAAQ,WACRw0B,MAAO,IACPC,WAAY,GACZryB,SAAU,GACVnB,SAAU,EACV2B,OAAO,UAET,eAACxC,GAAA,EAAD,CAAOC,OAAQ,CAAC,EAAG,SAAC5B,GAAD,OAAU2b,KAAKC,KAAK5b,OACvC,eAACqD,GAAA,EAAD,CAASE,QAAS,eAACmV,EAAD,MAGlB,eAACpV,GAAA,EAAD,CACEo7B,aAAc,CACZp+B,WAAY,QAGdiD,QAASk7B,KAEX,gBAAC18B,GAAA,EAAD,CAAKC,mBAAmB,EAAOT,QAAQ,OAAvC,UACE,eAACgY,GAAA,EAAD,CACEhY,QAAQ,OACRiY,SAAS,SACTna,KAAK,OACL02B,MAAM,MACNpyB,SAAU,KAGX8U,EAAUtW,KAAI,SAACuX,EAAOna,GAMrB,OAAO,eAAC8C,GAAA,EAAD,CAA4BhD,KAAMqa,EAAMhW,OAAxC,eAAmBnE,eChLtC,IAAMiG,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvC0L,KAAM,CACJC,SAAU,GAEZ0jB,UAAW,CACT9yB,MAAO,KAETkZ,UAAW,CACTzU,UAAW,KAEbq5B,iBAAkB,GAClBvF,aAAc,CACZ91B,SAAU,aAIC,SAAS09B,GAAT,GAIX,IAHFhB,EAGC,EAHDA,mBACA7kB,EAEC,EAFDA,SACA8kB,EACC,EADDA,YAGM35B,EAAUnB,KAuFhB,EAAwC7C,qBAAxC,mBAAOoZ,EAAP,KAAqBC,EAArB,KAEArU,qBAAU,WACJ04B,GACFrkB,EAnDgB,SAAChc,GACnB,IAAIugC,EAAmB,GACnBC,EAAc,KAClBxgC,EAAKmlB,SAAQ,SAAClG,EAAS1f,GACP,IAAVA,IACFihC,EAActgC,OAAO+e,EAAQ+gB,OAE3B9/B,OAAO+e,EAAQ+gB,OAASQ,IAC1BA,EAActgC,OAAO+e,EAAQ+gB,MAC7BO,EAAiBhhC,GAASA,MAM9B,IAAIkhC,EAAkB,GAClBC,EAAa,KA4BjB,OA3BA1gC,EAAKmlB,SAAQ,SAAClG,EAAS1f,GACP,IAAVA,IACFmhC,EAAaxgC,OAAO+e,EAAQ+gB,OAE1B9/B,OAAO+e,EAAQ+gB,MAAQU,IACzBA,EAAaxgC,OAAO+e,EAAQ+gB,UAIhChgC,EAAKmlB,SAAQ,SAAClG,EAAS1f,GACjBW,OAAO+e,EAAQ+gB,QAAUU,IAC3BD,EAAgBlhC,GAASA,MAMRS,EAAKmC,KAAI,SAAC8c,EAAS1f,GACtC,OAAIA,IAAUghC,EAAiBhhC,GACtB,2BAAK0f,GAAZ,IAAqBvb,MAAO,YACnBnE,IAAUkhC,EAAgBlhC,GAC5B,2BAAK0f,GAAZ,IAAqBvb,MAAO,YAErB,2BAAKub,GAAZ,IAAqBvb,MAAO,eAWdi9B,CAAYN,MAE7B,CAACA,IAEJ,MAAwD19B,oBAAS,GAAjE,mBAAO0b,EAAP,KAA6BC,EAA7B,KAEA,EAAwB3b,mBAAS,OAAjC,mBAAOib,EAAP,KAAawhB,EAAb,KAQMQ,EAAe,SAACtgC,GACpB,OAAQA,GACN,IAAK,OAUL,QACE0c,GAAgB,SAACnY,GAAD,OACdA,EAAU+Z,MAAK,SAACC,EAAGC,GAAJ,OAAU6hB,WAAW7hB,EAAEkiB,MAAQL,WAAW9hB,EAAEmiB,kBAP/D,IAAK,MACHhkB,GAAgB,SAACnY,GAAD,OACdA,EAAU+Z,MAAK,SAACC,EAAGC,GAAJ,OAAU6hB,WAAW9hB,EAAEmiB,MAAQL,WAAW7hB,EAAEkiB,cAUnE,OACE,gBAAC7/B,EAAA,EAAD,CACEC,UAAW,EACXC,MAAO,CACLa,MAAO,OACPR,OAAQ,QACRyK,UAAW,OACX7K,WAAY,QACZC,cAAe,UAPnB,UAUE,gBAAC0I,EAAA,EAAD,CACEC,WAAS,EACTpI,eAAe,gBACfD,WAAW,SACXR,MAAO,CAAEqP,cAAe,OAAQjC,aAAc,SAJhD,UAME,eAACxE,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACvI,EAAA,EAAD,CAAY2C,MAAM,gBAAgB1C,QAAQ,KAA1C,SACGwa,MAIL,eAACvS,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACL,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,SAA3B,UACE,gBAACoI,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEgJ,YAAa,QAAjC,UACE,4CACA,eAAC6V,GAAA,EAAD,CACEC,QAASd,EACTpO,SAAU,kBACRqO,GAAwB,SAACza,GAAD,OAAgBA,MAE1CH,MAAM,UACNzD,KAAK,oBAIT,eAACgJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACL,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,SAAS2P,QAAS,EAA7C,UACE,eAACvH,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,6CAEF,eAACL,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC8N,EAAA,EAAD,CAAa3O,UAAW9B,EAAQq4B,iBAAhC,SAGE,gBAAC3nB,EAAA,EAAD,CACEkH,QAAQ,oBACR5R,GAAG,cACHrN,MAAOse,EACP3N,SA3EK,SAACqH,GACxB,IAAIhY,EAAQgY,EAAMC,OAAOjY,MACzBsgC,EAAatgC,GACb8/B,EAAQ9/B,IAyEUe,MAAO,CAAEsD,SAAU,QALrB,UAOE,eAAC6T,EAAA,EAAD,CAAUlY,MAAO,OAAjB,SACE,iDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,MAAjB,SACE,oEAUjByc,IACEukB,EACC,eAACa,GAAD,CACE1oB,UAAWsD,EACX3D,aAAciG,EACd7C,SAAUA,IAGZ,eAAC4lB,GAAD,CACE3oB,UAAWsD,EACX3D,aAAciG,EACd7C,SAAUA,QC3LtB,SAASrL,GAAMC,GACb,OAAO,eAAC,IAAD,aAAUhQ,UAAW,EAAGY,QAAQ,UAAaoP,IAGtD,IAAM5K,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvC0L,KAAM,CACJC,SAAU,GAEZ0jB,UAAW,CACT9yB,MAAO,KAETkZ,UAAW,CACTzU,UAAW,KAEbq5B,iBAAkB,GAClBvF,aAAc,CACZ91B,SAAU,aAIC,SAAS29B,GAAT,GAA4C,EAAvBtwB,oBAAwB,IACpDrK,EAAUnB,KAERuI,EAA6Ba,KAA7Bb,yBAIR,GAFkBmD,aAAaC,QAAQ,aAECxO,mBAAS,CAAC,eAAlD,mBAAO6X,EAAP,KAAqBC,EAArB,KAEM2e,EACJza,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBjJ,OAAS,GAC3DsS,EAAatS,SACXyW,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBjJ,OAEtD,EAAkCvF,mBAAS,MAA3C,mBAEA,GAFA,UAEwBA,mBAAS,QAAjC,mBAAOib,EAAP,KAEA,GAFA,KAE4Bjb,mBAAS,SAArC,mBAEA,GAFA,UAEwDA,oBAAS,IAAjE,mBAEA,GAFA,UAE4CA,mBAAS,KAArD,mBAAO48B,EAAP,KAAuBC,EAAvB,KACA,EAAwC78B,mBAAS,IAAjD,mBAAqBqZ,GAArB,WAEA,EAAoCrZ,mBAAS,MAA7C,mBA8DA,GA9DA,UA8DsCA,oBAAS,IAA/C,mBAAO29B,EAAP,KAAoBS,EAApB,KAEMtB,EAAmB,SAACpX,EAAUE,GAElCxa,GAAyB,GAEzB+jB,IAAmB,GAEnB,IAAIzE,EAAehF,EAAS/W,UACxB0vB,EAAazY,EAAOjX,UAEpB2vB,EAAM1Y,EAAOxR,UAAYsR,EAAStR,UACtCgqB,GAAe,SAACl9B,GAAD,OAAuB,IAARo9B,KAI9BrtB,IACGoJ,KACC/d,EAAa,WACb,CACEwU,UAAW4Z,EACX3Z,QAASstB,EACT9jB,KAAM1C,GAER,CACE1G,QAAS,CAAEC,SAAU7C,aAAaC,QAAQ,gBAG7CgD,MAAK,SAACC,GAGLorB,EAAkBprB,EAASpU,MAE3B,IAAIuhC,EAvEU,SAACvhC,GACnB,IAAIugC,EAAmB,EACnBC,EAAc,KAClBxgC,EAAKmlB,SAAQ,SAAClG,EAAS1f,GACP,IAAVA,IACFihC,EAAcvhB,EAAQuiB,MAEpBviB,EAAQuiB,KAAOhB,IACjBA,EAAcvhB,EAAQuiB,KACtBjB,EAAmBhhC,MAIvB,IAAIkhC,EAAkB,EAClBC,EAAa,KAqBjB,OApBA1gC,EAAKmlB,SAAQ,SAAClG,EAAS1f,GACP,IAAVA,IACFmhC,EAAazhB,EAAQuiB,MAEnBviB,EAAQuiB,KAAOd,IACjBA,EAAazhB,EAAQuiB,KACrBf,EAAkBlhC,MAIDS,EAAKmC,KAAI,SAAC8c,EAAS1f,GACtC,OAAIA,IAAUghC,EACL,2BAAKthB,GAAZ,IAAqBvb,MAAO,YACnBnE,IAAUkhC,EACZ,2BAAKxhB,GAAZ,IAAqBvb,MAAO,YAErB,2BAAKub,GAAZ,IAAqBvb,MAAO,eAwCPi9B,CAAYvsB,EAASpU,MAE1Cw/B,EAAkB+B,GAGhBvlB,EADW,SAAT4B,EAEA2jB,EAAe3jB,MAAK,SAACC,EAAGC,GACtB,OAAO6hB,WAAW7hB,EAAE0jB,MAAQ7B,WAAW9hB,EAAE2jB,SAK3CD,EAAe3jB,MAAK,SAACC,EAAGC,GACtB,OAAO6hB,WAAW9hB,EAAE2jB,MAAQ7B,WAAW7hB,EAAE0jB,UAK/C1P,IAAmB,GACnB/jB,GAAyB,MAE1BiH,OAAM,WACL8c,IAAmB,GACnB/jB,GAAyB,OAmE/B,EAAgCpL,oBAAS,IAAI0O,MAAOC,WAApD,mBAAiBE,GAAjB,WAEA,EAAwC7O,mBAAS,IAAI0O,MAArD,mBAAOhC,EAAP,KACA,GADA,KACoD1M,oBAAS,IAA7D,mBACA,GADA,UAEEA,oBAAS,IADX,oBAAOsQ,GAAP,MAAmCC,GAAnC,MAGA,GAAsCvQ,oBAAS,GAA/C,qBAqBM2Q,IArBN,YAqBoC,WAClCJ,IAA8B,KAWhCvL,qBAAU,WACR6J,EAAYnC,EAAaiC,aACxB,CAACjC,IAEJ,IAAMoY,GAAc,SAACzQ,GACnB,IAAI0Q,EAAU,IAAIrW,KAAK2F,EAAK1F,WAE5B,OADAoW,EAAQtS,SAAS,EAAG,EAAG,EAAG,GACnBsS,GAGHC,GAAY,SAAC3Q,GACjB,IAAI0Q,EAAU,IAAIrW,KAAK2F,EAAK1F,WAE5B,OADAoW,EAAQtS,SAAS,GAAI,GAAI,GAAI,KACtBsS,GAGT,GAAgC/kB,oBAAS,WACvC,IAAIqU,EAAO,IAAI3F,KACf,OAAOoW,GAAYzQ,MAFrB,qBAAOqR,GAAP,MAAiBC,GAAjB,MAKA,GAA4B3lB,oBAAS,WACnC,IAAIqU,EAAO,IAAI3F,KACf,OAAOsW,GAAU3Q,MAFnB,qBAAOuR,GAAP,MAAeC,GAAf,MAoBA,GAA4B7lB,mBAAS,GAArC,qBACA,IADA,YACkCA,wBAASgN,IAA3C,iCA4CAhI,qBAAU,cAEP,IAEH,IAiBA,GAAgChF,mBAAS,CACvC2L,MAAM,EACNC,SAAU,UACVC,QAAS,6BAHX,qBAAOC,GAAP,MAAiBC,GAAjB,MAMM+b,GAAsB,WAC1B/b,IAAY,SAAC7K,GACX,OAAO,2BAAKA,GAAZ,IAAuByK,MAAM,QAIjC,GAA8C3L,oBAAS,GAAvD,qBAAOkvB,GAAP,MAAwBC,GAAxB,MACA,GAAgDnvB,oBAAS,GAAzD,qBAAOk+B,GAAP,MAAyBC,GAAzB,MAwDA,OACE,uBAAKzgC,MAAO,CAAE8K,UAAW,QAASjK,MAAO,QAAzC,UACE,eAAC+H,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,SAAS0I,QAAQ,gBAA5C,SACE,eAACN,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACL,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,WAA3B,UACE,gBAACoI,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEgJ,YAAa,QAAjC,UACE,gBAAC+N,EAAA,EAAD,CACE3O,UAAW9B,EAAQq4B,iBACnB3+B,MAAO,CACLqQ,SAAU,QACVsb,SAAU,QACV3iB,YAAa,QALjB,UAQE,eAAC0iB,GAAA,EAAD,CAAYpf,GAAG,oBAAf,mBACA,gBAAC0K,EAAA,EAAD,CACEhX,MAAO,CAAEsD,SAAU,SACnB4a,QAAQ,oBACR5R,GAAG,cACHrN,MAAOkb,EACPvK,SAnaS,SAACqH,GACxB,IAAMhY,EAAQgY,EAAMC,OAAOjY,MAEK,QAA5BA,EAAMA,EAAM4I,OAAS,GAUzBuS,EAAgBnb,GATdmb,EACED,EAAatS,SACXyW,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBjJ,OAChD,GACAyW,KAAKC,MAAM1N,aAAaC,QAAQ,oBA4Z1B8a,UAAQ,EACRC,YAAa,SAAClsB,GAAD,OAAUA,EAAKosB,KAAK,OACjC5N,UAAW,CACT7X,QAAS,CAAE8X,MAAO9X,EAAQyT,WAC1BsE,mBAAoB,kBAAM,OAV9B,UAaE,gBAAClH,EAAA,EAAD,CACElY,MAAM,MACNqH,QAAS,CACPvB,KAAMg0B,EAAgBzyB,EAAQ2yB,YAAc,IAE9Cj5B,MAAO,CAAEgsB,aAAc,GALzB,UAOE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvB5kB,KAAK,QACL/D,MAAM,UACNiD,QAAS,CAAE4lB,cAAe5lB,EAAQ6yB,oBAClCra,QAASia,EACT7M,cACE/R,EAAatS,OAAS,GACtBsS,EAAatS,OACXyW,KAAKC,MAAM1N,aAAaC,QAAQ,kBAC7BjJ,WAIX,eAACskB,EAAA,EAAD,CAEE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAAQ,aACRpsB,MAAO,CAAEC,WAAY,eAGxBqe,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBhP,KACjD,SAAC8c,GACC,OACE,gBAACzH,EAAA,EAAD,CAEElY,MAAO2f,EACP5e,MAAO,CAAEgsB,aAAc,GAHzB,UAKE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvBlN,QAAS3E,EAAakS,QAAQzN,IAAY,EAC1CxX,KAAK,QACL/D,MAAM,cAGV,eAAC8oB,EAAA,EAAD,CACE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAASxN,EACT5e,MAAO,CAAEC,WAAY,cAflB2e,YAwBjB,gBAAC,KAAD,CAAyBpP,MAAOC,IAAhC,UAeE,eAAC,KAAD,CACE6c,QAAQ,EACRC,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,0BACHzK,MAAM,OACN5C,MAAO+oB,GACPpY,SAlQa,SAAC+G,GAC5BsR,GAAYb,GAAYzQ,KAkQV6V,oBAAqB,CACnB,eAAgB,aAElBxsB,MAAO,CAAEgJ,YAAa,QACtBZ,UAAW9B,EAAQqtB,UACnB6L,WAAY,CACVx/B,MAAO,CACLsD,SAAU,YAKhB,eAAC,KAAD,CACEgpB,QAAQ,EACRC,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,wBACHzK,MAAM,KACN5C,MAAOipB,GACPtY,SAlRW,SAAC+G,GAC1BwR,GAAUb,GAAU3Q,KAkRN6V,oBAAqB,CACnB,aAAc,WAEhBpkB,UAAW9B,EAAQqtB,UACnB6L,WAAY,CACVx/B,MAAO,CACLsD,SAAU,kBAapB,eAACsF,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACsa,EAAA,EAAD,CACEnc,KAAK,QACL/D,MAAM,UACN1C,QAAQ,WACR4C,QAnOa,WACzB67B,EAAiBpX,GAAUE,KAmOf+E,SAAUuE,GALZ,SAOGA,GAAkB,UAAY,WAGnC,eAAC5oB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC0Y,EAAA,EAAD,CACEnc,KAAK,QACL/D,MAAM,UACN1C,QAAQ,WACR4C,QA3NS,WACrBmK,GAAyB,GAEzB+yB,IAAoB,GAEpBltB,IACGoJ,KACC/d,EAAa,iBACb,CACEwU,UAAW4U,GAAS/W,UACpBoC,QAAS6U,GAAOjX,UAChB4L,KAAM1C,GAER,CACE1G,QAAS,CACPC,SAAU7C,aAAaC,QAAQ,aAC/B2Z,aAAc,UAInB3W,MAAK,SAACC,GACL,IAAM2W,EAAcpU,OAAOqU,IAAIC,gBAC7B,IAAIC,KAAK,CAAC9W,EAASpU,QAEfmrB,EAAO/e,SAASgf,cAAc,KACpCD,EAAKlF,KAAO8E,EAEZ,IAAIM,EAAQ,oBAAgBhD,GAAStR,UAAzB,YACVsR,GAASnR,WAAa,EADZ,YAERmR,GAASlR,cAFD,YAEkBoR,GAAOxR,UAFzB,YAGVwR,GAAOrR,WAAa,EAHV,YAIRqR,GAAOpR,cAJC,QAKZgU,EAAKG,aAAa,WAAYD,GAC9Bjf,SAASnH,KAAKsmB,YAAYJ,GAC1BA,EAAKK,QACLL,EAAKM,SAELqV,IAAoB,GACpB/yB,GAAyB,MAE1BiH,OAAM,SAACF,GACNpG,IAAY,SAAC7K,GACX,OAAO,2BACFA,GADL,IAEEyK,MAAM,EACNC,SAAU,QACVC,QAAS,wBAGbsyB,IAAoB,GACpB/yB,GAAyB,OA0KjBuf,SAAUuT,GALZ,SAOGA,GAAmB,cAAgB,sBA4F9C,eAAC53B,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,UAApC,SACGo0B,EAAep9B,KAAI,SAAC8c,GAAD,OAClB,eAACoiB,GAAD,CACE7lB,SAAUyD,EAAQ/B,KAClBmjB,mBAAoBphB,EAAQvD,UAC5B4kB,YAAaA,SAKnB,sBAAKjgC,MAAO,CAAE+f,YAAa,YAE3B,eAAC3I,EAAA,EAAD,CACEnJ,KAAM2E,GACNyE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,iBAAkB,IAClB7H,QAASsD,GAPX,SASE,eAAC,GAAD,CAAOtD,QAASsD,GAA6B/E,SAAS,UAAtD,8BAKF,eAACkJ,EAAA,EAAD,CACEnJ,KAAMG,GAASH,KACfuJ,iBAAkB,IAClB7H,QAASya,GACT/S,aAAc,CAAEE,WAAY,OAAQD,SAAU,UAJhD,SAME,eAAC,GAAD,CACE3H,QAASya,GACTlc,SAAUE,GAASF,SACnB2yB,GAAI,CAAEhgC,MAAO,QAHf,SAKGuN,GAASD,YAGd,sBAAKnO,MAAO,CAAEoN,aAAc,eCjxBlC,IAAMjI,GAAYC,aAAW,SAACd,GAAD,MAAY,MAI1B,SAAS88B,GAAT,GAKX,IAJFv/B,EAIC,EAJDA,MAIC,IAHD+2B,aAGC,MAHO,GAGP,EAFDE,EAEC,EAFDA,aAEC,IADDD,qBACC,MADe,GACf,EACKvyB,EAAUnB,KASV4zB,EACJH,EAAM/wB,OAAS,GAAKgxB,EAAchxB,SAAW+wB,EAAM/wB,OAE/CmxB,EAAY,SAACJ,EAAOh5B,GACxB,IAAIo5B,GAAY,EAMhB,OALAJ,EAAM9T,SAAQ,SAAClG,GACTA,EAAQhf,OAASA,IACnBo5B,GAAY,MAGTA,GAGT,OACE,gBAACjiB,EAAA,EAAD,CAAa/W,MAAO,CAAE2rB,SAAU,SAAhC,UACE,eAACD,GAAA,EAAD,CAAYpf,GAAE,UAAKzK,EAAL,iBAAd,SAA0CA,IAC1C,gBAACmV,EAAA,EAAD,CACEhX,MAAO,CAAEsD,SAAU,SACnB4a,QAAO,UAAKrc,EAAL,iBACPyK,GAAE,UAAKzK,EAAL,WACF5C,MA3BW,SAAC45B,GAChB,OAA6B,IAAzBA,EAAchxB,OACT,CAAC,OAEHgxB,EAAc/2B,KAAI,SAAC8c,GAAD,OAAaA,EAAQhf,QAuBnCyhC,CAASxI,GAChBjpB,SAAUkpB,EACVlN,UAAQ,EACRC,YAAa,SAAClsB,GAAD,OAAUA,EAAKosB,KAAK,OACjC5N,UAAW,CACT7X,QAAS,CAAE8X,MAAO9X,EAAQyT,WAC1BsE,mBAAoB,kBAAM,OAV9B,UAaE,gBAAClH,EAAA,EAAD,CACElY,MAAM,MACNqH,QAAS,CACPvB,KAAMg0B,EAAgBzyB,EAAQ2yB,YAAc,IAE9Cj5B,MAAO,CAAEgsB,aAAc,GALzB,UAOE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvB5kB,KAAK,QACL/D,MAAM,UACNiD,QAAS,CAAE4lB,cAAe5lB,EAAQ6yB,oBAClCra,QAASia,GAAkC,IAAjBH,EAAM/wB,OAChCqkB,cACE2M,EAAchxB,OAAS,GAAKgxB,EAAchxB,OAAS+wB,EAAM/wB,WAI/D,eAACskB,EAAA,EAAD,CAEE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAAQ,aACRpsB,MAAO,CAAEC,WAAY,eAGxB24B,EAAM92B,KAAI,SAAC8c,GACV,OACE,gBAACzH,EAAA,EAAD,CAEElY,MAAO2f,EAAQhf,KACfI,MAAO,CAAEgsB,aAAc,GAHzB,UAKE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvBlN,QAASka,EAAUH,EAAeja,EAAQhf,MAC1CwH,KAAK,QACL/D,MAAM,cAGV,eAAC8oB,EAAA,EAAD,CACE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAASxN,EAAQhf,KACjBI,MAAO,CAAEC,WAAY,cAflB2e,EAAQhf,eCrE3B,IAAMw+B,GAAe,SAACruB,GACpB,IAAQ5M,EAAY4M,EAAZ5M,QAER,OACE,sBAAKnD,MAAO,CAAEmN,UAAW,SAAUrC,UAAW,MAAO3K,YAAa,QAAlE,SACGgD,EAAQrB,KAAI,SAACC,EAAO7C,GACnB,OACE,uBAA4Bc,MAAO,CAAEqD,MAAO,WAA5C,4CAAmBnE,UAed,SAASoiC,GAAT,GAIX,IAHFlpB,EAGC,EAHDA,UACAL,EAEC,EAFDA,aACAwpB,EACC,EADDA,SAoBMlpB,EAAgB,SAAC,GAAgC,IA7BlCpZ,EA6BIqZ,EAA6B,EAA7BA,OAAQnV,EAAqB,EAArBA,QAAqB,EAAZtB,MACxC,OAAIyW,GAAUnV,EACK,IAAbo+B,EAEA,+BAGE,sDACgBp+B,EAAQ,GAAGA,QAAQgvB,UADnC,yBAEYhvB,EAAQ,GAAGA,QAAQg+B,MAF/B,0BAGah+B,EAAQ,GAAGA,QAAQq+B,mBAMlC,+BAGE,sDACgBr+B,EAAQ,GAAGA,QAAQgvB,UADnC,yBAEYhvB,EAAQ,GAAGA,QAAQg+B,MAF/B,UAGiC,IAA9Bh+B,EAAQ,GAAGA,QAAQlE,MAAnB,yBACqBkE,EAAQ,GAAGA,QAAQlE,OACrC,GALN,8BAMuBkE,EAAQ,GAAGA,QAAQs+B,UAN1C,SAOoC,OAAjCt+B,EAAQ,GAAGA,QAAQyL,UAAnB,iBAvDQ3P,EAwDkBkE,EAAQ,GAAGA,QAAQyL,UAvD/C,IAAIoC,KAAa,IAAR/R,GAERyiC,uBAsDI,QAOP,MAOT,EAA8Cp/B,mBAAS,GAAvD,mBAAOmW,EAAP,KAAwBC,EAAxB,KAQA,OANApR,qBAAU,YACa,IAAjByQ,GACFW,EAAmB,KAEpB,CAACX,KAEoB,IAAjBA,EACL,eAACnV,GAAA,EAAD,CAAqB5C,MAAO,CAAEK,OAAQ,QAAtC,SACE,gBAACO,EAAA,EAAD,CACEjB,KAAMyY,EACNtX,OAAQ,CACN6X,IAAK,EACL5X,MAAO,GAEP6X,OAAQ,GANZ,UASE,eAACpX,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,eAACR,GAAA,EAAD,CAAOC,QAAQ,WAAWoC,SAAU,GAAInB,SAAU,EAAG2B,OAAO,UAC5D,eAACxC,GAAA,EAAD,CAAOC,OAAQ,CAAC,EAAG,SAAC5B,GAAD,OAAU2b,KAAKC,KAAK5b,OACvC,eAACqD,GAAA,EAAD,CAASE,QAAS,eAACmV,EAAD,MAGlB,eAACS,GAAA,EAAD,CACEC,SAAU,GACVnJ,SAAU,SAACoJ,GAAD,OAASN,EAAmBM,EAAIC,aAC1C/X,QAAQ,OACRb,OAAQ,GACRyD,OAAO,UACP+U,cAAe,iBAAM,MAEvB,eAAC5V,GAAA,EAAD,CACEo7B,aAAc,CACZp+B,WAAY,QAGdiD,QAASk7B,GACTx4B,MAAM,SAGR,gBAAClE,GAAA,EAAD,CAAKC,mBAAmB,EAAOT,QAAQ,OAAvC,UACE,eAACgY,GAAA,EAAD,CACEhY,QAAQ,OACRiY,SAAS,SACTna,KAAK,SA1GU,WACvB,IAAI4gC,EAAQ,GAIZ,GAAIxnB,GAAaA,EAAUvQ,OAAS,EAGlC,IAFA,IAAIg4B,EAAYznB,EAAUvQ,OAAS,GAAK,GAAKuQ,EAAUvQ,OAAS,EAEvDD,EAAI6Q,EAAiB7Q,GAAK6Q,EAAkBonB,EAAWj4B,IAC9Dg4B,EAAM73B,KAAK,eAAC/F,GAAA,EAAD,CAAwBhD,KAAMoZ,EAAUxQ,GAAGvE,OAA3C,eAAmBuE,KAIlC,OAAOg4B,EAiGAE,WAKP,eAACl9B,GAAA,EAAD,UACE,gBAAChC,EAAA,EAAD,CACEjB,KAAMyY,EACNtX,OAAQ,CACN6X,IAAK,EACL5X,MAAO,GACPM,KAAM,EACNuX,OAAQ,GAEV4lB,eAAgB,KAChBC,OAAQ,EATV,UAWE,eAACj9B,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,eAACR,GAAA,EAAD,CACEC,QAAQ,WACRw0B,MAAO,IACPC,WAAY,GACZryB,SAAU,GACVnB,SAAU,EACV2B,OAAO,UAET,eAACxC,GAAA,EAAD,CAAOC,OAAQ,CAAC,EAAG,SAAC5B,GAAD,OAAU2b,KAAKC,KAAK5b,OACvC,eAACqD,GAAA,EAAD,CAASE,QAAS,eAACmV,EAAD,MAGlB,eAACpV,GAAA,EAAD,CACEo7B,aAAc,CACZp+B,WAAY,QAGdiD,QAASk7B,KAEX,gBAAC18B,GAAA,EAAD,CAAKC,mBAAmB,EAAOT,QAAQ,OAAvC,UACE,eAACgY,GAAA,EAAD,CACEhY,QAAQ,OACRiY,SAAS,SACTna,KAAK,OAELsE,SAAU,KAGX8U,EAAUtW,KAAI,SAACuX,EAAOna,GAMrB,OAAO,eAAC8C,GAAA,EAAD,CAA4BhD,KAAMqa,EAAMhW,OAAxC,eAAmBnE,eCjMtC,IAAMiG,GAAYC,aAAW,SAACd,GAAD,MAAY,CACrC0L,KAAM,CACJC,SAAU,GAEZ0jB,UAAW,CACT9yB,MAAO,KAETkZ,UAAW,CACTzU,UAAW,KAEbq5B,iBAAkB,GAGlBvF,aAAc,CACZ91B,SAAU,aAIC,SAASq+B,GAAT,GAAqF,EAAxD1B,YAAyD,IAA5C7nB,EAA2C,EAA3CA,UAAW+C,EAAgC,EAAhCA,SAAUymB,EAAsB,EAAtBA,UAAWL,EAAW,EAAXA,SACjFj7B,EAAUnB,KAEhB,EAAwC7C,qBAAxC,mBAAOoZ,EAAP,KAAqBC,EAArB,KAmDArU,qBAAU,WACF8Q,GACAuD,EAnDY,SAAChc,GACnB,IAAIugC,EAAmB,GACnBC,EAAc,KAClBxgC,EAAKmlB,SAAQ,SAAClG,EAAS1f,GACT,IAAVA,IACAihC,EAActgC,OAAO+e,EAAQ+gB,OAE7B9/B,OAAO+e,EAAQ+gB,OAASQ,IACxBA,EAActgC,OAAO+e,EAAQ+gB,MAC7BO,EAAiBhhC,GAASA,MAM9B,IAAIkhC,EAAkB,GAClBC,EAAa,KA8Bf,OA7BF1gC,EAAKmlB,SAAQ,SAAClG,EAAS1f,GACT,IAAVA,IACAmhC,EAAaxgC,OAAO+e,EAAQ+gB,OAE5B9/B,OAAO+e,EAAQ+gB,MAAQU,IACvBA,EAAaxgC,OAAO+e,EAAQ+gB,UAIhChgC,EAAKmlB,SAAQ,SAAClG,EAAS1f,GACfW,OAAO+e,EAAQ+gB,QAAUU,IACzBD,EAAgBlhC,GAASA,MAQZS,EAAKmC,KAAI,SAAC8c,EAAS1f,GACpC,OAAIA,IAAUghC,EAAiBhhC,GACtB,2BAAK0f,GAAZ,IAAqBvb,MAAO,YACnBnE,IAAUkhC,EAAgBlhC,GAC5B,2BAAK0f,GAAZ,IAAqBvb,MAAO,YAErB,2BAAKub,GAAZ,IAAqBvb,MAAO,eASZi9B,CAAYloB,EAAUiD,cAG3C,CAACjD,IAEJ,MAAwD9V,oBAAS,GAAjE,mBAAO0b,EAAP,KAA6BC,EAA7B,KAEA,EAAwB3b,mBAAS,OAAjC,mBAAOib,EAAP,KAAawhB,EAAb,KAQQQ,EAAe,SAACtgC,GACpB,OAAQA,GACN,IAAK,OAQL,QACE0c,GAAgB,SAAAnY,GAAS,OACvBA,EAAU+Z,MAAK,SAACC,EAAGC,GAAJ,OAAU6hB,WAAW7hB,EAAE0jB,MAAQ7B,WAAW9hB,EAAE2jB,kBAN/D,IAAK,MACHxlB,GAAgB,SAAAnY,GAAS,OACvBA,EAAU+Z,MAAK,SAACC,EAAGC,GAAJ,OAAU6hB,WAAW9hB,EAAE2jB,MAAQ7B,WAAW7hB,EAAE0jB,cAQrE,OACI,gBAACrhC,EAAA,EAAD,CACAC,UAAW,EACXC,MAAO,CACLa,MAAO,OACPR,OAAQ,QACRyK,UAAW,OACX7K,WAAY,QACZC,cAAe,UAPjB,UAUA,gBAAC0I,EAAA,EAAD,CACEC,WAAS,EACTK,QAAQ,gBACR1I,WAAW,SACXR,MAAO,CAAEqP,cAAe,OAAQjC,aAAc,SAJhD,UAMI,eAACxE,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,gBAACvI,EAAA,EAAD,CAAY2C,MAAM,gBAAgB1C,QAAQ,KAA1C,UAAgDwa,EAAhD,SAAgEymB,OAGtE,eAACh5B,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,gBAACL,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,SAA3B,UACI,gBAACoI,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAACgJ,YAAa,QAAhC,UACA,4CACN,eAAC6V,GAAA,EAAD,CACEC,QAASd,EACTpO,SAAU,kBACRqO,GAAwB,SAACza,GAAD,OAAgBA,MAE1CH,MAAM,UACNzD,KAAK,oBAKT,eAACgJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACI,gBAACL,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,SAAS2P,QAAS,EAA7C,UACI,eAACvH,EAAA,EAAD,CAAMK,MAAI,EAAV,SACA,6CAEA,eAACL,EAAA,EAAD,CAAMK,MAAI,EAAV,SACA,eAAC8N,EAAA,EAAD,CAAa3O,UAAW9B,EAAQq4B,iBAAhC,SAGF,gBAAC3nB,EAAA,EAAD,CACEkH,QAAQ,oBACR5R,GAAG,cACHrN,MAAOse,EACP3N,SAvEW,SAACqH,GACtB,IAAIhY,EAAQgY,EAAMC,OAAOjY,MACzBsgC,EAAatgC,GACb8/B,EAAQ9/B,IAqEEe,MAAO,CAACsD,SAAU,QALpB,UAOE,eAAC6T,EAAA,EAAD,CAAUlY,MAAO,OAAjB,SACE,iDAEF,eAACkY,EAAA,EAAD,CAAUlY,MAAO,MAAjB,SACE,oEAaXyc,GAAgB,eAAC4lB,GAAD,CACjBlpB,UAAWsD,EACX3D,aAAciG,EACd7C,SAAUA,EACVomB,SAAUA,OC9IlB,SAASzxB,GAAMC,GACb,OAAO,eAAC,IAAD,aAAUhQ,UAAW,EAAGY,QAAQ,UAAaoP,IAGtD,IAAM5K,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvC0L,KAAM,CACJC,SAAU,GAEZ0jB,UAAW,CACT9yB,MAAO,KAETkZ,UAAW,CACTzU,UAAW,KAEbq5B,iBAAkB,GAClBvF,aAAc,CACZ91B,SAAU,aAIC,SAASu+B,GAAT,GAA4C,EAAvBlxB,oBAAwB,IACpDrK,EAAUnB,KAERuI,EAA6Ba,KAA7Bb,yBAIR,GAFkBmD,aAAaC,QAAQ,aAECxO,mBAAS,CAAC,eAAlD,mBAAO6X,EAAP,KAAqBC,EAArB,KAEM2e,EACJza,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBjJ,OAAS,GAC3DsS,EAAatS,SACXyW,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBjJ,OAEtD,EAAkCvF,mBAAS,MAA3C,mBAEA,GAFA,UAEwBA,mBAAS,QAAjC,mBAEA,GAFA,UAE4BA,mBAAS,SAArC,mBAEA,GAFA,UAEwDA,oBAAS,IAAjE,mBAEA,GAFA,UAE4CA,mBAAS,KAArD,mBAAO48B,EAAP,KAAuBC,EAAvB,KACA,EAAwC78B,mBAAS,IAAjD,mBAAOoZ,EAAP,KAAqBC,EAArB,KAEA,EAAoCrZ,mBAAS,MAA7C,mBAoFA,GApFA,UAoFsCA,oBAAS,IAA/C,mBAAO29B,EAAP,KAAoBS,EAApB,KAEA,EAA4Bp+B,mBAAS,IAArC,mBAAOw/B,EAAP,KAAeC,EAAf,KACA,EAA4Cz/B,mBAAS,IAArD,mBAAO0/B,EAAP,KAAuBC,EAAvB,KAEMC,EACJJ,EAAOj6B,OAAS,GAAKm6B,EAAen6B,SAAWi6B,EAAOj6B,OA6BxD,EAAgCvF,mBAAS,GAAzC,oBAAOi/B,GAAP,MAAiBY,GAAjB,MAEM/C,GAAmB,SAACpX,EAAUE,GAClCxa,GAAyB,GAGzB+jB,IAAmB,GAEnB,IAAIzE,EAAehF,EAAS/W,UACxB0vB,EAAazY,EAAOjX,UAEpB2vB,EAAM1Y,EAAOxR,UAAYsR,EAAStR,UACtCgqB,GAAe,SAACl9B,GAAD,OAAuB,IAARo9B,KAI9BrtB,IACGoJ,KACC/d,EAAa,aACb,CACEwU,UAAW4Z,EACX3Z,QAASstB,EACT9jB,KAAM1C,GAER,CACE1G,QAAS,CAAEC,SAAU7C,aAAaC,QAAQ,gBAG7CgD,MAAK,SAACC,GAGLouB,GAAYpuB,EAASpU,KAAK,GAAG4hC,UAC7BpC,EAAkBprB,EAASpU,MAW3Bgc,EAAgB5H,EAASpU,MACzB,IAAI0G,EAAS0N,EAASpU,KAAKmC,KAAI,SAAC8c,GAAD,OAAaA,EAAQwjB,SAChDC,EAAY,aAAO,IAAIC,IAAIj8B,IAClBg8B,EAAavgC,KAAI,SAAC8c,GAAD,MAAc,CAAEhf,KAAMgf,MACpDmjB,EAAUM,GACVJ,EAAkBI,GAClB5Q,IAAmB,GACnB/jB,GAAyB,MAE1BiH,OAAM,WACL8c,IAAmB,GACnB/jB,GAAyB,OAmE/B,GAAgCpL,oBAAS,IAAI0O,MAAOC,WAApD,qBAAiBE,IAAjB,aAEA,GAAwC7O,mBAAS,IAAI0O,MAArD,qBAAOhC,GAAP,MACA,IADA,MACoD1M,oBAAS,IAA7D,qBACA,IADA,YAEEA,oBAAS,IADX,qBAAOsQ,GAAP,MAAmCC,GAAnC,MAGA,GAAsCvQ,oBAAS,GAA/C,qBAqBM2Q,IArBN,YAqBoC,WAClCJ,IAA8B,KAWhCvL,qBAAU,WACR6J,GAAYnC,GAAaiC,aACxB,CAACjC,KAEJ,IAAMoY,GAAc,SAACzQ,GACnB,IAAI0Q,EAAU,IAAIrW,KAAK2F,EAAK1F,WAE5B,OADAoW,EAAQtS,SAAS,EAAG,EAAG,EAAG,GACnBsS,GAGHC,GAAY,SAAC3Q,GACjB,IAAI0Q,EAAU,IAAIrW,KAAK2F,EAAK1F,WAE5B,OADAoW,EAAQtS,SAAS,GAAI,GAAI,GAAI,KACtBsS,GAGT,GAAgC/kB,oBAAS,WACvC,IAAIqU,EAAO,IAAI3F,KACf,OAAOoW,GAAYzQ,MAFrB,qBAAOqR,GAAP,MAAiBC,GAAjB,MAKA,GAA4B3lB,oBAAS,WACnC,IAAIqU,EAAO,IAAI3F,KACf,OAAOsW,GAAU3Q,MAFnB,qBAAOuR,GAAP,MAAeC,GAAf,MAoBA,GAA4B7lB,mBAAS,GAArC,qBACA,IADA,YACkCA,wBAASgN,IAA3C,iCA4CAhI,qBAAU,cAEP,IAEH,IAiBA,GAAgChF,mBAAS,CACvC2L,MAAM,EACNC,SAAU,UACVC,QAAS,6BAHX,qBAAOC,GAAP,MAAiBC,GAAjB,MAMM+b,GAAsB,WAC1B/b,IAAY,SAAC7K,GACX,OAAO,2BAAKA,GAAZ,IAAuByK,MAAM,QAIjC,GAA8C3L,oBAAS,GAAvD,qBAAOkvB,GAAP,MAAwBC,GAAxB,MACA,GAAgDnvB,oBAAS,GAAzD,qBAAOk+B,GAAP,MAAyBC,GAAzB,MAwDA,OACE,uBAAKzgC,MAAO,CAAE8K,UAAW,QAASjK,MAAO,QAAzC,UACE,gBAAC+H,EAAA,EAAD,CACEC,WAAS,EACTrI,WAAW,SACX0I,QAAQ,gBACRlJ,MAAO,CAAEI,aAAc,QAJzB,UAME,eAACwI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACL,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,WAA3B,UACE,gBAACoI,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEgJ,YAAa,QAAjC,UACE,gBAAC+N,EAAA,EAAD,CACE3O,UAAW9B,EAAQq4B,iBACnB3+B,MAAO,CACLqQ,SAAU,QACVsb,SAAU,QACV3iB,YAAa,QALjB,UAQE,eAAC0iB,GAAA,EAAD,CAAYpf,GAAG,oBAAf,mBACA,gBAAC0K,EAAA,EAAD,CACEhX,MAAO,CAAEsD,SAAU,SACnB4a,QAAQ,oBACR5R,GAAG,cACHrN,MAAOkb,EACPvK,SAzcS,SAACqH,GACxB,IAAMhY,EAAQgY,EAAMC,OAAOjY,MAEK,QAA5BA,EAAMA,EAAM4I,OAAS,GAUzBuS,EAAgBnb,GATdmb,EACED,EAAatS,SACXyW,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBjJ,OAChD,GACAyW,KAAKC,MAAM1N,aAAaC,QAAQ,oBAkc1B8a,UAAQ,EACRC,YAAa,SAAClsB,GAAD,OAAUA,EAAKosB,KAAK,OACjC5N,UAAW,CACT7X,QAAS,CAAE8X,MAAO9X,EAAQyT,WAC1BsE,mBAAoB,kBAAM,OAV9B,UAaE,gBAAClH,EAAA,EAAD,CACElY,MAAM,MACNqH,QAAS,CACPvB,KAAMg0B,EAAgBzyB,EAAQ2yB,YAAc,IAE9Cj5B,MAAO,CAAEgsB,aAAc,GALzB,UAOE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvB5kB,KAAK,QACL/D,MAAM,UACNiD,QAAS,CAAE4lB,cAAe5lB,EAAQ6yB,oBAClCra,QAASia,EACT7M,cACE/R,EAAatS,OAAS,GACtBsS,EAAatS,OACXyW,KAAKC,MAAM1N,aAAaC,QAAQ,kBAC7BjJ,WAIX,eAACskB,EAAA,EAAD,CAEE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAAQ,aACRpsB,MAAO,CAAEC,WAAY,eAGxBqe,KAAKC,MAAM1N,aAAaC,QAAQ,kBAAkBhP,KACjD,SAAC8c,GACC,OACE,gBAACzH,EAAA,EAAD,CAEElY,MAAO2f,EACP5e,MAAO,CAAEgsB,aAAc,GAHzB,UAKE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvBlN,QAAS3E,EAAakS,QAAQzN,IAAY,EAC1CxX,KAAK,QACL/D,MAAM,cAGV,eAAC8oB,EAAA,EAAD,CACE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAASxN,EACT5e,MAAO,CAAEC,WAAY,cAflB2e,YAwBjB,gBAAC,KAAD,CAAyBpP,MAAOC,IAAhC,UAeE,eAAC,KAAD,CACE6c,QAAQ,EACRC,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,0BACHzK,MAAM,OACN5C,MAAO+oB,GACPpY,SAvQa,SAAC+G,GAC5BsR,GAAYb,GAAYzQ,KAuQV6V,oBAAqB,CACnB,eAAgB,aAElBxsB,MAAO,CAAEgJ,YAAa,QACtBZ,UAAW9B,EAAQqtB,UACnB6L,WAAY,CACVx/B,MAAO,CACLsD,SAAU,YAKhB,eAAC,KAAD,CACEgpB,QAAQ,EACRC,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,wBACHzK,MAAM,KACN5C,MAAOipB,GACPtY,SAvRW,SAAC+G,GAC1BwR,GAAUb,GAAU3Q,KAuRN6V,oBAAqB,CACnB,aAAc,WAEhBpkB,UAAW9B,EAAQqtB,UACnB6L,WAAY,CACVx/B,MAAO,CACLsD,SAAU,kBAapB,eAACsF,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACsa,EAAA,EAAD,CACEnc,KAAK,QACL/D,MAAO,UACP1C,QAAQ,WACR4C,QAxOa,WACzB67B,GAAiBpX,GAAUE,KAwOf+E,SAAUuE,GALZ,SAOGA,GAAkB,WAAa,WAGpC,eAAC5oB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC0Y,EAAA,EAAD,CACEnc,KAAK,QACL/D,MAAM,UACN1C,QAAQ,WACR4C,QAhOS,WACrBmK,GAAyB,GAEzB+yB,IAAoB,GAEpBltB,IACGoJ,KACC/d,EAAa,oBACb,CACEwU,UAAW4U,GAAS/W,UACpBoC,QAAS6U,GAAOjX,UAChB4L,KAAM1C,GAER,CACE1G,QAAS,CACPC,SAAU7C,aAAaC,QAAQ,aAC/B2Z,aAAc,UAInB3W,MAAK,SAACC,GACL,IAAM2W,EAAcpU,OAAOqU,IAAIC,gBAC7B,IAAIC,KAAK,CAAC9W,EAASpU,QAEfmrB,EAAO/e,SAASgf,cAAc,KACpCD,EAAKlF,KAAO8E,EAEZ,IAAIM,EAAQ,qBAAiBhD,GAAStR,UAA1B,YACVsR,GAASnR,WAAa,EADZ,YAERmR,GAASlR,cAFD,YAEkBoR,GAAOxR,UAFzB,YAGVwR,GAAOrR,WAAa,EAHV,YAIRqR,GAAOpR,cAJC,QAKZgU,EAAKG,aAAa,WAAYD,GAC9Bjf,SAASnH,KAAKsmB,YAAYJ,GAC1BA,EAAKK,QACLL,EAAKM,SAELqV,IAAoB,GACpB/yB,GAAyB,MAE1BiH,OAAM,SAACF,GACNpG,IAAY,SAAC7K,GACX,OAAO,2BACFA,GADL,IAEEyK,MAAM,EACNC,SAAU,QACVC,QAAS,wBAGbsyB,IAAoB,GACpB/yB,GAAyB,OA+KjBuf,SAAUuT,GALZ,SAOGA,GAAmB,cAAgB,oBAK5C,eAAC53B,EAAA,EAAD,CAAMK,MAAI,EAAV,SAEE,gBAAC8N,EAAA,EAAD,CACE3O,UAAW9B,EAAQq4B,iBACnB3+B,MAAO,CACLqQ,SAAU,QACVsb,SAAU,QACV3iB,YAAa,QALjB,UAQE,eAAC0iB,GAAA,EAAD,CAAYpf,GAAG,qBAAf,oBACA,gBAAC0K,EAAA,EAAD,CACEhX,MAAO,CAAEsD,SAAU,SACnB4a,QAAQ,qBACR5R,GAAG,eACHrN,MAAO+iC,EACPpyB,SA9iBe,SAACqH,GAC1B,IAAMhY,EAAQgY,EAAMC,OAAOjY,MAIK,QAA5BA,EAAMA,EAAM4I,OAAS,IAKzBo6B,EAAkBhjC,GAElB0c,GAAgB,SAACnY,GACf,OAAO07B,EAAeF,QAAO,SAACpgB,EAAS1f,GACrC,IAAIqjC,GAAU,EAMd,OALAtjC,EAAM6lB,SAAQ,SAACqY,GACTA,IAAYve,EAAQwjB,QACtBG,GAAU,MAGPA,SAdTN,EAAkBD,EAAen6B,SAAWi6B,EAAOj6B,OAAS,GAAKi6B,IAyiBzDlW,UAAQ,EACRC,YAAa,SAAClsB,GAAD,OAAUA,EAAKosB,KAAK,OACjC5N,UAAW,CACT7X,QAAS,CAAE8X,MAAO9X,EAAQyT,WAC1BsE,mBAAoB,kBAAM,OAV9B,UAaE,gBAAClH,EAAA,EAAD,CACElY,MAAM,MACNqH,QAAS,CACPvB,KAAMm9B,EAAsB57B,EAAQ2yB,YAAc,IAEpDj5B,MAAO,CAAEgsB,aAAc,GALzB,UAOE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvB5kB,KAAK,QACL/D,MAAM,UACNiD,QAAS,CAAE4lB,cAAe5lB,EAAQ6yB,oBAClCra,QAASojB,EACThW,cACE8V,EAAen6B,OAAS,GACxBm6B,EAAen6B,OAASi6B,EAAOj6B,WAIrC,eAACskB,EAAA,EAAD,CAEE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAAQ,aACRpsB,MAAO,CAAEC,WAAY,eAGxB6hC,EAAOhgC,KAAI,SAAC8c,GACX,OACE,gBAACzH,EAAA,EAAD,CAEElY,MAAO2f,EACP5e,MAAO,CAAEgsB,aAAc,GAHzB,UAKE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvBlN,QAASkjB,EAAe3V,QAAQzN,IAAY,EAC5CxX,KAAK,QACL/D,MAAM,cAGV,eAAC8oB,EAAA,EAAD,CACE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAASxN,EACT5e,MAAO,CAAEC,WAAY,cAflB2e,iBA+GnB,eAAChW,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,UAApC,SACG4Q,EAAa5Z,KAAI,SAAC8c,GAAD,OAChB,eAAC+iB,GAAD,CACE1B,YAAaA,EACbsB,SAAUA,GACVnpB,UAAWwG,EACXzD,SAAUyD,EAAQ/B,KAClB+kB,UAAWhjB,EAAQwjB,aAKzB,sBAAKpiC,MAAO,CAAE+f,YAAa,YAE3B,eAAC3I,EAAA,EAAD,CACEnJ,KAAM2E,GACNyE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,iBAAkB,IAClB7H,QAASsD,GAPX,SASE,eAAC,GAAD,CAAOtD,QAASsD,GAA6B/E,SAAS,UAAtD,8BAKF,eAACkJ,EAAA,EAAD,CACEnJ,KAAMG,GAASH,KACfuJ,iBAAkB,IAClB7H,QAASya,GACT/S,aAAc,CAAEE,WAAY,OAAQD,SAAU,UAJhD,SAME,eAAC,GAAD,CACE3H,QAASya,GACTlc,SAAUE,GAASF,SACnB2yB,GAAI,CAAEhgC,MAAO,QAHf,SAKGuN,GAASD,YAGd,sBAAKnO,MAAO,CAAEoN,aAAc,eCp5BnB,SAASo1B,GAAT,GAA4C,IAAD,IAAtBC,YAAsB,MAAf,GAAe,EAAXC,EAAW,EAAXA,QAC7C,EAAwBpgC,mBAAS,GAAjC,mBACA,GADA,UACkCA,mBAAS,IAA3C,mBAAkBmsB,GAAlB,WAEAnnB,qBAAU,WACR,GAAIm7B,EAAK56B,OAAS,EAAG,CACnB,IAAIopB,EAAQ3V,KAAKC,KAAKknB,EAAK56B,OARb,IASd4mB,EAAawC,MAEd,CAACwR,IAEJ,IAIA,EAAgCngC,oBAAS,GAAzC,mBAAOqgC,EAAP,KAAiBC,EAAjB,KAEMC,EAAkB,SAAC5rB,EAAO6rB,GAC9B,IAAIC,EAAa,GAEfA,EADEJ,EACWF,EAAKllB,MAAK,SAACC,EAAGC,GAAJ,OACrBD,EAAEslB,KAAkBrlB,EAAEqlB,GAClBtlB,EAAEslB,GAAgBrlB,EAAEqlB,IACjB,EACD,EACF,KAGOL,EAAKllB,MAAK,SAACC,EAAGC,GAAJ,OACrBD,EAAEslB,KAAkBrlB,EAAEqlB,GAClBtlB,EAAEslB,GAAgBrlB,EAAEqlB,GAClB,GACC,EACH,KAGRJ,EAAQK,GACRH,GAAY,SAACp/B,GAAD,OAAgBA,MAGxByN,EAAU,SAACrC,GACf,IAAI+H,EAAO,IAAI3F,KAAiB,IAAZpC,GACpB,MAAM,GAAN,OAAUlL,OAAOiT,EAAKD,WAAWE,SAAS,EAAG,GAA7C,YAAmDlT,OACjDiT,EAAKE,WAAa,GAClBD,SAAS,EAAG,GAFd,YAEoBlT,OAAOiT,EAAKsG,YAAYrG,SAAS,EAAG,GAFxD,YAE8DlT,OAC5DiT,EAAKuG,cACLtG,SAAS,EAAG,KAGhB,OACE,eAAChO,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE2rB,SAAU,OAAQ7gB,UAAW,QAAtD,SACE,eAAC5C,GAAA,EAAD,CAAgBzC,UAAW0C,KAA3B,SACE,gBAACE,GAAA,EAAD,CACE,aAAW,eACXjB,KAAK,QACLpH,MAAO,CAAEgjC,UAAW,QAHtB,UAKE,eAACz6B,GAAA,EAAD,UACE,gBAACrD,GAAA,EAAD,CAAUlF,MAAO,CAAEwE,gBAAiB,WAApC,UACE,eAACK,GAAA,EAAD,CACEe,MAAM,OACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,SAP7C,kBAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,cAP7C,kBAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,cAP7C,wBAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,cAP7C,wBAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,mBAP7C,8BAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,iBAP7C,2BAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,cAP7C,wBAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,iBAP7C,0BAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,iBAP7C,0BAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,sBAP7C,6BAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,mBAP7C,6BAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,cAP7C,wBAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,kBAP7C,4BAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,oBAP7C,mCAaJ,gBAACzO,GAAA,EAAD,WACmB,IAAhBi6B,EAAK56B,QACJ,eAAC3C,GAAA,EAAD,UACE,eAACL,GAAA,EAAD,CACEY,UAAU,KACVC,MAAM,MACN1F,MAAO,CAAEijC,WAAY,UAHvB,iCASHR,EAAK56B,OAAS,GACb46B,EAEG3gC,KAAI,SAAC6jB,EAAKzmB,GAAN,OACH,gBAACgG,GAAA,EAAD,WACE,eAACL,GAAA,EAAD,CAAWe,MAAM,OAAO5F,MAAO,CAAEijC,WAAY,UAA7C,SACGhyB,EAAQ0U,EAAIud,QAEf,eAACr+B,GAAA,EAAD,CAAWe,MAAM,SAAS5F,MAAO,CAAEijC,WAAY,UAA/C,SACGtd,EAAIwd,OAEP,eAACt+B,GAAA,EAAD,CAAWe,MAAM,SAAS5F,MAAO,CAAEijC,WAAY,UAA/C,SACGtd,EAAIyd,YAEP,eAACv+B,GAAA,EAAD,CAAWe,MAAM,SAAS5F,MAAO,CAAEijC,WAAY,UAA/C,SACGtd,EAAI0d,YAEP,eAACx+B,GAAA,EAAD,CAAWe,MAAM,SAAS5F,MAAO,CAAEijC,WAAY,UAA/C,SACGtd,EAAI2d,iBAEP,eAACz+B,GAAA,EAAD,CAAWe,MAAM,SAAS5F,MAAO,CAAEijC,WAAY,UAA/C,SACGtd,EAAI4d,eAEP,eAAC1+B,GAAA,EAAD,CAAWe,MAAM,SAAS5F,MAAO,CAAEijC,WAAY,UAA/C,SACGtd,EAAI6d,YAEP,eAAC3+B,GAAA,EAAD,CAAWe,MAAM,SAAS5F,MAAO,CAAEijC,WAAY,UAA/C,SACGtd,EAAI8d,eAEP,eAAC5+B,GAAA,EAAD,CAAWe,MAAM,SAAS5F,MAAO,CAAEijC,WAAY,UAA/C,SACGtd,EAAI+d,eAEP,eAAC7+B,GAAA,EAAD,CAAWe,MAAM,SAAS5F,MAAO,CAAEijC,WAAY,UAA/C,SACGtd,EAAIge,oBAEP,eAAC9+B,GAAA,EAAD,CAAWe,MAAM,SAAS5F,MAAO,CAAEijC,WAAY,UAA/C,SACGtd,EAAIie,iBAEP,eAAC/+B,GAAA,EAAD,CAAWe,MAAM,SAAS5F,MAAO,CAAEijC,WAAY,UAA/C,SACGtd,EAAIke,YAEP,eAACh/B,GAAA,EAAD,CAAWe,MAAM,SAAS5F,MAAO,CAAEijC,WAAY,UAA/C,SACGtd,EAAIme,gBAEP,eAACj/B,GAAA,EAAD,CAAWe,MAAM,SAAS5F,MAAO,CAAEijC,WAAY,UAA/C,SACGtd,EAAIoe,wBAzCM7kC,gBC7OlB,SAAS8kC,GAAT,GAAgE,IAA3CrkC,EAA0C,EAA1CA,KAA0C,IAApCskC,cAAoC,MAA3B,CAAEC,MAAO,EAAGC,OAAQ,GAAO,EAC5ErnB,QAAQC,IAAI,oBAAqBpd,GAEjC,IASMykC,EAAgB,SAACr0B,GACrB,IAAQxD,EAAgDwD,EAAhDxD,GAAIC,EAA4CuD,EAA5CvD,GAAI1I,EAAwCiM,EAAxCjM,OAAwCiM,EAAhC5M,QAAgC4M,EAAvB9Q,MAIjC,OAJwD8Q,EAAhBs0B,aAKtC,KAAK,EACH,OACE,uBACEvlC,EAAGyN,EAAK,IACRxN,EAAGyN,EAAK,IACR3L,MAAM,IACNR,OAAO,IACPyD,OAAQA,EACR9E,KAAK,SAGX,KAAK,EACH,OACE,0BACEslC,OAAQ5gC,OAAO,GAAD,OACT6I,EADS,YACHC,EAAK,IADF,YACSD,EAAK,IADd,YACqBC,EAAK,IAD1B,YACiCD,EAAK,IADtC,YAEVC,EAAK,MAGT1I,OAAQA,EACR9E,KAAK,SAGX,QACE,OAAO,yBAAQuN,GAAIA,EAAIC,GAAIA,EAAItI,EAAE,IAAIJ,OAAQA,EAAQ9E,KAAK,WAIhE,EAA8BsD,mBA3CH,WACzB,IAAMiiC,EAAWrwB,OAAOC,QAAQxU,EAAK,IACjCqZ,EAAM,GAIV,OAHAurB,EAASzf,SAAQ,SAAClG,GAChB5F,EAAG,2BAAQA,GAAR,kBAAc4F,EAAQ,GAAK,OAEzB5F,EAqC8BwrB,IAAvC,mBAAO9hC,EAAP,KAAgBC,EAAhB,KA+BM8hC,EAAe,SAACC,EAASxlC,GAM7B,OAAIwlC,EAJgB,CAAC,UAAW,UAAW,UAAW,WAKjCxlC,GAHA,CAAC,UAAW,UAAW,UAAW,WAMnCA,IAwDtB,OACE,eAAC0D,GAAA,EAAD,CAAqB/B,MAAM,OAAOR,OAAO,MAAzC,SACE,gBAACwC,GAAA,EAAD,CACElD,KAAMA,EACNmB,OAAQ,CACNO,KAAM,IAHV,UAME,eAACG,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,eAACR,GAAA,EAAD,CAAOC,QAAQ,cACf,eAACI,GAAA,EAAD,CACEwB,QAAQ,OACRvB,OAAQ,CAAC,EAAG,SAACojC,GAAD,OAAarpB,KAAKsF,MAAgB,IAAV+jB,OAEtC,eAACrjC,GAAA,EAAD,CACEwB,QAAQ,QACRC,YAAY,QACZxB,OAAQ,CAAC,EAAG,SAACojC,GAAD,OAAarpB,KAAKsF,MAAgB,IAAV+jB,OAEtC,eAAC3hC,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,CAAQC,QA7GO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,sBAAKnD,MAAO,CAAEM,QAAS,OAAQG,eAAgB,SAAU2C,IAAK,QAA9D,SACGD,EAAQrB,KAAI,YAAyB,IAAtBZ,EAAqB,EAArBA,QAASmC,EAAY,EAAZA,MACvB,OACE,yBAEErD,MAAO,CACLsD,SAAU,OACVD,MAAOA,EACPpB,OAAQ,UACRS,QAA8B,IAArBA,EAAQxB,GAAiB,GAAM,GAE1CqC,QAAS,kBAnBF,SAACrC,GAClByB,GAAW,SAACa,GACV,OAAO,2BAAKA,GAAZ,kBAAwBtC,EAAiC,IAAvBsC,EAAUtC,GAAiB,EAAI,OAiB1CuC,CAAWvC,IAR5B,SAUGwC,OAAOxC,GAASyC,eATZzC,WA8BK,WAKpB,IAJA,IAAIqjC,EAAWrwB,OAAOC,QAAQxU,EAAK,IAE/B6Z,EAAQ,GACRorB,EAAa,EACRh9B,EAAI,EAAGA,GAAKq8B,EAAOC,MAAOt8B,IACjC4R,EAAMzR,KACJ,eAACnE,GAAA,EAAD,CACEhE,KAAM2kC,EAAS38B,GAAG,GAClB9E,QAAQ,OACRe,KAAK,WACL3C,QAASqjC,EAAS38B,GAAG,GACrB9D,OAAQ2gC,GAAa,EAAMG,GAC3B7gC,YAAa,EACbC,cAAetB,EAAQ6hC,EAAS38B,GAAG,IAGnCzD,IAAK,eAACigC,EAAD,CAAeC,YAAaO,OAGrCA,GAAc,EAEhB,OAAOprB,EAoDFqrB,GAAgB/iC,KAAI,SAAC8c,GAAD,OAAaA,KAjDjB,WAKrB,IAJA,IAAI2lB,EAAWrwB,OAAOC,QAAQxU,EAAK,IAE/B6Z,EAAQ,GACRorB,EAAa,EACRh9B,EAAIq8B,EAAOC,MAAQ,EAAGt8B,GAAKq8B,EAAOC,MAAQD,EAAOE,OAAQv8B,SAE5C0H,IAAhBi1B,EAAS38B,KACX4R,EAAMzR,KACJ,eAACnE,GAAA,EAAD,CACEhE,KAAM2kC,EAAS38B,GAAG,GAClB9E,QAAQ,QACRe,KAAK,WACL3C,QAASqjC,EAAS38B,GAAG,GACrB9D,OAAQ2gC,GAAa,EAAOG,GAC5B7gC,YAAa,EACbC,cAAetB,EAAQ6hC,EAAS38B,GAAG,IAGnCzD,IAAK,eAACigC,EAAD,CAAeC,YAAaO,OAGrCA,GAAc,GAGlB,OAAOprB,EAyBFsrB,GAAiBhjC,KAAI,SAAC8c,GAAD,OAAaA,UCpH3C,IAAMzZ,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvCS,KAAM,CACJkL,SAAU,OAIR80B,GAAc,CAClB,CAAEnlC,KAAM,UAAWX,MAAO,WAC1B,CAAEW,KAAM,SAAUX,MAAO,UACzB,CAAEW,KAAM,WAAYX,MAAO,WAC3B,CAAEW,KAAM,MAAOX,MAAO,OACtB,CAAEW,KAAM,MAAOX,MAAO,OACtB,CAAEW,KAAM,MAAOX,MAAO,OACtB,CAAEW,KAAM,KAAMX,MAAO,MACrB,CAAEW,KAAM,KAAMX,MAAO,MACrB,CAAEW,KAAM,WAAYX,MAAO,YAGvB+lC,GAAc,CAClB,CAAEplC,KAAM,OAAQX,MAAO,QACvB,CAAEW,KAAM,UAAWX,MAAO,WAC1B,CAAEW,KAAM,SAAUX,MAAO,UACzB,CAAEW,KAAM,WAAYX,MAAO,WAC3B,CAAEW,KAAM,MAAOX,MAAO,OACtB,CAAEW,KAAM,MAAOX,MAAO,OACtB,CAAEW,KAAM,MAAOX,MAAO,OACtB,CAAEW,KAAM,KAAMX,MAAO,MACrB,CAAEW,KAAM,KAAMX,MAAO,MACrB,CAAEW,KAAM,WAAYX,MAAO,YAGd,SAASgmC,KACtB,IAAM3+B,EAAUnB,KAGVuO,EAAW7C,aAAaC,QAAQ,aAEtC,EAAkDvC,KAA1Cb,EAAR,EAAQA,yBAA0BW,EAAlC,EAAkCA,YAElC,EAAwB/L,mBAAS,IAAjC,mBAAOmgC,EAAP,KAAaC,EAAb,KAWMwC,GATqB5mB,KAAKC,MAC9B1N,aAAaC,QAAQ,uBAQA,yCAAG,+BAAA0M,EAAA,+EAECjK,IAAMoJ,KAC3B/d,EAAa,kCACb,CAAE+hB,MAAO9P,aAAaC,QAAQ,eAJV,OAEhBiD,EAFgB,OAMhBpU,EAAOoU,EAASpU,KAEtBwlC,EAAexlC,GARO,gDAUtBwlC,EAAe,CAAC,cAVM,yDAAH,sDAcvB,EAAsC7iC,mBAAS,CAAC,cAAhD,mBAAOg4B,EAAP,KAAoB6K,EAApB,KACA,EAA0C7iC,mBAAS,CAAC,cAApD,mBAAO8iC,EAAP,KAAsBC,EAAtB,KACA,EAA0D/iC,mBAAS,CACjE,cADF,mBAAOgjC,EAAP,KAA8BC,EAA9B,KA0BMC,EAAqB,WACzB,IAAM7uB,EAAO,IAAI3F,KAGjB,OAFA2F,EAAKF,QAAQE,EAAKD,UAAY,GAC9BC,EAAK5B,SAAS,EAAG,EAAG,EAAG,GAChB4B,GAGH8uB,EAAmB,WACvB,IAAM9uB,EAAO,IAAI3F,KAGjB,OAFA2F,EAAKF,QAAQE,EAAKD,UAAY,GAC9BC,EAAK5B,SAAS,GAAI,GAAI,GAAI,GACnB4B,GAGT,EAAgCrU,mBAASkjC,KAAzC,mBAAOxd,EAAP,KAAiBC,EAAjB,KACA,EAA4B3lB,mBAASmjC,KAArC,mBAAOvd,EAAP,KAAeC,EAAf,KAEA,EAA0C7lB,mBAASkjC,KAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KACA,EAAsCrjC,mBAASmjC,KAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAkBA,EAAkCvjC,mBAAS,SAA3C,oBAAOwnB,GAAP,MAAkBC,GAAlB,MAWA,GAAwDznB,oBAAS,GAAjE,qBAAOwjC,GAAP,MAA6BC,GAA7B,MACA,GAA4CzjC,oBAAS,GAArD,qBAAOq4B,GAAP,MAAuBC,GAAvB,MACA,GAAwDt4B,oBAAS,GAAjE,qBAAO0jC,GAAP,MAA6BC,GAA7B,MAEA,GAA4B3jC,mBAAS,IAArC,qBAAO4jC,GAAP,MAAeC,GAAf,MACA,GAAsC7jC,mBAAS,IAA/C,qBAAO8jC,GAAP,MAAoBC,GAApB,MAEMC,GAAS,yCAAG,+BAAA9oB,EAAA,6DAChBuoB,IAAwB,GACxBr4B,GAAyB,GAFT,kBAKS6F,IAAMoJ,KAC3B/d,EAAa,gBACb,CACEy7B,MAAO+K,EACPhyB,UAAW4U,EAAS/W,UACpBoC,QAAS6U,EAAOjX,UAChB6Y,UAAWA,IAEb,CACEpW,SAAUA,IAdA,OAKRK,EALQ,OAiBRpU,EAAOoU,EAASpU,KAEtB+iC,EAAQ/iC,GACR+N,GAAyB,GACzBq4B,IAAwB,GArBV,kDAuBdrD,EAAQ,IACRh1B,GAAyB,GACzBq4B,IAAwB,GAzBV,0DAAH,qDA6Bf,GAAoCzjC,mBAAS,MAA7C,qBAAOikC,GAAP,MAAmBC,GAAnB,MACA,GAAoClkC,mBAAS,QAA7C,qBAAOmkC,GAAP,MAAmBC,GAAnB,MAkBMrc,GAAQ,yCAAG,mCAAA7M,EAAA,6DACfod,IAAkB,GAClBltB,GAAyB,GAFV,kBAIU6F,IAAMoJ,KAC3B/d,EAAa,oBACb,CACEy7B,MAAO+K,EACPhyB,UAAW4U,EAAS/W,UACpBoC,QAAS6U,EAAOjX,UAChB6Y,UAAWA,IAEb,CACEpW,SAAUA,EACV+W,aAAc,SAdL,OAIP1W,EAJO,OAkBP2W,EAAcpU,OAAOqU,IAAIC,gBAAgB,IAAIC,KAAK,CAAC9W,EAASpU,SAC5DmrB,EAAO/e,SAASgf,cAAc,MAC/BnF,KAAO8E,EACRM,EArBS,UAqBKhD,EAAStR,UArBd,YAsBXsR,EAASnR,WAAa,EAtBX,eAuBNqR,EAAOxR,UAvBD,YAuBcwR,EAAOrR,WAAa,EAvBlC,QAwBbiU,EAAKG,aAAa,WAAYD,GAC9Bjf,SAASnH,KAAKsmB,YAAYJ,GAC1BA,EAAKK,QACLL,EAAKM,SACL1d,GAAyB,GACzBktB,IAAkB,GA7BL,kDA+BbvsB,GAAY,SAAC7K,GAAD,mBAAC,eACRA,GADO,IAEVyK,MAAM,EACNC,SAAU,QACVC,QAAS,sBAEXT,GAAyB,GACzBktB,IAAkB,GAtCL,0DAAH,qDA0CR+L,GAAc,yCAAG,mCAAAnpB,EAAA,6DAgCrByoB,IAAwB,GACxBv4B,GAAyB,GAjCJ,kBA2CI6F,IAAMoJ,KAC3B/d,EAAa,0BACb,CACEy7B,MAAOiL,EACPlyB,UAAWsyB,EAAcz0B,UACzBoC,QAASuyB,EAAY30B,UACrBs1B,WAAYA,GACZE,WAAYA,IAEd,CACE/yB,SAAUA,IArDK,OA2CbK,EA3Ca,OAwDbpU,EAAOoU,EAASpU,KACtBmd,QAAQC,IAAIpd,GACNinC,EAAYjnC,EAAKumC,OACvBC,GAAUS,GACJhhC,EAAQjG,EAAKiG,MAEnBygC,GAAezgC,GACf8H,GAAyB,GACzBu4B,IAAwB,GAhEL,kDAkEnBE,GAAU,IACVz4B,GAAyB,GACzBu4B,IAAwB,GApEL,0DAAH,qDA+EpB,OAPA3+B,qBAAU,WACR49B,MAIC,IAGD,uBAAK98B,UAAW9B,EAAQvB,KAAxB,UAiBE,gBAAC6D,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,WAA3B,UACE,eAACoI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACy1B,GAAD,CACE78B,MAAM,QACN+2B,MAAO0B,EACPzB,cAAeuM,EACftM,aA7Qe,SAAC7hB,GACxB,IAAIhY,EAAQgY,EAAMC,OAAOjY,MACO,QAA5BA,EAAMA,EAAM4I,OAAS,GAMzBw9B,EAAiBpmC,GALfomC,EACED,EAAcv9B,SAAWyyB,EAAYzyB,OAAS,GAAKyyB,QA4QnD,eAAC1xB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC,KAAD,CAAyB2E,MAAOC,IAAhC,SACE,gBAAC7G,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAAC,KAAD,CACE0jB,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,0BACHzK,MAAM,OACN5C,MAAO+oB,EACPpY,SAhPe,SAAC+G,GAC5BsR,EAAYtR,IAgPA6V,oBAAqB,CACnB,aAAc,aAEhBplB,KAAK,QACLo4B,WAAY,CACVx/B,MAAO,CACLsD,SAAU,UAGdtD,MAAO,CAAEa,MAAO,OAElB,eAAC,KAAD,CACE0rB,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,wBACHzK,MAAM,KACN5C,MAAOipB,EACPtY,SA/Pa,SAAC+G,GAC1BwR,EAAUxR,IA+PE6V,oBAAqB,CACnB,aAAc,WAEhBplB,KAAK,QACLo4B,WAAY,CACVx/B,MAAO,CACLsD,SAAU,UAGdtD,MAAO,CAAEa,MAAO,IAAKgK,WAAY,iBAKzC,eAACjC,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,gBAACkM,EAAA,EAAD,WACE,eAAC2U,GAAA,EAAD,CAAYpf,GAAG,gCAAf,uBAGA,gBAAC0K,EAAA,EAAD,CACEkH,QAAQ,gCACR5R,GAAG,0BACHrN,MAAO6qB,GACPla,SAzQkB,SAACqH,GAC7B,IAAIhY,EAAQgY,EAAMC,OAAOjY,MACzB8qB,GAAa9qB,IAwQHe,MAAO,CAAEsD,SAAU,SALrB,UAOE,eAAC6T,EAAA,EAAD,CAAUlY,MAAO,QAAjB,mBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,MAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,MAAjB,yBAIN,eAAC2J,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC0Y,EAAA,EAAD,CACE5iB,QAAQ,WACR0C,MAAM,UACN+D,KAAK,QACL7D,QAAS+iC,GACTrZ,SAAU6Y,GALZ,SAOGA,GAAuB,UAAY,WAGxC,eAACl9B,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,SACE,eAAC0Y,EAAA,EAAD,CACE5iB,QAAQ,WACR0C,MAAM,UACN+D,KAAK,QACL7D,QAAS8mB,GACT4C,SAAU0N,GALZ,SAOGA,GAAiB,cAAgB,aAIxC,eAAC6H,GAAD,CAAWC,KAAMA,EAAMC,QAASA,IAChC,gBAAC95B,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,WAAWR,MAAO,CAAE8K,UAAW,QAA1D,UACE,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACy1B,GAAD,CACE78B,MAAM,QACN+2B,MAAO0B,EACPzB,cAAeyM,EACfxM,aAjWuB,SAAC7hB,GAChC,IAAIhY,EAAQgY,EAAMC,OAAOjY,MACO,QAA5BA,EAAMA,EAAM4I,OAAS,GAMzB09B,EAAyBtmC,GALvBsmC,EACED,EAAsBz9B,SAAWyyB,EAAYzyB,OAAS,GAAKyyB,QAgW3D,eAAC1xB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC,KAAD,CAAyB2E,MAAOC,IAAhC,SACE,gBAAC7G,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAAC,KAAD,CACE0jB,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,0BACHzK,MAAM,OACN5C,MAAOymC,EACP91B,SAvUoB,SAAC+G,GACjCgvB,EAAiBhvB,IAuUL6V,oBAAqB,CACnB,aAAc,aAEhBplB,KAAK,QACLo4B,WAAY,CACVx/B,MAAO,CACLsD,SAAU,UAGdtD,MAAO,CAAEa,MAAO,OAElB,eAAC,KAAD,CACE0rB,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,wBACHzK,MAAM,KACN5C,MAAO2mC,EACPh2B,SAtVkB,SAAC+G,GAC/BkvB,EAAelvB,IAsVH6V,oBAAqB,CACnB,aAAc,WAEhBplB,KAAK,QACLo4B,WAAY,CACVx/B,MAAO,CACLsD,SAAU,UAGdtD,MAAO,CAAEa,MAAO,IAAKgK,WAAY,iBAKzC,eAACjC,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,gBAACkM,EAAA,EAAD,WACE,eAAC2U,GAAA,EAAD,CAAYpf,GAAG,0BAAf,gBACA,eAAC0K,EAAA,EAAD,CACEkH,QAAQ,0BACR5R,GAAG,mBACHrN,MAAOsnC,GACP32B,SAtTmB,SAACqH,GAC9B,IAAMhY,EAAQgY,EAAMC,OAAOjY,MACvBA,IAAUwnC,IAGdD,GAAcvnC,IAkTJe,MAAO,CAAEsD,SAAU,SALrB,SAOGyhC,GAAYjjC,KAAI,SAAC8c,GAAD,OACf,eAACzH,EAAA,EAAD,CAAUlY,MAAO2f,EAAQ3f,MAAzB,SAAiC2f,EAAQhf,iBAKjD,eAACgJ,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,gBAACkM,EAAA,EAAD,WACE,eAAC2U,GAAA,EAAD,CAAYpf,GAAG,0BAAf,gBACA,eAAC0K,EAAA,EAAD,CACEkH,QAAQ,0BACR5R,GAAG,oBACHrN,MAAOwnC,GACP72B,SA9TmB,SAACqH,GAC9B,IAAMhY,EAAQgY,EAAMC,OAAOjY,MACvBA,IAAUsnC,IAGdG,GAAcznC,IA0TJe,MAAO,CAAEsD,SAAU,SALrB,SAOG0hC,GAAYljC,KAAI,SAAC8c,GAAD,OACf,eAACzH,EAAA,EAAD,CAAUlY,MAAO2f,EAAQ3f,MAAzB,SAAiC2f,EAAQhf,iBAKjD,eAACgJ,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC0Y,EAAA,EAAD,CACE5iB,QAAQ,WACR0C,MAAM,UACN+D,KAAK,QACL7D,QAASojC,GACT1Z,SAAU+Y,GALZ,SAOGA,GAAuB,UAAY,cAI1C,eAACp9B,EAAA,EAAD,CACEC,WAAS,EACT7I,MAAO,CACLoN,aAAc,QAHlB,SAMG84B,GAAOpkC,KAAI,SAAC+kC,EAAO3nC,GAAR,OACV,eAAC0J,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,gBAAC/I,EAAA,EAAD,CACEE,MAAO,CACLa,MAAO,OACPR,OAAQ,QACRyK,UAAW,OACX7K,WAAY,SACZoP,cAAe,SANnB,UASE,eAAC3O,EAAA,EAAD,CACEV,MAAO,CAAE6K,WAAY,OAAQuC,aAAc,UAD7C,SAGGy5B,EAAMhqB,OAET,eAACmnB,GAAD,CAAWrkC,KAAMknC,EAAMlnC,KAAMskC,OAAQmC,SAfpBlnC,WC/jBhB,SAAS4nC,GAAT,GAAgD,IAAD,IAAtBrE,YAAsB,MAAf,GAAe,EAAXC,EAAW,EAAXA,QACjD,EAAwBpgC,mBAAS,GAAjC,mBAAOgsB,EAAP,KAAaC,EAAb,KACA,EAAkCjsB,mBAAS,GAA3C,mBAAOksB,EAAP,KAAkBC,EAAlB,KAEAnnB,qBAAU,WACR,GAAIm7B,EAAK56B,OAAS,EAAG,CACnB,IAAIopB,EAAQ3V,KAAKC,KAAKknB,EAAK56B,OARb,IASd4mB,EAAawC,MAEd,CAACwR,IAEJ,IAIA,EAAgCngC,oBAAS,GAAzC,mBAAOqgC,EAAP,KAAiBC,EAAjB,KAEMC,EAAkB,SAAC5rB,EAAO6rB,GAC9B,IAAIC,EAAa,GAEfA,EADEJ,EACWF,EAAKllB,MAAK,SAACC,EAAGC,GAAJ,OACrBD,EAAEslB,KAAkBrlB,EAAEqlB,GAClBtlB,EAAEslB,GAAgBrlB,EAAEqlB,IACjB,EACD,EACF,KAGOL,EAAKllB,MAAK,SAACC,EAAGC,GAAJ,OACrBD,EAAEslB,KAAkBrlB,EAAEqlB,GAClBtlB,EAAEslB,GAAgBrlB,EAAEqlB,GAClB,GACC,EACH,KAGRJ,EAAQK,GACRH,GAAY,SAACp/B,GAAD,OAAgBA,MAGxByN,EAAU,SAACrC,GACf,IAAI+H,EAAO,IAAI3F,KAAiB,IAAZpC,GACpB,MAAM,GAAN,OAAUlL,OAAOiT,EAAKD,WAAWE,SAAS,EAAG,GAA7C,YAAmDlT,OACjDiT,EAAKE,WAAa,GAClBD,SAAS,EAAG,GAFd,YAEoBlT,OAAOiT,EAAKsG,YAAYrG,SAAS,EAAG,GAFxD,YAE8DlT,OAC5DiT,EAAKuG,cACLtG,SAAS,EAAG,KAGVmwB,EAAkB,SAACphB,GACvB,OAAIA,EAAIqhB,qBAAuB,EACtB,MAEF,SAGT,OACE,gBAACp+B,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE2rB,SAAU,OAAQ7gB,UAAW,QAAtD,UACE,eAAC5C,GAAA,EAAD,CAAgBzC,UAAW0C,KAA3B,SACE,gBAACE,GAAA,EAAD,CACE,aAAW,eACXjB,KAAK,QACLpH,MAAO,CAAEgjC,UAAW,QAHtB,UAKE,eAACz6B,GAAA,EAAD,UACE,gBAACrD,GAAA,EAAD,CAAUlF,MAAO,CAAEwE,gBAAiB,WAApC,UACE,eAACK,GAAA,EAAD,CACEe,MAAM,OACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,SAP7C,kBAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,SAP7C,kBAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,cAP7C,mBAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,iBAP7C,sBAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OACP4rB,EAAgB5rB,EAAO,yBAR3B,mCAaA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,gBAP7C,0BAWA,eAACpS,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZhhC,OAAQ,UACRoB,MAAO,QAETE,QAAS,SAAC0T,GAAD,OAAW4rB,EAAgB5rB,EAAO,YAP7C,+BAaJ,gBAACzO,GAAA,EAAD,WACmB,IAAhBi6B,EAAK56B,QACJ,eAAC3C,GAAA,EAAD,UACE,eAACL,GAAA,EAAD,CACEY,UAAU,KACVC,MAAM,MACN1F,MAAO,CAAEijC,WAAY,UAHvB,iCASHR,EAAK56B,OAAS,GACb46B,EACGzT,MAnKG,IAmKIV,EAAO,GAnKX,GAmK6BA,GAChCxsB,KAAI,SAAC6jB,EAAKzmB,GAAN,OACH,gBAACgG,GAAA,EAAD,WACE,eAACL,GAAA,EAAD,CACEe,MAAM,OACN5F,MAAO,CACLijC,WAAY,SACZ5/B,MAAO0jC,EAAgBphB,IAJ3B,SAOG1U,EAAQ0U,EAAI3T,QAEf,eAACnN,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZ5/B,MAAO0jC,EAAgBphB,IAJ3B,SAOGA,EAAI9I,OAEP,eAAChY,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZ5/B,MAAO0jC,EAAgBphB,IAJ3B,SAOGA,EAAIpN,YAEP,eAAC1T,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZ5/B,MAAO0jC,EAAgBphB,IAJ3B,SAOGA,EAAIshB,eAEP,eAACpiC,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZ5/B,MAAO0jC,EAAgBphB,IAJ3B,SAOGA,EAAIqhB,uBAEP,eAACniC,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZ5/B,MAAO0jC,EAAgBphB,IAJ3B,SAOGA,EAAIuhB,UAEP,eAACriC,GAAA,EAAD,CACEe,MAAM,SACN5F,MAAO,CACLijC,WAAY,SACZ5/B,MAAO0jC,EAAgBphB,IAJ3B,SAOGA,EAAIwhB,YA9DMjoC,cAqE3B,eAAC0J,EAAA,EAAD,CACEC,WAAS,EACT7I,MAAO,CACL8K,UAAW,QACXxK,QAAS,OACTG,eAAgB,UALpB,SAQE,eAACuwB,GAAA,EAAD,CACEC,MAAOzC,EACPF,KAAMA,EACN1e,SAxOiB,SAACqH,EAAOhY,GAC/BsvB,EAAQtvB,IAwOFmI,KAAK,eC1Mf,IAAMjC,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvCS,KAAM,CACJkL,SAAU,OA6BC,SAASm3B,KACtB,IAAM9gC,EAAUnB,KAGVuO,EAAW7C,aAAaC,QAAQ,aAEtC,EAAkDvC,KAA1Cb,EAAR,EAAQA,yBAA0BW,EAAlC,EAAkCA,YAElC,EAAwB/L,mBAAS,IAAjC,mBAAOmgC,EAAP,KAAaC,EAAb,KAEMvI,EAAqB7b,KAAKC,MAC9B1N,aAAaC,QAAQ,uBAqBvB,EAAsCxO,mBAjBrB,WAAiC,IAAhC+3B,EAA+B,uDAAvBF,EACxB,OAAOE,EAAMv4B,KAAI,SAAC+a,GAAD,OAAUA,EAAKjd,QAgBaw6B,IAA/C,mBAAOE,EAAP,KAEA,GAFA,KAE0Ch4B,mBAAS,CAAC,WAApD,mBAAO8iC,EAAP,KAAsBC,EAAtB,KAaMG,EAAqB,WACzB,IAAM7uB,EAAO,IAAI3F,KAGjB,OAFA2F,EAAKF,QAAQE,EAAKD,UAAY,GAC9BC,EAAK5B,SAAS,GAAI,EAAG,EAAG,GACjB4B,GAGH8uB,EAAmB,WACvB,IAAM9uB,EAAO,IAAI3F,KAGjB,OAFA2F,EAAKF,QAAQE,EAAKD,UAAY,GAC9BC,EAAK5B,SAAS,GAAI,EAAG,EAAG,GACjB4B,GAGT,EAAgCrU,mBAASkjC,KAAzC,mBAAOxd,EAAP,KAAiBC,EAAjB,KACA,EAA4B3lB,mBAASmjC,KAArC,mBAAOvd,EAAP,KAAeC,EAAf,KAEA,EAA0C7lB,mBAASkjC,KAAnD,mBACA,GADA,UACsCljC,mBAASmjC,MAA/C,mBAUA,GAVA,UAUwDnjC,oBAAS,IAAjE,mBAAOwjC,EAAP,KAA6BC,EAA7B,KACA,EAA4CzjC,oBAAS,GAArD,mBAAOq4B,EAAP,KAAuBC,EAAvB,KAEM0L,EAAS,yCAAG,+BAAA9oB,EAAA,6DAChBuoB,GAAwB,GACxBr4B,GAAyB,GAFT,kBAKS6F,IAAMoJ,KAC3B/d,EAAa,gCACb,CACEy7B,MAAO+K,EACPhyB,UAAW4U,EAAS/W,UACpBoC,QAAS6U,EAAOjX,WAGlB,CACEwC,QAAS,CACPC,SAAUA,KAfF,OAKRK,EALQ,OAoBRpU,EAAOoU,EAASpU,KAAK4d,MAAK,SAACC,EAAGC,GAAJ,OAC9BD,EAAExL,KAAOyL,EAAEzL,MAAQ,EAAIwL,EAAExL,KAAOyL,EAAEzL,KAAO,EAAI,KAG/C0wB,EAAQ/iC,GACR+N,GAAyB,GACzBq4B,GAAwB,GA1BV,kDA4BdrD,EAAQ,IACRh1B,GAAyB,GACzBq4B,GAAwB,GA9BV,0DAAH,qDAkCT1b,EAAQ,yCAAG,mCAAA7M,EAAA,6DACfod,GAAkB,GAClBltB,GAAyB,GAFV,kBAIU6F,IAAMoJ,KAC3B/d,EAAa,oCACb,CACEy7B,MAAO+K,EACPhyB,UAAW4U,EAAS/W,UACpBoC,QAAS6U,EAAOjX,WAGlB,CACEwC,QAAS,CACPC,SAAUA,EACV+W,aAAc,UAfP,OAIP1W,EAJO,OAmBP2W,EAAcpU,OAAOqU,IAAIC,gBAAgB,IAAIC,KAAK,CAAC9W,EAASpU,SAC5DmrB,EAAO/e,SAASgf,cAAc,MAC/BnF,KAAO8E,EACRM,EAtBS,UAsBKhD,EAAStR,UAtBd,YAuBXsR,EAASnR,WAAa,EAvBX,eAwBNqR,EAAOxR,UAxBD,YAwBcwR,EAAOrR,WAAa,EAxBlC,QAyBbiU,EAAKG,aAAa,WAAYD,GAC9Bjf,SAASnH,KAAKsmB,YAAYJ,GAC1BA,EAAKK,QACLL,EAAKM,SACL1d,GAAyB,GACzBktB,GAAkB,GA9BL,kDAgCbvsB,GAAY,SAAC7K,GAAD,mBAAC,eACRA,GADO,IAEVyK,MAAM,EACNC,SAAU,QACVC,QAAS,sBAEXT,GAAyB,GACzBktB,GAAkB,GAvCL,0DAAH,qDA2Cd,OACE,uBAAKxyB,UAAW9B,EAAQvB,KAAxB,UACE,gBAAC6D,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,WAA3B,UACE,eAACoI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACy1B,GAAD,CACE78B,MAAM,QACN+2B,MAAO0B,EACPzB,cAAeuM,EACftM,aA/He,SAAC7hB,GACxB,IAAIhY,EAAQgY,EAAMC,OAAOjY,MACO,QAA5BA,EAAMA,EAAM4I,OAAS,GAMzBw9B,EAAiBpmC,GALfomC,EACED,EAAcv9B,SAAWyyB,EAAYzyB,OAAS,GAAKyyB,QA8HnD,eAAC1xB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC,KAAD,CAAyB2E,MAAOC,IAAhC,SACE,gBAAC7G,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAAC,KAAD,CACE0jB,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,0BACHzK,MAAM,OACN5C,MAAO+oB,EACPpY,SA7Ge,SAAC+G,GAC5BsR,EAAYtR,IA6GA6V,oBAAqB,CACnB,aAAc,aAEhBplB,KAAK,QACLo4B,WAAY,CACVx/B,MAAO,CACLsD,SAAU,UAGdtD,MAAO,CAAEa,MAAO,OAElB,eAAC,KAAD,CACE0rB,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPqB,GAAG,wBACHzK,MAAM,KACN5C,MAAOipB,EACPtY,SA5Ha,SAAC+G,GAC1BwR,EAAUxR,IA4HE6V,oBAAqB,CACnB,aAAc,WAEhBplB,KAAK,QACLo4B,WAAY,CACVx/B,MAAO,CACLsD,SAAU,UAGdtD,MAAO,CAAEa,MAAO,IAAKgK,WAAY,iBAKzC,eAACjC,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC0Y,EAAA,EAAD,CACE5iB,QAAQ,WACR0C,MAAM,UACN+D,KAAK,QACL7D,QAAS+iC,EACTrZ,SAAU6Y,EALZ,SAOGA,EAAuB,UAAY,WAGxC,eAACl9B,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,SACE,eAAC0Y,EAAA,EAAD,CACE5iB,QAAQ,WACR0C,MAAM,UACN+D,KAAK,QACL7D,QAAS8mB,EACT4C,SAAU0N,EALZ,SAOGA,EAAiB,cAAgB,aAIxC,eAACmM,GAAD,CAAerE,KAAMA,EAAMC,QAASA,OC1T3B,SAAS2E,GAAT,GAKX,IAJFrf,EAIC,EAJDA,SACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,OACAC,EACC,EADDA,UAUA,OACE,gBAAC,KAAD,CAAyB3Y,MAAOC,IAAhC,UACE,eAAC,KAAD,CACE8c,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPnK,OAAO,SACPwL,GAAG,qBACHzK,MAAM,aACN5C,MAAO+oB,EACPpY,SAlBuB,SAAC+G,GAC5BsR,EAAYtR,IAkBR6V,oBAAqB,CACnB,aAAc,eAEhBgT,WAAY,CACVx/B,MAAO,CACLsD,SAAU,UAGdtD,MAAO,CAAEa,MAAO,IAAKO,QAAS,EAAGN,OAAQ,KAE3C,eAAC,KAAD,CACEA,OAAO,SACPwL,GAAG,qBACHzK,MAAM,WACNoJ,OAAO,aACPhM,MAAOipB,EACPtY,SA/BqB,SAAC+G,GAC1BwR,EAAUxR,IA+BN6V,oBAAqB,CACnB,aAAc,eAEhBgT,WAAY,CACVx/B,MAAO,CACLsD,SAAU,UAGdtD,MAAO,CAAEa,MAAO,IAAKkf,YAAa,EAAGlV,WAAY,OAAQzJ,QAAS,Q,qDC/CpE+D,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvCS,KAAM,CACJzE,QAAS,OACTm5B,SAAU,OACVh5B,eAAgB,eAChB6mC,SAAU,SACV9iC,gBAAiBF,EAAMG,QAAQ7C,WAAWwc,OAE5CmpB,UAAW,CACT9N,SAAU,SAEVttB,UAAW,iBAEbpF,MAAO,CACL1D,MAAOiB,EAAMG,QAAQ2nB,QAAQob,OAE/BC,SAAU,CACR7lC,WACE,4FAsBA8lC,GAAgB,SAACC,GACrB,IAAMhxB,EAAO,IAAI3F,KAAKnR,OAAO8nC,IAU7B,OAREhxB,EAAKD,UACL,IACAC,EAAKE,WAFLF,MAKAA,EAAKsG,WACL,IACAtG,EAAKuG,cAIM,SAAS0qB,GAAT,GAIX,IAAD,IAHDC,gBAGC,MAHU,GAGV,EAFD92B,EAEC,EAFDA,UACA+2B,EACC,EADDA,iBAEgB3iC,KAYhB,OA6BE,eA5BA,CA4BA,iBACE,uBACEnF,MAAO,CACLa,MAAO,SACPP,QAASunC,EAAShgC,OAAS,EAAI,OAAS,OACxCpH,eAAgB,gBAChBL,aAAc,QALlB,UAQE,eAAC,KAAD,CACEiD,MAAM,UACNrD,MAAO,CAAEiC,OAAQ,WACjBmF,KAAK,QACL7D,QAlDO,WACbwI,SAASC,eAAe,mBAAmB+7B,YAHzB,OAsDd,eAAC,KAAD,CACE1kC,MAAM,UACNrD,MAAO,CAAEiC,OAAQ,WACjBmF,KAAK,QACL7D,QApDO,WACbwI,SAASC,eAAe,mBAAmB+7B,YAPzB,UA6DhB,sBACE/nC,MAAO,CACLa,MAAO,SACPmiC,UAAW,SACXC,WAAY,SACZ3iC,QAASunC,EAAShgC,OAAS,EAAI,QAAU,OACzCiD,UAAW,SAEbwB,GAAG,kBARL,SAUGu7B,EAAS/lC,KAAI,SAACmH,EAAM/J,GAAP,OACZ,uBACEc,MAAO,CACLM,QAAS,eACTuK,WAAY3L,EAAQ,GAAoB,YAAf+J,EAAKlC,MAAsB,OAAS,IAC7DiC,YAA4B,YAAfC,EAAKlC,MAAsB,SAAW,IAJvD,UAOE,yBAAO/G,MAAO,CAAEsD,SAAU,SAA1B,wBACc2F,EAAK41B,aAEnB,wBACA,yBAAO7+B,MAAO,CAAEsD,SAAU,SAA1B,oBACU2F,EAAK++B,KADf,gBACkC/+B,EAAKg/B,QAEvC,wBACA,yBAAOjoC,MAAO,CAAEsD,SAAU,SAA1B,oBACU2F,EAAKi/B,KADf,gBACkCj/B,EAAKk/B,QAEvC,wBACA,uBAAK//B,UAAU,kBAAf,UACE,uBAAKA,UAAU,kBAAf,UACE,wBAAOpI,MAAO,CAAEsD,SAAU,SAA1B,SAAsC2F,EAAKlC,QAC3C,wBAAO/G,MAAO,CAAEsD,SAAU,QAASuH,WAAY,QAA/C,SACG68B,GAAcz+B,EAAK2F,gBAGxB,sBACE9F,IAAKiI,EAAY9H,EAAKm/B,OACtBr/B,IAAKE,EAAKlC,MACVlG,MAAO,IACPb,MAAO,CAAEiC,OAAQ,WACjBsB,QAAS,WACPukC,EACE/2B,EAAY9H,EAAKm/B,OACjBn/B,EAAKlC,MAAQ,IAAM2gC,GAAcz+B,EAAK2F,6BC/K1D,IAAM84B,GAAgB,SAACC,GACrB,IAAMhxB,EAAO,IAAI3F,KAAKnR,OAAO8nC,IAW7B,OADehxB,EAAKD,UAAY,IAAMC,EAAKE,WAAa,GAI3C,SAASwxB,GAAT,GAAuD,IAAtC1oC,EAAqC,EAArCA,KAAMoR,EAA+B,EAA/BA,UAAW+2B,EAAoB,EAApBA,iBAC/C,OACE,eAACl/B,EAAA,EAAD,CAAMC,WAAS,EAACpI,eAAe,SAA/B,SACGd,EAAKmC,KAAI,SAACuX,EAAOna,GAAR,OACR,eAAC0J,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAsB,IAAV3L,EAAc,SAAW,GAAzD,SACE,iCACE,yBAAOc,MAAO,CAAEsD,SAAU,SAA1B,UACG,IADH,cAEc+V,EAAMiR,cAEpB,wBACA,yBAAOtqB,MAAO,CAAEsD,SAAU,SAA1B,oBACU+V,EAAM2uB,KADhB,gBACmC3uB,EAAM4uB,QAEzC,wBACA,yBAAOjoC,MAAO,CAAEsD,SAAU,SAA1B,oBACU+V,EAAM6uB,KADhB,gBACmC7uB,EAAM8uB,QAGzC,uBAAK//B,UAAU,kBAAf,UACE,uBAAKA,UAAU,kBAAf,UACE,wBAAOpI,MAAO,CAAEsD,SAAU,SAA1B,SAAsC+V,EAAMtS,QAC5C,wBAAO/G,MAAO,CAAEsD,SAAU,QAASuH,WAAY,SAA/C,SACG68B,GAAcruB,EAAMzK,gBAGzB,sBACE9F,IAAKiI,EAAYsI,EAAM2R,SACvBjiB,IAAKsQ,EAAMtS,MACXlG,MAAO,IACPb,MAAO,CAAEiC,OAAQ,WACjBsB,QAAS,WACPukC,EACE/2B,EAAYsI,EAAM2R,SAClB3R,EAAMtS,MAAQ,IAAM2gC,GAAcruB,EAAMzK,4BCvC5D,IAAMzJ,GAAYC,aAAW,SAACd,GAAD,MAAY,MAkM1BgkC,OAxLf,WACkBnjC,KAAhB,IAEM4L,EAAY,4BAElB,EAA4CzO,oBAAS,GAArD,mBAAOimC,EAAP,KAAuBC,EAAvB,KACA,EAA0ClmC,mBAAS,IAAnD,mBAAOmmC,EAAP,KAAsBC,EAAtB,KACA,EAAkDpmC,mBAAS,IAA3D,mBAAOqmC,EAAP,KAA0BC,EAA1B,KAEA,EAAgCtmC,mBAAS,IAAI0O,KAAK,cAAlD,mBAAOgX,EAAP,KAAiBC,EAAjB,KACA,EAA4B3lB,mBAAS,IAAI0O,MAAzC,mBAAOkX,EAAP,KAAeC,EAAf,KAEA,EAA8B1hB,IAAMnE,SAAS,GAA7C,mBAAOumC,EAAP,KAAgBC,EAAhB,KAMA,EAAgCriC,IAAMnE,SAAS,GAA/C,mBAAOymC,EAAP,KAAiBC,EAAjB,KAMM7O,EAAqB7b,KAAKC,MAC9B1N,aAAaC,QAAQ,uBAQvB,EAAsCxO,mBAJrB,WAAiC,IAAhC+3B,EAA+B,uDAAvBF,EACxB,OAAOE,EAAMv4B,KAAI,SAAC+a,GAAD,OAAUA,EAAKjd,QAGaw6B,IAA/C,mBAAOE,EAAP,KACA,GADA,KAC0Ch4B,mBAAS,CAAC,eAApD,mBAAO8iC,EAAP,KAAsBC,EAAtB,KAEA,EAAwB/iC,mBAAS,IAAjC,mBAAO3C,EAAP,KAAaspC,EAAb,KACA,EAA4B3mC,mBAAS,IAArC,mBAAO4mC,EAAP,KAAeC,GAAf,KAaMC,GAAc,yCAAG,6BAAA5rB,EAAA,+EAEIjK,IAAMoJ,KAAK5L,EAAY,iBAAkB,CAC9Ds4B,SAAU,YACVj2B,UAAW4U,EAAS/W,UACpBoC,QAAS6U,EAAOjX,YALC,OAEb8C,EAFa,OAQnBk1B,EAAQl1B,EAASpU,MARE,gDAUnBmd,QAAQC,IAAR,MAVmB,yDAAH,qDAcdusB,GAAS,yCAAG,6BAAA9rB,EAAA,+EAISjK,IAAMoJ,KAAK5L,EAAY,kBAAmB,CAC/Ds4B,SAAU,YACVj2B,UAAW4U,EAAS/W,UACpBoC,QAAS6U,EAAOjX,YAPJ,OAIR8C,EAJQ,OAUdo1B,GAAUp1B,EAASpU,MAVL,gDAYdmd,QAAQC,IAAR,MAZc,yDAAH,qDAqBT+qB,GAAmB,SAACyB,EAAKC,GAE7BhB,GAAkB,GAClBE,EAAiBa,GACjBX,EAAqBY,IAOvB,OACE,iCACE,gBAAC5gC,EAAA,EAAD,CAAMC,WAAS,EAACrI,WAAW,WAA3B,UACE,eAACoI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACy1B,GAAD,CACE78B,MAAM,QACN+2B,MAAO0B,EACPzB,cAAeuM,EACftM,aAjEe,SAAC7hB,GACxB,IAAIhY,EAAQgY,EAAMC,OAAOjY,MACO,QAA5BA,EAAMA,EAAM4I,OAAS,GAMzBw9B,EAAiBpmC,GALfomC,EACED,EAAcv9B,SAAWyyB,EAAYzyB,OAAS,GAAKyyB,QAgEnD,eAAC1xB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,gBAACkM,EAAA,EAAD,CAAa/W,MAAO,CAAEa,MAAO,IAA7B,UACE,eAAC6qB,GAAA,EAAD,CAAYpf,GAAG,wBAAf,sBACA,eAAC0K,EAAA,EAAD,CACEkH,QAAQ,wBACR5R,GAAG,kBACHrN,MAAO4pC,EACPj5B,SApGgB,SAACqH,GAC3B6xB,EAAW7xB,EAAMC,OAAOjY,QAoGde,MAAO,CAAEsD,SAAU,SALrB,SAOE,eAAC6T,EAAA,EAAD,CAAUlY,MAAO,EAAjB,sBAIN,eAAC2J,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,gBAACkM,EAAA,EAAD,CAAa/W,MAAO,CAAEa,MAAO,IAA7B,UACE,eAAC6qB,GAAA,EAAD,CAAYpf,GAAG,yBAAf,uBACA,eAAC0K,EAAA,EAAD,CACEkH,QAAQ,yBACR5R,GAAG,mBACHrN,MAAO8pC,EACPn5B,SA5GiB,SAACqH,GAC5B+xB,EAAY/xB,EAAMC,OAAOjY,QA4Gfe,MAAO,CAAEsD,SAAU,SALrB,SAOE,eAAC6T,EAAA,EAAD,CAAUlY,MAAO,EAAjB,sBAIN,eAAC2J,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC,GAAD,CACEmd,SAAUA,EACVC,YAAaA,EACbC,OAAQA,EACRC,UAAWA,MAGf,eAACvf,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC0Y,EAAA,EAAD,CAAQ5iB,QAAQ,WAAW4C,QAhEhB,WACjB6lC,KACAE,MA8DM,uBAKJ,eAAC1gC,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,QAApC,SACE,eAACu9B,GAAD,CACE1oC,KAAMA,EACNoR,UAAWA,EACX+2B,iBAAkBA,OAGtB,eAACl/B,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,UAApC,SACE,eAAC,GAAD,CACE+8B,SAAUqB,EACVn4B,UAAWA,EACX+2B,iBAAkBA,OAGtB,eAAC2B,EAAA,EAAD,CACEx7B,KAAMs6B,EACN54B,QAzEwB,WAC5B64B,GAAkB,IAyEdxoC,MAAO,CACLM,QAAS,OACTG,eAAgB,SAChBD,WAAY,SACZH,OAAQ,SAPZ,SAUGooC,GACC,iCACE,sBAAKzoC,MAAO,CAAEqD,MAAO,QAArB,SAAgCslC,IAChC,sBAAK7/B,IAAK2/B,EAAe1/B,IAAK4/B,EAAmB9nC,MAAO,eCzMvD6oC,GAA2B,CACtC,CAAE9pC,KAAM,YAAawb,OAAQ,CAAC,CAAExb,KAAM,MAAOyb,UAAW,CAAC,CAAEzb,KAAM,QAGtC0e,KAAKC,MAAM1N,aAAaC,QAAQ,kBAC3BwN,KAAKC,MACrC1N,aAAaC,QAAQ,uBCSvB,SAAS64B,GAAW/pC,EAAMgqC,EAAUC,EAAKC,EAAOC,GAC9C,MAAO,CAAEnqC,OAAMgqC,WAAUC,MAAKC,QAAOC,WAIrCJ,GAAW,iBAAkB,IAAK,EAAK,GAAI,GAC3CA,GAAW,qBAAsB,IAAK,EAAK,GAAI,KAC/CA,GAAW,SAAU,IAAK,GAAM,GAAI,GACpCA,GAAW,UAAW,IAAK,IAAK,GAAI,KACpCA,GAAW,cAAe,IAAK,GAAM,GAAI,KAG5B,SAASK,GAAT,GAA2C,IAAjBC,EAAgB,EAAhBA,aAC/Bl/B,EAAkBk/B,EAAlBl/B,QAASpL,EAASsqC,EAATtqC,KAIjB,EAAwB2C,mBAAS,GAAjC,mBAAOgsB,EAAP,KAAaC,EAAb,KAEA,EAAkCjsB,mBAAS,GAA3C,mBAAOksB,EAAP,KAAkBC,EAAlB,KAEA,EAA0CnsB,mBAAS,IAAnD,mBAAOosB,EAAP,KAAsBC,EAAtB,KAEArnB,qBAAU,WACJ3H,IAEF4uB,GAAQ,kBAAO5uB,EAAKkI,OAAS,EAAI,EAAI,KACrC4mB,GAAa,kBACX9uB,EAAKkI,OAAS,EAAIyT,KAAKC,KAAK5b,EAAKkI,OAbrB,IAa2C,KAEzD8mB,GAAiB,kBAAOhvB,EAAKkI,OAAS,EAAIlI,EAAKqvB,MAAM,EAfvC,IAeuD,SAEtE,CAACrvB,IAQJ,OACE,gBAACiJ,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACX,GAAA,EAAD,CAAgBzC,UAAW0C,KAAOnI,MAAO,CAAE2rB,SAAU,QAArD,SACE,gBAACtjB,GAAA,EAAD,CAAOjB,KAAK,QAAQ,aAAW,eAA/B,UACE,eAACmB,GAAA,EAAD,UACE,eAACrD,GAAA,EAAD,CAAUlF,MAAO,CAAEwE,gBAAiB,WAApC,SACGuG,EAAQjJ,KAAI,SAACooC,GAAD,OACX,eAACrlC,GAAA,EAAD,CAAW7E,MAAO,CAAEqD,MAAO,QAA3B,SAAsC6mC,WAI5C,eAAC1hC,GAAA,EAAD,UACGkmB,EAAc5sB,KAAI,SAAC6jB,EAAKzmB,GACvB,OACE,eAACgG,GAAA,EAAD,CAEE27B,GAAI,CAAE,mCAAoC,CAAEha,OAAQ,IAFtD,SAIGlB,EAAI7jB,KAAI,SAAC2lB,EAAI0iB,GACZ,OAAiB,IAAbA,EAEA,eAACtlC,GAAA,EAAD,CAAWY,UAAU,KAAKC,MAAM,MAAhC,SACG,IAAIsL,KAAkB,IAAbnR,OAAO4nB,IAAY3R,mBAI1B,eAACjR,GAAA,EAAD,UAAY4iB,QAXlBvoB,aAoBjB,eAAC0J,EAAA,EAAD,CACEC,WAAS,EACTK,QAAQ,WACRlJ,MAAO,CAAE8K,UAAW,SAAU1K,aAAc,QAH9C,SAKE,eAACwI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC+nB,GAAA,EAAD,CACEC,MAAOzC,EACPF,KAAMA,EACN1e,SAlDe,SAACqH,EAAOhY,GAC/B,IAAIyvB,EAAgB/uB,EAAKqvB,MApBT,IAoB4B/vB,EAAQ,GApBpC,GAoBoDA,GACpE0vB,EAAiBD,GACjBH,EAAQtvB,IAgDAiyB,MAAM,mBC1FH,SAASmW,GAAT,GAMX,IALFrf,EAKC,EALDA,SACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,OACAC,EAEC,EAFDA,UACAiiB,EACC,EADDA,QAUA,OACE,gBAAC,KAAD,CAAyB56B,MAAOC,IAAhC,UAoBE,eAAC,KAAD,CACEwd,SAAUmd,EACVtpC,OAAO,SACPwL,GAAG,qBACHzK,MAAM,aACNoJ,OAAO,aACPhM,MAAO+oB,EACPpY,SApCuB,SAAC+G,GAC5BsR,EAAYtR,IAoCR6V,oBAAqB,CACnB,aAAc,eAEhBgT,WAAY,CACVx/B,MAAO,CACLsD,SAAU,UAGdtD,MAAO,CAAEa,MAAO,IAAKkf,YAAa,EAAGlV,WAAY,OAAQzJ,QAAS,KAEpE,eAAC,KAAD,CACE6rB,SAAUmd,EACVtpC,OAAO,SACPwL,GAAG,qBACHzK,MAAM,WACNoJ,OAAO,aACPhM,MAAOipB,EACPtY,SAlDqB,SAAC+G,GAC1BwR,EAAUxR,IAkDN6V,oBAAqB,CACnB,aAAc,eAEhBgT,WAAY,CACVx/B,MAAO,CACLsD,SAAU,UAGdtD,MAAO,CAAEa,MAAO,IAAKkf,YAAa,EAAGlV,WAAY,OAAQzJ,QAAS,QCxE1E,IAAM+D,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvC8L,YAAa,CACXC,SAAU,KAEZyJ,YAAa,OAGA,SAASuwB,GAAT,GAKX,IAJFxoC,EAIC,EAJDA,MACA+2B,EAGC,EAHDA,MACAE,EAEC,EAFDA,aACAwR,EACC,EADDA,aAEMhkC,EAAUnB,KAEhB,OACE,gBAAC4R,EAAA,EAAD,CAAa3O,UAAW9B,EAAQ8J,YAAhC,UACE,eAACsb,GAAA,EAAD,CAAYpf,GAAG,sBAAf,SAAsCzK,IACtC,eAACmV,EAAA,EAAD,CACEkH,QAAQ,sBACR5R,GAAG,gBACHrN,MAAOqrC,EACP16B,SAAUkpB,EACV94B,MAAO,CAAEsD,SAAU,SALrB,SAOGs1B,EAAM92B,KAAI,SAACmH,GAAD,OACT,eAACkO,EAAA,EAAD,CAAUlY,MAAOgK,EAAjB,SAAwBA,YCxBnB,SAASshC,GAAT,GAA8C,IAAlB5zB,EAAiB,EAAjBA,KAAMF,EAAW,EAAXA,QAK/C,OACE,eAAC,KAAD,CAAyBjH,MAAOC,IAAhC,SACE,eAAC,KAAD,CACE8c,gBAAc,EACd5rB,QAAQ,SACRsK,OAAO,aACPnK,OAAO,SACPwL,GAAG,qBACHzK,MAAM,OACN5C,MAAO0X,EACP/G,SAdmB,SAAC+G,GACxBF,EAAQE,IAcJ6V,oBAAqB,CACnB,aAAc,eAEhBgT,WAAY,CACVx/B,MAAO,CACLsD,SAAU,UAGdtD,MAAO,CAAEa,MAAO,IAAKO,QAAS,EAAGN,OAAQ,OCflC,SAAS0pC,GAAT,GAGZ,EAFDC,eAEC,EADDC,qBACE,IACF,EAA4Dn8B,KAA7Bb,GAA/B,EAAQD,sBAAR,EAA+BC,0BAC/B,EAA8CpL,oBAAS,GAAvD,mBAAOkvB,EAAP,KAAwBC,EAAxB,KACA,EAAwDnvB,oBAAS,GAAjE,mBAAOwjC,EAAP,KAA6BC,EAA7B,KAGA,EAAgCzjC,oBAAS,WACvC,IAAMqU,EAAO,IAAI3F,KAGjB,OAFA2F,EAAKF,QAAQE,EAAKD,UAAY,GAC9BC,EAAK5B,SAAS,EAAG,EAAG,EAAG,GAChB4B,KAJT,mBAAOqR,EAAP,KAAiBC,EAAjB,KAMA,EAA4B3lB,oBAAS,WACnC,IAAMqU,EAAO,IAAI3F,KAEjB,OADA2F,EAAK5B,SAAS,GAAI,GAAI,GAAI,GACnB4B,KAHT,mBAAOuR,EAAP,KAAeC,EAAf,KAMA,EAAwB7lB,mBAAS,IAAjC,mBAAO3C,EAAP,KAAaspC,EAAb,KAIA,EAAwD3mC,mBACtDonC,IADF,mBAAOiB,EAAP,KAA6BC,EAA7B,KAGA,EAA0CtoC,mBACxCqoC,EAAqB,GAAG/qC,MAD1B,mBAAOwlC,EAAP,KAAsBC,EAAtB,KAIMlL,EAAqB7b,KAAKC,MAC9B1N,aAAaC,QAAQ,uBAOvB,EAAsCxO,mBAJrB,WAAiC,IAAhC+3B,EAA+B,uDAAvBF,EACxB,OAAOE,EAAMv4B,KAAI,SAAC+a,GAAD,OAAUA,EAAKjd,QAGaw6B,IAA/C,mBAAOE,EAAP,KAEA,GAFA,KAE4Ch4B,mBAC1CqoC,EAAqB,GAAGvvB,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,UADtD,mBAAOirC,EAAP,KAAuBC,EAAvB,KAGA,EAAkDxoC,mBAAS,CACzDqoC,EAAqB,GAAGvvB,OAAO,GAAGC,UAAU,KAD9C,mBAGA,GAHA,UAGkC/Y,mBAAS,OAA3C,mBAAOyoC,EAAP,KAAkBC,EAAlB,KAGA,EAAsC1oC,mBAAS,IAA/C,6BAyBAgF,qBAAU,WAfRiM,IAAMoJ,KAAK/d,EAAa,8BAA8BkV,MAAK,SAACC,GAE1D,IAAIsmB,EAAQtmB,EAASpU,KAAK4d,MAAK,SAACC,EAAGC,GAAJ,OAC7BD,EAAE5d,KAAO6d,EAAE7d,KAAO,EAAI6d,EAAE7d,KAAO4d,EAAE5d,MAAQ,EAAI,KAG/CgrC,EAAwBvQ,GACxBgL,EAAiBhL,EAAM,GAAGz6B,MAC1BkrC,EAAkBzQ,EAAM,GAAGjf,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,SACvDqrC,GAAwB5Q,EAAM,GAAGz6B,MACjCsrC,GAA0B7Q,EAAM,GAAGjf,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,cAOhE,IAEH,OAAwD0C,mBAAS,aAAjE,qBAAO6oC,GAAP,MAA6BF,GAA7B,MAEA,GAA4D3oC,mBAC1DqoC,EAAqB,GAAGvvB,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,SADtD,qBAAOwrC,GAAP,MAA+BF,GAA/B,MAIA,GAAkC5oC,oBAAS,WACzC,IAAMqU,EAAO,IAAI3F,KAGjB,OAFA2F,EAAKF,QAAQE,EAAKD,UAAY,GAC9BC,EAAK5B,SAAS,EAAG,EAAG,EAAG,GAChB4B,KAJT,qBAAO00B,GAAP,MAAkBC,GAAlB,MAOMC,GAAqB,SAACv5B,GAC1B,IAAM2E,EAAO,IAAI3F,KAAKgB,GAEtB,OADA2E,EAAK5B,SAAS,GAAI,GAAI,GAAI,GACnB4B,EAAK1F,WAoMRu6B,GAAW,SAAC7lB,EAAKva,GACrB,IAAMqgC,EAAM5rC,OAAO8lB,EAAI1mB,OAGnBoE,EAAQ,UAYZ,OATIooC,EAAa,GAANrgC,EAAY,MACrB/H,EAAQ,WAINooC,IAAQrgC,IACV/H,EAAQ,WAGHA,GAGT,OACE,uCACE,eAACuF,EAAA,EAAD,CACEC,WAAS,EACTK,QAAQ,gBACRlJ,MAAO,CAAEI,aAAc,QACvBI,WAAW,WAJb,SAME,eAACoI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACL,EAAA,EAAD,CAAMC,WAAS,EAACsH,QAAS,EAAG3P,WAAW,WAAvC,UACE,eAACoI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACohC,GAAD,CACExoC,MAAO,OAEP+2B,MAAO0B,EACPxB,aApMY,SAAC7hB,GACzB,IAAIhY,EAAQgY,EAAMC,OAAOjY,MAWzBomC,EAAiBpmC,GAYjB6rC,EACEH,EACG/iB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASX,KAC7Bmc,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,UA0KrB0qC,aAAclF,MASlB,eAACx8B,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACy1B,GAAD,CACE78B,MAAO,QACP+2B,MACE+R,EAAqB/iB,MACnB,SAAC/K,GAAD,OAAUA,EAAKjd,OAASwlC,KAEtBuF,EACG/iB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASwlC,KAC7BhqB,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,QAC/B,GAENk5B,aA3La,SAAC7hB,GAC1B,IAAIhY,EAAQgY,EAAMC,OAAOjY,MAEO,QAA5BA,EAAMA,EAAM4I,OAAS,GAazBijC,EAAkB7rC,GAZhB6rC,EACED,EAAehjC,SACb8iC,EAAqB/iB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASwlC,KAC/ChqB,OAAOvT,OACR,GACA8iC,EACG/iB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASwlC,KAC7BhqB,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,UAiL3Bi5B,cAAegS,MAmBnB,eAACjiC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC,GAAD,CACE+e,SAAUA,EACVC,YAAaA,EACbC,OAAQA,EACRC,UAAWA,MAGf,eAACvf,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACsa,EAAA,EAAD,CACE5iB,QAAQ,WACRyG,KAAK,QACL/D,MAAM,UACNE,QAnLK,WASjBmK,GAAyB,GACzB+jB,GAAmB,GAEnBle,IACGoJ,KAAK/d,EAAa,kBAAmB,CACpCy7B,MAAO,CAAC+K,GAERhqB,OACEgqB,EAAcv9B,OAAS,EACnB,CAAC,OACDgjC,EAAe/oC,KAAI,SAAC8c,GAAD,OAAaA,EAAQhf,QAK9CwT,UAAW4U,EAAS/W,UACpBoC,QAAS6U,EAAOjX,YAEjB6C,MAAK,SAACC,GAELrG,GAAyB,GACzB+jB,GAAmB,GACnB,IAAM9xB,EAAOoU,EAASpU,KAGtBspC,EAAQtpC,MAETgV,OAAM,SAAC+2B,GACNh+B,GAAyB,GACzB+jB,GAAmB,GACnB3U,QAAQC,IAAI,iBAAkB2uB,OA8ItBze,SAAUuE,EANZ,SASGA,EAAkB,UAAY,kBAOzC,eAAC5oB,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAEI,aAAc,QAAvC,SACGT,EAAKmC,KAAI,SAAC8+B,GACT,IAAIx1B,EAAM,EAMV,OALAw1B,EAAIjhC,KAAKmlB,SAAQ,SAAC2C,GACZ5nB,OAAO4nB,EAAGxoB,OAASmM,IACrBA,EAAMvL,OAAO4nB,EAAGxoB,WAIlB,gBAAC2J,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,QAApC,UACE,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEgJ,YAAa,QAAjC,SACE,gBAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAOjJ,MAAO,CAAEsD,SAAU,SAA1B,SAAsCs9B,EAAI/jB,OAC1C,wBACA,wBAAO7c,MAAO,CAAEsD,SAAU,SAA1B,SACG,IAAI0N,KAAqB,IAAhB4vB,EAAIhyB,WAAkB8yB,4BAItC,eAAC94B,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACL,EAAA,EAAD,CAAMC,WAAS,EAACsH,QAAS,EAAzB,SACGywB,EAAIjhC,KAAKmC,KAAI,SAACuX,EAAOna,GACpB,OACE,eAAC0J,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC,KAAD,CACElC,MACE,kCACE,gCAAOsS,EAAMsyB,WACb,wBACA,gCAAOtyB,EAAMuyB,aAGjB5lB,UAAU,MARZ,SAUE,eAAClmB,EAAA,EAAD,CACEE,MAAO,CACLa,MAAO,GACPO,QAAS,SACT2lB,aAAc,aAAeykB,GAASnyB,EAAOjO,IAJjD,SASE,gBAACxC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,EAAA,EAAD,CAAMK,MAAI,EAACO,GAAI,GAAf,SACE,yBAAOxJ,MAAO,CAAEsD,SAAU,UAA1B,oBACU+V,EAAMzZ,UAGlB,eAACgJ,EAAA,EAAD,CAAMK,MAAI,EAACO,GAAI,GAAf,SACE,yBAAOxJ,MAAO,CAAEsD,SAAU,UAA1B,oBACS,kCAAS+V,EAAMpa,qBA5BlBC,YAdyB0hC,EAAIhyB,gBA0D7D,gBAAChG,EAAA,EAAD,CACEC,WAAS,EACT7I,MAAO,CAAE8K,UAAW,QACpBtK,WAAW,WACX2P,QAAS,EAJX,UAME,eAACvH,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACohC,GAAD,CACExoC,MAAO,OAEP+2B,MAAO0B,EACPxB,aApXoB,SAAC7hB,GAC7B,IAAIhY,EAAQgY,EAAMC,OAAOjY,MACzBgsC,GAAwBhsC,GAExBisC,GACEP,EACG/iB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASX,KAC7Bmc,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,UA8WzB0qC,aAAca,OAGlB,eAACviC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACy1B,GAAD,CACE78B,MAAO,SACP+2B,MACE+R,EAAqB/iB,MACnB,SAAC/K,GAAD,OAAUA,EAAKjd,OAASurC,MAEtBR,EACG/iB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASurC,MAC7B/vB,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,QAC/B,GAENk5B,aAzXsB,SAAC7hB,GAC/B,IAAIhY,EAAQgY,EAAMC,OAAOjY,MAEO,QAA5BA,EAAMA,EAAM4I,OAAS,GAczBqjC,GAA0BjsC,GAbxBisC,GACEE,GAAuBvjC,SACrB8iC,EAAqB/iB,MACnB,SAAC/K,GAAD,OAAUA,EAAKjd,OAASurC,MACxB/vB,OAAOvT,OACP,GACA8iC,EACG/iB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASurC,MAC7B/vB,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,UA8W/Bi5B,cAAeuS,OAGnB,eAACxiC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACshC,GAAD,CAAkB5zB,KAAM00B,GAAW50B,QAAS60B,OAE9C,eAAC1iC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACsa,EAAA,EAAD,CACE5iB,QAAQ,WACRyG,KAAK,QACL/D,MAAM,UACNE,QA9Pc,WAQtBmK,GAAyB,GACzBq4B,GAAwB,GAGxBxyB,IACGoJ,KAAK/d,EAAa,6BAA8B,CAC/Cy7B,MAAO,CAAC8Q,IACR/vB,OAAQgwB,GACRh4B,UAAWi4B,GAAUp6B,UACrBoC,QAASk4B,GAAmBF,GAAUp6B,aAEvC6C,MAAK,SAACC,GAEL,IAAMpU,EAAOoU,EAASpU,KACtBqrC,EAAarrC,GACb+N,GAAyB,GACzBq4B,GAAwB,MAEzBpxB,OAAM,SAAC+2B,GACN5uB,QAAQC,IAAI,sBAAuB2uB,GACnCh+B,GAAyB,GACzBq4B,GAAwB,OAmOpB9Y,SAAU6Y,EANZ,SAQGA,EAAuB,UAAY,cAKzCiF,GACC,eAACniC,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,QAApC,SACE,eAACk/B,GAAD,CAAgBC,aAAcc,SC7gBxC,IAAMj7B,GAAQrJ,cAAiB,SAAesJ,EAAO87B,GACnD,OAAO,eAAC,IAAD,aAAU9rC,UAAW,EAAG8rC,IAAKA,EAAKlrC,QAAQ,UAAaoP,OAGjD,SAAS+7B,GAAT,GAAiE,IAA1C79B,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,QAAS49B,EAAgB,EAAhBA,aACvDpqB,EAAc,SAAC1K,EAAO+0B,GACX,cAAXA,GAIJD,GAAa,IAGf,OACE,eAAC30B,EAAA,EAAD,CACEnJ,KAAMA,EAEN0B,QAASgS,EACTtK,aAAc,CAAEC,SAAU,SAAUC,WAAY,QAJlD,SAME,eAAC,GAAD,CAAO5H,QAASgS,EAAazT,SAAUA,EAAU2yB,GAAI,CAAEhgC,MAAO,QAA9D,SACGsN,MCfM,SAASk5B,GAAT,GAKX,IAJFrf,EAIC,EAJDA,SACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,OACAC,EACC,EADDA,UAUA,OACE,gBAAC,KAAD,CAAyB3Y,MAAOC,IAAhC,UAoBE,eAAC,KAAD,CACE3O,OAAO,SACPwL,GAAG,qBACHzK,MAAM,aACNoJ,OAAO,aACPhM,MAAO+oB,EACPpY,SAnCuB,SAAC+G,GAC5BsR,EAAYtR,IAmCR6V,oBAAqB,CACnB,aAAc,eAEhBgT,WAAY,CACVx/B,MAAO,CACLsD,SAAU,UAGdtD,MAAO,CAAEa,MAAO,IAAKkf,YAAa,EAAGlV,WAAY,OAAQzJ,QAAS,KAEpE,eAAC,KAAD,CACEN,OAAO,SACPwL,GAAG,qBACHzK,MAAM,WACNoJ,OAAO,aACPhM,MAAOipB,EACPtY,SAhDqB,SAAC+G,GAC1BwR,EAAUxR,IAgDN6V,oBAAqB,CACnB,aAAc,eAEhBgT,WAAY,CACVx/B,MAAO,CACLsD,SAAU,UAGdtD,MAAO,CAAEa,MAAO,IAAKkf,YAAa,EAAGlV,WAAY,OAAQzJ,QAAS,QC9C1E,IAAM+D,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvC8L,YAAa,CACXtP,OAAQwD,EAAM6L,QAAQ,GACtBE,SAAU,IACVsb,SAAU,KAEZwN,mBAAoB,CAClB91B,MAAO,QAETm2B,MAAO,CACLl5B,QAAS,OACTm5B,SAAU,QAEZC,KAAM,CACJ54B,OAAQ,GAEV64B,QAAS,CACP7uB,UAAWxG,EAAM6L,QAAQ,QA6Cd,SAAS87B,KACtB,MAA4D19B,KAA7Bb,GAA/B,EAAQD,sBAAR,EAA+BC,0BAE/B,EAA8CpL,oBAAS,GAAvD,mBAAOkvB,EAAP,KAAwBC,EAAxB,KAEMnrB,EAAUnB,KAIhB,GAFc60B,cAEgB13B,oBAAS,IAAvC,mBAAOwc,EAAP,KAAgBotB,EAAhB,KAGA,EAAgC5pC,oBAAS,WACvC,IAAMqU,EAAO,IAAI3F,KAGjB,OAFA2F,EAAKF,QAAQE,EAAKD,UAAY,GAC9BC,EAAK5B,SAAS,EAAG,EAAG,EAAG,GAChB4B,KAJT,mBAAOqR,EAAP,KAAiBC,EAAjB,KAMA,EAA4B3lB,oBAAS,WACnC,IAAMqU,EAAO,IAAI3F,KAEjB,OADA2F,EAAK5B,SAAS,GAAI,GAAI,GAAI,GACnB4B,KAHT,mBAAOuR,EAAP,KAAeC,EAAf,KAYA,EAAwB7lB,mBAAS,IAAjC,mBAAO3C,EAAP,KAAaspC,EAAb,KAGA,EAA0C3mC,mBAAS,CACjD2L,MAAM,EACNC,SAAU,OACVC,QAAS,aAHX,mBAAOg+B,EAAP,KAAsBC,EAAtB,KAUA,EAA8C9pC,mBAC5ConC,IADF,mBAAO2C,EAAP,KAAwBC,EAAxB,KAIA,EAAwChqC,mBAAS,CAAC+pC,EAAgB,GAAGzsC,OAArE,mBAAOua,EAAP,KAAqBC,EAArB,KAEM+f,EAAqB7b,KAAKC,MAC9B1N,aAAaC,QAAQ,uBAOvB,EAAsCxO,mBAJrB,WAAiC,IAAhC+3B,EAA+B,uDAAvBF,EACxB,OAAOE,EAAMv4B,KAAI,SAAC+a,GAAD,OAAUA,EAAKjd,QAGaw6B,IAA/C,mBAAOE,EAAP,KAEA,GAFA,KAE0Ch4B,mBACxC+pC,EAAgB,GAAGjxB,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,UADjD,mBAAOkoB,EAAP,KAAsBC,GAAtB,KAOA,GAAgDzlB,mBAAS,CAAC,QAA1D,qBAAOiqC,GAAP,MAAyBC,GAAzB,MAEA,GAAgClqC,mBAAS,IAAzC,iCA2BAgF,qBAAU,WAtBRiM,IAAMoJ,KAAK/d,EAAa,8BAA8BkV,MAAK,SAACC,GAE1D,IAAIsmB,EAAQtmB,EAASpU,KAAK4d,MAAK,SAACC,EAAGC,GAAJ,OAC7BD,EAAE5d,KAAO6d,EAAE7d,KAAO,EAAI6d,EAAE7d,KAAO4d,EAAE5d,MAAQ,EAAI,KAI/C0sC,EAAmBjS,GACnBjgB,EAAgBigB,EAAM,GAAGz6B,MACzBmoB,GAAiBsS,EAAM,GAAGjf,OAAO,GAAGxb,WAerC,KAEmBysC,EAAgBzkB,MACpC,SAAC/K,GAAD,OAAUA,EAAKjd,OAASua,MAKtB,GAAGtS,OAAS,GACZ0kC,GAAiB1kC,SACfwkC,EAAgBzkB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASua,OAL/CkyB,EACGzkB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASua,KAC7BiB,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,QALnC,IAkLM4rC,GAAW,SAAC7lB,EAAKva,GAErB,IAAMqgC,EAAM5rC,OAAO8lB,EAAI1mB,OAGnBoE,EAAQ,UAYZ,OATIooC,EAAa,GAANrgC,EAAY,MACrB/H,EAAQ,WAINooC,IAAQrgC,IACV/H,EAAQ,WAGHA,GAGHopC,GAAqB,WACzB,IAAIpxB,EAAY,GAChB,IACE,IACMlI,EADOk5B,EAAgBzkB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASua,KACxC,OAAWyN,MAC3B,SAACzU,GAAD,OAAWA,EAAMvT,OAASkoB,KAEtB4kB,EAAa,OAAGv5B,QAAH,IAAGA,OAAH,EAAGA,EAAOkI,UAAUvZ,KAAI,SAAC6qC,GAAD,OAASA,EAAI/sC,QACxDyb,EAAYqxB,EAAc7kC,OAAS,EAAI6kC,EAAcnvB,OAAS,GAC9D,MAAO9I,GACP4G,EAAY,GAEd,OAAOA,GAGT,OACE,uCACE,gBAACzS,EAAA,EAAD,CACEC,WAAS,EACT2M,UAAU,MACV/U,eAAe,aACfD,WAAW,aACXR,MAAO,CAAE8K,UAAW,SALtB,UAOE,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAAC8N,EAAA,EAAD,CAAa3O,UAAW9B,EAAQ8J,YAAhC,UAqBE,eAACsb,GAAA,EAAD,CAAYpf,GAAG,sBAAf,mBACA,eAAC0K,EAAA,EAAD,CACEkH,QAAQ,sBACR5R,GAAG,gBACHrN,MAAOkb,EACPvK,SAnOa,SAACqH,GACxB,IAAIhY,EAAQgY,EAAMC,OAAOjY,MAWzBmb,EAAgBnb,GAYhB,IAGI2tC,EAHSP,EACVzkB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASX,KAC7Bmc,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,QACN,GACzBmoB,GAAiB6kB,IAwMP5sC,MAAO,CAAEsD,SAAU,SALrB,SAQGg3B,EAAYx4B,KAAI,SAACmH,GAAD,OACf,eAACkO,EAAA,EAAD,CAAUlY,MAAOgK,EAAjB,SAAwBA,cAKhC,eAACL,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEgJ,YAAa,QAAjC,SACE,gBAAC+N,EAAA,EAAD,CAAa3O,UAAW9B,EAAQ8J,YAAhC,UACE,eAACsb,GAAA,EAAD,CAAYpf,GAAG,sBAAf,oBACA,eAAC0K,EAAA,EAAD,CACEkH,QAAQ,sBACR5R,GAAG,gBACHrN,MAAO6oB,EACPlY,SA/Lc,SAACqH,GACzB,IAAIhY,EAAQgY,EAAMC,OAAOjY,MAezB8oB,GAAiB9oB,IAgLPe,MAAO,CAAEsD,SAAU,QAASqoB,SAAU,QALxC,UAQI0gB,EAAgBzkB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASua,KAC3CkyB,EACGzkB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASua,KAC7BiB,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,QAC/B,IACFkC,KAAI,SAACmH,GAAD,OACJ,eAACkO,EAAA,EAAD,CAAUlY,MAAOgK,EAAjB,SAAwBA,cAwBhC,eAACL,EAAA,EAAD,CACEK,MAAI,EACJjJ,MAAO,CACL6K,WAAY,UACZC,UAAW,SACX9B,YAAa,UALjB,SAmCE,eAAC01B,GAAD,CACE78B,MAAO,WACP+2B,MAAO6T,KACP3T,aApPmB,SAAC7hB,GAC5B,IAAIhY,EAAQgY,EAAMC,OAAOjY,MAAMse,OAEC,QAA5Bte,EAAMA,EAAM4I,OAAS,GAUzB2kC,GAAoBvtC,GARc,IAA5BstC,GAAiB1kC,OACnB2kC,GAAoBC,MAEpBD,GAAoB,KA6OhB3T,cAAe0T,OAoBnB,eAAC3jC,EAAA,EAAD,CACEK,MAAI,EACJjJ,MAAO,CACL6K,WAAY,QACZ7B,YAAa,OACb8B,UAAW,UALf,SAQE,eAAC,GAAD,CACEkd,SAAUA,EACVC,YAAaA,EACbC,OAAQA,EACRC,UAAWA,MA0Df,eAACvf,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE8K,UAAW,UAA/B,SACE,eAACyY,EAAA,EAAD,CACE5iB,QAAQ,WACRyG,KAAK,QACL/D,MAAM,UACNE,QAzTU,WAUlB6oC,EAAiB,CAAEn+B,MAAM,IACzBP,GAAyB,GACzB+jB,GAAmB,GAGnBle,IACGoJ,KAAK/d,EAAa,mBAAoB,CACrCie,KAAM,CAAC1C,GACPhH,MAAO,CAAC2U,GAERqK,SAAUoa,GAKVn5B,UAAW4U,EAAS/W,UACpBoC,QAAS6U,EAAOjX,YAEjB6C,MAAK,SAACC,GAELrG,GAAyB,GACzB+jB,GAAmB,GAKK,MAApB1d,EAASpF,OACXs6B,EAAQl1B,EAASpU,MAEjBysC,EAAiB,CACfn+B,MAAM,EACNC,SAAU,OACVC,QAAQ,GAAD,OAAK4F,EAASpU,WAI1BgV,OAAM,SAAC+2B,GACNh+B,GAAyB,GACzB+jB,GAAmB,OA2QfxE,SAAUuE,EANZ,SAQGA,EAAkB,UAAY,WAGnC,gBAAC5oB,EAAA,EAAD,CACEK,MAAI,EACJjJ,MAAO,CACL8K,UAAW,OAEXD,WAAY,QALhB,UAQE,eAACohB,GAAA,EAAD,CAEE7kB,KAAK,QACL7D,QA/gBU,SAAC0T,GACnBi1B,EAAWj1B,EAAMC,OAAO4H,UA+gBhBzb,MAAM,UACN83B,WAAY,CAAE,aAAc,wBAE9B,wBAAOn7B,MAAO,CAAEsD,SAAU,QAA1B,iCAuEJ,eAACsF,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,eAACD,EAAA,EAAD,CAAMK,MAAI,EAAV,UAC0B,IAAvBkjC,EAAcl+B,KACb,eAAC69B,GAAD,CACE79B,KAAMk+B,EAAcl+B,KACpBC,SAAUi+B,EAAcj+B,SACxBC,QAASg+B,EAAch+B,QACvB49B,aAllBS,SAACc,GACpBT,GAAiB,SAAC5oC,GAAD,mBAAC,eAAoBA,GAArB,IAAgCyK,KAAM4+B,UAolB/CltC,EAAKmC,KAAI,SAAC8+B,GACR,IAAIx1B,EAAM,EAMV,OALAw1B,EAAIjhC,KAAKmlB,SAAQ,SAAC2C,GACZ5nB,OAAO4nB,EAAGxoB,OAASmM,IACrBA,EAAMvL,OAAO4nB,EAAGxoB,WAIlB,gBAAC2J,EAAA,EAAD,CACEC,WAAS,EACT7I,MAAO,CAAE8K,UAAW,QAFtB,UAKE,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEgJ,YAAa,QAAjC,SACE,gBAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAOjJ,MAAO,CAAEsD,SAAU,SAA1B,mBACMs9B,EAAI/jB,KADV,cACoB+jB,EAAIzO,SADxB,OAIA,wBAAOnyB,MAAO,CAAEsD,SAAU,SAA1B,SACG,IAAI0N,KAAqB,IAAhB4vB,EAAIhyB,WAAkB8yB,4BAItC,eAAC94B,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACL,EAAA,EAAD,CAAMC,WAAS,EAACsH,QAAS,EAAzB,SACGywB,EAAIjhC,KACFq/B,QAAO,SAACpgB,GACP,OAAsB,IAAlBA,EAAQ3f,QAA2B,IAAZ6f,KAGJ,IAAZA,QAAJ,MAKRhd,KAAI,SAACuX,EAAOna,GACX,OACE,eAAC0J,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACnJ,EAAA,EAAD,CACEE,MAAO,CACLa,MAAO,GACPO,QAAS,SACT2lB,aACE,aAAeykB,GAASnyB,EAAOjO,IALrC,SAUE,gBAACxC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,EAAA,EAAD,CAAMK,MAAI,EAACO,GAAI,GAAf,SACE,yBAAOxJ,MAAO,CAAEsD,SAAU,UAA1B,sBACY+V,EAAMzZ,UAGpB,eAACgJ,EAAA,EAAD,CAAMK,MAAI,EAACO,GAAI,GAAf,SACE,yBAAOxJ,MAAO,CAAEsD,SAAU,UAA1B,oBACS,kCAAS+V,EAAMpa,mBAnBhBC,YA3BrB0hC,EAAIhyB,qBC1tBZ,SAASy4B,GAAT,GAKX,IAJFrf,EAIC,EAJDA,SACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,OACAC,EACC,EADDA,UAUA,OACE,gBAAC,KAAD,CAAyB3Y,MAAOC,IAAhC,UAoBE,eAAC,KAAD,CACE3O,OAAO,SACPwL,GAAG,qBACHzK,MAAM,aACNoJ,OAAO,aACPhM,MAAO+oB,EACPpY,SAnCuB,SAAC+G,GAC5BsR,EAAYtR,IAmCR6V,oBAAqB,CACnB,aAAc,eAEhBgT,WAAY,CACVx/B,MAAO,CACLsD,SAAU,UAGdtD,MAAO,CAAEa,MAAO,IAAKkf,YAAa,EAAGlV,WAAY,OAAQzJ,QAAS,KAEpE,eAAC,KAAD,CACEN,OAAO,SACPwL,GAAG,qBACHzK,MAAM,WACNoJ,OAAO,aACPhM,MAAOipB,EACPtY,SAhDqB,SAAC+G,GAC1BwR,EAAUxR,IAgDN6V,oBAAqB,CACnB,aAAc,eAEhBgT,WAAY,CACVx/B,MAAO,CACLsD,SAAU,UAGdtD,MAAO,CAAEa,MAAO,IAAKkf,YAAa,EAAGlV,WAAY,OAAQzJ,QAAS,QCrE1E,IAAM+D,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvC8L,YAAa,CACXC,SAAU,IAGZyJ,YAAa,OAGA,SAASgzB,GAAT,GAKX,IAJFjrC,EAIC,EAJDA,MACA+2B,EAGC,EAHDA,MACAE,EAEC,EAFDA,aACAwR,EACC,EADDA,aAEMhkC,EAAUnB,KAEhB,OACE,gBAAC4R,EAAA,EAAD,CAAa3O,UAAW9B,EAAQ8J,YAAhC,UACE,eAACsb,GAAA,EAAD,CAAYpf,GAAG,sBAAf,SAAsCzK,IACtC,eAACmV,EAAA,EAAD,CACEkH,QAAQ,sBACR5R,GAAG,gBACHrN,MAAOqrC,EACP16B,SAAUkpB,EACV94B,MAAO,CAAEsD,SAAU,SALrB,SAOGs1B,EAAM92B,KAAI,SAACmH,GAAD,OACT,eAACkO,EAAA,EAAD,CAAUlY,MAAOgK,EAAjB,SAAwBA,YC3BlC,IAAM9D,GAAYC,aAAW,SAACd,GAAD,MAAY,MAI1B,SAAS88B,GAAT,GAKX,IAJFv/B,EAIC,EAJDA,MAIC,IAHD+2B,aAGC,MAHO,GAGP,MAFDC,qBAEC,MAFe,GAEf,EADDC,EACC,EADDA,aAEMxyB,EAAUnB,KAEV4zB,EACJH,EAAM/wB,OAAS,GAAKgxB,EAAchxB,SAAW+wB,EAAM/wB,OAG/CmxB,EAAY,SAACJ,EAAO3vB,GACxB,IAAI+vB,GAAY,EAMhB,OALAJ,EAAM9T,SAAQ,SAAClG,GACTA,IAAY3V,IACd+vB,GAAY,MAGTA,GAGT,OACE,gBAACjiB,EAAA,EAAD,CAAa/W,MAAO,CAAE2rB,SAAU,SAAhC,UACE,eAACD,GAAA,EAAD,CAAYpf,GAAE,UAAKzK,EAAL,iBAAd,SAA0CA,IAC1C,gBAACmV,EAAA,EAAD,CACEhX,MAAO,CAAEsD,SAAU,SACnB4a,QAAO,UAAKrc,EAAL,iBACPyK,GAAE,UAAKzK,EAAL,WACF5C,MAAO45B,EACPjpB,SAAUkpB,EACVlN,UAAQ,EACRC,YAAa,SAAClsB,GAAD,OAAUA,EAAKosB,KAAK,OACjC5N,UAAW,CACT7X,QAAS,CAAE8X,MAAO9X,EAAQyT,WAC1BsE,mBAAoB,kBAAM,OAV9B,UAaE,gBAAClH,EAAA,EAAD,CACElY,MAAM,MACNqH,QAAS,CACPvB,KAAMg0B,EAAgBzyB,EAAQ2yB,YAAc,IAE9Cj5B,MAAO,CAAEgsB,aAAc,GALzB,UAOE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvB5kB,KAAK,QACL/D,MAAM,UACNiD,QAAS,CAAE4lB,cAAe5lB,EAAQ6yB,oBAClCra,QAASia,GAAkC,IAAjBH,EAAM/wB,OAChCqkB,cACE2M,EAAchxB,OAAS,GAAKgxB,EAAchxB,OAAS+wB,EAAM/wB,WAI/D,eAACskB,EAAA,EAAD,CAEE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAAQ,aACRpsB,MAAO,CAAEC,WAAY,eAGxB24B,EAAM92B,KAAI,SAAC8c,EAAS1f,GACnB,OACE,gBAACiY,EAAA,EAAD,CAAsBlY,MAAO2f,EAAS5e,MAAO,CAAEgsB,aAAc,GAA7D,UACE,eAACkN,EAAA,EAAD,UACE,eAACjN,GAAA,EAAD,CACEjsB,MAAO,CAAEgsB,aAAc,GACvBlN,QAASka,EAAUH,EAAeja,GAClCxX,KAAK,QACL/D,MAAM,cAGV,eAAC8oB,EAAA,EAAD,CACE7lB,QAAS,CAAE8lB,QAAS9lB,EAAQ8yB,cAC5BhN,QAASxN,EACT5e,MAAO,CAAEC,WAAY,cAZVf,Y,OCVZ,SAAS6tC,GAAT,GAGX,IAFFptC,EAEC,EAFDA,KAEC,IADDskC,cACC,MADQ,CAAEC,MAAO,EAAGC,OAAQ,GAC5B,EA+CD,EAA8B7hC,mBA5CH,WACzB,IAAMiiC,EAAWrwB,OAAOC,QAAQxU,GAC5BqZ,EAAM,GAIV,OAHAurB,EAASzf,SAAQ,SAAClG,GAChB5F,EAAG,2BAAQA,GAAR,kBAAc4F,EAAQ,GAAK,OAEzB5F,EAsC8BwrB,IAAvC,mBAAO9hC,EAAP,KAAgBC,EAAhB,KA6FM8hC,EAAe,SAACC,EAASxlC,GAoE7B,OAAIwlC,EAlEgB,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAkCmBxlC,GA/BA,CACnB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAOkBA,IA2DtB,OACE,eAAC0D,GAAA,EAAD,CAAqB/B,MAAM,OAAOR,OAAO,MAAzC,SACE,gBAACwC,GAAA,EAAD,CACElD,KAAMA,EACNK,MAAO,CAAE8K,UAAW,UAQpB1J,QACE,GAKFN,OACE,GAjBJ,UAuBE,eAACG,GAAA,EAAD,CAAOC,QAAQ,YAAYw0B,OAAQ,EAAGsX,KAAM,CAAE1pC,SAAU,MAExD,eAAChC,GAAA,EAAD,CACEwB,QAAQ,OACRC,YAAY,SAKd,eAACzB,GAAA,EAAD,CACEwB,QAAQ,QACRC,YAAY,UAmBd,eAACC,GAAA,EAAD,CAASE,QAjPO,SAAC,GAAiB,IAAD,IAAdC,EAAc,EAAdA,QAyBvB,OACE,gBAACgF,GAAA,EAAD,CACEnI,MAAO,CACLwE,gBAAiB,QACjBc,UAAW,QACXqmB,SAAU,UACVtb,SAAU,QACV/P,QAAS,OACTC,cAAe,SACfk5B,SAAU,OACVn2B,SAAU,UATd,UAYE,yCAAMH,EAAQ,UAAd,iBAAM,EAAYA,eAAlB,aAAM,EAAqByL,YAC1BzL,EAAQrB,KAAI,YAAgC,IAA7BZ,EAA4B,EAA5BA,QAASjC,EAAmB,EAAnBA,MAAOoE,EAAY,EAAZA,MAC9B,OACE,sBACErD,MAAO,CACLgJ,YAAa,SAEb3F,MAAOA,EACPmB,gBAAiB,SALrB,mBAOKd,OAAOxC,GAASyC,cAPrB,aAOuC1E,cAmM3C,eAACgE,GAAA,EAAD,CAAQC,QAjRO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,sBACEnD,MAAO,CACLM,QAAS,OACTm5B,SAAU,OACVh5B,eAAgB,SAChB2C,IAAK,OALT,SAQGD,EAAQrB,KAAI,YAAyB,IAAtBZ,EAAqB,EAArBA,QAASmC,EAAY,EAAZA,MACvB,OACE,yBAEErD,MAAO,CACLsD,SAAU,SACVD,MAAOA,EACPpB,OAAQ,UACRS,QAA8B,IAArBA,EAAQxB,GAAiB,GAAM,GAE1CqC,QAAS,kBA1BF,SAACrC,GAClByB,GAAW,SAACa,GACV,OAAO,2BAAKA,GAAZ,kBAAwBtC,EAAiC,IAAvBsC,EAAUtC,GAAiB,EAAI,OAwB1CuC,CAAWvC,IAR5B,SAUGwC,OAAOxC,GAASyC,eATZzC,WAmJK,WAKpB,IAJA,IAAIqjC,EAAWrwB,OAAOC,QAAQxU,EAAK,IAE/B6Z,EAAQ,GACRorB,EAAa,EACRh9B,EAAI,EAAGA,GAAKq8B,EAAOC,MAAOt8B,SACb0H,IAAhBi1B,EAAS38B,KACX4R,EAAMzR,KACJ,eAACnE,GAAA,EAAD,CACEhE,KAAM2kC,EAAS38B,GAAG,GAClB9E,QAAQ,OACRe,KAAK,WACL3C,QAASqjC,EAAS38B,GAAG,GACrB9D,OAAQ2gC,GAAa,EAAMG,GAC3B7gC,YAAa,EACbC,cAAetB,EAAQ6hC,EAAS38B,GAAG,IAEnCzD,KAAK,KAITygC,GAAc,GAGlB,OAAOprB,EA0FFqrB,GAAgB/iC,KAAI,SAAC8c,GAAD,OAAaA,KAvFjB,WAKrB,IAJA,IAAI2lB,EAAWrwB,OAAOC,QAAQxU,EAAK,IAE/B6Z,EAAQ,GACRorB,EAAa,EACRh9B,EAAIq8B,EAAOC,MAAQ,EAAGt8B,GAAKq8B,EAAOC,MAAQD,EAAOE,OAAQv8B,SAG5C0H,IAAhBi1B,EAAS38B,KACX4R,EAAMzR,KACJ,eAACnE,GAAA,EAAD,CACEhE,KAAM2kC,EAAS38B,GAAG,GAClB9E,QAAQ,QACRe,KAAK,WACL3C,QAASqjC,EAAS38B,GAAG,GACrB9D,OAAQ2gC,GAAa,EAAOG,GAC5B7gC,YAAa,EACbC,cAAetB,EAAQ6hC,EAAS38B,GAAG,IAEnCzD,KAAK,KAITygC,GAAc,GAGlB,OAAOprB,EA8DFsrB,GAAiBhjC,KAAI,SAAC8c,GAAD,OAAaA,UC3X3C,IAAMquB,GAAuB,CAC3B,CACE1S,SAAU,MACVjQ,WAAY,CACV,mBACA,qBACA,mBACA,OACA,cACA,eACA,cACA,eACA,oBACA,qBACA,sBACA,sBAGJ,CACEiQ,SAAU,QACVjQ,WAAY,CACV,aACA,aACA,mBACA,kCACA,gCACA,aACA,YAGJ,CACEiQ,SAAU,WACVjQ,WAAY,CACV,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,cAGJ,CACEiQ,SAAU,UACVjQ,WAAY,CACV,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QAGJ,CACEiQ,SAAU,YACVjQ,WAAY,CACV,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,QACA,cACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,eACA,cACA,4BACA,8BAGJ,CACEiQ,SAAU,aACVjQ,WAAY,CAAC,iBAAkB,mBAQLhP,KAAK4xB,SACL5xB,KAAK4xB,SACL5xB,KAAK4xB,SAML5xB,KAAK4xB,SACL5xB,KAAK4xB,SACL5xB,KAAK4xB,SAML5xB,KAAK4xB,SACL5xB,KAAK4xB,SACL5xB,KAAK4xB,SAKpB,SAASC,KACtB,MAAkD5+B,KAA1Cb,EAAR,EAAQA,yBAA0BW,EAAlC,EAAkCA,YAClC,EAA4C/L,oBAAS,GAArD,mBAAOq4B,EAAP,KAAuBC,EAAvB,KAEA,EAAgCt4B,oBAAS,WACvC,IAAMqU,EAAO,IAAI3F,KAGjB,OAFA2F,EAAKF,QAAQE,EAAKD,UAAY,GAC9BC,EAAK5B,SAAS,EAAG,EAAG,EAAG,GAChB4B,KAJT,mBAAOqR,EAAP,KAAiBC,EAAjB,KAMA,EAA4B3lB,oBAAS,WACnC,IAAMqU,EAAO,IAAI3F,KAGjB,OAFA2F,EAAKF,QAAQE,EAAKD,UAAY,GAC9BC,EAAK5B,SAAS,GAAI,GAAI,GAAI,GACnB4B,KAJT,mBAAOuR,EAAP,KAAeC,EAAf,KAOA,EAAkC7lB,mBAAS,SAA3C,mBAAOwnB,EAAP,KAAkBC,EAAlB,KAOMqjB,EAAkB,WAItB,IAAIC,EAAW,GAYf,OAXAC,EAAWxrC,KAAI,SAACyrC,GACNN,GACLrlB,MAAK,SAAC/K,GAAD,OAAUA,EAAK0d,WAAagT,KACjCjjB,WAAWxoB,KAAI,SAAC2lB,GAAD,OAAQA,KAExB3lB,KAAI,SAAC7C,GAAD,OAAWouC,EAAStlC,KAAK9I,SAM1BouC,GAUHG,EAAkB,WAMtB,IAAIH,EAAW,GAYf,OAXAI,EAAW3rC,KAAI,SAACyrC,GACNN,GACLrlB,MAAK,SAAC/K,GAAD,OAAUA,EAAK0d,WAAagT,KACjCjjB,WAAWxoB,KAAI,SAAC2lB,GAAD,OAAQA,KAExB3lB,KAAI,SAAC7C,GAAD,OAAWouC,EAAStlC,KAAK9I,SAM1BouC,GAST,EAAoC/qC,mBAhCtB,CADG2qC,GAAqBnrC,KAAI,SAAC4rC,GAAD,OAASA,EAAInT,YAC/B,KAgCxB,mBAAO+S,EAAP,KAAmBK,EAAnB,KAEA,EAAsCrrC,mBAAS8qC,KAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KACA,EAAoDvrC,mBAClD8qC,KADF,mBAAOU,EAAP,KAA2BC,EAA3B,KAIA,EAAoCzrC,mBAXtB,CADG2qC,GAAqBnrC,KAAI,SAAC4rC,GAAD,OAASA,EAAInT,YAC/B,KAWxB,mBAAOkT,EAAP,KAAmBO,EAAnB,KAEA,EAAsC1rC,mBAASkrC,KAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAoD5rC,mBAClDkrC,KADF,mBAAOW,GAAP,KAA2BC,GAA3B,KA8EA9mC,qBAAU,WACRumC,EA9D+B,WAE/B,IAAIQ,EAAa,GAUjB,OARAf,EAAWxrC,KAAI,SAACyrC,GACNN,GACLrlB,MAAK,SAAC/K,GAAD,OAAUA,EAAK0d,WAAagT,KACjCjjB,WAAWxoB,KAAI,SAAC2lB,GAAD,OAAQA,KAExB3lB,KAAI,SAAC7C,GAAD,OAAWovC,EAAWtmC,KAAK9I,SAG5B8uC,EAAsBM,GAAaA,EA0DxCC,MAED,CAAChB,IAmDJhmC,qBAAU,WACR4mC,EA7G+B,WAE/B,IAAIK,EAAa,GAUjB,OARAd,EAAW3rC,KAAI,SAACyrC,GACNN,GACLrlB,MAAK,SAAC/K,GAAD,OAAUA,EAAK0d,WAAagT,KACjCjjB,WAAWxoB,KAAI,SAAC2lB,GAAD,OAAQA,KAExB3lB,KAAI,SAAC7C,GAAD,OAAWsvC,EAAWxmC,KAAK9I,SAG5BmvC,GAAsBG,GAAaA,EAiG3BC,MACd,CAACf,IAEJ,IA0CA,GAAwDnrC,mBACtDonC,IADF,qBAAOiB,GAAP,MAA6BC,GAA7B,MAGA,GAA0CtoC,mBACxCqoC,GAAqB,GAAG/qC,MAD1B,qBAAOwlC,GAAP,MAAsBC,GAAtB,MAIMlL,GAAqB7b,KAAKC,MAC9B1N,aAAaC,QAAQ,uBAOvB,GAAsCxO,mBAJrB,WAAiC,IAAhC+3B,EAA+B,uDAAvBF,GACxB,OAAOE,EAAMv4B,KAAI,SAAC+a,GAAD,OAAUA,EAAKjd,QAGaw6B,IAA/C,qBAAOE,GAAP,MACA,IADA,MAC4Ch4B,mBAC1CqoC,GAAqB,GAAGvvB,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,UADtD,qBAAOirC,GAAP,MAAuBC,GAAvB,MAIA,GAAkDxoC,mBAAS,CAAC,QAA5D,qBAAOmsC,GAAP,MAA0BC,GAA1B,MAqBApnC,qBAAU,WAhBRiM,IAAMoJ,KAAK/d,EAAa,8BAA8BkV,MAAK,SAACC,GAE1D,IAAIsmB,EAAQtmB,EAASpU,KAAK4d,MAAK,SAACC,EAAGC,GAAJ,OAC7BD,EAAE5d,KAAO6d,EAAE7d,KAAO,EAAI6d,EAAE7d,KAAO4d,EAAE5d,MAAQ,EAAI,KAG/CgrC,GAAwBvQ,GACxBgL,GAAiBhL,EAAM,GAAGz6B,MAC1BkrC,GAAkBzQ,EAAM,GAAGjf,OAAO,GAAGxb,WAUtC,IAEH,IAwEM6sC,GAAqB,WACzB,IAAIpxB,EAAY,GAChB,IACE,IAGMlI,EAHOw3B,GAAqB/iB,MAChC,SAAC/K,GAAD,OAAUA,EAAKjd,OAASwlC,MAER,OAAWxd,MAC3B,SAACzU,GAAD,OAAWA,EAAMvT,OAASirC,MAEtB6B,EAAa,OAAGv5B,QAAH,IAAGA,OAAH,EAAGA,EAAOkI,UAAUvZ,KAAI,SAAC6qC,GAAD,OAASA,EAAI/sC,QACxDyb,EAAYqxB,EAAc7kC,OAAS,EAAI6kC,EAAcnvB,OAAS,GAC9D,MAAO9I,GACP4G,EAAY,GAEd,OAAOA,GAIT,GAA8C/Y,oBAAS,GAAvD,qBAAOkvB,GAAP,MAAwBC,GAAxB,MAEA,GAA4BnvB,mBAAS,IAArC,qBAAO4jC,GAAP,MAAeC,GAAf,MACA,GAAsC7jC,mBAAS,IAA/C,qBAAO8jC,GAAP,MAAoBC,GAApB,MA4DMhc,GAAQ,yCAAG,mCAAA7M,EAAA,6DAEA3M,aAAaC,QAAQ,aACpC8pB,GAAkB,GAClBltB,GAAyB,GAJV,kBAMU6F,IAAMoJ,KAC3B/d,EAAa,uBACb,CACE+hB,MAAO9P,aAAaC,QAAQ,aAC5B+L,KAAMuoB,GACNjyB,MAAO03B,GACPxvB,UAAWozB,GACXr7B,UAAW4U,EAAS/W,UACpBoC,QAAS6U,EAAOjX,UAChB6Y,UAAWA,EACXwjB,WAAYA,EACZM,YAAaA,EACbH,WAAYA,EACZQ,YAAaA,IAnBJ,OAMPl6B,EANO,OA8Bb+I,QAAQC,IAAIhJ,EAASpU,MACf+qB,EAAcpU,OAAOqU,IAAIC,gBAAgB,IAAIC,KAAK,CAAC9W,EAASpU,SAC5DmrB,EAAO/e,SAASgf,cAAc,MAC/BnF,KAAO8E,EACRM,EAlCS,UAkCKhD,EAAStR,UAlCd,YAmCXsR,EAASnR,WAAa,EAnCX,eAoCNqR,EAAOxR,UApCD,YAoCcwR,EAAOrR,WAAa,EApClC,QAqCbiU,EAAKG,aAAa,WAAYD,GAC9Bjf,SAASnH,KAAKsmB,YAAYJ,GAC1BA,EAAKK,QACLL,EAAKM,SACL1d,GAAyB,GACzBktB,GAAkB,GA1CL,kDA6CbvsB,GAAY,SAAC7K,GAAD,mBAAC,eACRA,GADO,IAEVyK,MAAM,EACNC,SAAU,QACVC,QAAS,sBAEXT,GAAyB,GACzBktB,GAAkB,GApDL,0DAAH,qDAkEd,OACE,uCACE,gBAAChyB,EAAA,EAAD,CACEC,WAAS,EACT2M,UAAU,MACV/U,eAAe,aACfD,WAAW,aAJb,UAME,eAACoI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC6jC,GAAD,CACEjrC,MAAO,OAEP+2B,MAAO0B,GACPxB,aAxOgB,SAAC7hB,GACzB,IAAIhY,EAAQgY,EAAMC,OAAOjY,MAWzBomC,GAAiBpmC,GAiBjB,IAGI2tC,EAHSjC,GACV/iB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASX,KAC7Bmc,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,QACN,GACzBkrC,GAAkB8B,IAwMVtC,aAAclF,OAGlB,eAACx8B,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAACiiC,GAAD,CACEjrC,MAAO,QACP+2B,MACE+R,GAAqB/iB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASwlC,MAC9CuF,GACG/iB,MAAK,SAAC/K,GAAD,OAAUA,EAAKjd,OAASwlC,MAC7BhqB,OAAOtZ,KAAI,SAACqR,GAAD,OAAWA,EAAMvT,QAC/B,GAENk5B,aAlNiB,SAAC7hB,GAC1B,IAAIhY,EAAQgY,EAAMC,OAAOjY,MAezB6rC,GAAkB7rC,IAmMVqrC,aAAcO,OAGlB,eAACjiC,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC,GAAD,CACEhJ,MAAO,WACP+2B,MAAO6T,KACP3T,aAvMoB,SAAC7hB,GAC7B,IAAIhY,EAAQgY,EAAMC,OAAOjY,MAAMse,OAEC,QAA5Bte,EAAMA,EAAM4I,OAAS,GAWzB6mC,GAAqBzvC,GARc,IAA7BwvC,GAAkB5mC,OACpB6mC,GAAqBjC,MAErBiC,GAAqB,KA+LjB7V,cAAe4V,OAGnB,eAAC7lC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC,GAAD,CACE+e,SAAUA,EACVC,YAAaA,EACbC,OAAQA,EACRC,UAAWA,MAGf,eAACvf,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,gBAACkM,EAAA,EAAD,WACE,eAAC2U,GAAA,EAAD,CAAYpf,GAAG,gCAAf,uBAGA,gBAAC0K,EAAA,EAAD,CACEkH,QAAQ,gCACR5R,GAAG,0BACHrN,MAAO6qB,EACPla,SA9jBkB,SAACqH,GAC7B,IAAIhY,EAAQgY,EAAMC,OAAOjY,MACzB8qB,EAAa9qB,IA6jBHe,MAAO,CAAEsD,SAAU,SALrB,UAOE,eAAC6T,EAAA,EAAD,CAAUlY,MAAO,QAAjB,mBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,MAAjB,iBACA,eAACkY,EAAA,EAAD,CAAUlY,MAAO,MAAjB,yBAIN,eAAC2J,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC,GAAD,CACEhJ,MAAO,SAEP+2B,MAAOqU,GAAqBnrC,KAAI,SAACyrC,GAAD,OAASA,EAAIhT,YAC7CzB,aAzdqB,SAAC7hB,GAE9B,IAAIhY,EAAQgY,EAAMC,OAAOjY,MAEO,QAA5BA,EAAMA,EAAM4I,OAAS,GAYzB8lC,EAAc1uC,GAXZ0uC,EACEL,EAAWzlC,SACTolC,GAAqBnrC,KAAI,SAAC+a,GAAD,OAAUA,EAAK0d,YAAU1yB,OAChD,GACAolC,GAAqBnrC,KAAI,SAACqR,GAAD,OAAWA,EAAMonB,cAid1C1B,cAAeyU,MAGnB,eAAC1kC,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC,GAAD,CACEhJ,MAAO,WACP+2B,MAAOkV,EAEPhV,aAtbsB,SAAC7hB,GAC/B,IAAIhY,EAAQgY,EAAMC,OAAOjY,MAEO,QAA5BA,EAAMA,EAAM4I,OAAS,GAezBgmC,EAAe5uC,GAdb4uC,EACED,EAAY/lC,SAAWimC,EAAmBjmC,OAAS,GAAKulC,IAkbpDvU,cAAe+U,MAGnB,eAAChlC,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC,GAAD,CACEhJ,MAAO,SAEP+2B,MAAOqU,GAAqBnrC,KAAI,SAACyrC,GAAD,OAASA,EAAIhT,YAC7CzB,aAzaqB,SAAC7hB,GAW9B,IAAIhY,EAAQgY,EAAMC,OAAOjY,MAEO,QAA5BA,EAAMA,EAAM4I,OAAS,GAYzBmmC,EAAc/uC,GAXZ+uC,EACEP,EAAW5lC,SACTolC,GAAqBnrC,KAAI,SAAC+a,GAAD,OAAUA,EAAK0d,YAAU1yB,OAChD,GACAolC,GAAqBnrC,KAAI,SAACqR,GAAD,OAAWA,EAAMonB,cAwZ1C1B,cAAe4U,MAGnB,eAAC7kC,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC,GAAD,CACEhJ,MAAO,WAQP+2B,MAAOuV,GACPrV,aAzZsB,SAAC7hB,GAc/B,IAAIhY,EAAQgY,EAAMC,OAAOjY,MAEO,QAA5BA,EAAMA,EAAM4I,OAAS,GAOzBqmC,EAAejvC,GANbivC,EACED,EAAYpmC,SAAWsmC,GAAmBtmC,OAAS,GAAK2lC,IAwYpD3U,cAAeoV,MAGnB,eAACrlC,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,OAAQC,UAAW,UAAnD,SACE,eAACyY,EAAA,EAAD,CACE5iB,QAAQ,WACRyG,KAAK,QACLpH,MAAO,CAGLsD,SAAU,OACVjD,OAAQ,QAEVgD,MAAM,UACNE,QAjPe,SAAC6P,EAAWC,EAASC,GAa5C5F,GAAyB,GAEzB+jB,IAAmB,GAEnBle,IACGoJ,KAAK/d,EAAa,mBAAoB,CAErCie,KAAMuoB,GACNjyB,MAAO03B,GACPxvB,UAAWozB,GAEXr7B,UAAW4U,EAAS/W,UACpBoC,QAAS6U,EAAOjX,UAChB6Y,UAAWA,EACXwjB,WAAYA,EACZM,YAAaA,EACbH,WAAYA,EACZQ,YAAaA,IAMdn6B,MAAK,SAACC,GAEL,IAAMpU,EAAOoU,EAASpU,KAEhBinC,EAAYjnC,EAAKumC,OACvBC,GAAUS,GACV,IAAMhhC,EAAQjG,EAAKiG,MAEnBygC,GAAezgC,GACf8H,GAAyB,GAEzB+jB,IAAmB,MAEpB9c,OAAM,SAACF,GAEN/G,GAAyB,GAEzB+jB,IAAmB,OA6LfxE,SAAUuE,GAXZ,SAcGA,GAAkB,UAAY,WAGnC,eAAC5oB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,OAAQC,UAAW,UAAnD,SACE,eAACyY,EAAA,EAAD,CACE5iB,QAAQ,WACR0C,MAAM,UACN+D,KAAK,QACLpH,MAAO,CAGLsD,SAAU,OACVjD,OAAQ,QAEVkD,QAAS8mB,GACT4C,SAAU0N,EAXZ,SAaGA,EAAiB,cAAgB,aAkDvCuL,GAAOpkC,KAAI,SAAC+kC,EAAO3nC,GAAR,OACV,eAAC0J,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,eAAC/I,EAAA,EAAD,CACEE,MAAO,CACLa,MAAO,OACPR,OAAQ,QACRyK,UAAW,OAGXD,WAAY,QAEZwE,cAAe,SATnB,SAoBE,eAAC09B,GAAD,CAA2BptC,KAAMknC,EAAMlnC,KAAMskC,OAAQmC,QArBpClnC,S,oCC94BvBiG,GAAYC,YAAW,CAC3B2uB,KAAM,CACJ,uBAAwB,CACtBvvB,gBAAiB,WAGnB,8BAA+B,CAC7BnB,MAAO,cAKb,SAAS2wB,GAASjkB,GAChB,IAAQvC,EAAqCuC,EAArCvC,SAAUvO,EAA2B8Q,EAA3B9Q,MAAOC,EAAoB6Q,EAApB7Q,MAAU+0B,EAAnC,aAA6ClkB,EAA7C,IAEA,OACE,8CACEmkB,KAAK,WACLC,OAAQl1B,IAAUC,EAClBoN,GAAE,0BAAqBpN,GACvB,uCAA+BA,IAC3B+0B,GALN,aAOGh1B,IAAUC,GACT,eAACk1B,GAAA,EAAD,CAAKyM,GAAI,CAAE5gC,WAAY,GAAvB,SACE,eAACS,EAAA,EAAD,UAAa8M,SAOvB,SAAS6mB,GAAUn1B,GACjB,MAAO,CACLoN,GAAG,WAAD,OAAapN,GACf,gBAAgB,gBAAhB,OAAiCA,IAItB,SAASi/B,GAAT,GAA6C,IAAxBxtB,EAAuB,EAAvBA,oBAClC,EAA0BlK,WAAe,GAAzC,mBAAOxH,EAAP,KAAcs1B,EAAd,KACMjuB,EAAUnB,KAKhB,OACE,gBAACivB,GAAA,EAAD,CAAKp0B,MAAO,CAAEa,MAAO,MAArB,UACE,gBAAC2zB,GAAA,EAAD,CACEx0B,MAAO,CAAEqD,MAAO,UAAWwH,WAAY,SACvCzC,UAAW9B,EAAQytB,KACnB90B,MAAOA,EACP2Q,SAVe,SAACqH,EAAOwd,GAC3BF,EAASE,IAUL,aAAW,iBAEX9zB,QAAQ,aACRguC,cAAc,OARhB,UAUE,eAACja,GAAA,EAAD,aAAK7yB,MAAM,aAAgBwyB,GAAU,KACrC,eAACK,GAAA,EAAD,aAAK7yB,MAAM,uBAA0BwyB,GAAU,KAC/C,eAACK,GAAA,EAAD,aAAK7yB,MAAM,cAAiBwyB,GAAU,KACtC,eAACK,GAAA,EAAD,aAAK7yB,MAAM,iBAAoBwyB,GAAU,KACzC,eAACK,GAAA,EAAD,aAAK7yB,MAAM,kBAAqBwyB,GAAU,KAC1C,eAACK,GAAA,EAAD,aAAK7yB,MAAM,aAAgBwyB,GAAU,KAErC,eAACK,GAAA,EAAD,aAAK7yB,MAAM,gBAAmBwyB,GAAU,KACxC,eAACK,GAAA,EAAD,aAAK7yB,MAAM,WAAcwyB,GAAU,KACnC,eAACK,GAAA,EAAD,aAAK7yB,MAAM,cAAiBwyB,GAAU,KACtC,eAACK,GAAA,EAAD,aAAK7yB,MAAM,gBAAmBwyB,GAAU,QAG1C,eAAC,GAAD,CAAUp1B,MAAOA,EAAOC,MAAO,EAAGc,MAAO,CAAEC,WAAY,UAAvD,SACE,eAAC2+B,GAAD,CAAajuB,oBAAqBA,MAEpC,eAAC,GAAD,CAAU1R,MAAOA,EAAOC,MAAO,EAAGc,MAAO,CAAEC,WAAY,UAAvD,SACE,eAACsgC,GAAD,CAAiB5vB,oBAAqBA,MAExC,eAAC,GAAD,CAAU1R,MAAOA,EAAOC,MAAO,EAAGc,MAAO,CAAEC,WAAY,UAAvD,SACE,eAACghC,GAAD,MAEF,eAAC,GAAD,CAAUhiC,MAAOA,EAAOC,MAAO,EAAGc,MAAO,CAAEC,WAAY,UAAvD,SACE,eAAC4hC,GAAD,MAEF,eAAC,GAAD,CAAU5iC,MAAOA,EAAOC,MAAO,EAAGc,MAAO,CAAEC,WAAY,UAAvD,SACE,eAAC,GAAD,MAEF,eAAC,GAAD,CAAUhB,MAAOA,EAAOC,MAAO,EAAGc,MAAO,CAAEC,WAAY,UAAvD,SACE,eAACmnC,GAAD,MAGF,eAAC,GAAD,CAAUnoC,MAAOA,EAAOC,MAAO,EAAGc,MAAO,CAAEC,WAAY,UAAvD,SACE,eAACuqC,GAAD,MAEF,eAAC,GAAD,CAAUvrC,MAAOA,EAAOC,MAAO,EAAGc,MAAO,CAAEC,WAAY,UAAvD,SACE,eAACgsC,GAAD,MAEF,eAAC,GAAD,CAAUhtC,MAAOA,EAAOC,MAAO,EAAGc,MAAO,CAAEC,WAAY,UAAvD,SACE,eAACktC,GAAD,MAEF,eAAC,GAAD,CAAUluC,MAAOA,EAAOC,MAAO,EAAGc,MAAO,CAAEC,WAAY,UAAvD,SACE,eAAC,GAAD,SCzGR,IAAMmE,GAAkBC,cAAW,SAACC,GAAD,MAAY,CAC7CC,KAAM,CACJC,gBAAiB,UACjBnB,MAAOiB,EAAMG,QAAQC,OAAOC,MAC5BrB,SAAU,IAEZsB,KAAM,CACJtB,SAAU,OAPUe,CASpBQ,MAEEC,GAAiBT,cAAW,SAACC,GAAD,MAAY,CAC5CS,KAAM,CACJ,qBAAsB,CACpBP,gBAAiBF,EAAMG,QAAQO,OAAOC,WAHrBZ,CAMnBa,MAEEC,GAAYC,YAAW,CAC3BC,eAAgB,CACdC,UAAW,UAITC,GAAmB,SAAC,GAAsB,IAApBtG,EAAmB,EAAnBA,MACtBuG,GADyC,EAAZ2N,MACR,MACzB,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,CACE1N,UAAU,KACVC,MAAM,MACN1F,MAAO,CACLC,WAAY,QACZC,cAAe,QACfsE,gBAAiBgB,GANrB,SASE,yBACExF,MAAO,CACLG,YAAa,UAFjB,SAKGlB,EAAM0G,YAGX,eAAC,GAAD,CACEC,MAAM,SACN5F,MAAO,CAAEwE,gBAAiBgB,GAF5B,SAIE,gCACGK,MAAMhG,OAAOZ,EAAM6G,OAChB,KACwB,MAAxBjG,OAAOZ,EAAM6G,MACb,IACAjG,OAAOZ,EAAM6G,MAAMC,QAAQ,OAGnC,eAAC,GAAD,CACEH,MAAM,SACN5F,MAAO,CAAEwE,gBAAiBgB,GAF5B,SAIE,gCACGK,MAAMhG,OAAOZ,EAAM+G,OAChB,KACwB,MAAxBnG,OAAOZ,EAAM+G,MACb,IACAnG,OAAOZ,EAAM+G,MAAMD,QAAQ,OAInC,eAAC,GAAD,CACEH,MAAM,SACN5F,MAAO,CAAEwE,gBAAiBgB,GAF5B,SAIE,gCACGK,MAAMhG,OAAOZ,EAAMgH,OAChB,KACwB,MAAxBpG,OAAOZ,EAAMgH,MACb,IACApG,OAAOZ,EAAMgH,MAAMF,QAAQ,OAKnC,eAAC,GAAD,CACEH,MAAM,SACN5F,MAAO,CAAEwE,gBAAiBgB,GAF5B,SAIE,gCACGK,MAAMhG,OAAOZ,EAAMiH,OAChB,KACwB,MAAxBrG,OAAOZ,EAAMiH,MACb,IACArG,OAAOZ,EAAMiH,MAAMH,QAAQ,WAQnCI,GAAgB,SAAC,GAAsB,IAApBlH,EAAmB,EAAnBA,MAAmB,EAAZkU,MAC9B,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,CACE1N,UAAU,KACVC,MAAM,MACN1F,MAAO,CAAEC,WAAY,QAASC,cAAe,SAH/C,SAKE,yBAAQF,MAAO,CAAEG,YAAa,QAA9B,SAAyClB,EAAM0G,YAEjD,eAAC,GAAD,CAAiBC,MAAM,SAAvB,SACGC,MAAMhG,OAAOZ,EAAM6G,OAChB,KACwB,MAAxBjG,OAAOZ,EAAM6G,MACb,IACAjG,OAAOZ,EAAM6G,MAAMC,QAAQ,KAEjC,eAAC,GAAD,CAAiBH,MAAM,SAAvB,SACGC,MAAMhG,OAAOZ,EAAM+G,OAChB,KACwB,MAAxBnG,OAAOZ,EAAM+G,MACb,IACAnG,OAAOZ,EAAM+G,MAAMD,QAAQ,KAGjC,eAAC,GAAD,CAAiBH,MAAM,SAAvB,SACGC,MAAMhG,OAAOZ,EAAMgH,OAChB,KACwB,MAAxBpG,OAAOZ,EAAMgH,MACb,IACApG,OAAOZ,EAAMgH,MAAMF,QAAQ,KAIjC,eAAC,GAAD,CAAiBH,MAAM,SAAvB,SACGC,MAAMhG,OAAOZ,EAAMiH,OAChB,KACwB,MAAxBrG,OAAOZ,EAAMiH,MACb,IACArG,OAAOZ,EAAMiH,MAAMH,QAAQ,SAOxB,SAASK,GAAT,GAA2C,IAAlBC,EAAiB,EAAjBA,OAAQ8M,EAAS,EAATA,MACxC7M,EAAUnB,KAEhB,EAAkC7C,mBAAS,IAA3C,mBAAOiE,EAAP,KAAkBC,EAAlB,KAEA,EAAkCC,IAAMnE,UAAS,GAAjD,mBAAOoE,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,IAAMnE,UAAS,GAAnD,mBAAOsE,EAAP,KAAmBC,EAAnB,KAcMC,EAAqB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SAExC,OACE,eAAC,GAAD,UACE,gBAAC,GAAD,CACExB,UAAU,KACVC,MAAM,MACNwB,QAAS,EACTlH,MAAO,CAGLwE,gBAViB,WAGrB,UAUE,yBACExE,MAAO,CACLG,YAAa,OACbC,aAAc,QACdiD,MAAO,QAJX,SAOG0D,IAEH,eAACI,EAAA,EAAD,CACE,aAAW,aACXC,KAAK,QACL7D,QAAS,kBAtCQ,SAACyD,GACd,MAARA,EACFL,GAAa,SAACnD,GACZ,OAAQA,KAGVqD,GAAc,SAACrD,GACb,OAAQA,KA+BW6D,CAAmBL,IAClChH,MAAO,CAAEqD,MAAO,QAJlB,SAMG4D,EAAW,eAAC,KAAD,IAA0B,eAAC,KAAD,YAyFhD,OAlFAK,qBAAU,WAcR,IAXA,IAAIC,EAAW,GACXC,EAAY,GAEZC,EAAY,GAEZC,EAAiB,KAGjBC,EAAkB,KAGbC,EAAI,EAAGA,EAAIvB,EAAOwB,OAAQD,IAC7BvB,EAAOuB,GAAGjC,QAAQmC,MAAM,iBACrBJ,IACHA,EAAiBE,EACjBH,EAAUM,KACR,eAACjB,EAAD,CAEEC,MAAO,iBACPC,IAAK,IACLC,SAAUP,EACVyM,MAAOA,GAJFvL,KAQKA,EAChBL,EAASQ,KACP,eAAC,GAAD,CAEE9I,MAAOoH,EAAOuB,GACduL,MAAOA,GAFF9M,EAAOuB,GAAGjC,WAMnBU,EAAOuB,GAAGjC,QAAQmC,MAAM,gDAEnBH,IACHA,EAAkBC,EAClBH,EAAUM,KACR,eAACjB,EAAD,CAEEC,MAAO,mBACPC,IAAK,KACLC,SAAUL,EACVuM,MAAOA,GAJFvL,KAQMA,EACjBJ,EAAUO,KACR,eAAC,GAAD,CAEE9I,MAAOoH,EAAOuB,GACduL,MAAOA,GAFF9M,EAAOuB,GAAGjC,WAMnB8B,EAAUM,KACR,eAAC,GAAD,CAAuB9I,MAAOoH,EAAOuB,GAAIuL,MAAOA,GAA5BvL,IAK1B,IAE6B,EAFzBI,EAAO,UAAOP,GAElB,GAAIf,GAAaE,GACf,EAAAoB,GAAQC,OAAR,SAAeP,EAAiB,EAAG,GAAnC,OAAyCH,IACzCS,EAAO,uBAAOA,GAAP,CAAgBR,SAClB,GAAId,IAAcE,EAAY,CAAC,IAAD,GACnC,EAAAoB,GAAQC,OAAR,SAAeP,EAAiB,EAAG,GAAnC,OAAyCH,SAEzCS,GADUtB,GAAaE,EAChB,uBAAOoB,GAAP,CAAgBR,IAEhB,UAAOC,GAGhBjB,EAAawB,KACZ,CAAC3B,EAAQK,EAAWE,IAGrB,eAACsB,GAAA,EAAD,CACEzC,UAAW0C,KACXpI,UAAW,EACXqI,UAAW9B,EAAQjB,eAHrB,SAKE,gBAACgD,GAAA,EAAD,CAAOC,cAAc,EAAM,aAAW,mBAAmBlB,KAAK,QAA9D,UACE,eAACmB,GAAA,EAAD,UACE,gBAACrD,GAAA,EAAD,WACE,eAAC,GAAD,CACElF,MAAO,CACLC,WAAY,QACZE,YAAa,UACbD,cAAe,SAJnB,SAOE,mDAEF,eAAC,GAAD,CACE0F,MAAM,SADR,SAIE,8CAEF,eAAC,GAAD,CACEA,MAAM,SADR,SAIE,8CAGF,eAAC,GAAD,CACEA,MAAM,SADR,SAIE,8CAIF,eAAC,GAAD,CACEA,MAAM,SADR,SAIE,mDAKN,eAAC4C,GAAA,EAAD,UAAYjC,SCxTpB,SAASuJ,GAAMC,GACb,OAAO,eAAC,IAAD,aAAUhQ,UAAW,EAAGY,QAAQ,UAAaoP,IAGtD,IAAM5K,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvC0L,KAAM,CACJC,SAAU,GAEZC,gBAAiB,CACfpF,UAAWxG,EAAM6L,QAAQ,KAE3BC,YAAa,CACXC,SAAU,KAEZC,eAAgB,CACdzP,MAAO,IACPR,OAAQ,eAEVkQ,eAAe,eACZjM,EAAMkM,YAAYC,GAAG,MAAQ,QAInB,SAASm+B,GAAT,GAIX,IAHFj+B,EAGC,EAHDA,oBACA9B,EAEC,EAFDA,gBACAH,EACC,EADDA,cAEMpI,EAAUnB,KAERwI,EAAiBY,KAAjBZ,aAIFiD,GADWC,aAAaC,QAAQ,WAAY,SAChCD,aAAaC,QAAQ,cAGjCC,GAFSF,aAAaC,QAAQ,UAElBlS,GAGlB,EAAgC0D,oBAAS,IAAI0O,MAAOC,WAApD,mBAAOC,EAAP,KAAiBC,EAAjB,KAGA,EAA4B7O,mBAAS,GAArC,mBAAOqM,EAAP,KAAeyC,EAAf,KACA,EAAkC9O,wBAASgN,GAA3C,mBAAOV,EAAP,KAAkByC,EAAlB,KAGA,EAAsC/O,mBAAS,IAA/C,mBAAOgP,EAAP,KAAoBC,EAApB,KAGA,EAAsCjP,mBAAS,GAA/C,mBAAOmI,EAAP,KAAoB+G,EAApB,KACA,EAAwClP,mBAAS,GAAjD,mBAAqBmP,GAArB,WAGA,EAAsCnP,mBAAS,GAA/C,mBAAO9C,EAAP,KAAoBkS,EAApB,KACA,EAAoCpP,mBAAS,GAA7C,mBAAO7C,EAAP,KAAmBkS,EAAnB,KACA,EAAgCrP,mBAAS,GAAzC,mBAAO5C,EAAP,KAAiBkS,GAAjB,KAGA,GAA0CtP,mBAAS,GAAnD,qBAAO0K,GAAP,MAAsB6E,GAAtB,MACA,GAAkCvP,mBAAS,GAA3C,qBAAO2K,GAAP,MAAkB6E,GAAlB,MACA,GAAwBxP,mBAAS,GAAjC,qBAAO4K,GAAP,MAAa6E,GAAb,MAGA,GAAgEzP,mBAAS,CACvE,CACE0P,KAAM,QACNxP,IAAK,OACLD,IAAK,OACLE,GAAI,UALR,qBAAOwP,GAAP,MAAiCC,GAAjC,MAUA,GAAwCzL,IAAMnE,SAAS,GAAvD,qBAAO6P,GAAP,MAAqBC,GAArB,MAGA,GAAkD9P,mBAAS,IAA3D,qBAAO+P,GAAP,MAA0BC,GAA1B,MAEA,GAAsChQ,mBAAS,GAA/C,qBAAOiQ,GAAP,MAAoB5G,GAApB,MAEArE,qBAAU,WACY,IAAhBiL,IAEFC,GAAYtB,KAEb,CAACqB,KAEJ,IAAME,GAAkB,WACtB,OAAoB,IAAhBF,GACK,IAEA,KAILG,GAAY,WAChB,OAAIH,GAAc,EACT,IAEA,KA4DPI,GAAmB,KAEvB,GACErQ,oBAAS,GADX,qBAAOsQ,GAAP,MAAmCC,GAAnC,MAiFA,GAAwCvQ,mBAAS,IAAI0O,MAArD,qBAAOhC,GAAP,MAAqB8D,GAArB,MACA,GAAoDxQ,oBAAS,GAA7D,qBAAO4M,GAAP,MAA2BxD,GAA3B,MAEA,GAAsCpJ,oBAAS,GAA/C,qBAAOyQ,GAAP,MAAoBC,GAApB,MAEMC,GAA8B,WAClCJ,IAA8B,IAqBhCvL,qBAAU,WACR6J,EAAYnC,GAAaiC,aACxB,CAACjC,KAEJ,IA2SMkE,GAAoB,WAGxB,IAAIyD,EAAO,IAAI3F,KACf2F,EAAKF,SAAQ,IAAIzF,MAAO0F,UAAY,GACpCC,EAAK5B,SAAS,GAAI,GAAI,EAAG,GAEzB,IAAID,EAAS,IAAI9D,KAAKE,GACtB4D,EAAOC,SAAS,EAAG,EAAG,EAAG,GACzB,IAAIzB,EAAYwB,EAAO7D,UAEvBsC,IACGC,IACCzC,EAAY,sBAAwBrN,OAAOyO,IAAcyE,SAAS,EAAG,GACrE,CACEnD,QAAS,CACPC,SAAU9C,EACVwC,UAAWuD,EAAK1F,UAChBoC,QAASnC,EACToC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAIboB,MAAK,SAACC,IAnLkB,SAACpU,GAgH5B,IA9GA,IAAIqU,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M,EAAYL,EAAgBtO,EAAQkC,OAASD,GAAG,IAE9CqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C2M,EAAYN,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C4M,EAAYP,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1CgQ,EAAY3D,EAA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CA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M,EAAYL,EAAgBtO,EAAQkC,OAASD,GAAG,IAE9CqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C2M,EAAYN,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C4M,EAAYP,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1CgQ,EAAY3D,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAEtD,MAAO6M,IAETT,EAAgBjM,KAAK,CACnBpC,QAASA,EAAQiC,GACjB9B,KAAMsO,EACNpO,KAAMsO,EACNrO,KAAMsO,EACNrO,KAAMsO,EACNiD,KAAMG,IAMVtF,GAAqB,GAAD,OAAK0B,IAkCrBU,CAAqBX,EAASpU,SAE/BgV,OAAM,SAACF,QAKZnN,qBAAU,WACR,IAAI+tB,EAAgBnf,YAA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EAAO7D,UAEvBsC,IACGC,IACCzC,EAAY,mBAAqBrN,OAAOyO,IAAcyE,SAAS,EAAG,GAClE,CACEnD,QAAS,CACPC,SAAU9C,EACVwC,UAAWuD,EAAK1F,UAChBoC,QAASnC,EACToC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAIboB,MAAK,SAACC,IAnLkB,SAACpU,GAgH5B,IA9GA,IAAIqU,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAASD,GAAG,KACtC0M,EAAYL,EAAgBtO,EAAQkC,OAASD,GAAG,IAE9CqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C2M,EAAYN,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,IAElDqM,EAAiC,EAAjBtO,EAAQkC,OAAaD,GAAG,KAC1C4M,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qBAAOyQ,GAAP,MAAoBC,GAApB,MAEMC,GAA8B,WAClCJ,IAA8B,IAqBhCvL,qBAAU,WACR6J,EAAYnC,GAAaiC,aACxB,CAACjC,KAEJ,IAgTMkE,GAAoB,SAACC,EAAOC,EAAWC,EAASC,GAEpD,IAAIiX,EAAQxZ,EAEVwZ,GADY,QAAVpX,EACO,mBAEA,iBAAmBzP,OAAOyP,GAAOyD,SAAS,EAAG,GAExDrD,IACGC,IAAI+W,EAAO,CACV9W,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,IAlLkB,SAACpU,GAgH5B,IA9GA,IAAIqU,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGOiC,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvC,IAAIwM,EAAYC,IACZC,EAAYD,IACZE,EAAYF,IACZG,EAAYH,IACZuD,EAAYvD,IACZwD,EAAYxD,IAEhB,IACMJ,EAAgBrM,GAAG,KACrBwM,EAAYH,EAAgBrM,GAAG,IAE7BqM,EAAgBtO,EAAQkC,OAA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UAAW,IAAIpC,KAAK,YAAeC,UACnCoC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,IA3MkB,SAACpU,EAAMwT,GAElC,IAAIa,EAAkB,GAElBC,EAAkBC,OAAOC,QAAQxU,GAG/BgG,EAAU,CACd,OACA,OACA,OACA,OACA,OACA,OACA,YACA,OACA,OACA,eACA,WACA,iBACA,KACA,WACA,YACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBACA,cACA,QACA,eACA,cACA,4BACA,4BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBAGY,KAAVwN,GAA0B,KAAVA,GAA0B,KAAVA,GAA0B,KAAVA,GAoClDxN,EAAQoC,KAAR,MAAApC,EAnCoB,CAClB,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,kBAMJ,IAvJ4C,eAuJnCiC,GACP,IAAI+uB,EAAW,GACfjY,MAAMC,KAAKD,MAAM,IAAIrB,QAAQvb,KAAI,SAAC8c,EAAS1f,GACzCy3B,EAAS5uB,KAAT,eAAiB,MAAQlI,OAAOX,EAAQ,GAAKmV,SAG/C,IACMJ,EAAgBrM,GAAG,KACrB+uB,EAAS,GAAT,KAAsB1iB,EAAgBrM,GAAG,IAE3C,IAAK,IAAI8R,EAAI,EAAGA,EAAI,GAAIA,IAClBzF,EAAgBtO,EAAQkC,OAAS6R,EAAI9R,GAAG,KAC1C+uB,EAASjd,GAAG,MAAQ7Z,OAAO6Z,EAAI,IAC7BzF,EAAgBtO,EAAQkC,OAAS6R,EAAI9R,GAAG,IAG9C,MAAO6M,IAET,IAAMmiB,EAAa,GACnBD,EAAS7R,SAAQ,SAAC7lB,EAAOC,GACvB03B,EAAW,MAAQ/2B,OAAOX,EAAQ,IAChCD,EAAM,MAAQY,OAAOX,EAAQ,OAKjC8U,EAAgBjM,KAAhB,aACEpC,QAASA,EAAQiC,IACdgvB,KA5BEhvB,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAM,EAAjCA,GAkCT0K,GAAqB,GAAD,OAAK0B,IAsBrBU,CAAqBX,EAASpU,KAAMwT,MAErCwB,OAAM,SAACF,QAmBNjC,GAAc,SAACa,GAQnB,IAAMD,EAAY,aACdwB,EAAavB,EAGfuB,EADE7B,GACW/B,KAAK6D,MAGLxB,EAIf,IAAIyB,EAAS,IAAI9D,KAAK4D,GACtBE,EAAOC,SAAS,EAAG,EAAG,EAAG,GACzB,IAAIzB,EAAYwB,EAAO7D,WAnlBA,SAACmC,EAAWC,EAASC,GAO5CC,IACGC,IAAIzC,EAAY,iBAAkB,CACjC0C,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,GAGL3C,EAAU2C,EAASpU,KAAKgP,QACxB0C,EAAkC,IAArB0C,EAASpU,KAAKqS,SAE5B2C,OAAM,SAACF,GAAW,IAAD,EAKgB,OAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOV,gBAAP,eAAiBpF,SACnBgC,OAsjBNqE,CAAiB5B,EAAWwB,EAAYtB,GA9anB,SAACF,EAAWC,EAASC,GAE1CC,IACGC,IAAIzC,EAAY,kBAAmB,CAClC0C,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,GAELxC,EAAewC,EAASpU,SAEzBgV,OAAM,SAACF,OA6ZVQ,CAAe7B,EAAWwB,EAAYtB,GA1XjB,SAACF,EAAWC,EAASC,GAE1CC,IACGC,IAAIzC,EAAY,kBAAmB,CAClC0C,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,GAEL,IAAM9U,EAAQ8U,EAASpU,KAAKV,MAC5BuS,EAAe3R,OAAOZ,GAAO8G,QAAQ,IAErC0L,EAAgB5R,OAAOZ,GAAO8G,QAAQ,GAAK,OAE5C4O,OAAM,SAACF,OAsWVS,CAAe9B,EAAWwB,EAAYtB,GAjZlB,SAACF,EAAWC,EAASC,GAEzCC,IACGoJ,KACC5L,EAAY,uBACZ,CAAEqC,UAAW4M,GAAa5M,GAAYC,QAASA,GAC/C,CACEI,QAAS,CACPC,SAAU9C,KAIfkD,MAAK,SAACC,GAELi2C,GAAoBnqD,OAAOkU,EAASpU,UAErCgV,OAAM,SAACF,OAkYVy1C,CAAc92C,EAAWwB,GA/VH,SAACxB,EAAWC,EAASC,GAE3CC,IACGC,IAAIzC,EAAY,wBAAyB,CACxC0C,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,GAeLk2C,GAAmBl2C,EAASpU,SAE7BgV,OAAM,SAACF,OAiUVa,CAAgBlC,EAAWwB,EAAYtB,GA3TR,SAACF,EAAWC,EAASC,GAEpDC,IACGC,IAAIzC,EAAY,iBAAkB,CACjC0C,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,GAEL,IAAMwB,EAAmBxB,EAASpU,KAAKwqD,eACjC10C,EAAe1B,EAASpU,KAAKyqD,WAC7BC,EAAUt2C,EAASpU,KAAK2qD,MACxBtzB,EAAoBjjB,EAASpU,KAAK4qD,eAClCrzB,EAAgBnjB,EAASpU,KAAK6qD,WAC9BpzB,EAAWrjB,EAASpU,KAAK82B,MAE/B5kB,GAAiBhS,OAAO0V,GAAkBxP,QAAQ,IAClD+L,GAAajS,OAAO4V,GAAc1P,QAAQ,IAC1CgM,GAAQlS,OAAOwqD,GAAStkD,QAAQ,IAChCuwB,GAAkBz2B,OAAOm3B,GAAmBjxB,QAAQ,IACpDywB,GAAc32B,OAAOq3B,GAAenxB,QAAQ,IAC5C2wB,GAAS72B,OAAOu3B,GAAUrxB,QAAQ,OAEnC4O,OAAM,SAACF,OA8RVkB,CAAyBvC,EAAWwB,EAAYtB,GAxRd,SAACF,EAAWC,EAASC,GAEvDC,IACGC,IAAIzC,EAAY,kBAAmB,CAClC0C,QAAS,CACPC,SAAU9C,EACVwC,UAAWA,EACXC,QAASA,EACTC,UAAWA,EACXK,aAAclB,KACdmB,iBAAkBhF,EAClBiF,OAAQnB,QAGXoB,MAAK,SAACC,GAEL7B,GAA4B6B,EAASpU,SAEtCgV,OAAM,SAACF,OAuQVmB,CAA4BxC,EAAWwB,EAAYtB,GACnDJ,GAAkBf,GAAciB,EAAWwB,EAAYtB,IAIzDhM,qBAAU,YAGRqL,GAAmB5G,SAASC,eAAe,uBAGzC2G,GAAiBkD,WAAmC,IAAI7E,MArjBvD8E,eAAe,GAAI,CAClBC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAETtS,eAmjBH6O,GAAYtB,GAGZ,IAAM/O,EAAW+T,aAAY,WAC3B1D,GAAYtB,KACXvD,GAEH,OAAO,WACLwI,cAAchU,MAEf,CAAC+O,IAEJ,OAAsC5O,mBAAS,iBAA/C,qBAAoB8T,IAApB,aAUA,OATAC,2BAAgB,WACJC,OAAOC,WAAW,uBACtBC,QACJJ,GAAe,iBAEfA,GAAe,gBAEhB,IAGD,gBAAC,IAAMpM,SAAP,WACE,eAACpB,EAAA,EAAD,CACEC,WAAS,EACTpI,eAAe,gBACfD,WAAW,SAHb,SAcE,eAACiO,GAAD,CACEC,cAAeA,EACfC,OAAQA,EACRC,UAAWA,EACXC,gBAAiBA,EACjBC,gBArgBgB,WACtBnD,GAAe,GACf,IAAIkJ,EAAM,IAAI7D,KACd8B,GAAgB+B,GAChB1D,EAAY0D,EAAI5D,WAChB4B,IAA8B,GAC9BG,IAAe,IAggBTrH,eAAgBA,GAChBD,sBAAuBA,GACvBqD,oBA3foB,WAG1B,OADkB,IAAIiC,KAAK,aA0frBhC,aAAcA,GACdC,8BA3qB8B,SAACL,GACrC,IAAM+H,EAAO,IAAI3F,KAAKpC,GACtB,OACE,kCACGlL,OAAOiT,EAAKD,WAAWE,SAAS,EAAG,KADtC,IAEGlT,OAAOiT,EAAKE,WAAa,GAAGD,SAAS,EAAG,KAF3C,IAEkDD,EAAKG,cACrD,2CACCH,EACEb,eAAe,GAAI,CAClBC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAETtS,kBA+pBDuL,mBAAoBA,GACpBC,iBArhBiB,SAACwH,GACxB,IACE3D,IAAe,GADjB,QAGEF,GAAgB6D,GAChBjL,IAAsB,SAmqBtB,sBAAK1L,MAAO,CAAE8K,UAAW,YACzB,eAAC,GAAD,CACEpB,eAAgB4H,EAAY5H,eAC5BC,QAAsC,IAA7B2H,EAAY5H,eAAwB,KAC7CE,WAAY0H,EAAY1H,WACxBrH,IAAK+O,EAAY22C,KACjBzlD,IAAK8O,EAAY+2C,KACjBzyB,KAAMtkB,EAAYskB,KAClBC,KAAMvkB,EAAYukB,KAClBqyB,KAAM52C,EAAY42C,KAClBI,KAAMh3C,EAAYg3C,KAClBH,KAAM72C,EAAY62C,KAClBI,KAAMj3C,EAAYi3C,KAClBH,KAAM92C,EAAY82C,KAClBI,KAAMl3C,EAAYk3C,KAClB3+C,SAAUyH,EAAYzH,SACtBC,kBAAmBwH,EAAYxH,kBAC/BC,mBAAoBuH,EAAYvH,mBAChCuH,YAAaA,IAEf,gBAAC1I,EAAA,EAAD,CACEC,WAAS,EAITpI,eAAe,gBACfT,MAAO,CAAE8K,UAAW,UANtB,UAQE,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC,GAAD,CAAsBwB,YAAaA,EAAaC,SAAU,QAG5D,eAAC9B,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC,GAAD,CACEzJ,YAAaA,EACbC,WAAYA,EACZC,SAAUA,EACV61B,aAAcA,GACdC,YAAaA,GACbC,UAAWA,GACXyxB,gBAAiBA,UAIvB,gBAACt+C,EAAA,EAAD,CACEC,WAAS,EACT7I,MAAO,CAAE8K,UAAW,UAFtB,UAKE,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC,GAAD,CACE+D,cAAeA,GACfC,UAAWA,GACXC,KAAMA,OAGV,eAACtE,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC,GAAD,CACEmC,cAAeqpB,GACfppB,UAAWspB,GACXrpB,KAAMupB,UAIZ,gBAAC32B,EAAA,EAAD,CACEC,UAAW,EACXC,MAAO,CAAE8K,UAAW,SAAUzK,OAAQ,QAASQ,MAAO,QAFxD,UAIE,eAACH,EAAA,EAAD,CACEC,QAAQ,KACR0C,MAAM,gBACNrD,MAAO,CACL6K,WAAY,SACZC,UAAW,OACXsC,aAAc,UANlB,qCAYA,eAAC,GAAD,CACEzN,KAAMsS,GACN9P,SAAU,GACVC,UAAW,CAAC,EAAG,MACfC,WAAY,CAAC,EAAG,UAIpB,eAACuG,EAAA,EAAD,CACEC,WAAS,EACT7I,MAAO,CACL8K,UAAW,QAHf,SAME,gBAAClC,EAAA,EAAD,CAAMK,MAAI,EAACO,GAAI,GAAf,UACE,gBAACZ,EAAA,EAAD,CACEC,WAAS,EACTsH,QAAS,EACT3P,WAAW,SACXR,MAAO,CAAEoN,aAAc,SAJzB,UAME,eAACxE,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACvI,EAAA,EAAD,CAAYC,QAAQ,KAAK0C,MAAM,gBAA/B,+BAIF,eAACuF,EAAA,EAAD,CAAMK,MAAI,EAACb,UAAW9B,EAAQ0J,OAC9B,eAACpH,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACvI,EAAA,EAAD,CAAYV,MAAO,CAAE6K,WAAY,UAAjC,4BACkB,SAGpB,eAACjC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC8N,EAAA,EAAD,CAAa3O,UAAW9B,EAAQ8J,YAAhC,SACE,eAAC4G,EAAA,EAAD,CAAQ/X,MAAOkT,GAAcvC,SAhXjB,SAACqH,GACzB7E,GAAgB6E,EAAMC,OAAOjY,OAC7B,IAAI0X,EAAO,IAAI3F,KACf2F,EAAKF,SAAQ,IAAIzF,MAAO0F,UAAY,GACpCC,EAAK5B,SAAS,GAAI,GAAI,EAAG,GAEzB,IAAID,EAAS,IAAI9D,KAAKE,GACtB4D,EAAOC,SAAS,EAAG,EAAG,EAAG,GACzB,IAAIzB,EAAYwB,EAAO7D,UAEvBiC,GAAkB+D,EAAMC,OAAOjY,MAAO0X,EAAK1F,UAAWC,EAAUoC,IAsWpD,SACGoL,MAAMC,KAAKD,MAAM,IAAIrB,QAAQvb,KAAI,SAAC8c,EAAS1f,GAC1C,OACE,gBAACiY,EAAA,EAAD,CAAUlY,MAAOC,EAAQ,EAAzB,cACIwE,OAAOxE,EAAQ,GAAG0X,SAAS,EAAG,kBAQ9C,eAAC,GAAD,CAAYvQ,OAAQgM,GAAmBc,MAAOhB,UAYlD,eAACiF,EAAA,EAAD,CACEnJ,KAAM2E,GACNyE,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,iBAAkB,IAClB7H,QAASsD,GAPX,SASE,eAAC,GAAD,CAAOtD,QAASsD,GAA6B/E,SAAS,UAAtD,8BAKF,sBAAKlO,MAAO,CAAEoN,aAAc,aCxmClC,SAASu8B,GAAW/pC,EAAMgqC,EAAUC,EAAKC,EAAOC,GAC9C,MAAO,CAAEnqC,OAAMgqC,WAAUC,MAAKC,QAAOC,WAIrCJ,GAAW,iBAAkB,IAAK,EAAK,GAAI,GAC3CA,GAAW,qBAAsB,IAAK,EAAK,GAAI,KAC/CA,GAAW,SAAU,IAAK,GAAM,GAAI,GACpCA,GAAW,UAAW,IAAK,IAAK,GAAI,KACpCA,GAAW,cAAe,IAAK,GAAM,GAAI,K,oCCZrCxkC,GAAYC,YAAW,CAC3B2uB,KAAM,CACJ,uBAAwB,CACtBvvB,gBAAiB,WAGnB,8BAA+B,CAC7BnB,MAAO,cAKb,SAAS2wB,GAASjkB,GAChB,IAAQvC,EAAqCuC,EAArCvC,SAAUvO,EAA2B8Q,EAA3B9Q,MAAOC,EAAoB6Q,EAApB7Q,MAAU+0B,EAAnC,aAA6ClkB,EAA7C,IAEA,OACE,8CACEmkB,KAAK,WACLC,OAAQl1B,IAAUC,EAClBoN,GAAE,0BAAqBpN,GACvB,uCAA+BA,IAC3B+0B,GALN,aAOGh1B,IAAUC,GACT,eAACk1B,GAAA,EAAD,UACE,eAAC1zB,EAAA,EAAD,UAAa8M,SAOvB,SAAS6mB,GAAUn1B,GACjB,MAAO,CACLoN,GAAG,WAAD,OAAapN,GACf,gBAAgB,gBAAhB,OAAiCA,IAItB,SAASurD,GAAT,GAAgD,IAAxB95C,EAAuB,EAAvBA,oBACrC,EAA0BlK,WAAe,GAAzC,mBAAOxH,EAAP,KAAcs1B,EAAd,KACMjuB,EAAUnB,KAKhB,OACE,gBAACivB,GAAA,EAAD,WACE,gBAACI,GAAA,EAAD,CACEx0B,MAAO,CAAEqD,MAAO,WAChB+E,UAAW9B,EAAQytB,KACnB90B,MAAOA,EACP2Q,SAVe,SAACqH,EAAOwd,GAC3BF,EAASE,IAUL,aAAW,iBALb,UAQE,eAACC,GAAA,EAAD,aAAK7yB,MAAM,iBAAoBwyB,GAAU,KACzC,eAACK,GAAA,EAAD,aAAK7yB,MAAM,MAASwyB,GAAU,QAGhC,eAAC,GAAD,CAAUp1B,MAAOA,EAAOC,MAAO,EAA/B,SAEE,eAAC,GAAD,CAAYyR,oBAAqBA,S,cC6DnC+5C,GAAc,IACdC,GAAgBtmD,aAAW,CAC/BU,KAAM,CACJ1B,MAAOunD,KAAM,KACb,YAAa,CACXvnD,MAAOunD,KAAM,OAGjB9rC,QAAS,IAPWza,EAQnB,SAAC0L,GAAD,OAAW,eAACkc,GAAA,EAAD,aAAU5oB,MAAM,WAAc0M,OAEtC5K,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvCS,KAAM,CACJzE,QAAS,QAEXuqD,OAAQ,CACN90B,OAAQzxB,EAAMyxB,OAAOyb,OAAS,EAC9BsZ,WAAYxmD,EAAMymD,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQ3mD,EAAMymD,YAAYE,OAAOC,MACjC1/C,SAAUlH,EAAMymD,YAAYv/C,SAAS2/C,iBAGzCC,YAAa,CACXvgD,WAAY6/C,GACZ7pD,MAAM,eAAD,OAAiB6pD,GAAjB,OACLI,WAAYxmD,EAAMymD,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQ3mD,EAAMymD,YAAYE,OAAOC,MACjC1/C,SAAUlH,EAAMymD,YAAYv/C,SAAS6/C,kBAGzCC,WAAY,CACVtiD,YAAa,IAEfuiD,KAAM,CACJjrD,QAAS,QAEXkxC,OAAQ,CACN3wC,MAAO6pD,GACPzY,WAAY,EACZhP,WAAY,UAEduoB,WAAY,CACV3qD,MAAO6pD,GACPI,WAAYxmD,EAAMymD,YAAYC,OAAO,QAAS,CAC5CC,OAAQ3mD,EAAMymD,YAAYE,OAAOC,MACjC1/C,SAAUlH,EAAMymD,YAAYv/C,SAAS6/C,kBAGzCI,YAAY,aACVX,WAAYxmD,EAAMymD,YAAYC,OAAO,QAAS,CAC5CC,OAAQ3mD,EAAMymD,YAAYE,OAAOC,MACjC1/C,SAAUlH,EAAMymD,YAAYv/C,SAAS2/C,gBAEvCnoB,UAAW,SACXniC,MAAOyD,EAAM6L,QAAQ,GAAK,GACzB7L,EAAMkM,YAAYC,GAAG,MAAQ,CAC5B5P,MAAOyD,EAAM6L,QAAQ,GAAK,IAG9Bu7C,QAAQ,aACNprD,QAAS,OACTE,WAAY,SACZC,eAAgB,WAChBW,QAASkD,EAAM6L,QAAQ,EAAG,IAGvB7L,EAAMqnD,OAAOD,SAElBttC,MAAO,CACLhd,QAASkD,EAAM6L,QAAQ,GACvBhD,UAAW,SACX9J,MAAOiB,EAAMG,QAAQmnD,KAAK1a,WAE5B2a,eAAgB,CAKdvrD,QAAS,QAEX4C,QAAS,CACP+M,SAAU,EACVhQ,WAAYqE,EAAM6L,QAAQ,GAC1BhQ,YAAamE,EAAM6L,QAAQ,GAC3B/P,aAAckE,EAAM6L,QAAQ,IAE9B27C,YAAa,CACX77C,SAAU,GAEZD,KAAM,CACJC,SAAU,GAEZ87C,0BAA2B,CACzBlhD,WAAYvG,EAAM6L,QAAQ,KAE5B67C,gCAAiC,CAC/BhjD,YAAa1E,EAAM6L,QAAQ,IAE7B87C,iBAAkB,CAChBjjD,YAAa,OACb6B,WAAYvG,EAAM6L,QAAQ,IAE5BG,eAAgB,CACdzP,MAAO,IACPR,OAAQ,eAEV6rD,6BAA8B,CAC5B5oD,SAAUgB,EAAM+c,WAAWC,QAAQ,KAIrC6qC,gCAAiC,CAC/B7oD,SAAUgB,EAAM+c,WAAWC,QAAQ,IACnCje,MAAOiB,EAAMG,QAAQmnD,KAAK1a,WAE5Bkb,iBAAkB,GAGlBC,2BAA4B,CAC1B7nD,gBAAiB,WAEnB8nD,kBAAmB,CACjBC,aAAc,eAYH,SAASC,GAAaz8C,GAAQ,IAAD,IACpCzJ,EAAUnB,KACVb,EAAQ01B,cAGd,EAAwBvzB,IAAMnE,UAAS,GAAvC,mBAAO2L,EAAP,KAAaiU,EAAb,KACA,EAAsC5f,mBAAS,IAA/C,mBAAOsf,EAAP,KAAoB+B,EAApB,KACA,EAAgCrhB,mBAAS,YAAzC,mBAAOg4C,EAAP,KAAiBC,EAAjB,KAEM1rC,EAAkB,SAAC8W,GAGvBzD,GAAQ,IAQJktB,EAAUC,cACVod,EAAW57C,aAAaC,QAAQ,WAAY,SAC5CF,EAAYC,aAAaC,QAAQ,aAGvC,EAAsDvC,KAA9CT,GAAR,EAAQA,mBAAoBL,GAA5B,EAA4BA,sBAG5BnG,qBAAU,WACR,GAAKsJ,GAA2B,KAAdA,EAAlB,CAKA2C,IACGoJ,KACC/d,EAAa,uBACb,CACE+hB,MAAO9P,aAAaC,QAAQ,cAE9B,CACE2C,QAAS,CACPC,SAAU7C,aAAaC,QAAQ,aAE/B,8BAA+B,IAC/B,+BAAgC,uCAIrCgD,MAAK,SAACC,GACLlD,aAAa4T,QACX,gBACAnG,KAAKoG,UAAU3Q,EAASpU,KAAK,GAAG+sD,gBAElC77C,aAAa4T,QACX,qBACAnG,KAAKoG,UAAU3Q,EAASpU,KAAK,GAAGw6B,wBAGnCxlB,OAAM,SAACF,GAAW,IAAD,EAChB5D,aAAa4T,QAAQ,gBAAiBnG,KAAKoG,UAAU,KACrD7T,aAAa4T,QAAQ,qBAAsBnG,KAAKoG,UAAU,KAC1B,OAAvB,OAALjQ,QAAK,IAALA,GAAA,UAAAA,EAAOV,gBAAP,eAAiBpF,SACnBgC,QAIFE,aAAaC,QAAQ,+BACvB67C,GACEruC,KAAKC,MAAM1N,aAAaC,QAAQ,gCAIpC,IAAM3O,EAAW+T,aAAY,WACvBrF,aAAaC,QAAQ,+BACvB67C,GACEruC,KAAKC,MAAM1N,aAAaC,QAAQ,kCAGnC,MAEH87C,GAAuBh8C,GAEvB,IAAIi8C,EAAuB32C,aAAY,WACrC02C,GAAuBh8C,KACtB,MAEH,OAAO,WACLuF,cAAchU,GACdgU,cAAc02C,IA3Ddzd,EAAQrnC,KAAK,YA6Dd,IAEH,IAEA,GAAoCzF,oBAAS,GAA7C,qBAAOwqD,GAAP,MAAmBC,GAAnB,MACA,GAAgCzqD,mBAAS,MAAzC,qBAAO0qD,GAAP,MAAiBC,GAAjB,MAEA,GAA0D3qD,mBAAS,MAAnE,qBAAO4qD,GAAP,MAA8BC,GAA9B,MAEMC,GAD2BC,QAAQH,IAErC,6BACA59C,EAEEg+C,GAAkBD,QAAQL,IAE1BO,GAAU,WACd,IACIC,EADclvC,KAAKC,MAAM1N,aAAaC,QAAQ,gBAC3B2gC,KACnBA,EAAO,GAgCX,OA/BA+b,EAAK1oC,SAAQ,SAACrK,GACRA,EAAIgC,SAAS,UACfg1B,EAAK1pC,KAAK,SAER0S,EAAIgC,SAAS,UACfg1B,EAAK1pC,KAAK,SAER0S,EAAIgC,SAAS,uBACfg1B,EAAK1pC,KAAK,uBAER0S,EAAIgC,SAAS,OACfg1B,EAAK1pC,KAAK,kBAER0S,EAAIgC,SAAS,QACfg1B,EAAK1pC,KAAK,OAER0S,EAAIgC,SAAS,cACfg1B,EAAK1pC,KAAK,aAER0S,EAAIgC,SAAS,gBACfg1B,EAAK1pC,KAAK,eAER0S,EAAIgC,SAAS,QACfg1B,EAAK1pC,KAAK,OAGR0S,EAAIgC,SAAS,WACfg1B,EAAK1pC,KAAK,aAIP0pC,GAIT,GAA0CnvC,oBAAS,SAACkB,GAClD,OAAQoN,GAA2B,KAAdA,EAEjB28C,KAAU3lC,MAAK,SAAC6pB,GAAD,MAAmB,UAATA,KACzB,QACC7gC,GAA2B,KAAdA,EAEd28C,KAAU,GADVne,EAAQrnC,KAAK,UAJbqnC,EAAQrnC,KAAK,aAFnB,qBAAO0lD,GAAP,MAAsBC,GAAtB,MAWA,GAAwCprD,mBAAS,QAAjD,qBACA,IADA,YAC4CA,oBAAS,IAArD,qBAMA,IANA,YAOEA,oBAAS,IADX,qBAIA,IAJA,YAKEA,oBAAS,IADX,qBAEA,IAFA,YAEsCA,oBAAS,IAA/C,qBACA,IADA,YAEEA,oBAAS,IADX,qBAIA,IAJA,YAI0CA,oBAAS,WACjD,IAAIwtC,EAAU,IAAI9+B,KAGlB,OAFA8+B,EAAQr5B,SAAQ,IAAIzF,MAAO0F,UAAY,GACvCo5B,EAAQ/6B,SAAS,EAAG,EAAG,EAAG,GACnB+6B,EAAQ7+B,cAJjB,qBAAO8+B,GAAP,MAMA,IANA,MAMsCztC,oBAAS,WAC7C,IAAIs+B,EAAM,IAAI5vB,KAEd,OADA4vB,EAAI7rB,SAAS,GAAI,GAAI,GAAI,KAClB6rB,EAAI3vB,cAHb,qBAAOg/B,GAAP,MAqBM0d,IArBN,MAqByB,WACvBC,IAAc,SAACpqD,GACb,MAAO,CACL28C,WAAW,EACX0N,cAAc,EACdC,iBAAiB,EACjBC,mBAAmB,EACnBC,sBAAsB,EACtBC,mBAAmB,QAyInB7d,GAAoB,SAACzxB,EAAM0xB,GAC/B,IAAIroB,EAAW,IAAIhX,KAAK2N,GAAM1N,UAO9B,QANa,IAAID,KAAKq/B,GAAIp/B,UAEM+W,GAIR,IAqCpBkmC,GAAe,WAEnBC,KACAlB,GAAY,MACZp8C,aAAau9C,QACbhf,EAAQ9kC,QAAQ,WAGZ6jD,GAAoB,WACxB56C,IACGoJ,KAAK/d,EAAa,eAAgB,IAClCkV,MAAK,SAACC,OACNY,OAAM,SAACF,QAGN9D,GAAsB,WAC1BE,aAAa4T,QAAQ,wBAAwB,GAC7CypC,KACA53C,OAAOylB,SAASsyB,UAGlB,GAAoC/rD,mBAAS,CAC3C69C,WAAW,EACX0N,cAAc,IAFhB,qBAAOS,GAAP,MAAmBV,GAAnB,MASA,GAA8DtrD,mBAAS,IAAvE,qBAAOisD,GAAP,MAAgCC,GAAhC,MAEMp2B,GAA0B,SAACzS,GAC/B6oC,GAA2B7oC,GAC3BioC,GAAc,CAAEzN,WAAW,EAAM0N,cAAc,KAG3CY,GAA0B,SAACvvD,EAAO0sD,GACtC,OAAQA,GACN,IAAK,QACH8B,GAAiB,SACjBgB,GAAyB,IACzB,MACF,IAAK,QACHhB,GAAiB,SACjBgB,GAAyB,IACzB,MACF,IAAK,sBACHhB,GAAiB,uBACjBgB,GAAyB,IACzB,MACF,IAAK,iBACHhB,GAAiB,kBACjBgB,GAAyB,IACzB,MACF,IAAK,MACHhB,GAAiB,OACjBgB,GAAyB,IACzB,MACF,IAAK,YACHhB,GAAiB,aACjBgB,GAAyB,IACzB,MACF,IAAK,cACHhB,GAAiB,eACjBgB,GAAyB,IACzB,MACF,IAAK,MACHhB,GAAiB,OACjBgB,GAAyB,IACzB,MACF,IAAK,SACHhB,GAAiB,UACjBgB,GAAyB,IACzB,MAKF,QAEEd,IAAc,SAACpqD,GACb,MAAO,CAAE28C,WAAW,EAAM0N,cAAc,MAE1Czd,GAAkBL,GAAeE,MAOvC,GAA0D3tC,mBAAS,IAAnE,qBAAOqsD,GAAP,MAA8BD,GAA9B,MACA,GAA0CpsD,mBAAS,IAAnD,qBAAOoM,GAAP,MAAsBkgD,GAAtB,MAeA,GAAoDtsD,oBAAS,GAA7D,qBAAOusD,GAAP,MAA2BC,GAA3B,MACA,GAAoDxsD,mBAAS,CAC3DqiB,WAAY,EACZ9D,cAAe,EACf+D,OAAQ,EACRC,QAAS,IAJX,qBAAOkqC,GAAP,MAA2BpC,GAA3B,MAmBA,GAA0CrqD,oBAAS,GAAnD,qBAAO0sD,GAAP,MAAsBC,GAAtB,MAqBA,GAAoD3sD,qBAApD,qBAAO4sD,GAAP,MAA2BC,GAA3B,MAEA,GAAkD7sD,mBAAS,IAA3D,qBAAO8sD,GAAP,MAA0BC,GAA1B,MAEMC,GAAkC,SAAC1gD,GACvC,IAAI+H,EAAO,IAAI3F,KAAKpC,GACN,UAAM+H,EAAKD,UAAX,YAAwB7W,OAAO8W,EAAKE,WAAa,IAE/D,OAAO,gCAAOF,EAAKwK,wBAUfyrC,GAAyB,SAACl5C,GAC9BH,IACGoJ,KACC/d,EAAa,qBACb,CAAE+hB,MAAO9P,aAAaC,QAAQ,cAC9B,CACE2C,QAAS,CAEPC,SAAUA,EACV,8BAA+B,IAC/B,+BAAgC,uCAKrCI,MAAK,SAACC,GAELs7C,GAAqBt7C,EAASpU,MAC9BwvD,GAAsBp7C,EAASpU,KAAKkI,WAErC8M,OAAM,SAACF,GAAW,IAAD,EAEgB,OAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOV,gBAAP,eAAiBpF,SACnBgC,SAKR,GAA0DrO,mBAAS,IAAnE,qBAAOitD,GAAP,MAA8BC,GAA9B,MAMMC,GAAyBC,mBAU/B,GACEptD,oBAAS,GADX,qBAAKqtD,GAAL,MAAoCC,GAApC,MAqDA,GAAkCttD,qBAAlC,qBAAOutD,GAAP,MAAkBC,GAAlB,MAWA,GAAgDxtD,mBAAS,IAAzD,qBAAOiqC,GAAP,MAAyBC,GAAzB,MACA,GAAsDlqC,mBAAS,IAA/D,qBAAOytD,GAAP,MAA4BC,GAA5B,MACA,GAA8BvpD,IAAMnE,UAAS,GAA7C,qBAEA,IAFA,YAEgDA,mBAAS,KAAzD,qBAAO2tD,GAAP,MAAyBC,GAAzB,MAEA,GAA0C5tD,mBAAS,CACjD2L,MAAM,EACNC,SAAU,OACVC,QAAS,aAHX,qBAAsBi+B,IAAtB,aAUA,GAAwD9pC,mBAAS,IAAjE,qBAAOooC,GAAP,MAA6BylB,GAA7B,MACA,GAAwD7tD,mBAAS,IAAjE,qBAAO+3C,GAAP,MAA6B+V,GAA7B,MAyEAtzC,QAAQC,IAAI,YAAagzC,IACzB,IAgFMjuC,GAAa,WAGjBvO,IACGoJ,KAAK/d,EAAa,0BAA2B,CAC5Cie,KAAMy9B,IAGPxmC,MAAK,SAACC,GAEL,IAAMpU,EAAOoU,EAASpU,KACtBgkB,EAAehkB,MAYhBgV,OAAM,SAAC+2B,QAgBZ,OAJApkC,qBAAU,WACRwa,OACC,CAACw4B,IAGF,uBAAKlyC,UAAW9B,EAAQvB,KAAxB,UACE,gBAACsrD,EAAA,EAAD,CACEl3C,SAAS,QACT/Q,UAAWkoD,kBAAKhqD,EAAQukD,OAAT,eACZvkD,EAAQ8kD,YAAc0B,KAH3B,UAME,gBAACyD,EAAA,EAAD,CAASnoD,UAAW9B,EAAQ8lD,iBAA5B,UACE,eAACjlD,EAAA,EAAD,CACE9D,MAAM,UACN,aAAW,cACXE,QApgBe,WACvBwpD,IAAc,IAogBNyD,KAAK,QACLpoD,UAAWkoD,kBAAKhqD,EAAQglD,WAAT,eACZhlD,EAAQilD,KAAOuB,KANpB,SASE,eAAC,IAAD,MAEF,eAACpsD,EAAA,EAAD,CACEC,QAAQ,KACR8vD,QAAM,EACNroD,UAAW9B,EAAQ0J,KACnBhQ,MAAO,CAAEmN,UAAW,SAAUhN,YAAa,UAJ7C,sBAQA,sBAAKiI,UAAW9B,EAAQulD,eAAxB,SACE,iCACE,gBAACjjD,EAAA,EAAD,CACEC,WAAS,EACT2M,UAAU,MACV/U,eAAe,SACfD,WAAW,SAJb,UAME,eAAC2G,EAAA,EAAD,CACE9D,MAAM,UACNrD,MAAO,CAAEgJ,YAAa,SACtBzF,QAAS,kBAAMuK,IAAmB,SAACtK,GAAD,OAAgBA,MAHpD,SAKE,eAAC,KAAD,MAEF,eAAC2D,EAAA,EAAD,CACE,aAAW,qBACX9D,MAAM,UACNrD,MAAO,CAAEgJ,YAAa,WACtBzF,QAAS,WACP0rD,IAAiB,SAACzrD,GAChB,GAAI0rD,GAAqB,EAAG,CAC1B,IAAIwB,EAAY3kD,SAASC,eAAe,aAIxC,OAFK0kD,EAAU1wD,MAAMe,MADrByC,EAC6B,SACA,OACrBA,EAER,OAAOA,MAbf,SAkBE,eAACmtD,GAAA,EAAD,CAAOC,aAAc1B,GAAoB7rD,MAAM,YAA/C,SACE,eAAC,KAAD,QAGJ,eAAC3C,EAAA,EAAD,UAAa+rD,IACb,eAACtlD,EAAA,EAAD,CACEqpD,KAAK,MACL,aAAW,0BACXntD,MAAM,UACNE,QAtjBG,SAAC0T,GAClBg2C,GAAYh2C,EAAM45C,gBAsjBJzpD,KAAK,QACLgB,UAAW9B,EAAQylD,0BANrB,SAQE,eAAC,IAAD,SAGJ,eAAC+E,EAAA,EAAD,CACExkD,GAAG,cACH0gD,SAAUA,GACV31C,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdw5C,aAAW,EACX7kD,gBAAiB,CACfoL,SAAU,MACVC,WAAY,SAEdtJ,KAAMq/C,GACN39C,QAtkBM,WAClBs9C,GAAY,OAwjBF,SAgBE,eAAC91C,EAAA,EAAD,CAAU5T,QAAS2qD,GAAnB,uBAEF,eAAC8C,GAAA,EAAD,CACE1kD,GAAI8gD,GACJn/C,MAAM,EACN++C,SAAUE,GACVv9C,QA3kBmB,WAC/Bw9C,GAAyB,OA2kBb91C,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdrL,gBAAiB,CACfoL,SAAU,MACVC,WAAY,SAXhB,SAcE,gBAACpP,GAAA,EAAD,CACEnI,MAAO,CACLoB,QAAS,OACTuqB,SAAU,SAHd,UAME,gBAAC/I,GAAA,EAAD,WACE,gBAACE,GAAA,EAAD,CACEC,WAAY,eAAC,IAAD,IACZ,gBAAc,kBACdzW,GAAG,iBAHL,UAKE,eAAC5L,EAAA,EAAD,CACE0H,UAAW9B,EAAQ4lD,6BADrB,yBAKA,eAACxrD,EAAA,EAAD,CACE0H,UAAW9B,EAAQ6lD,gCACnBnsD,MAAO,CAAEqD,MAAO,UAFlB,oBAOF,eAAC6f,GAAA,EAAD,UACE,eAACxiB,EAAA,EAAD,4EAKJ,gBAACkiB,GAAA,EAAD,WACE,gBAACE,GAAA,EAAD,CACEC,WAAY,eAAC,IAAD,IACZ,gBAAc,kBACdzW,GAAG,iBAHL,UAKE,eAAC5L,EAAA,EAAD,CACE0H,UAAW9B,EAAQ4lD,6BADrB,yBAKA,eAACxrD,EAAA,EAAD,CACE0H,UAAW9B,EAAQ6lD,gCACnBnsD,MAAO,CAAEqD,MAAO,UAFlB,oBAOF,eAAC6f,GAAA,EAAD,UACE,eAACxiB,EAAA,EAAD,yFAUb+M,IACC,eAAC2mB,GAAA,EAAD,CAAKyM,GAAI,CAAEhgC,MAAO,QAAlB,SACE,eAACowD,GAAA,EAAD,CAAgBjxD,MAAO,CAAEwE,gBAAiB,mBAIhD,gBAAC0sD,EAAA,EAAD,CACEvwD,QAAQ,YACRyH,UAAWkoD,kBAAKhqD,EAAQkrC,QAAT,mBACZlrC,EAAQklD,WAAasB,IADT,cAEZxmD,EAAQmlD,aAAeqB,IAFX,IAIfxmD,QAAS,CACP8X,MAAOkyC,mBAAI,mBACRhqD,EAAQklD,WAAasB,IADb,cAERxmD,EAAQmlD,aAAeqB,IAFf,KAPf,UAaE,uBAAK1kD,UAAW9B,EAAQolD,QAAxB,UAEE,eAAChrD,EAAA,EAAD,CACE2C,MAAM,gBACN+E,UAAW9B,EAAQ2lD,iBAFrB,SAIGkF,IAAO,IAAIngD,MAAQ/F,OAAO,QAE7B,eAAC9D,EAAA,EAAD,CAAY5D,QAvrBM,WACxBwpD,IAAc,IAsrBR,SACuB,QAApBzoD,EAAMkR,UACL,eAAC,IAAD,IAEA,eAAC,IAAD,SAIN,eAAC47C,EAAA,EAAD,IACA,gBAACC,EAAA,EAAD,WACG5E,IACEA,EAAShwC,SAAS,aACnB8wC,KAAUzrD,KAAI,SAAC8pD,EAAM1sD,GAAP,OACZ,gBAACoyD,EAAA,EAAD,CACEvK,QAAM,EAENj7B,SAAU8/B,IAAS6B,GACnBlqD,QAAS,kBAAMkrD,GAAwBvvD,EAAO0sD,IAJhD,UAME,eAAC1yB,EAAA,EAAD,CAEEl5B,MAAO,CAAE6K,WAAY,SAFvB,SAIY,UAAT+gD,EACC,sBACE9iD,IAAI,oCACJC,IAAI,QACJlI,MAAM,OAEG,UAAT+qD,EACF,sBACE9iD,IAAI,wCACJC,IAAI,QACJlI,MAAM,OAkBD,wBAAT+qD,EACE,sBACE9iD,IAAI,yCACJC,IAAI,aACJlI,MAAM,OAGD,mBAAT+qD,EACE,sBACE9iD,IAAI,yCACJC,IAAI,aACJlI,MAAM,OAEG,QAAT+qD,EACF,sBACE9iD,IAAI,kCACJC,IAAI,MACJlI,MAAM,OAEG,cAAT+qD,EACF,sBACE9iD,IAAI,wCACJC,IAAI,YACJlI,MAAM,OAEG,gBAAT+qD,EACF,sBACE9iD,IAAI,0CACJC,IAAI,cACJlI,MAAM,OAEG,QAAT+qD,EACF,sBACE9iD,IAAI,wCACJC,IAAI,aACJlI,MAAM,OAEG,WAAT+qD,EACF,sBACE9iD,IAAI,qCACJC,IAAI,SACJlI,MAAM,OAEG,mBAAT+qD,EACF,sBACE9iD,IAAI,4CACJC,IAAI,iBACJlI,MAAM,OAGR,sBACEiI,IAAI,uCACJC,IAAI,YACJlI,MAAM,QApFL+qD,EAAI,QAyFX,eAACz/B,EAAA,EAAD,CAAcC,QAASw/B,MA9FlBA,MAiGVa,GACCA,EAAShwC,SAAS,aAClB,CAAC,OAAO3a,KAAI,SAAC8pD,EAAM1sD,GAAP,OACV,gBAACoyD,EAAA,EAAD,CACEvK,QAAM,EAENj7B,SAAU5sB,IAAUuuD,GACpBlqD,QAAS,kBAAMkrD,MAJjB,UAME,eAACv1B,EAAA,EAAD,UACa,IAAVh6B,GACC,sBACE4J,IAAI,kCACJC,IAAI,MACJlI,MAAM,QALO+qD,GASnB,eAACz/B,EAAA,EAAD,CAAcC,QAASw/B,MAblBA,YAkBf,uBACEt/C,GAAG,iBACHlE,UAAW9B,EAAQpD,QACnBlD,MAAO,CACLmZ,SAAU,QACVpY,MAAO,SACP+pD,WAAY,OACZnyC,IAAK,OACLvX,QAAS,EACTmwD,cAAe,OACfx7B,OAAQ,KAVZ,SAaE,uBACE/1B,MAAO,CACLM,QAAS,OACTE,WAAY,SACZK,MAAO,SAJX,UAOE,eAACsG,EAAA,EAAD,CAAY5D,QA/sBiB,SAAC0T,GAEpC63C,IAAsB,SAACtrD,GACrB,IAAIktD,EAAY3kD,SAASC,eAAe,kBAIxC,OAFK0kD,EAAU1wD,MAAMe,MADrByC,EAC6B,SACA,OACrBA,MAwsB+C4D,KAAK,QAAxD,SACE,sBACEpH,MAAO,CACLM,QAAS,OACTE,WAAY,SACZC,eAAgB,SAEhB+D,gBAAiB,UACjBwnB,aAAc,QACd3c,cAAe,QACf2tB,aAAc,MACdu0B,cAAe,QAVnB,SAaE,uBACEvxD,MAAO,CACLM,QAAS,OACTC,cAAe,SACf6C,IAAK,QAJT,UAQE,qBAAIpD,MAAO,CAAEqD,MAAO,QAASke,WAAY,QAAzC,eACA,eAAC,KAAD,CACEvhB,MAAO,CAAEqD,MAAO,SAChB+E,UACEymD,GACI,uBACA,sBAENvrD,SAAS,iBAKjB,gBAAC6E,GAAA,EAAD,CACEnI,MAAO,CACLc,OAAQ,SACRM,QAAS,QAGTP,MAAO,QACP2D,gBAAiB,SAInBzE,UAAW,EAXb,UAaE,gBAACW,EAAA,EAAD,CACE0H,UAAW9B,EAAQ4lD,6BACnBlsD,MAAO,CAAEqD,MAAO,QAFlB,0BAIgB0rD,GAAmBpqC,WAJnC,YAMA,gBAACjkB,EAAA,EAAD,CACE0H,UAAW9B,EAAQ4lD,6BACnBlsD,MAAO,CAAEqD,MAAO,QAFlB,4BAIkB,IACfxD,OAAOkvD,GAAmBluC,eAAe9a,QAAQ,GALpD,IAME,2CAGF,gBAACrF,EAAA,EAAD,CACEV,MAAO,CAAEqD,MAAO,SAChB+E,UAAW9B,EAAQ4lD,6BAFrB,qBAIW6C,GAAmBnqC,OAJ9B,YAMA,gBAAClkB,EAAA,EAAD,CACEV,MAAO,CAAEqD,MAAO,OAChB+E,UAAW9B,EAAQ4lD,6BAFrB,sBAIY6C,GAAmBlqC,mBAKrC,uBACEvY,GAAG,YACHlE,UAAW9B,EAAQpD,QACnBlD,MAAO,CACLmZ,SAAU,QACVpY,MAAO,SACP+pD,WAAY,OACZnyC,IAAK,OACLvX,QAAS,EAETmwD,cAAe,OACfx7B,OAAQ,KAXZ,SAcE,uBAAK/1B,MAAO,CAAEM,QAAS,OAAQE,WAAY,SAAUK,MAAO,SAA5D,UACE,eAACsG,EAAA,EAAD,CACE5D,QA/xB8B,SAAC0T,GAUvCg4C,IAAiB,SAACzrD,GAChB,IAAIktD,EAAY3kD,SAASC,eAAe,aAIxC,OAFK0kD,EAAU1wD,MAAMe,MADrByC,EAC6B,SACA,OACrBA,MAixBFypB,SAAuC,IAA7BmiC,GAAkBvnD,OAC5BT,KAAK,QACLpH,MAAO,CAAEuxD,cAAe,QAJ1B,SAME,sBACEvxD,MAAO,CACLM,QAAS,OACTE,WAAY,SACZC,eAAgB,SAChB+D,gBAAiB,UACjBwnB,aAAc,QACd3c,cAAe,QACf2tB,aAAc,OARlB,SAWE,uBACEh9B,MAAO,CACLM,QAAS,OACTC,cAAe,SACf6C,IAAK,QAJT,UAOE,eAAC,KAAD,CACEpD,MAAO,CAAEqD,MAAO,SAChBC,SAAS,UAEX,eAAC,KAAD,CACEtD,MAAO,CAAEqD,MAAO,SAChB+E,UACE4mD,GACI,uBACA,sBAEN1rD,SAAS,iBAKjB,sBACEtD,MAAO,CACLa,MAAO,QACPO,QAAS,QACTkE,UAAW,QACX43B,UAAW,UAEb90B,UAAU,+BAPZ,SASGgnD,GAAkBvnD,OAAS,GAC1BunD,GAAkBttD,KAAI,SAAC8c,EAAS1f,GAC9B,OACE,eAAC0jB,GAAA,EAAD,CAEErf,QAAS,SAAC65B,GACRvsB,aAAa4T,QAAQ,cAAe,qBACpC2T,GAAwBxZ,IAE1BiE,UAAU,EACV7iB,MAAO,CAAEuxD,cAAe,OAAQnkD,aAAc,WAPhD,SASE,gBAAC0V,GAAA,EAAD,CAGE,gBAAc,gBACdxW,GAAG,eAJL,UAME,eAAC5L,EAAA,EAAD,CAEE0H,UAAW9B,EAAQ4lD,6BAFrB,SAIGoD,GACqB,IAApB1wC,EAAQhQ,aAGZ,uBAAM5O,MAAO,CAAE6Z,aAAc,WAC7B,gBAACnZ,EAAA,EAAD,CAGE0H,UAAW9B,EAAQ6lD,gCACnBnsD,MAAO,CAAEqD,MAAO,OAJlB,UAME,wBAAMrD,MAAO,CAAEqD,MAAO,SAAtB,UACGub,EAAQ2Z,OADX,aAl1BoBpd,EAu1BlByD,EAAQ/B,KAv1BoB2b,EAw1B5B5Z,EAAQ4Z,MAv1BrB,UAAM90B,OAAOyX,GAAUq6B,OAAO,GAAG7xC,eAAjC,OAAiDD,OACxDyX,GACA6T,MAAM,GAFC,cAEOwJ,EAFP,iBAozBY5Z,EAAQhQ,WArzBU,IAACuM,EAAUqd,YA62B7B,UAAlBi1B,IAC2B,KAA1BkB,IACAlC,IACCA,EAAShwC,SAAS,aACjB,wBAAMrU,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC,GAAD,CACEjhB,eA9uBW,SAAC9kB,GAEtB6mB,GAAoB7mB,GACpBioC,IAAc,SAACpqD,GAAD,mBAAC,eACVA,GADS,IAEZ28C,WAAW,EACX4N,mBAAmB,QAyuBXlN,kBAluBc,SAACl7B,GAEzBqqC,GAAuBrqC,GACvBioC,IAAc,SAACpqD,GAAD,mBAAC,eACVA,GADS,IAEZ28C,WAAW,EACX6N,sBAAsB,QA6tBdtjB,qBAAsBA,GACtB2P,qBAAsBA,GACtBf,WA3tBO,SAAC3zB,GAElBuqC,GAAoBvqC,GACpBioC,IAAc,SAACpqD,GAAD,mBAAC,eACVA,GADS,IAEZ28C,WAAW,EACX8N,mBAAmB,QAstBXt9C,oBAAqBA,QAIV,UAAlB88C,IAC2B,KAA1BkB,IACAlC,IACCA,EAAShwC,SAAS,aACjB,wBAAMrU,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UAExB,eAACjoC,GAAD,CACEC,wBAt8BY,SAACiC,GAEvBipC,GAAiBjpC,GACjB+oC,GAAyB/oC,EAAI/lB,MAC7B26C,EAAY50B,EAAI/lB,MAChBkiB,MAk8BUnR,oBAAqBA,GACrBuR,QAASA,EACTjU,KAAMA,EACN0V,eAAgBA,OAML,wBAAlB8pC,IACChB,IACCA,EAAShwC,SAAS,aACjB,wBAAMrU,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC1xC,GAAD,CAAoBrJ,oBAAqBA,QAG5B,mBAAlB88C,IACChB,IACCA,EAAShwC,SAAS,aACjB,wBAAMrU,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACjB,GAAD,CAAc95C,oBAAqBA,QAWtB,QAAlB88C,IACC,wBAAMrlD,UAAW9B,EAAQpD,QAASlD,MAAO,CAAEI,aAAc,GAAzD,UACE,sBAAKgI,UAAW9B,EAAQolD,UACxB,eAAC,GAAD,CAAK/6C,oBAAqBA,QAGX,cAAlB88C,IACChB,IACCA,EAAShwC,SAAS,aACjB,wBAAMrU,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACvtB,GAAD,CAAWxtB,oBAAqBA,QAGnB,gBAAlB88C,IACChB,IACCA,EAAShwC,SAAS,aACjB,wBAAMrU,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC,GAAD,CAAa/6C,oBAAqBA,QAGrB,QAAlB88C,IACChB,IACCA,EAAShwC,SAAS,aACjB,wBAAMrU,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAClb,GAAD,CAAK7/B,oBAAqBA,QASb,WAAlB88C,IACChB,IACCA,EAAShwC,SAAS,aACjB,wBAAMrU,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC,GAAD,CACE/6C,oBAAqBA,GACrBopB,kBAz2Bc,SAACpU,GAEzBmqC,GAAanqC,GACbioC,GAAc,CACZzN,WAAW,EACX0N,cAAc,EACdC,iBAAiB,KAo2BT11B,wBAAyBA,QAKjC,6DAC2B,KAA1Bu2B,IAA0D,YAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACh7C,GAAD,CACEC,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAC2B,eAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC/zC,GAAD,CACEhH,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAA0D,aAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACzlC,GAAD,CACEtV,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,aAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACvlC,GAAD,CACExV,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,aAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACtlC,GAAD,CACEzV,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAC2B,eAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACh+B,GAAD,CACE/c,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAA0D,WAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC79B,GAAD,CACEld,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,aAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC19B,GAAD,CACErd,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAC2B,cAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACz9B,GAAD,CACEtd,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAC2B,gBAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACx9B,GAAD,CACEvd,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAC2B,cAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACt9B,GAAD,CACEzd,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAA0D,WAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACv9B,GAAD,CACExd,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,aAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC/2B,GAAD,CACEhkB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,WAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC92B,GAAD,CACEjkB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,YAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC72B,GAAD,CACElkB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAC2B,gBAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC52B,GAAD,CACEnkB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAA0D,YAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC32B,GAAD,CACEpkB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAC2B,gBAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC12B,GAAD,CACErkB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAC2B,eAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACz2B,GAAD,CACEtkB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAC2B,cAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACx2B,GAAD,CACEvkB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAA0D,YAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACv2B,GAAD,CACExkB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAC2B,gBAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACt2B,GAAD,CACEzkB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAC2B,gBAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACz1B,GAAD,CACEtlB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAC2B,gBAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACr0B,GAAD,CACE1mB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAC2B,cAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACp0B,GAAD,CACE3mB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAA0D,WAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACl0B,GAAD,CACE7mB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,WAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACj0B,GAAD,CACE9mB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,YAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACh0B,GAAD,CACE/mB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAC2B,eAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC/zB,GAAD,CACEhnB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAA0D,YAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC9zB,GAAD,CACEjnB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,WAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC5zB,GAAD,CACEnnB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,WAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC3zB,GAAD,CACEpnB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAC2B,gBAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACzzB,GAAD,CACEtnB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAC2B,eAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACxzB,GAAD,CACEvnB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAA0D,aAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACvzB,GAAD,CACExnB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,UAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC1zB,GAAD,CACErnB,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAC2B,gBAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC9c,GAAD,CACEj+B,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAC2B,eAA1BA,IACE,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC7c,GAAD,CACEl+B,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAII,KAA1BigD,IAA0D,WAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC5c,GAAD,CACEn+B,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,aAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC3c,GAAD,CACEp+B,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,YAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC1c,GAAD,CACEr+B,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,YAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACzc,GAAD,CACEt+B,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,WAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAACxc,GAAD,CACEv+B,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAIM,KAA1BigD,IAA0D,aAA1BA,IAC/B,wBAAMvmD,UAAW9B,EAAQpD,QAAzB,UACE,sBAAKkF,UAAW9B,EAAQolD,UACxB,eAAC3B,GAAD,CACEp5C,oBAAqBA,GACrB9B,gBAAiBA,EACjBH,cAAeA,QAKrB,kEACA,eAAC+6B,EAAA,EAAD,CACEx7B,KAAMqgD,GAAWnO,UACjBxwC,QAASg+C,GACT,kBAAgB,qBAChB,mBAAiB,2BACjB3tD,MAAO,CACLM,QAAS,OACTG,eAAgB,SAEhBD,WAAY,UAThB,SAYG8tD,GAAWT,aACV,gBAAC/tD,EAAA,EAAD,CACEE,MAAO,CACLwxD,QAAS,OACTniD,cAAe,OACfpP,WAAY,QACZC,cAAe,QACfW,MAAO,KAETd,UAAW,EARb,UAUE,gBAAC6I,EAAA,EAAD,CAAMC,WAAS,EAACsH,QAAS,EAAzB,UACE,eAACvH,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACvI,EAAA,EAAD,UACG,IAAIsQ,KACiC,IAApCu9C,GAAwB3/C,WACxBuS,yBAGN,eAACvY,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACvI,EAAA,EAAD,CACEV,MAAO,CACLqD,MACoC,aAAlCkrD,GAAwB91B,MACpB,MACA,QALV,UAQG81B,GAAwB1xC,KAAK,GAAGlZ,cAChC4qD,GAAwB1xC,KAAKmS,MAAM,GATtC,KAS4C,IACzCu/B,GAAwB/1B,MAV3B,gBAcJ,eAAC5vB,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,SAApC,SACE,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACvI,EAAA,EAAD,CAAYC,QAAQ,QAApB,qBACW4tD,GAAwBh2B,cAIvC,eAAC3vB,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,SAApC,SACE,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACvI,EAAA,EAAD,CAAYC,QAAQ,QAApB,oBACU4tD,GAAwB91B,MAAM,GAAG90B,cACxC4qD,GAAwB91B,MAAMzJ,MAAM,UAI3C,eAACpmB,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,UAApC,SACE,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACvI,EAAA,EAAD,CAAYC,QAAQ,QAApB,6BAEG4tD,GAAwB9zB,aAI/B,eAAC7xB,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,QAApC,SACE,gBAACiM,EAAA,EAAD,CAAatR,UAAU,WAAvB,UACE,eAACgsD,GAAA,EAAD,CAAWhsD,UAAU,SAArB,oBACA,gBAACisD,GAAA,EAAD,CACE/rC,KAAG,EACH,aAAW,sBACX/lB,KAAK,kCACLgQ,SAAU,SAACqH,GAAD,OA58CiBtI,EA68CSsI,EAAMC,OAAOjY,WA58C/DuwD,GAAyB7gD,GADe,IAACA,GA+8C3B2mB,aAAci5B,GAAwB5/C,OAPxC,UASE,eAACme,GAAA,EAAD,CACE7tB,MAAM,OACN8tB,QAAS,eAAC4kC,GAAA,EAAD,CAAOtuD,MAAM,YACtBxB,MAAM,SAER,eAACirB,GAAA,EAAD,CACE7tB,MAAM,UACN8tB,QAAS,eAAC4kC,GAAA,EAAD,CAAOtuD,MAAM,YACtBxB,MAAM,YAER,eAACirB,GAAA,EAAD,CACE7tB,MAAM,WACN8tB,QAAS,eAAC4kC,GAAA,EAAD,CAAOtuD,MAAM,YACtBxB,MAAM,qBAKd,wBAAMm3C,SAAU,SAAC5b,GAAD,OAAOA,EAAEvX,kBAAzB,UACE,eAACjd,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,UAApC,SACE,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAEa,MAAO,QAA3B,SACE,2BACEme,YAAauvC,GAAwBzzB,QACrC2H,KAAK,IACLziC,MAAO,CACLa,MAAO,QAETuH,UAAU,WACVyjC,IAAK4jB,GACL7/C,SAx+CsB,WACO,KAAzC6/C,GAAuBmC,QAAQ3yD,MACjC2wD,IAAiC,GAEjCA,IAAiC,UAw+CzB,gBAAChnD,EAAA,EAAD,CACEC,WAAS,EACTsH,QAAS,EACT1P,eAAe,WACfT,MAAO,CAAE8K,UAAW,SAJtB,UAME,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACsa,EAAA,EAAD,CACE5iB,QAAQ,WACRyG,KAAK,QACL7D,QAAS,WACPqqD,GAAc,CAAEzN,WAAW,EAAO0N,cAAc,KAJpD,qBAUF,eAACjlD,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACsa,EAAA,EAAD,CACE5iB,QAAQ,WACR0C,MAAM,UACN+D,KAAK,QACL7D,QAAS,YAv/CM,SAACsuD,EAAch1C,EAAM2b,GACpD,IAAI9kB,EAAW7C,aAAaC,QAAQ,aAEpC8+C,IAAiC,GAEjC,IAAIkC,EACwB,KAA1BvC,GAA+B,OAASA,GAY1Ch8C,IACGoJ,KACC/d,EAAa,8BACb,CACE25B,OAAQs5B,EACR/2B,QAAS20B,GAAuBmC,QAAQ3yD,MACxC0P,OAAQmjD,EACRj1C,KAAMA,EACN2b,MAAOA,EACP9S,MAAO7U,aAAaC,QAAQ,gBAE9B,CACE2C,QAAS,CACPC,SAAUA,KAIfI,MAAK,SAACC,GAEL65C,GAAc,CAAEzN,WAAW,EAAO0N,cAAc,IAChD+B,IAAiC,GACjChD,GAAuB/7C,aAAaC,QAAQ,iBAE7C6D,OAAM,SAACF,GAAW,IAAD,EAEhBm5C,GAAc,CAAEzN,WAAW,EAAO0N,cAAc,IAChD+B,IAAiC,GACD,OAAvB,OAALn7C,QAAK,IAALA,GAAA,UAAAA,EAAOV,gBAAP,eAAiBpF,SACnBgC,QA08CYohD,CACExD,GAAwBh2B,OACxBg2B,GAAwB1xC,KACxB0xC,GAAwB/1B,QAG5BvL,SACqC,aAAnCshC,GAAwB5/C,QAEpBghD,GAdR,+BAuBNrB,GAAWR,gBACb,gBAAChuD,EAAA,EAAD,CAAMC,UAAW,EAAGC,MAAO,CAAEoB,QAAS,UAAtC,UACE,4CACU,uBAAMpB,MAAO,CAAEqD,MAAO,QAAtB,SAAiCwsD,GAAUt3B,YAErD,sBAAKv4B,MAAO,CAAE+f,YAAa,WAC3B,6CAAe8vC,GAAU/0B,cAEzBwzB,GAAWP,kBACb,gBAACjuD,EAAA,EAAD,CACEE,MAAO,CACLwxD,QAAS,OACTniD,cAAe,OACfpP,WAAY,QACZC,cAAe,QACfW,MAAO,KAETd,UAAW,EARb,UAUE,eAAC6I,EAAA,EAAD,CAAMC,WAAS,EAACpI,eAAe,SAA/B,SACE,eAACmI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACvI,EAAA,EAAD,CAAY2C,MAAM,UAAU1C,QAAQ,KAApC,iCAMJ,gBAACiI,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,UAAYqF,QAAS,EAAzD,UACE,gBAACvH,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,iBACCkpC,GAAiBjgC,MAGpB,gBAAC1D,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,mBACCkpC,GAAiBlD,YAEpB,gBAACzgC,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,oBACCkpC,GAAiBp5B,SAEpB,gBAACvK,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,uBACCkpC,GAAiBpa,eAItB,gBAACvpB,EAAA,EAAD,CAAMC,WAAS,EAACsH,QAAS,EAAGnQ,MAAO,CAAE8K,UAAW,UAAhD,UACE,gBAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,sBACA,wBACErD,MAAO,CAAEusD,aAAc,WACvBvtC,YAAautB,GAAiB4K,UAC9BvnC,SAAU,SAACwtB,GAAD,OACRoP,IAAoB,SAAChpC,GAAD,mBAAC,eAChBA,GADe,IAElB2zC,UAAW/Z,EAAElmB,OAAOjY,YAGxBmI,KAAK,UAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,qBACA,wBACErD,MAAO,CAAEusD,aAAc,WACvBvtC,YAAautB,GAAiB6K,cAC9BxnC,SAAU,SAACwtB,GAAD,OACRoP,IAAoB,SAAChpC,GAAD,mBAAC,eAChBA,GADe,IAElB4zC,cAAeha,EAAElmB,OAAOjY,YAG5BmI,KAAK,UAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,uBACA,wBACErD,MAAO,CAAEusD,aAAc,WACvBvtC,YAAautB,GAAiB8K,aAC9BznC,SAAU,SAACwtB,GAAD,OACRoP,IAAoB,SAAChpC,GAAD,mBAAC,eAChBA,GADe,IAElB6zC,aAAcja,EAAElmB,OAAOjY,YAG3BmI,KAAK,UAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,qBACA,wBACErD,MAAO,CAAEusD,aAAc,WACvBvtC,YAAautB,GAAiB+K,cAC9B1nC,SAAU,SAACwtB,GAAD,OACRoP,IAAoB,SAAChpC,GAAD,mBAAC,eAChBA,GADe,IAElB8zC,cAAela,EAAElmB,OAAOjY,YAG5BmI,KAAK,aAKX,gBAACwB,EAAA,EAAD,CAAMC,WAAS,EAACsH,QAAS,EAAGnQ,MAAO,CAAE8K,UAAW,SAAhD,UACE,gBAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,2BACA,wBACErD,MAAO,CAAEusD,aAAc,WACvBvtC,YAAautB,GAAiBoL,cAC9B/nC,SAAU,SAACwtB,GAAD,OACRoP,IAAoB,SAAChpC,GAAD,mBAAC,eAChBA,GADe,IAElBm0C,cAAeva,EAAElmB,OAAOjY,YAG5BmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,uBACA,wBACErD,MAAO,CAAEusD,aAAc,WACvBvtC,YAAautB,GAAiByL,MAC9BpoC,SAAU,SAACwtB,GAAD,OACRoP,IAAoB,SAAChpC,GAAD,mBAAC,eAChBA,GADe,IAElBw0C,MAAO5a,EAAElmB,OAAOjY,YAGpBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,sBACA,wBACErD,MAAO,CAAEusD,aAAc,WACvBvtC,YAAautB,GAAiByL,MAC9BpoC,SAAU,SAACwtB,GAAD,OACRoP,IAAoB,SAAChpC,GAAD,mBAAC,eAChBA,GADe,IAElBy0C,MAAO7a,EAAElmB,OAAOjY,YAGpBmI,KAAK,UAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,wBACA,wBACErD,MAAO,CAAEusD,aAAc,WACvBvtC,YAAautB,GAAiBiL,cAC9B5nC,SAAU,SAACwtB,GAAD,OACRoP,IAAoB,SAAChpC,GAAD,mBAAC,eAChBA,GADe,IAElBg0C,cAAepa,EAAElmB,OAAOjY,YAG5BmI,KAAK,YAKX,gBAACwB,EAAA,EAAD,CAAMC,WAAS,EAACsH,QAAS,EAAGnQ,MAAO,CAAE8K,UAAW,SAAhD,UACE,gBAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,qBACA,wBACErD,MAAO,CAAEusD,aAAc,WACvBvtC,YAAautB,GAAiBgL,MAC9B3nC,SAAU,SAACwtB,GAAD,OACRoP,IAAoB,SAAChpC,GAAD,mBAAC,eAChBA,GADe,IAElB+zC,MAAOna,EAAElmB,OAAOjY,YAGpBmI,KAAK,UAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,4BACA,wBACErD,MAAO,CAAEusD,aAAc,WACvBvtC,YAAautB,GAAiBkL,kBAC9B7nC,SAAU,SAACwtB,GAAD,OACRoP,IAAoB,SAAChpC,GAAD,mBAAC,eAChBA,GADe,IAElBi0C,kBAAmBra,EAAElmB,OAAOjY,YAGhCmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,yBACA,wBACErD,MAAO,CAAEusD,aAAc,WACvBvtC,YAAautB,GAAiB2L,QAC9BtoC,SAAU,SAACwtB,GAAD,OACRoP,IAAoB,SAAChpC,GAAD,mBAAC,eAChBA,GADe,IAElB00C,QAAS9a,EAAElmB,OAAOjY,YAGtBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,2BACA,wBACErD,MAAO,CAAEusD,aAAc,WACvBvtC,YAAautB,GAAiB5rB,MAC9B/Q,SAAU,SAACwtB,GAAD,OACRoP,IAAoB,SAAChpC,GAAD,mBAAC,eAChBA,GADe,IAElBmd,MAAOyc,EAAElmB,OAAOjY,YAGpBmI,KAAK,YAKX,gBAACwB,EAAA,EAAD,CAAMC,WAAS,EAACsH,QAAS,EAAGnQ,MAAO,CAAE8K,UAAW,SAAhD,UACE,gBAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,0BACA,wBACErD,MAAO,CAAEusD,aAAc,WACvBvtC,YAAautB,GAAiB4L,SAC9BvoC,SAAU,SAACwtB,GAAD,OACRoP,IAAoB,SAAChpC,GAAD,mBAAC,eAChBA,GADe,IAElB20C,SAAU/a,EAAElmB,OAAOjY,YAGvBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,mCACA,wBACErD,MAAO,CAAEusD,aAAc,WACvBvtC,YAAautB,GAAiB8L,mBAC9BzoC,SAAU,SAACwtB,GAAD,OACRoP,IAAoB,SAAChpC,GAAD,mBAAC,eAChBA,GADe,IAElB60C,mBAAoBjb,EAAElmB,OAAOjY,YAGjCmI,KAAK,YAKX,gBAACwB,EAAA,EAAD,CACEC,WAAS,EACT7I,MAAO,CAAE8K,UAAW,QACpBqF,QAAS,EACT1P,eAAe,SAJjB,UAME,eAACmI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACsa,EAAA,EAAD,CACE5iB,QAAQ,YACR0C,MAAM,UACN+D,KAAK,QACL7D,QAnqDa,WAC3BgQ,IACGoJ,KACC/d,EAAa,wBAFjB,eAGS2tC,IACL,CACE74B,SAAU7C,aAAaC,QAAQ,eAGlCgD,MAAK,SAACC,GACL65C,IAAc,SAACpqD,GAAD,mBAAC,eACVA,GADS,IAEZ28C,WAAW,EACX4N,mBAAmB,EACnBF,cAAc,EACdC,iBAAiB,OAEnB1hB,IAAiB,SAAC5oC,GAAD,mBAAC,eACbA,GADY,IAEfyK,MAAM,EACNC,SAAU,UACVC,QAAQ,aAAD,OAAeo+B,GAAiBpa,SAAhC,kBAETg+B,GAAwBp8C,EAASpU,SAElCgV,OAAM,SAACF,GAAW,IAAD,EAChB23B,IAAiB,SAAC5oC,GAAD,mBAAC,eACbA,GADY,IAEfyK,MAAM,EACNC,SAAU,QACVC,QAAS,sBAEXgiD,GAAwB17C,GACQ,OAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOV,gBAAP,eAAiBpF,SACnBgC,SA6nDM,sBASF,eAAC/H,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACsa,EAAA,EAAD,CACE5iB,QAAQ,YACRyG,KAAK,QACL7D,QAASoqD,GAHX,4BAUJW,GAAWN,qBACb,gBAACluD,EAAA,EAAD,CACEE,MAAO,CACLwxD,QAAS,OACTniD,cAAe,OACfpP,WAAY,QACZC,cAAe,QACfW,MAAO,IACP0wD,cAAe,QAGjBxxD,UAAW,EAVb,UAYE,eAAC6I,EAAA,EAAD,CAAMC,WAAS,EAACpI,eAAe,SAA/B,SACE,eAACmI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACvI,EAAA,EAAD,CAAY2C,MAAM,UAAU1C,QAAQ,KAApC,qCAMJ,gBAACiI,EAAA,EAAD,CAAMC,WAAS,EAACsH,QAAS,EAAzB,UAEE,gBAACvH,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,mBACC0sD,GAAoB1mB,YAEvB,gBAACzgC,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,oBAAiD,IAChD0sD,GAAoB58C,SAEvB,gBAACvK,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,uBAAMjJ,MAAO,CAAEqD,MAAO,WAAtB,uBAAoD,IACnD0sD,GAAoB59B,eAKzB,gBAACvpB,EAAA,EAAD,CACEC,WAAS,EACT2M,UAAU,MACV/U,eAAe,aACfD,WAAW,aAJb,UAOE,gBAACoI,EAAA,EAAD,CACEC,WAAS,EAETrI,WAAW,SAHb,UAME,eAACoI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC0hD,GAAD,CACE7rC,QAASixC,GAAoBjP,UAC7Bz9C,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBs9C,UAAW1jB,EAAElmB,OAAO4H,cAGxBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,gBACM,OAEN,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBhP,GACjCnxC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBu9C,GAAI3jB,EAAElmB,OAAOjY,YAGjBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,sBACY,OAEZ,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB/O,SACjCpxC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBw9C,SAAU5jB,EAAElmB,OAAOjY,YAGvBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoB9O,UAC7B59C,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBy9C,UAAW7jB,EAAElmB,OAAO4H,cAGxBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,gBACM,OAEN,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB7O,GACjCtxC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB09C,GAAI9jB,EAAElmB,OAAOjY,YAGjBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,sBACY,OAEZ,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB5O,SACjCvxC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB29C,SAAU/jB,EAAElmB,OAAOjY,YAGvBmI,KAAK,SAKT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoB3O,UAC7B/9C,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB49C,UAAWhkB,EAAElmB,OAAO4H,cAGxBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,gBACM,OAEN,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB1O,GACjCzxC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB69C,GAAIjkB,EAAElmB,OAAOjY,YAGjBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,sBACY,OAEZ,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBzO,SACjC1xC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB89C,SAAUlkB,EAAElmB,OAAOjY,YAGvBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoBxO,UAC7Bl+C,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB+9C,UAAWnkB,EAAElmB,OAAO4H,cAGxBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,gBACM,OAEN,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBvO,GACjC5xC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBg+C,GAAIpkB,EAAElmB,OAAOjY,YAGjBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,sBACY,OAEZ,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBtO,SACjC7xC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBi+C,SAAUrkB,EAAElmB,OAAOjY,YAGvBmI,KAAK,YAKX,gBAACwB,EAAA,EAAD,CACEC,WAAS,EAETrI,WAAW,SACXR,MAAO,CAAE8K,UAAW,OAJtB,UAME,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC0hD,GAAD,CACE7rC,QAASixC,GAAoBrO,UAC7Br+C,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBk+C,UAAWtkB,EAAElmB,OAAO4H,cAGxBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,gBACM,OAEN,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBpO,GACjC/xC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBm+C,GAAIvkB,EAAElmB,OAAOjY,YAGjBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,sBACY,OAEZ,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBnO,SACjChyC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBo+C,SAAUxkB,EAAElmB,OAAOjY,YAGvBmI,KAAK,SAIT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoBlO,UAC7Bx+C,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBq+C,UAAWzkB,EAAElmB,OAAO4H,cAGxBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,gBACM,OAEN,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBjO,GACjClyC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBs+C,GAAI1kB,EAAElmB,OAAOjY,YAGjBmI,KAAK,SAIT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,sBACY,OAEZ,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBhO,SACjCnyC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBu+C,SAAU3kB,EAAElmB,OAAOjY,YAGvBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoB/N,UAC7B3+C,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBw+C,UAAW5kB,EAAElmB,OAAO4H,cAGxBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,gBACM,OAEN,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB9N,GACjCryC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBy+C,GAAI7kB,EAAElmB,OAAOjY,YAGjBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,sBACY,OAEZ,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB7N,SACjCtyC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB0+C,SAAU9kB,EAAElmB,OAAOjY,YAGvBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoB5N,UAC7B9+C,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB2+C,UAAW/kB,EAAElmB,OAAO4H,cAGxBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,gBACM,OAEN,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB3N,GACjCxyC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB4+C,GAAIhlB,EAAElmB,OAAOjY,YAGjBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,sBACY,OAEZ,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB1N,SACjCzyC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB6+C,SAAUjlB,EAAElmB,OAAOjY,YAGvBmI,KAAK,YAIX,gBAACwB,EAAA,EAAD,CACEC,WAAS,EAETrI,WAAW,SACXR,MAAO,CAAE8K,UAAW,OAJtB,UAME,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC0hD,GAAD,CACE7rC,QAASixC,GAAoBzN,UAC7Bj/C,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB8+C,UAAWllB,EAAElmB,OAAO4H,cAGxBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,gBACM,OAEN,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBxN,GACjC3yC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB++C,GAAInlB,EAAElmB,OAAOjY,YAGjBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,sBACY,OAEZ,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBvN,SACjC5yC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBg/C,SAAUplB,EAAElmB,OAAOjY,YAGvBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoBtN,WAC7Bp/C,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBi/C,WAAYrlB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBrN,IACjC9yC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBk/C,IAAKtlB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBpN,UACjC/yC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBm/C,UAAWvlB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoBnN,WAC7Bv/C,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBo/C,WAAYxlB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBlN,IACjCjzC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBq/C,IAAKzlB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBjN,UACjClzC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBs/C,UAAW1lB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoBhN,WAC7B1/C,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBu/C,WAAY3lB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB/M,IACjCpzC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBw/C,IAAK5lB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB9M,UACjCrzC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBy/C,UAAW7lB,EAAElmB,OAAOjY,YAGxBmI,KAAK,YAIX,gBAACwB,EAAA,EAAD,CACEC,WAAS,EACTrI,WAAW,SAEXR,MAAO,CAAE8K,UAAW,OAJtB,UAME,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC0hD,GAAD,CACE7rC,QAASixC,GAAoB7M,WAC7B7/C,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB0/C,WAAY9lB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAIhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB5M,IACjCvzC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB2/C,IAAK/lB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB3M,UACjCxzC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB4/C,UAAWhmB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoB1M,WAC7BhgD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB6/C,WAAYjmB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBzM,IACjC1zC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB8/C,IAAKlmB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBxM,UACjC3zC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB+/C,UAAWnmB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAOT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoBvM,WAC7BngD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBggD,WAAYpmB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBtM,IACjC7zC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBigD,IAAKrmB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBrM,UACjC9zC,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBkgD,UAAWtmB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoBpM,WAC7BtgD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBmgD,WAAYvmB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBnM,IACjCh0C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBogD,IAAKxmB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAIT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBlM,UACjCj0C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBqgD,UAAWzmB,EAAElmB,OAAOjY,YAGxBmI,KAAK,YAIX,gBAACwB,EAAA,EAAD,CACEC,WAAS,EACTrI,WAAW,SAEXR,MAAO,CAAE8K,UAAW,OAJtB,UAME,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC0hD,GAAD,CACE7rC,QAASixC,GAAoBjM,WAC7BzgD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBsgD,WAAY1mB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBhM,IACjCn0C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBugD,IAAK3mB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB/L,UACjCp0C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBwgD,UAAW5mB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoB9L,WAC7B5gD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBygD,WAAY7mB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB7L,IACjCt0C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB0gD,IAAK9mB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB5L,UACjCv0C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB2gD,UAAW/mB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoB3L,WAC7B/gD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB4gD,WAAYhnB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB1L,IACjCz0C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB6gD,IAAKjnB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBzL,UACjC10C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB8gD,UAAWlnB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoBxL,WAC7BlhD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB+gD,WAAYnnB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBvL,IACjC50C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBghD,IAAKpnB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBtL,UACjC70C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBihD,UAAWrnB,EAAElmB,OAAOjY,YAGxBmI,KAAK,YAIX,gBAACwB,EAAA,EAAD,CACEC,WAAS,EACTrI,WAAW,SAEXR,MAAO,CAAE8K,UAAW,OAJtB,UAME,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC0hD,GAAD,CACE7rC,QAASixC,GAAoBrL,WAC7BrhD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBkhD,WAAYtnB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBpL,IACjC/0C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBmhD,IAAKvnB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBnL,UACjCh1C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBohD,UAAWxnB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoBlL,WAC7BxhD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBqhD,WAAYznB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBjL,IACjCl1C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBshD,IAAK1nB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBhL,UACjCn1C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBuhD,UAAW3nB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAKT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoB/K,WAC7B3hD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBwhD,WAAY5nB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB9K,IACjCr1C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErByhD,IAAK7nB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB7K,UACjCt1C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB0hD,UAAW9nB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoB5K,WAC7B9hD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB2hD,WAAY/nB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB3K,IACjCx1C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB4hD,IAAKhoB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB1K,UACjCz1C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB6hD,UAAWjoB,EAAElmB,OAAOjY,YAGxBmI,KAAK,YAKX,gBAACwB,EAAA,EAAD,CACEC,WAAS,EACTrI,WAAW,SAEXR,MAAO,CAAE8K,UAAW,OAJtB,UAME,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC0hD,GAAD,CACE7rC,QAASixC,GAAoBzK,WAC7BjiD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB8hD,WAAYloB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBxK,IACjC31C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB+hD,IAAKnoB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBvK,UACjC51C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBgiD,UAAWpoB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoBtK,WAC7BpiD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBiiD,WAAYroB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBrK,IACjC91C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBkiD,IAAKtoB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAIT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBpK,UACjC/1C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBmiD,UAAWvoB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoBnK,WAC7BviD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBoiD,WAAYxoB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBlK,IACjCj2C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBqiD,IAAKzoB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBjK,UACjCl2C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBsiD,UAAW1oB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoBhK,WAC7B1iD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBuiD,WAAY3oB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB/J,IACjCp2C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBwiD,IAAK5oB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB9J,UACjCr2C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErByiD,UAAW7oB,EAAElmB,OAAOjY,YAGxBmI,KAAK,YAIX,gBAACwB,EAAA,EAAD,CACEC,WAAS,EACTrI,WAAW,SAEXR,MAAO,CAAE8K,UAAW,OAJtB,UAME,eAAClC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAAC0hD,GAAD,CACE7rC,QAASixC,GAAoB7J,WAC7B7iD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB0iD,WAAY9oB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB5J,IACjCv2C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB2iD,IAAK/oB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoB3J,UACjCx2C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB4iD,UAAWhpB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoB1J,WAC7BhjD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB6iD,WAAYjpB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBzJ,IACjC12C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB8iD,IAAKlpB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBxJ,UACjC32C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErB+iD,UAAWnpB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoBvJ,WAC7BnjD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBgjD,WAAYppB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBtJ,IACjC72C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBijD,IAAKrpB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBrJ,UACjC92C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBkjD,UAAWtpB,EAAElmB,OAAOjY,YAGxBmI,KAAK,SAGT,eAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,QAAhC,SACE,eAAC8/C,GAAD,CACE7rC,QAASixC,GAAoBpJ,WAC7BtjD,MAAM,UACN+D,KAAK,QACLwI,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBmjD,WAAYvpB,EAAElmB,OAAO4H,cAGzBqc,WAAY,CAAE,aAAc,0BAGhC,gBAACvyB,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,wBAAMjJ,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,iBACO,OAEP,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBnJ,IACjCh3C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBojD,IAAKxpB,EAAElmB,OAAOjY,YAGlBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAACjJ,MAAO,CAAE6K,WAAY,UAAhC,UACE,wBAAM7K,MAAO,CAAEsD,SAAU,SAAUD,MAAO,WAA1C,uBACa,OAEb,wBACErD,MAAO,CAAEK,OAAQ,SAAUksD,aAAc,WACzCvtC,YAAa+wC,GAAoBlJ,UACjCj3C,SAAU,SAACwtB,GAAD,OACR4yB,IAAuB,SAACxsD,GAAD,mBAAC,eACnBA,GADkB,IAErBqjD,UAAWzpB,EAAElmB,OAAOjY,YAGxBmI,KAAK,eAMb,gBAACwB,EAAA,EAAD,CACEC,WAAS,EACT7I,MAAO,CAAE8K,UAAW,QACpBqF,QAAS,EACT1P,eAAe,SAJjB,UAME,eAACmI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACsa,EAAA,EAAD,CACE5iB,QAAQ,YACR0C,MAAM,UACN+D,KAAK,QACL7D,QA7sGgB,WAC9BgQ,IACGoJ,KACC/d,EAAa,oBAFjB,eAGSmxD,IACL,CACEr8C,SAAU7C,aAAaC,QAAQ,eAGlCgD,MAAK,SAACC,GACL+I,QAAQC,IAAI,QAAShJ,GACrB65C,IAAc,SAACpqD,GAAD,mBAAC,eACVA,GADS,IAEZ28C,WAAW,EACX6N,sBAAsB,EACtBH,cAAc,EACdC,iBAAiB,OAEnB1hB,IAAiB,SAAC5oC,GAAD,mBAAC,eACbA,GADY,IAEfyK,MAAM,EACNC,SAAU,UACVC,QAAQ,aAAD,OAAe4hD,GAAoB59B,SAAnC,kBAETg+B,GAAwBp8C,EAASpU,SAElCgV,OAAM,SAACF,GAAW,IAAD,EAChB23B,IAAiB,SAAC5oC,GAAD,mBAAC,eACbA,GADY,IAEfyK,MAAM,EACNC,SAAU,QACVC,QAAS,sBAEXgiD,GAAwB17C,GACQ,OAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOV,gBAAP,eAAiBpF,SACnBgC,SAsqGM,sBASF,eAAC/H,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACsa,EAAA,EAAD,CACE5iB,QAAQ,YACRyG,KAAK,QACL7D,QAASoqD,GAHX,4BAUJW,GAAWL,kBACb,gBAACnuD,EAAA,EAAD,CACEE,MAAO,CACLwxD,QAAS,OACTniD,cAAe,OACfpP,WAAY,QACZC,cAAe,QACfW,MAAO,KAETd,UAAW,EARb,UAUE,eAAC6I,EAAA,EAAD,CAAMC,WAAS,EAACpI,eAAe,SAA/B,SACE,eAACmI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACvI,EAAA,EAAD,CAAY2C,MAAM,UAAU1C,QAAQ,KAApC,6BAMJ,gBAACiI,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,UAAYqF,QAAS,EAAzD,UACE,gBAACvH,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,2CACCgnD,GAAiB3jD,MAEpB,gBAAC1D,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,6CACCgnD,GAAiB5mB,YAEpB,gBAACzgC,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,iDACCgnD,GAAiB7gD,SAFpB,SAIA,gBAACxG,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,+CACCgnD,GAAiB1W,eAEpB,gBAAC3wC,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,kDACCgnD,GAAiB50C,aAEpB,gBAACzS,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,+CACCgnD,GAAiBthD,UAEpB,gBAAC/F,EAAA,EAAD,CAAMK,MAAI,EAAV,UACE,kDACCgnD,GAAiBvW,eAItB,gBAAC9wC,EAAA,EAAD,CAAMC,WAAS,EAAC7I,MAAO,CAAE8K,UAAW,UAAYqF,QAAS,EAAzD,UACE,gBAACvH,EAAA,EAAD,CAAMK,MAAI,EAAV,sBACY,IACV,wBACE+V,YAAaixC,GAAiB7gD,SAC9BQ,SAAU,SAACwtB,GAAD,OACR8yB,IAAoB,SAAC1sD,GAAD,mBAAC,eAChBA,GADe,IAElB4L,SAAUguB,EAAElmB,OAAOjY,YAGvBmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAAV,0BACgB,IACd,wBACE+V,YAAaixC,GAAiBzW,aAC9B5pC,SAAU,SAACwtB,GAAD,OACR8yB,IAAoB,SAAC1sD,GAAD,mBAAC,eAChBA,GADe,IAElBg2C,aAAcpc,EAAElmB,OAAOjY,YAG3BmI,KAAK,SAGT,gBAACwB,EAAA,EAAD,CAAMK,MAAI,EAAV,uBACa,IACX,wBACE+V,YAAaixC,GAAiBtW,SAC9B/pC,SAAU,SAACwtB,GAAD,OACR8yB,IAAoB,SAAC1sD,GAAD,mBAAC,eAChBA,GADe,IAElBm2C,SAAUvc,EAAElmB,OAAOjY,YAGvBmI,KAAK,aAKX,gBAACwB,EAAA,EAAD,CACEC,WAAS,EACT7I,MAAO,CAAE8K,UAAW,SACpBqF,QAAS,EACT1P,eAAe,SAJjB,UAME,eAACmI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACsa,EAAA,EAAD,CACE5iB,QAAQ,WACR0C,MAAM,UACN+D,KAAK,QACL7D,QA5xGS,WACvBgQ,IACGoJ,KACC/d,EAAa,mBAFjB,2BAGSqxD,IAHT,IAG2BtvC,MAAO9P,aAAaC,QAAQ,eACnD,CACE4C,SAAU7C,aAAaC,QAAQ,eAGlCgD,MAAK,SAACC,GAEL65C,IAAc,SAACpqD,GAAD,mBAAC,eACVA,GADS,IAEZ28C,WAAW,EACX8N,mBAAmB,EACnBJ,cAAc,EACdC,iBAAiB,OAEnB1hB,IAAiB,SAAC5oC,GAAD,mBAAC,eACbA,GADY,IAEfyK,MAAM,EACNC,SAAU,UACVC,QAAQ,SAAD,OAAW8hD,GAAiB5mB,SAA5B,kBAET+mB,GAAwBr8C,EAASpU,SAElCgV,OAAM,SAACF,GAAW,IAAD,EAChB23B,IAAiB,SAAC5oC,GAAD,mBAAC,eACbA,GADY,IAEfyK,MAAM,EACNC,SAAU,QACVC,QAAS,sBAEXiiD,GAAwB37C,GACQ,OAAvB,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOV,gBAAP,eAAiBpF,SACnBgC,SAqvGM,sBASF,eAAC/H,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACsa,EAAA,EAAD,CACE5iB,QAAQ,WACRyG,KAAK,QACL7D,QAASoqD,GAHX,4BA2HN,iCAGJ,eAACjsC,GAAD,CAEEE,YAAaA,EAIb3T,KAAMA,EACNiU,QAASA,EACTP,YArrIe,SAAC1iB,GACpBijB,GAAQ,IAqrIJrT,gBAAiBA,OC/8IV,SAASmjD,KACtB,IAAM5iB,EAAUC,cAkChB,OA/BA/nC,qBAAU,WACR,IAAI+U,EAAQ/F,OAAOylB,SAASnW,KAAK/H,MAAM,UAAU,GAGjDtK,IACGoJ,KAAK/d,EAAa,gBAAiB,CAClCyd,MAAOA,IAERvI,MAAK,SAACC,GAELlD,aAAa4T,QAAQ,YAAa1Q,EAASpU,KAAK+T,UAChD7C,aAAa4T,QACX,cACAnG,KAAKoG,UAAU3Q,EAASpU,KAAKq3C,cAE/BnmC,aAAa4T,QACX,WACA1Q,EAASpU,KAAKq3C,YAAYnC,UACxB,IACA9gC,EAASpU,KAAKq3C,YAAYjC,UAE9BlkC,aAAa4T,QAAQ,SAAU1Q,EAASpU,KAAKq3C,YAAY1qC,IACzDuE,aAAa4T,QAAQ,YAAa1Q,EAASpU,KAAKq3C,YAAYr2B,OAC5DyuB,EAAQ9kC,QAAQ,QAEjBqK,OAAM,SAAC+2B,GAEN0D,EAAQ9kC,QAAQ,eAEnB,IAEI,0E,eCpCT,SAAS2nD,KACP,OACE,gBAACvxD,EAAA,EAAD,CAAYC,QAAQ,QAAQ0C,MAAM,gBAAlC,UACG,aACA,IAAI2N,MAAO8F,iBAKlB,IAAM3R,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvC4tD,OAAQ,CACNrxD,MAAO,OACPsM,UAAW,SACXlN,WAAYqE,EAAM6L,QAAQ,GAC1BjQ,cAAeoE,EAAM6L,QAAQ,QAoBlBgiD,GAhBA1rD,IAAM2rD,YACnB,WAA2CvmB,GAAS,IAAjDwmB,EAAgD,EAAhDA,eAAgBC,EAAgC,EAAhCA,qBACXhsD,EAAUnB,KAEhB,OACE,yBACE0mC,IAAKA,EACL7rC,MAAO,CAAEmZ,SAAUk5C,EAAgBz5C,OAAQ05C,GAC3ClqD,UAAW9B,EAAQ4rD,OAHrB,SAKE,eAACD,GAAD,SCLF9sD,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvC8Z,MAAO,CACLtT,UAAWxG,EAAM6L,QAAQ,GACzB7P,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdywC,OAAQ,CACNnwC,OAAQwD,EAAM6L,QAAQ,IAGxBihC,KAAM,CACJvwC,MAAO,OACPiK,UAAWxG,EAAM6L,QAAQ,IAE3BkhC,OAAQ,CACNvwC,OAAQwD,EAAM6L,QAAQ,EAAG,EAAG,IAE9BmhC,WAAY,CACVxmC,UAAWxG,EAAM6L,QAAQ,IAE3BohC,SAAU,CACRxb,OAAQzxB,EAAMyxB,OAAOyb,OAAS,EAC9BnuC,MAAO,YAQI,SAASkvD,KACtB,MAAoChkD,KAA5BR,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aACb1H,EAAUnB,KAEViqC,EAAUC,cAEVmjB,EAAU9C,iBAAO,MACjB+C,EAAY/C,iBAAO,MAEzB,EAA0BptD,mBAAS,IAAnC,mBAAOqe,EAAP,KAAcwyB,EAAd,KACA,EAAgC7wC,mBAAS,IAAzC,mBAAO2yC,EAAP,KAAiByd,EAAjB,KACA,EAAoCpwD,oBAAS,GAA7C,mBAAOqwD,EAAP,KAAmBC,EAAnB,KACA,EAAwCtwD,oBAAS,GAAjD,mBAAOuwD,EAAP,KAAqBC,EAArB,KACA,EAAwDxwD,oBAAS,GAAjE,mBAAOywD,EAAP,KAA6BC,EAA7B,KAGA,EAA4C1wD,mBAAS,YAArD,mBAAO+vD,EAAP,KAAuBY,EAAvB,KACA,EAAwD3wD,mBAAS,KAAjE,mBAAOgwD,EAAP,KAA6BY,EAA7B,KACA,EAAwC5wD,oBAAS,GAAjD,mBAAO6wD,EAAP,KAAqBC,EAArB,KAMMxiD,EAAYC,aAAaC,QAAQ,aAEvCxJ,qBAAU,WACR,IAAM+rD,EAA6BxiD,aAAaC,QAC9C,wBAEEuiD,GAA6D,SAA/BA,IAEhCL,GAAwB,GACxBniD,aAAayiD,WAAW,2BAEzB,IAEHhsD,qBAAU,WACJsJ,GAA2B,KAAdA,GACfw+B,EAAQrnC,KAAK,OAEd,CAAC6I,EAAWw+B,IAEf/4B,2BAAgB,WAkBd,OAjBAC,OAAOi9C,SAAW,WAEdf,EAAQZ,QAAQr0B,wBAAwB3kB,OACxC65C,EAAUb,QAAQ4B,YAElBP,EAAkB,YAClBC,EAAwB,SAIxB58C,OAAOm9C,YAAchB,EAAUb,QAAQr0B,wBAAwB3kB,SAE/Dq6C,EAAkB,YAClBC,EAAwB,OAIrB,WACL58C,OAAOi9C,SAAW,QAEnB,IAgBH,IAAM5xC,EAAc,SAAC1K,EAAO+0B,GACX,cAAXA,IAGJ9pB,IAAQ,GACR8wC,GAAwB,KAkF1B,EAAwBvsD,IAAMnE,UAAS,GAAvC,mBAAO2L,GAAP,KAAaiU,GAAb,KAEMrT,GAAkB,WACtBqT,IAAQ,IAmEV,OACE,uCACE,eAACS,GAAA,EAAD,CAAWld,UAAU,OAAOkmB,SAAS,KAArC,SACE,uBAAKvjB,UAAW9B,EAAQ8X,MAAxB,UAIE,sBACEtV,IAAI,0BACJC,IAAI,kBACJ/I,MAAO,CAAEa,MAAO,QAASuM,aAAc,UAEzC,eAAC1M,EAAA,EAAD,CAAY+E,UAAU,KAAK9E,QAAQ,KAAnC,gCAGCgyD,GACC,eAAC,IAAD,CAAOzkD,SAAS,QAAQ9F,UAAW9B,EAAQgrC,WAA3C,iDAIDvjC,GACC,eAAC,IAAD,CAAOG,SAAS,QAAQ9F,UAAW9B,EAAQgrC,WAA3C,mEAID6hB,GACC,+BAQE,gBAAC1wC,GAAA,EAAD,CACExU,KAAMA,GACN0B,QAASgS,EACT,kBAAgB,qBAChB,mBAAiB,2BAJnB,UAME,eAACe,GAAA,EAAD,CAAapW,GAAG,qBAAhB,qDAaA,eAAC8W,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAmB/W,GAAG,2BAAtB,0DAIF,gBAACgX,GAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAQhgB,QAASoe,EAAate,MAAM,UAApC,oBAGA,eAACkgB,EAAA,EAAD,CAAQhgB,QA9HF,SAAC65B,GACrBA,EAAEvX,iBACF+sC,GAAc,GACdQ,GAAgB,GAChBN,GAAgB,GAChB9kD,GAAa,GACbuF,IACGoJ,KACC/d,EAAa,4BACb,CACE+hB,MAAOA,EACPs0B,SAAUA,GAGZ,CACExhC,QAAS,CACP,8BAA+B,IAC/B,+BAAgC,uCAIrCK,MAAK,SAACC,GAELlD,aAAa4T,QAAQ,YAAa1Q,EAASpU,KAAK+T,UAChD7C,aAAa4T,QACX,cACAnG,KAAKoG,UAAU3Q,EAASpU,KAAKq3C,cAE/BnmC,aAAa4T,QACX,WACA1Q,EAASpU,KAAKq3C,YAAYnC,UACxB,IACA9gC,EAASpU,KAAKq3C,YAAYjC,UAE9BlkC,aAAa4T,QAAQ,SAAU1Q,EAASpU,KAAKq3C,YAAY1qC,IACzDuE,aAAa4T,QAAQ,YAAa1Q,EAASpU,KAAKq3C,YAAYr2B,OAE5DyuB,EAAQ9kC,QAAQ,QAGjBqK,OAAM,SAACF,GACNqI,QAAQC,IAAItI,GACRA,IACFm+C,GAAc,GACdE,GAAgB,QAkFwBzvD,MAAM,UAAUmgB,WAAS,EAAzD,8BAOR,wBAAMpb,UAAW9B,EAAQ8qC,KAAM4H,SA1NjB,SAAC5b,GAGrBA,EAAEvX,iBACF+sC,GAAc,GACdQ,GAAgB,GAChBN,GAAgB,GAChBv/C,IACGoJ,KACC/d,EAAa,mBACb,CACE+hB,MAAOA,EACPs0B,SAAUA,GAGZ,CACExhC,QAAS,CACP,8BAA+B,IAC/B,+BAAgC,uCAIrCK,MAAK,SAACC,GAELlD,aAAa4T,QAAQ,YAAa1Q,EAASpU,KAAK+T,UAChD7C,aAAa4T,QACX,cACAnG,KAAKoG,UAAU3Q,EAASpU,KAAKq3C,cAE/BnmC,aAAa4T,QACX,WACA1Q,EAASpU,KAAKq3C,YAAYnC,UACxB,IACA9gC,EAASpU,KAAKq3C,YAAYjC,UAE9BlkC,aAAa4T,QAAQ,SAAU1Q,EAASpU,KAAKq3C,YAAY1qC,IACzDuE,aAAa4T,QAAQ,YAAa1Q,EAASpU,KAAKq3C,YAAYr2B,OAC5DiyC,GAAc,GACdE,GAAgB,GAChBM,GAAgB,GAEhBhkB,EAAQ9kC,QAAQ,QAEjBqK,OAAM,SAACF,GACNqI,QAAQC,IAAItI,GACRA,IACFm+C,GAAc,GACdE,GAAgB,IAGY,MAA1Br+C,EAAMV,SAASpF,SAMjBykD,GAAgB,GAChBR,GAAc,GAEd/jD,MAEE4F,EAAMV,SAASpF,WA6JjB,UACE,eAACgmC,GAAA,EAAD,CACEh0C,QAAQ,SACRG,OAAO,SACP8zC,UAAQ,EACRI,WAAS,EACT1oC,GAAG,QACHzK,MAAM,QACNjC,KAAK,QACLiE,KAAK,QACLk1C,aAAa,QACb95C,MAAO0hB,EACP/Q,SAAU,SAACwtB,GAAD,OAAO+V,EAAS/V,EAAElmB,OAAOjY,UAErC,eAAC01C,GAAA,EAAD,CACEh0C,QAAQ,SACRG,OAAO,SACP8zC,UAAQ,EACRI,WAAS,EACTp1C,KAAK,WACLiC,MAAM,WACNgC,KAAK,WACLyI,GAAG,WACHysC,aAAa,WACb95C,MAAOg2C,EACPrlC,SAAU,SAACwtB,GAAD,OAAOs1B,EAAYt1B,EAAElmB,OAAOjY,UAExC,eAACskB,EAAA,EAAD,CACE1f,KAAK,SACLmxC,WAAS,EACTr0C,QAAQ,YACR0C,MAAM,UACN+E,UAAW9B,EAAQ+qC,OALrB,qBASA,eAACzoC,EAAA,EAAD,CAAMC,WAAS,EAACpI,eAAe,WAA/B,SACE,eAACmI,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACyqD,GAAA,EAAD,CAAM7nB,IAAK2mB,EAAS7xD,QAAQ,QAAQ4C,QAtLxB,SAAC65B,GACzBA,EAAEvX,iBACFupB,EAAQ9kC,QAAQ,YAoLJ,SACG,+CAOb,eAAC8M,EAAA,EAAD,CACEnJ,KAAM8kD,EACNv7C,iBAAkB,IAClB7H,QAASgS,EACT3hB,MAAO,CAAEoN,aAAc,QAJzB,SAME,eAAC,IAAD,CAAOuC,QAASgS,EAAazT,SAAS,OAAtC,6CAIF,eAAC,GAAD,CACE29B,IAAK4mB,EACLJ,eAAgBA,EAChBC,qBAAsBA,IAExB,eAACqB,GAAA,EAAD,CAAUvrD,UAAW9B,EAAQirC,SAAUtjC,KAAM4kD,EAA7C,SACE,eAACtjD,GAAA,EAAD,CAAkBlM,MAAM,iBCxZhC,IAAM8B,GAAYC,aAAW,SAACd,GAAD,MAAY,CACvC8Z,MAAO,CACLtT,UAAWxG,EAAM6L,QAAQ,GACzB7P,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdywC,OAAQ,CACNnwC,OAAQwD,EAAM6L,QAAQ,GACtB3L,gBAAiBF,EAAMG,QAAQysC,UAAUC,MAE3CC,KAAM,CACJvwC,MAAO,OACPiK,UAAWxG,EAAM6L,QAAQ,IAE3BkhC,OAAQ,CACNvwC,OAAQwD,EAAM6L,QAAQ,EAAG,EAAG,IAE9BmhC,WAAY,CACVxmC,UAAWxG,EAAM6L,QAAQ,IAE3BohC,SAAU,CACRxb,OAAQzxB,EAAMyxB,OAAOyb,OAAS,EAC9BnuC,MAAO,YAII,SAASuwD,KACtB,IAAMttD,EAAUnB,KAEViqC,EAAUC,cAEVmjB,EAAU9C,iBAAO,MACjB+C,EAAY/C,iBAAO,MAEnB9+C,EAAYC,aAAaC,QAAQ,aAEvC,EAAkCxO,mBAAS,IAA3C,mBAAOuyC,EAAP,KAAkBgf,EAAlB,KACA,EAAgCvxD,mBAAS,IAAzC,mBAAOyyC,EAAP,KAAiB+e,EAAjB,KACA,EAA0BxxD,mBAAS,IAAnC,mBAAOqe,EAAP,KAAcwyB,EAAd,KACA,EAAgC7wC,mBAAS,IAAzC,mBAAO2yC,EAAP,KAAiByd,EAAjB,KACA,EAA8CpwD,mBAAS,IAAvD,mBAAOyxD,EAAP,KAAwBC,EAAxB,KACA,EAA0C1xD,oBAAS,GAAnD,mBACA,GADA,UACoDA,oBAAS,IAA7D,mBAAO2xD,EAAP,KAA2BC,EAA3B,KACA,EAAsC5xD,oBAAS,GAA/C,mBAAoB6xD,GAApB,WACA,EAAkC7xD,oBAAS,GAA3C,mBAAO8xD,EAAP,KAAkBC,EAAlB,KACA,EAAwC/xD,oBAAS,GAAjD,mBAAOuwD,EAAP,KAAqBC,EAArB,KAEA,EAA4CxwD,mBAAS,YAArD,mBAAO+vD,EAAP,KAAuBY,GAAvB,KACA,GAAwD3wD,mBAAS,KAAjE,qBAAOgwD,GAAP,MAA6BY,GAA7B,MAEA5rD,qBAAU,WACJsJ,GAA2B,KAAdA,GACfw+B,EAAQrnC,KAAK,OAEd,CAAC6I,EAAWw+B,IAEf/4B,2BAAgB,WAkBd,OAjBAC,OAAOi9C,SAAW,WAEdf,EAAQZ,QAAQr0B,wBAAwB3kB,OACxC65C,EAAUb,QAAQ4B,YAElBP,GAAkB,YAClBC,GAAwB,SAIxB58C,OAAOm9C,YAAchB,EAAUb,QAAQr0B,wBAAwB3kB,SAE/Dq6C,GAAkB,YAClBC,GAAwB,OAIrB,WACL58C,OAAOi9C,SAAW,QAEnB,IAmDH,OACE,uCACE,eAAC5wC,GAAA,EAAD,CAAWld,UAAU,OAAOkmB,SAAS,KAArC,SAEE,uBAAKvjB,UAAW9B,EAAQ8X,MAAxB,UAIE,sBACEtV,IAAI,0BACJC,IAAI,kBACJ/I,MAAO,CAAEa,MAAO,QAASuM,aAAc,UAEzC,eAAC1M,EAAA,EAAD,CAAY+E,UAAU,KAAK9E,QAAQ,KAAnC,gCAGCszD,GACC,eAAC,IAAD,CAAO/lD,SAAS,UAAU9F,UAAW9B,EAAQgrC,WAA7C,qCAID8iB,GACC,eAAC,IAAD,CAAOlmD,SAAS,QAAQ9F,UAAW9B,EAAQgrC,WAA3C,kCAOF,wBAAMlpC,UAAW9B,EAAQ8qC,KAAM4H,SAzEjB,SAAC5b,GACrBA,EAAEvX,iBACFquC,GAAsB,GACtBG,GAAa,GACTpf,IAAa8e,GAIjBjB,GAAgB,GAEhBv/C,IACGoJ,KAAK/d,EAAa,aAAc,CAC/Bi2C,UAAWA,EACXE,SAAUA,EACVp0B,MAAOA,EACPs0B,SAAUA,IAEXnhC,MAAK,SAACC,GAELlD,aAAa4T,QAAQ,YAAa1Q,EAASpU,KAAK+T,UAChD7C,aAAa4T,QACX,WACA1Q,EAASpU,KAAKq3C,YAAYnC,UACxB,IACA9gC,EAASpU,KAAKq3C,YAAYjC,UAE9BlkC,aAAa4T,QAAQ,SAAU1Q,EAASpU,KAAKq3C,YAAY1qC,IACzDuE,aAAa4T,QAAQ,YAAa1Q,EAASpU,KAAKq3C,YAAYr2B,OAC5DwzC,GAAe,GACfrB,GAAgB,GAChB1jB,EAAQ9kC,QAAQ,QAEjBqK,OAAM,SAACF,GAGwB,MAA1BA,EAAMV,SAASpF,SACjB0lD,GAAa,GACbF,GAAe,IAEjBA,GAAe,GACfrB,GAAgB,OAnClBoB,GAAsB,IAoElB,UACE,gBAACtrD,EAAA,EAAD,CAAMC,WAAS,EAACsH,QAAS,EAAzB,UACE,eAACvH,EAAA,EAAD,CAAMK,MAAI,EAACO,GAAI,GAAI8qD,GAAI,EAAvB,SACE,eAAC3f,GAAA,EAAD,CACEoE,aAAa,QACbn5C,KAAK,YACLe,QAAQ,WACRi0C,UAAQ,EACRI,WAAS,EACT1oC,GAAG,YACHzK,MAAM,aACN5C,MAAO41C,EACPjlC,SAAU,SAACwtB,GAAD,OAAOy2B,EAAaz2B,EAAElmB,OAAOjY,QACvCukB,WAAS,MAGb,eAAC5a,EAAA,EAAD,CAAMK,MAAI,EAACO,GAAI,GAAI8qD,GAAI,EAAvB,SACE,eAAC3f,GAAA,EAAD,CACEh0C,QAAQ,WACRi0C,UAAQ,EACRI,WAAS,EACT1oC,GAAG,WACHzK,MAAM,YACNjC,KAAK,WACLm5C,aAAa,QACb95C,MAAO81C,EACPnlC,SAAU,SAACwtB,GAAD,OAAO02B,EAAY12B,EAAElmB,OAAOjY,YAG1C,eAAC2J,EAAA,EAAD,CAAMK,MAAI,EAACO,GAAI,GAAf,SACE,eAACmrC,GAAA,EAAD,CACEh0C,QAAQ,WACRi0C,UAAQ,EACRI,WAAS,EACT1oC,GAAG,QACHzK,MAAM,gBACNjC,KAAK,QACLiE,KAAK,QACLk1C,aAAa,QACb95C,MAAO0hB,EACP/Q,SAAU,SAACwtB,GAAD,OAAO+V,EAAS/V,EAAElmB,OAAOjY,YAGvC,eAAC2J,EAAA,EAAD,CAAMK,MAAI,EAACO,GAAI,GAAf,SACE,eAACmrC,GAAA,EAAD,CACEh0C,QAAQ,WACRi0C,UAAQ,EACRI,WAAS,EACTp1C,KAAK,WACLiC,MAAM,WACNgC,KAAK,WACLyI,GAAG,WACHrN,MAAOg2C,EACPrlC,SAAU,SAACwtB,GAAD,OAAOs1B,EAAYt1B,EAAElmB,OAAOjY,QACtC85C,aAAa,uBAGjB,eAACnwC,EAAA,EAAD,CAAMK,MAAI,EAACO,GAAI,GAAf,SACE,eAACmrC,GAAA,EAAD,CACEh0C,QAAQ,WACRi0C,UAAQ,EACRI,WAAS,EACTp1C,KAAK,kBACLiC,MAAM,mBACNgC,KAAK,WACLyI,GAAG,kBACHrN,MAAO80D,EACPnkD,SAAU,SAACwtB,GAAD,OAAO42B,EAAmB52B,EAAElmB,OAAOjY,QAC7C85C,aAAa,0BAInB,eAACx1B,EAAA,EAAD,CACE1f,KAAK,SACLmxC,WAAS,EACTr0C,QAAQ,YACR0C,MAAM,UACN+E,UAAW9B,EAAQ+qC,OACnBpkB,UAAQ,EANV,qBAUA,eAACrkB,EAAA,EAAD,CAAMC,WAAS,EAACK,QAAQ,WAAxB,SACE,eAACN,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACyqD,GAAA,EAAD,CAAM7nB,IAAK2mB,EAAS7xD,QAAQ,QAAQ4C,QAlKzB,SAAC65B,GACxBA,EAAEvX,iBACFupB,EAAQ9kC,QAAQ,WAgKJ,0DAQV,eAAC,GAAD,CACEuhC,IAAK4mB,EACLJ,eAAgBA,EAChBC,qBAAsBA,KAExB,eAACqB,GAAA,EAAD,CAAUvrD,UAAW9B,EAAQirC,SAAUtjC,KAAM4kD,EAA7C,SACE,eAACtjD,GAAA,EAAD,CAAkBlM,MAAM,iBC7QjB,SAAS82C,KACtB,MAAkC5rC,KAA1BH,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAEZ+b,EAAsB,WAC1B/b,GAAY,SAAC7K,GAAD,mBAAC,eAAoBA,GAArB,IAAgCyK,MAAM,QAGpD,OACE,eAACmJ,EAAA,EAAD,CACEnJ,KAAMG,EAASH,KACfuJ,iBAAkB,IAClB7H,QAASya,EACT/S,aAAc,CAAEC,SAAU,SAAUC,WAAY,QAJlD,SAME,eAAC,IAAD,CAAO5H,QAASya,EAAqBlc,SAAUE,EAASF,SAAxD,SACGE,EAASD,YCuCHomD,OA1Cf,WACE,IAAQ1mD,EAAoBU,KAApBV,gBAEFvJ,GADYuM,aAAaC,QAAQ,aACzB0jD,YAAY,CACxB/vD,QAASoJ,EACL,CACEhK,KAAM,QAER,CACEuoB,QAASzO,IACTuzB,UAAWujB,IACXzvD,OAAQ,CACN0vD,mBAAoB,UACpBznC,SAAU,eAKpB,OACE,gBAAC0nC,EAAA,EAAD,CAAerwD,MAAOA,EAAtB,UACE,eAACswD,EAAA,EAAD,IACA,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,eAACtC,GAAD,MAEF,eAAC,IAAD,CAAOsC,KAAK,UAAZ,SACE,eAACjB,GAAD,MAGF,eAAC,IAAD,CAAOiB,KAAK,aAAZ,SACE,eAAC7C,GAAD,MAEF,eAAC,IAAD,CAAO8C,OAAK,EAACD,KAAK,IAAlB,SACE,eAAC,GAAD,MAEF,eAAC,IAAD,CAAOA,KAAK,IAAIE,OAAQ,iBAAM,sBAEhC,eAAC,GAAD,Q,kBC7CNC,IAASD,OACP,eAAC,GAAD,UACE,eAAC,KAAD,UACE,eAAC,GAAD,QAGJhpD,SAASC,eAAe,U","file":"static/js/main.0a6730ec.chunk.js","sourcesContent":["// Development\n// export const SERVER_URL = \"http://10.10.0.102:3005\";\n// export const ML_URL = \"http://10.10.0.102:3002\";\nexport const SMS_URL = \"http://10.10.0.105:5000\";\nexport const SMS_URL2 = \"http://10.10.0.105:3000\";\n\n// Production\nexport const SERVER_URL = \"https://apps.acme.in:3001\";\nexport const ML_URL = \"https://apps.acme.in:3002\";\n\n//export const SERVER_URL = \"http://115.248.98.3:3001\";\n//export const SERVER_URL = \"http://localhost:3001\";\n//export const SERVER_URL = \"http://10.10.0.38:3001\";\n//export const ML_URL = \"http://115.248.98.3:3002\";\n//export const ML_URL = \"http://10.10.0.38:3002\";\n\n// export const SERVER_URL = \"http://apps.acme.in:3001\";\n// export const ML_URL = \"http://apps.acme.in:3002\";\n\n// export const SERVER_URL = \"https://localhost:3006\";\n// export const ML_URL = \"http://localhost:3002\";\n\n// backend: 4334\n// frontend: 3443\n//export const SERVER_URL = \"http://115.248.98.3:3001\";\n//export const ML_URL = \"http://115.248.98.3:3002\";\n\n// Frontend: 10.10.1.103:3000\n\n// Development - Kamal\n// export const SERVER_URL = \"http://10.10.0.105:3001\";\n// export const SERVER_URL = \"http://10.10.0.105:3005\";\n","import { Card, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Bar, BarChart, CartesianGrid, Cell, XAxis, YAxis } from \"recharts\";\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    const labelStr = String(label);\n    return (\n      <div style={{ color: \"#009688\" }}>\n        {labelStr.split(\" \")[0]}: {payload[0].value}\n        {label === \"Humidity\" ? \"%\" : \"°C\"}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst CustomizedLabel = ({ x, y, fill, value, index }) => {\n  return (\n    <text\n      x={x}\n      y={y}\n      dx=\"10\"\n      dy=\"-10\"\n      fontFamily=\"sans-serif\"\n      fill={fill}\n      textAnchor=\"middle\"\n    >\n      {value}\n      {index === 2 ? \"%\" : \"°C\"}\n    </text>\n  );\n};\n\nexport default function AmbientModuleTemp({\n  ambientTemp,\n  moduleTemp,\n  humidity,\n}) {\n  const data = [\n    {\n      name: \"Ambient\",\n      // value: Number(ambientTemp) === -111 ? \"x\" : ambientTemp,\n      value: Number(ambientTemp) && Number(ambientTemp) !== -111 ? Number(ambientTemp) : 0\n    },\n    {\n      name: \"Module\",\n      value: Number(moduleTemp) && Number(moduleTemp) !== -111 ? Number(moduleTemp) : 0\n    },\n    {\n      name: \"Humidity\",\n      value: Number(humidity) && Number(humidity) !== -111 ? Number(humidity) : 0\n    },\n  ];\n  return (\n    <Card\n      elevation={6}\n      style={{\n        // height: '310px',\n        paddingTop: \".5rem\",\n        paddingBottom: \".5rem\",\n        paddingLeft: \".25rem\",\n        paddingRight: \".25rem\",\n        height: 300,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        // justifyContent: \"center\",\n      }}\n    >\n      <Typography variant=\"h6\">Temperatures {\" and \"} Humidity</Typography>\n      <BarChart\n        width={300}\n        height={240}\n        data={data}\n        margin={{\n          //   top: 5,\n          right: 50,\n          //   left: 1,\n          //   bottom: 5,\n        }}\n        barSize={20}\n      >\n        <XAxis dataKey=\"name\" scale=\"point\" padding={{ left: 30 }} />\n        <YAxis domain={[0, 100]} />\n        {/* <Tooltip /> */}\n\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <Bar\n          isAnimationActive={false}\n          dataKey=\"value\"\n          fill=\"#8884d8\"\n          background={{ fill: \"#eee\" }}\n          label={<CustomizedLabel />}\n          //   label={{ position: \"top\" }}\n        >\n          {/* <LabelList dataKey='name' content={renderCustomizedLabel} /> */}\n          {data.map((entry, index) => (\n            <Cell\n              cursor=\"pointer\"\n              fill={\n                index === 0 ? \"#42a5f5\" : index === 1 ? \"#82ca9d\" : \"#8884d8\"\n              }\n              key={`cell-${index}`}\n            />\n          ))}\n        </Bar>\n      </BarChart>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nexport default function BiaxialLineChart({\n  data,\n  interval,\n  width,\n  height,\n  leftAxisY,\n  rightAxisY,\n}) {\n  // console.log(\"Biaxial line data\", data);\n  const [opacity, setOpacity] = useState({ ghi: 1, gti: 1, pg: 1 });\n\n  const selectLine = (dataKey) => {\n    setOpacity((prevState) => {\n      return { ...prevState, [dataKey]: prevState[dataKey] === 0 ? 1 : 0 };\n    });\n  };\n\n  const renderLegend = ({ payload }) => {\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\" }}>\n        {payload.map(({ dataKey, color }) => {\n          return (\n            <strong\n              key={dataKey}\n              style={{\n                fontSize: \"1rem\",\n                color: color,\n                cursor: \"pointer\",\n                opacity: opacity[dataKey] === 0 ? 0.5 : 1,\n              }}\n              onClick={() => selectLine(dataKey)}\n            >\n              {String(dataKey).toUpperCase()}\n            </strong>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"83%\">\n      <LineChart\n        // width={width}\n        // height={height}\n        data={data}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"time\" interval={interval} />\n        <YAxis yAxisId=\"left\" domain={leftAxisY} />\n        <YAxis yAxisId=\"right\" domain={rightAxisY} orientation=\"right\" />\n        <Tooltip />\n        <Legend content={renderLegend} />\n        <Line\n          name=\"GHI\"\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey=\"ghi\"\n          stroke=\"#3498DB\"\n          strokeWidth={2}\n          strokeOpacity={opacity.ghi}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n        <Line\n          name=\"GTI\"\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey=\"gti\"\n          stroke=\"#ffc107\"\n          strokeWidth={2}\n          strokeOpacity={opacity.gti}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n        <Line\n          name=\"PG\"\n          yAxisId=\"right\"\n          type=\"monotone\"\n          dataKey=\"pg\"\n          stroke=\"#82ca9d\"\n          strokeWidth={2}\n          strokeOpacity={opacity.pg}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"x\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"x\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"x\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"x\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"x\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"x\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"x\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"x\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={5}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { Card, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function CustomCard({ imagePath, imageHeight, title, value }) {\n  // const cardRef = useRef(null);\n  // const [cardHeight, setCardHeight] = useState(0);\n\n  // useLayoutEffect(() => {\n  //   console.log(cardRef.current.getBoundingClientRect());\n  //   setCardHeight(cardRef.current.getBoundingClientRect().height);\n  // }, []);\n\n  return (\n    <Card\n      // ref={cardRef}\n      // style={{ width: \"fit-content\" }}\n      elevation={4}\n      style={{ height: \"80px\" }}\n    >\n      <Grid container alignItems=\"center\" style={{ padding: \"1rem 1rem\" }}>\n        <img\n          src={imagePath}\n          alt={title}\n          height={imageHeight}\n          style={{ marginRight: \"1rem\" }}\n        />\n        <Grid item>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Typography>{title}</Typography>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Typography color=\"primary\">{value}</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n","import { Card, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function CustomCard2({\n  firstTitle,\n  secondTitle,\n  firstValue,\n  secondValue,\n  imagePath,\n  imageHeight,\n}) {\n  return (\n    <Card elevation={4} style={{ height: \"80px\" }}>\n      <Grid\n        container\n        alignItems=\"center\"\n        style={{\n          padding: \"1rem 2rem 1rem 1rem\",\n        }}\n      >\n        <img\n          src={imagePath}\n          alt={imagePath}\n          style={{ height: imageHeight, marginRight: \"1rem\" }}\n        />\n        <Grid item>\n          <Grid container>\n            <Grid item xs={5}>\n              <Typography>{firstTitle}</Typography>\n            </Grid>\n            <Grid item xs={2} />\n            <Grid item xs={5} style={{ paddingLeft: \".25rem\" }}>\n              <Typography>{secondTitle}</Typography>\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item xs={5}>\n              <Typography color=\"primary\">{firstValue}</Typography>\n            </Grid>\n            <Grid item xs={2} />\n            <Grid item xs={5} style={{ paddingLeft: \".25rem\" }}>\n              <Typography color=\"primary\">{secondValue}</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n","import { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport CustomCard from \"./CustomCard\";\nimport CustomCard2 from \"./CustomCard2\";\n\nconst useStyles = makeStyles((theme) => ({\n  // cardGridContainerStyle: {\n  //   marginTop: theme.spacing(3.5),\n  // },\n}));\n\nexport default function CustomCards({\n  day_generation = 0,\n  revenue = 0,\n  peak_power = 0,\n  ghi = 0,\n  gti = 0,\n  plant_pr = 0,\n  grid_availability = 0,\n  plant_availability = 0,\n}) {\n  const classes = useStyles();\n\n  const getFormattedRevenue = (revenue) => {\n    if (isNaN(revenue)) {\n      return \"x\";\n    }\n    const revenueNum = Number(revenue).toFixed(0);\n    if (revenueNum < 0) {\n      return \"0\";\n    }\n    const revenueStr = revenueNum;\n    let lastThree = revenueStr.substring(revenueStr.length - 3);\n    let otherNumbers = revenueStr.substring(0, revenueStr.length - 3);\n    if (otherNumbers !== \"\") {\n      lastThree = \",\" + lastThree;\n    }\n    let res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\n    return res;\n  };\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        // style={{ marginTop: \"1.75rem\" }}\n        justify=\"space-between\"\n        // className={customCardsStyle.materialGrid}\n        // spacing={3}\n      >\n        <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/powerGeneration.png\"\n            imageHeight={48}\n            title=\"Generation\"\n            value={\n              Number(day_generation) === -111 ? (\n                \"x\"\n              ) : (\n                <span>\n                  {Number(day_generation).toFixed(2)}&nbsp;<small>MWH</small>\n                </span>\n              )\n            }\n          />\n        </Grid>\n        <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/revenue.png\"\n            imageHeight={42}\n            title=\"Revenue\"\n            value={<span>{getFormattedRevenue(revenue)}</span>}\n          />\n        </Grid>\n        <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/peakPower.png\"\n            imageHeight={45}\n            title=\"Peak Power\"\n            value={\n              Number(peak_power) === -111 || isNaN(Number(peak_power)) ? (\n                \"x\"\n              ) : (\n                <span>\n                  {Number(peak_power).toFixed(2)}&nbsp;<small>MW</small>\n                </span>\n              )\n            }\n          />\n        </Grid>\n        <Grid item>\n          <CustomCard2\n            imagePath=\"/static/images/ray.png\"\n            imageHeight={45}\n            firstTitle=\"GHI\"\n            secondTitle=\"GTI\"\n            firstValue={Number(ghi) === -111 ? \"x\" : Number(ghi).toFixed(2)}\n            secondValue={Number(gti) === -111 ? \"x\" : Number(gti).toFixed(2)}\n          />\n        </Grid>\n        {/* <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/peakPower.png\"\n            imageHeight={54}\n            title=\"Two\"\n            value={\n              <span>\n                {Number(peak_power).toFixed(2)}&nbsp;<small>MW</small>\n              </span>\n            }\n          />\n        </Grid>\n        <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/peakPower.png\"\n            imageHeight={54}\n            title=\"Three\"\n            value={\n              <span>\n                {Number(peak_power).toFixed(2)}&nbsp;<small>MW</small>\n              </span>\n            }\n          />\n        </Grid> */}\n        <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/plantPR.png\"\n            imageHeight={45}\n            title=\"Plant PR\"\n            value={\n              Number(plant_pr) === -111 ? (\n                \"x\"\n              ) : (\n                <span>{Number(plant_pr).toFixed(0)}%</span>\n              )\n            }\n          />\n        </Grid>\n        <Grid item>\n          <CustomCard2\n            imagePath=\"/static/images/gridAvailability.png\"\n            imageHeight={50}\n            firstTitle=\"GA\"\n            secondTitle=\"PA\"\n            firstValue={\n              <span>\n                {Number(grid_availability) === -111\n                  ? \"x\"\n                  : Number(grid_availability)\n                      .toFixed(1)\n                      .replace(/[.,]00$/, \"\")}\n                {Number(grid_availability) !== -111 && \"%\"}\n              </span>\n            }\n            secondValue={\n              <span>\n                {Number(plant_availability) === -111\n                  ? \"x\"\n                  : Number(plant_availability)\n                      .toFixed(1)\n                      .replace(/[.,]00$/, \"\")}\n                {Number(plant_availability) !== -111 && \"%\"}\n              </span>\n            }\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import { Card, Grid, Typography } from \"@material-ui/core\";\nimport C3Chart from \"react-c3js\";\nimport \"../c3.css\";\nimport React, { useState, useLayoutEffect, useEffect } from \"react\";\nimport { max } from \"date-fns\";\n\nexport default function PowerGenerationGauge({ totalExport, maxValue }) {\n  const [totalExportNum, setTotalExportNum] = useState(0);\n\n  useEffect(() => {\n    let value =\n      Number(totalExport) && Number(totalExport) !== -111\n        ? Number(totalExport)\n        : 0;\n    if (value !== totalExport) {\n      setTotalExportNum(value);\n    }\n  }, [totalExport]);\n\n  // const [gauge, setGauge]= useState(null);\n\n  // const [gaugeHeight, setGaugeHeight] = useState(240);\n\n  // useLayoutEffect(() => {\n  //   console.log('gaugeHeight', gaugeHeight);\n  //   setGauge(new JustGage({\n  //     id: \"gauge\", // the id of the html element\n  //     value: 0,\n  //     min: 0,\n  //     padding: 0,\n  //     margin: 0,\n  //     max: maxValue,\n\n  //     decimals: 0,\n  //     gaugeWidthScale: 0.6,\n  //     levelColors: ['#4caf50'],\n  //     pointer: true,\n  //     pointerOptions: {\n  //       color: '#0973a8'\n  //     },\n  //     valueFontColor: '#0973a8',\n  //     textRenderer: (value) => value + ' MW',\n  //     gaugeWidthScale: .8\n  //   }));\n  // }, []);\n\n  // useEffect(() => {\n  //   console.log('totalExport', totalExport);\n  //   if (gauge && Number(totalExport) > 0) {\n  //     console.log('totalExport', totalExport);\n  //     gauge.refresh(Number(totalExport))\n  //   }\n  // }, [gauge, totalExport]);\n\n  return (\n    <Card elevation={6} style={{ height: 300, width: 400 }}>\n      <Typography\n        style={{ marginLeft: \"1rem\", marginTop: \".5rem\" }}\n        variant=\"h6\"\n      >\n        Power Generation\n      </Typography>\n      <Grid container justify=\"center\">\n        <Grid item>\n          <C3Chart\n            data={{\n              columns: [[\"Current Export\", totalExportNum]],\n              type: \"gauge\",\n            }}\n            gauge={{\n              label: {\n                format: function (value) {\n                  return value + \" MW\";\n                },\n                show: true,\n              },\n              min: 0,\n              max: maxValue,\n              width: 55,\n            }}\n            color={{\n              pattern: [\"#4caf50\"],\n            }}\n            size={{\n              height: 240,\n            }}\n            options={{\n              animation: {\n                duration: 0,\n              },\n            }}\n          />\n          {/* <GaugeChart percent={.3} id=\"gauge-chart1\" nrOfLevels={1} animate={false} colors={['#4caf50']} textColor={'#0074b7'} style={{width: 450, paddingTop: 20}} /> */}\n          {/* <div id=\"gauge\" style={{marginTop: 10, backgroundColor: 'red'}}></div> */}\n          {/* <Typography>Current Export</Typography> */}\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\n\nexport default function SiteCalendar({\n  setOpenDateTimePicker,\n  setIsNextCount,\n}) {\n  return (\n    <React.Fragment>\n      <Grid item>\n        <IconButton\n          onClick={() =>\n            setIsNextCount((prevState) => {\n              let num = 0;\n              if (prevState >= 0) {\n                num = -1;\n              } else {\n                num = prevState - 1;\n              }\n              return num;\n            })\n          }\n        >\n          <ArrowLeftIcon color=\"action\" fontSize=\"large\" />\n        </IconButton>\n      </Grid>\n      <Grid item>\n        <IconButton\n          onClick={() => {\n            setIsNextCount(0);\n            setOpenDateTimePicker(true);\n          }}\n        >\n          <EventIcon color=\"action\" fontSize=\"large\" />\n        </IconButton>\n      </Grid>\n      <Grid item>\n        <IconButton\n          onClick={() =>\n            setIsNextCount((prevState) => {\n              let num = 0;\n              if (prevState <= 0) {\n                num = 1;\n              } else {\n                num = prevState + 1;\n              }\n              return num;\n            })\n          }\n        >\n          <ArrowRightIcon color=\"action\" fontSize=\"large\" />\n        </IconButton>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nfunction Compass({ size, rotate }) {\n  useEffect(() => {\n    // console.log(\"useEffect for rotation running...\");\n\n    const needle = document.getElementById(\"needle\");\n\n    // let rotationValue = String(360 - rotate);\n    let rotationValue =\n      Number(rotate) && Number(rotate) !== -111 ? Number(rotate) : 0;\n\n    needle.style.transformOrigin = \"center\";\n    needle.style.transform = `rotate(${rotationValue}deg)`;\n  }, [rotate]);\n\n  return (\n    <svg\n      width={String(size)}\n      height={String(size)}\n      viewBox=\"0 0 316 316\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g id=\"body\">\n        <circle\n          id=\"Ellipse\"\n          cx=\"158\"\n          cy=\"158\"\n          r=\"154\"\n          fill=\"white\"\n          stroke=\"#616161\"\n          // stroke-width=\"8\"\n          strokeWidth=\"8\"\n        />\n        <path\n          id=\"N\"\n          d=\"M164.094 53H161.832L153.242 39.8516V53H150.98V35.9375H153.242L161.855 49.1445V35.9375H164.094V53Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NW\"\n          d=\"M65.8047 80H64.4854L59.4746 72.3301V80H58.1553V70.0469H59.4746L64.499 77.751V70.0469H65.8047V80ZM70.2822 76.8623L70.4736 78.1748L70.7539 76.9922L72.7227 70.0469H73.8301L75.751 76.9922L76.0244 78.1953L76.2363 76.8555L77.7812 70.0469H79.1006L76.6875 80H75.4912L73.4404 72.7471L73.2832 71.9883L73.126 72.7471L71 80H69.8037L67.3975 70.0469H68.71L70.2822 76.8623Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SW\"\n          d=\"M61.0879 241.563C59.9622 241.24 59.1419 240.843 58.627 240.374C58.1165 239.9 57.8613 239.317 57.8613 238.624C57.8613 237.84 58.1735 237.193 58.7979 236.683C59.4268 236.168 60.2425 235.91 61.2451 235.91C61.9287 235.91 62.5371 236.042 63.0703 236.307C63.6081 236.571 64.0228 236.936 64.3145 237.4C64.6107 237.865 64.7588 238.373 64.7588 238.925H63.4395C63.4395 238.323 63.248 237.852 62.8652 237.51C62.4824 237.163 61.9424 236.99 61.2451 236.99C60.598 236.99 60.0921 237.134 59.7275 237.421C59.3675 237.703 59.1875 238.098 59.1875 238.604C59.1875 239.009 59.3584 239.353 59.7002 239.636C60.0465 239.914 60.6322 240.169 61.457 240.401C62.2865 240.634 62.9336 240.891 63.3984 241.174C63.8678 241.452 64.2142 241.778 64.4375 242.151C64.6654 242.525 64.7793 242.965 64.7793 243.471C64.7793 244.277 64.4648 244.924 63.8359 245.412C63.207 245.895 62.3662 246.137 61.3135 246.137C60.6299 246.137 59.9919 246.007 59.3994 245.747C58.807 245.483 58.349 245.123 58.0254 244.667C57.7064 244.211 57.5469 243.694 57.5469 243.115H58.8662C58.8662 243.717 59.0872 244.193 59.5293 244.544C59.9759 244.89 60.5706 245.063 61.3135 245.063C62.0062 245.063 62.5371 244.922 62.9062 244.64C63.2754 244.357 63.46 243.972 63.46 243.484C63.46 242.997 63.2891 242.621 62.9473 242.356C62.6055 242.088 61.9857 241.823 61.0879 241.563ZM68.6143 242.862L68.8057 244.175L69.0859 242.992L71.0547 236.047H72.1621L74.083 242.992L74.3564 244.195L74.5684 242.855L76.1133 236.047H77.4326L75.0195 246H73.8232L71.7725 238.747L71.6152 237.988L71.458 238.747L69.332 246H68.1357L65.7295 236.047H67.042L68.6143 242.862Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SE\"\n          d=\"M246.088 241.563C244.962 241.24 244.142 240.843 243.627 240.374C243.117 239.9 242.861 239.317 242.861 238.624C242.861 237.84 243.174 237.193 243.798 236.683C244.427 236.168 245.243 235.91 246.245 235.91C246.929 235.91 247.537 236.042 248.07 236.307C248.608 236.571 249.023 236.936 249.314 237.4C249.611 237.865 249.759 238.373 249.759 238.925H248.439C248.439 238.323 248.248 237.852 247.865 237.51C247.482 237.163 246.942 236.99 246.245 236.99C245.598 236.99 245.092 237.134 244.728 237.421C244.368 237.703 244.188 238.098 244.188 238.604C244.188 239.009 244.358 239.353 244.7 239.636C245.047 239.914 245.632 240.169 246.457 240.401C247.286 240.634 247.934 240.891 248.398 241.174C248.868 241.452 249.214 241.778 249.438 242.151C249.665 242.525 249.779 242.965 249.779 243.471C249.779 244.277 249.465 244.924 248.836 245.412C248.207 245.895 247.366 246.137 246.313 246.137C245.63 246.137 244.992 246.007 244.399 245.747C243.807 245.483 243.349 245.123 243.025 244.667C242.706 244.211 242.547 243.694 242.547 243.115H243.866C243.866 243.717 244.087 244.193 244.529 244.544C244.976 244.89 245.571 245.063 246.313 245.063C247.006 245.063 247.537 244.922 247.906 244.64C248.275 244.357 248.46 243.972 248.46 243.484C248.46 242.997 248.289 242.621 247.947 242.356C247.605 242.088 246.986 241.823 246.088 241.563ZM257.094 241.399H252.78V244.927H257.791V246H251.468V236.047H257.723V237.127H252.78V240.326H257.094V241.399Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NE\"\n          d=\"M249.805 80H248.485L243.475 72.3301V80H242.155V70.0469H243.475L248.499 77.751V70.0469H249.805V80ZM257.762 75.3994H253.448V78.9268H258.459V80H252.136V70.0469H258.391V71.127H253.448V74.3262H257.762V75.3994Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"W\"\n          d=\"M34.6602 160.621L34.9883 162.871L35.4688 160.844L38.8438 148.938H40.7422L44.0352 160.844L44.5039 162.906L44.8672 160.609L47.5156 148.938H49.7773L45.6406 166H43.5898L40.0742 153.566L39.8047 152.266L39.5352 153.566L35.8906 166H33.8398L29.7148 148.938H31.9648L34.6602 160.621Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"E\"\n          d=\"M285.625 158.113H278.23V164.16H286.82V166H275.98V148.938H286.703V150.789H278.23V156.273H285.625V158.113Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"S\"\n          d=\"M157.008 271.395C155.078 270.84 153.672 270.16 152.789 269.355C151.914 268.543 151.477 267.543 151.477 266.355C151.477 265.012 152.012 263.902 153.082 263.027C154.16 262.145 155.559 261.703 157.277 261.703C158.449 261.703 159.492 261.93 160.406 262.383C161.328 262.836 162.039 263.461 162.539 264.258C163.047 265.055 163.301 265.926 163.301 266.871H161.039C161.039 265.84 160.711 265.031 160.055 264.445C159.398 263.852 158.473 263.555 157.277 263.555C156.168 263.555 155.301 263.801 154.676 264.293C154.059 264.777 153.75 265.453 153.75 266.32C153.75 267.016 154.043 267.605 154.629 268.09C155.223 268.566 156.227 269.004 157.641 269.402C159.062 269.801 160.172 270.242 160.969 270.727C161.773 271.203 162.367 271.762 162.75 272.402C163.141 273.043 163.336 273.797 163.336 274.664C163.336 276.047 162.797 277.156 161.719 277.992C160.641 278.82 159.199 279.234 157.395 279.234C156.223 279.234 155.129 279.012 154.113 278.566C153.098 278.113 152.312 277.496 151.758 276.715C151.211 275.934 150.938 275.047 150.938 274.055H153.199C153.199 275.086 153.578 275.902 154.336 276.504C155.102 277.098 156.121 277.395 157.395 277.395C158.582 277.395 159.492 277.152 160.125 276.668C160.758 276.184 161.074 275.523 161.074 274.688C161.074 273.852 160.781 273.207 160.195 272.754C159.609 272.293 158.547 271.84 157.008 271.395Z\"\n          fill=\"black\"\n        />\n        <line\n          id=\"Line 1\"\n          x1=\"159\"\n          y1=\"8\"\n          x2=\"159\"\n          y2=\"23\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 3\"\n          x1=\"23\"\n          y1=\"160\"\n          x2=\"8\"\n          y2=\"160\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 5\"\n          x1=\"57.8995\"\n          y1=\"65.3137\"\n          x2=\"47.2929\"\n          y2=\"54.7071\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 7\"\n          x1=\"47.2929\"\n          y1=\"261.899\"\n          x2=\"57.8995\"\n          y2=\"251.293\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 8\"\n          x1=\"258.293\"\n          y1=\"63.8995\"\n          x2=\"268.9\"\n          y2=\"53.2929\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 6\"\n          x1=\"269.899\"\n          y1=\"260.314\"\n          x2=\"259.293\"\n          y2=\"249.707\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 4\"\n          x1=\"308\"\n          y1=\"157\"\n          x2=\"293\"\n          y2=\"157\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 2\"\n          x1=\"159\"\n          y1=\"293\"\n          x2=\"159\"\n          y2=\"308\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n      </g>\n      <g id=\"needle\">\n        <path\n          id=\"Polygon 1\"\n          d=\"M158 68L168 158H157H148L158 68Z\"\n          // fill=\"#D50000\"\n          fill=\"#4caf50\"\n        />\n        <path\n          id=\"Polygon 2\"\n          d=\"M158 248L148 158H159H168L158 248Z\"\n          // fill=\"#9E9E9E\"\n          fill=\"#bdbdbd\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nCompass.defaultProps = {\n  size: \"300\",\n  rotate: 0,\n};\n\nexport default Compass;\n","import React from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@material-ui/core\";\nimport Compass from \"./Compass\";\n\nexport default function Wind({ windDirection, windSpeed, rain }) {\n  return (\n    <Card\n      elevation={6}\n      style={{\n        padding: \".5rem 1rem\",\n        height: 300,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Typography align=\"center\" variant=\"h6\">\n        Wind <span style={{ color: \"#4caf50\" }}>Direction</span>\n        {\" & \"}\n        <span style={{ color: \"#2196f3\" }}>Speed</span>\n      </Typography>\n      <div style={{ textAlign: \"center\", padding: \".5rem\" }}>\n        <Compass\n          size={Number.isNaN(rain) === true ? 170 : 150}\n          rotate={windDirection}\n        />\n      </div>\n      <div>\n        <Typography align=\"center\" variant=\"h6\">\n          <span\n            style={{\n              color: \"#4caf50\",\n            }}\n          >\n            {Number(windDirection) === -111 ? (\n              \"x\"\n            ) : (\n              <span>{windDirection} °</span>\n            )}\n          </span>\n          <span\n            style={{\n              marginLeft: \"1rem\",\n              color: \"#2196f3\",\n            }}\n          >\n            {Number(windSpeed) === -111 ? \"x\" : <span>{windSpeed} m/s</span>}\n          </span>\n        </Typography>\n        {!Number.isNaN(rain) && (\n          <Typography\n            // variant=\"h6\"\n            color=\"textSecondary\"\n            align=\"center\"\n            style={{ marginTop: \".25rem\", marginBottom: \".25rem\" }}\n          >\n            Rain: {Number(rain) === -111 ? \"x\" : <span>{rain} mm</span>}\n          </Typography>\n        )}\n      </div>\n    </Card>\n  );\n}\n","import { createContext, useContext, useState, useEffect } from \"react\";\n\nconst CustomContext = createContext();\n\nconst AppContext = ({ children }) => {\n  const [enabledLinearProgress, setEnabledLinearProgress] = useState(false);\n  const [intervalTime, setIntervalTime] = useState(120000);\n  // const [intervalTime, setIntervalTime] = useState(1200);\n\n  const [enableDarkTheme, setEnableDarkTheme] = useState(false);\n  const [logoutMsg, setLogoutMsg] = useState(false);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    severity: \"info\",\n    message: \"Snackbar\",\n  });\n\n  return (\n    <CustomContext.Provider\n      value={{\n        enabledLinearProgress,\n        setEnabledLinearProgress,\n        snackbar,\n        setSnackbar,\n        intervalTime,\n        setIntervalTime,\n        enableDarkTheme,\n        setEnableDarkTheme,\n        logoutMsg,\n        setLogoutMsg,\n      }}\n    >\n      {children}\n    </CustomContext.Provider>\n  );\n};\n\nexport default AppContext;\n\nexport const AppState = () => {\n  return useContext(CustomContext);\n};\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport SiteCalendar from \"./SiteCalendar\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nexport default function SitestatusBar({\n  sitestatusBar,\n  status,\n  timestamp,\n  handleClickOpen,\n  handleTimeReset,\n  setIsNextCount,\n  setOpenDateTimePicker,\n  getMinDateForPicker,\n  selectedDate,\n  getFormattedDateAndTimeString,\n  openDateTimePicker,\n  handleDateChange,\n}) {\n  //   console.log(sitestatusBar, \"---30\");\n  return (\n    <>\n      <Grid item>\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            {/* <span style={{ fontSize: \"1.25rem\" }}>badisidd</span> */}\n            <Typography variant=\"h6\">{sitestatusBar.name}</Typography>\n          </Grid>\n          <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n          <Grid item>\n            {/* <span style={{ fontSize: \"1.25rem\" }}>40 MW</span> */}\n            <Typography variant=\"h6\">{sitestatusBar.capacity} MW</Typography>\n          </Grid>\n          <Grid item>\n            <IconButton\n              // size=\"large\"\n              color=\"primary\"\n              onClick={() => handleClickOpen()}\n              style={{ paddingInline: \".5rem\" }}\n            >\n              <NoteAddRoundedIcon fontSize=\"5rem\" />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item style={{ paddingRight: \"5rem\" }}>\n        <Grid container>\n          <Grid item>\n            {status === 0 ? (\n              // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n              //   Offline\n              // </span>\n              <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                Offline\n              </Typography>\n            ) : (\n              // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n              //   Online\n              // </span>\n              <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                Online\n              </Typography>\n            )}\n          </Grid>\n          <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n          <Grid item>\n            {timestamp === undefined ? (\n              <CircularProgress\n                size={30}\n                // style={{ marginRight: '.5rem' }}\n              />\n            ) : (\n              <Typography variant=\"h6\">\n                {getFormattedDateAndTimeString(timestamp)}\n              </Typography>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Grid container>\n          <Grid item>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDateTimePicker\n                style={{ width: 1, visibility: \"hidden\" }}\n                value={selectedDate}\n                open={openDateTimePicker}\n                onClose={() => setOpenDateTimePicker(false)}\n                onChange={handleDateChange}\n                format=\"dd/MM/yyyy hh:mm a\"\n                minDate={getMinDateForPicker()}\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n          <SiteCalendar\n            setOpenDateTimePicker={setOpenDateTimePicker}\n            setIsNextCount={setIsNextCount}\n          />\n          <Grid item>\n            <IconButton\n              // variant=\"outlined\"\n              // color=\"primary\"\n              onClick={handleTimeReset}\n            >\n              <UpdateIcon color=\"primary\" fontSize=\"large\" />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Byagwat/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Byagwat({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/byagwat/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    const startTime = new Date(1623696973 * 1000);\n    startTime.setDate(startTime.getDate() + 1);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/byagwat/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/byagwat/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/byagwat/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/byagwat/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/byagwat/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 CAB Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 CAB Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 CAB Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/byagwat/grid/B0\" + block, {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block B0\" + block + \":\", response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data).length);\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to Byagwat site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to Byagwat site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to Byagwat site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Byagwat</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">40 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size=\"1.5rem\"\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 4.43}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={60} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                  <MenuItem value={8}>B08</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"x\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"x\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"x\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"x\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv5))\n            ? \"-\"\n            : Number(value.inv5) === -111\n            ? \"x\"\n            : Number(value.inv5).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv6))\n            ? \"-\"\n            : Number(value.inv6) === -111\n            ? \"x\"\n            : Number(value.inv6).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"x\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"x\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"x\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"x\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv5))\n          ? \"-\"\n          : Number(value.inv5) === -111\n          ? \"x\"\n          : Number(value.inv5).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv6))\n          ? \"-\"\n          : Number(value.inv6) === -111\n          ? \"x\"\n          : Number(value.inv6).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={7}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]2[0-4]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 5</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 6</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Kherakhurd/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Kherakhurd({\n  sitestatusBar,\n  handleSessionExpire,\n  handleClickOpen,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/kherakhurd/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    const startTime = new Date(1625509800000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/kherakhurd/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/kherakhurd/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/kherakhurd/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/kherakhurd/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/kherakhurd/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S2CB1 I\",\n      \"S8 / S2CB2 I\",\n      \"S9 / S2CB3 I\",\n      \"S10 / S2CB4 I\",\n      \"S11 / S2CB5 I\",\n      \"S12 / S2CB6 I\",\n      \"S13 / S3CB1 I\",\n      \"S14 / S3CB2 I\",\n      \"S15 / S3CB3 I\",\n      \"S16 / S3CB4 I\",\n      \"S17 / S3CB5 I\",\n      \"S18 / S3CB6 I\",\n      \"S19 / S4CB1 I\",\n      \"S20 / S4CB2 I\",\n      \"S21 / S4CB3 I\",\n      \"S22 / S4CB4 I\",\n      \"S23 / S4CB5 I\",\n      \"S24 / S4CB6 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n      let inv6Value = NaN;\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n        if (arrayFromObject[heading.length * 5 + i][1]) {\n          inv6Value = arrayFromObject[heading.length * 5 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n        inv6: inv6Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/kherakhurd/grid/B0\" + block, {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block B0\" + block + \":\", response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to kherakhurd site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to kherakhurd site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to kherakhurd site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Kherakhurd</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">25 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size=\"1.5rem\"\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 4.43}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={40} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Cell,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  LabelList,\n  Legend,\n  Brush,\n} from \"recharts\";\n\nexport default function CustomBarChart({ data, enableScroll }) {\n  const {\n    lowestValue,\n    lowestValueIndex,\n    highestValue,\n    highestValueIndex,\n    chartData,\n  } = data;\n\n  // console.log(chartData);\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload) {\n      return (\n        <div>\n          <div>{`Block: ${payload[0].payload.blockName}`}</div>\n          <div>{`Inv ${label}: ${payload[0].value / 1000}`}</div>\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  const toDecimal = (value, index) => {\n    return value / 1000;\n  };\n\n  const [brushStartIndex, setBrushStartIndex] = useState(0);\n\n  useEffect(() => {\n    if (enableScroll === false) {\n      setBrushStartIndex(0);\n    }\n  }, [enableScroll]);\n\n  return enableScroll === true ? (\n    <ResponsiveContainer style={{ height: \"100%\" }}>\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          // left: 20,\n          bottom: 10,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"label\" />\n        <YAxis domain={[\"auto\", \"auto\"]} tickFormatter={toDecimal} />\n        <Tooltip content={<CustomTooltip />} />\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n\n        <Brush\n          endIndex={11}\n          onChange={(obj) => setBrushStartIndex(obj.startIndex)}\n          dataKey=\"label\"\n          height={25}\n          stroke=\"lightgreen\"\n        />\n\n        <Bar barSize={60} isAnimationActive={false} dataKey=\"value\">\n          <LabelList\n            dataKey=\"value\"\n            position=\"insideTop\"\n            fill=\"#fff\"\n            formatter={(value) => value / 1000}\n          />\n          {chartData.map((datum, index) => {\n            if (index === highestValueIndex - brushStartIndex) {\n              return <Cell key={`cell-${index}`} fill={\"#66bb6a\"} />;\n            } else if (index === lowestValueIndex - brushStartIndex) {\n              return <Cell key={`cell-${index}`} fill={\"#F1948A\"} />;\n            } else {\n              return <Cell key={`cell-${index}`} fill={\"#29b6f6\"} />;\n            }\n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  ) : (\n    <ResponsiveContainer style={{ height: \"100%\" }}>\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          // left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"label\" />\n        <YAxis domain={[\"auto\", \"auto\"]} tickFormatter={toDecimal} />\n        <Tooltip content={<CustomTooltip />} />\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n\n        <Bar barSize={60} isAnimationActive={false} dataKey=\"value\">\n          <LabelList\n            dataKey=\"value\"\n            position=\"insideTop\"\n            fill=\"#fff\"\n            formatter={(value) => value / 1000}\n          />\n          {chartData.map((datum, index) => {\n            if (index === highestValueIndex) {\n              return <Cell key={`cell-${index}`} fill={\"#66bb6a\"} />;\n            } else if (index === lowestValueIndex) {\n              return <Cell key={`cell-${index}`} fill={\"#F1948A\"} />;\n            } else {\n              return <Cell key={`cell-${index}`} fill={\"#29b6f6\"} />;\n            }\n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n","import { hslToRgb } from \"@material-ui/core\";\nimport { StoreMallDirectory, Translate } from \"@material-ui/icons\";\nimport { minTime } from \"date-fns/fp\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst hslToHex = (h, s, l) => {\n  h /= 360;\n  s /= 100;\n  l /= 100;\n  let r, g, b;\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    const hue2rgb = (p, q, t) => {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    };\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  const toHex = (x) => {\n    const hex = Math.round(x * 255).toString(16);\n    return hex.length === 1 ? \"0\" + hex : hex;\n  };\n  return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n};\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    let marginRight = \"0px\";\n    if (payload.length > 17 && payload.length <= 34) {\n      marginRight = \"90px\";\n    } else if (payload.length > 34) {\n      marginRight = \"180px\";\n    }\n\n    return (\n      <div\n        style={{\n          maxHeight: \"350px\",\n          columnCount: 1,\n          marginRight: marginRight,\n        }}\n      >\n        <div>{`Time: ${label}`}</div>\n        {payload.map((entry, index) => (\n          <div key={index} style={{ color: entry.color }}>\n            <small>{`Inv ${index + 1}: ${Number(entry.value).toFixed(\n              3\n            )}`}</small>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default function CustomLineChart({ data }) {\n  const { chartData, lines, interval, min } = data;\n\n  // console.log(chartData);\n\n  const [opacity, setOpacity] = useState(() => {\n    let invObj = {};\n    for (let i = 0, j = 1; i < lines.length; i++, j++) {\n      invObj[\"Inv \" + j] = 1;\n    }\n    return invObj;\n  });\n\n  const selectLine = (dataKey) => {\n    setOpacity((prevState) => {\n      return { ...prevState, [dataKey]: prevState[dataKey] === 0 ? 1 : 0 };\n    });\n  };\n\n  const renderLegend = ({ payload }) => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          // gap: \"20px\",\n          marginTop: \".25rem\",\n        }}\n      >\n        {payload.map(({ dataKey, color }, index) => {\n          return (\n            <strong\n              key={dataKey}\n              style={{\n                color: color,\n                cursor: \"pointer\",\n                marginInline: \".2rem\",\n\n                opacity: opacity[dataKey] === 0 ? 0.3 : 1,\n              }}\n              onClick={() => selectLine(dataKey)}\n            >\n              {index + 1}\n            </strong>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <LineChart\n        // width={500}\n        // height={300}\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          //   left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"createdon_client\" interval={interval} />\n        <YAxis domain={[(dataMin) => min, 1]} allowDataOverflow={true} />\n        <Tooltip content={<CustomTooltip />} />\n        <Legend content={renderLegend} />\n        {lines.map((value, index) => (\n          <Line\n            key={index}\n            type=\"monotone\"\n            dataKey={value.label}\n            strokeWidth={2}\n            // stroke={hslToHex(\n            //   Number((360 / lines.length) * (index - 1)),\n            //   60,\n            //   40\n            // )}\n            stroke={lines.length === 1 ? \"blue\" : value.color}\n            activeDot={{ r: 4 }}\n            dot={false}\n            strokeOpacity={opacity[value.label]}\n          />\n        ))}\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Card, Grid, Typography, Button, Menu } from \"@material-ui/core\";\nimport CustomBarChart from \"../components/InverterEfficiency/CustomBarChart\";\nimport CustomLineChart from \"../components/InverterEfficiency/CustomLineChart\";\nimport axios from \"axios\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport { AppState } from \"../AppContext\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n} from \"@material-ui/pickers\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { siteNamesCaps } from \"../constants/SiteNamesY\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    // margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    // marginTop: theme.spacing(2),\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuPaper: {\n    maxHeight: 400,\n  },\n}));\n\nexport default function InverterEfficiency({ handleSessionExpire }) {\n  const classes = useStyles();\n  const { setEnabledLinearProgress } = AppState();\n\n  let source = axios.CancelToken.source();\n\n  const serverUrl = SERVER_URL;\n  const userToken = localStorage.getItem(\"userToken\");\n\n  // const { logoutMsg, setLogoutMsg } = AppState();\n\n  const [selectedSite, setSelectedSite] = useState(\"byagwat\");\n\n  const [lineChartMin, setLineChartMin] = useState(0);\n\n  /**\n   * Functions related to time component\n   */\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const getMinDateForPicker = () => {\n    let startTime = new Date();\n    if (selectedSite === \"byagwat\") {\n      startTime.setTime(1623696973 * 1000);\n      startTime.setDate(startTime.getDate() + 1);\n    } else if (selectedSite === \"hindupur\") {\n      startTime.setTime(1625823000000);\n    } else if (selectedSite === \"kherakhurd\") {\n      startTime.setTime(1623696973 * 1000);\n    } else if (selectedSite === \"jhandekalan\") {\n      // July 27, 2021 12:00:00 AM\n      startTime.setTime(1627344000000);\n    } else if (selectedSite === \"bhadlal2\") {\n      // July 26, 2021 6:00:00 PM\n      startTime.setTime(1627322400000);\n    } else if (selectedSite === \"bhadlal3\") {\n      // July 30, 2021 6:00:00 PM\n      startTime = new Date(1627668000000);\n    } else if (selectedSite === \"jhunir\") {\n      // Aug 31, 2021 6:00:00 PM\n      startTime = new Date(1630432800000);\n    } else if (selectedSite === \"bhongir\") {\n      // Sep 01, 2021 5:00:00 PM\n      startTime = new Date(1630515600000);\n    } else if (selectedSite === \"padmajiwadi\") {\n      // Sep 02, 2021 2:00:00 PM\n      startTime = new Date(1630591200000);\n    } else if (selectedSite === \"mothkur\") {\n      // Sep 03, 2021 12:00:00 PM\n      startTime = new Date(1630670400000);\n    } else if (selectedSite === \"mankhera\") {\n      // Aug 30, 2021 12:00:00 PM\n      startTime = new Date(1630324800000);\n    } else if (selectedSite === \"rayachoti\") {\n      // Sep 09, 2021 12:00:00 PM\n      startTime = new Date(1631188800000);\n    } else if (selectedSite === \"bikaner\") {\n      // Sep 10, 2021 12:00:00 PM\n      startTime = new Date(1631275200000);\n    } else if (selectedSite === \"santhipuram\") {\n      // Sep 15, 2021 12:00:00 PM\n      startTime = new Date(1631707200000);\n    } else if (selectedSite === \"chittorgarh\") {\n      // Sep 24, 2021 12:00:00 PM\n      startTime = new Date(1632484800000);\n    } else if (selectedSite === \"chattisgarh\") {\n      // Sep 27, 2021 12:00:00 PM\n      startTime = new Date(1632744000000);\n    } else if (selectedSite === \"balanagar\") {\n      // Sep 28, 2021 12:00:00 PM\n      startTime = new Date(1632830400000);\n    } else if (selectedSite === \"kosigi\") {\n      // Sep 29, 2021 12:00:00 PM\n      startTime = new Date(1632916800000);\n    } else if (selectedSite === \"sandur\" || selectedSite === \"kudligi\") {\n      // Sep 30, 2021 12:00:00 PM\n      startTime = new Date(1633003200000);\n    } else if (selectedSite === \"gulelgudda\" || selectedSite === \"hukkeri\") {\n      // Oct 01, 2021 06:00:00 PM\n      startTime = new Date(1633111200000);\n    } else if (selectedSite === \"kittur\") {\n      // Oct 07, 2021 12:00:00 AM\n      startTime = new Date(1633564800000);\n    } else if (selectedSite === \"bazpur\") {\n      // Oct 08, 2021 12:00:00 PM\n      startTime = new Date(1633694400000);\n    } else if (selectedSite === \"sidlaghatta\") {\n      // Oct 11, 2021 12:00:00 PM\n      startTime = new Date(1633953600000);\n    } else if (selectedSite === \"khilchipur\") {\n      // Oct 12, 2021 12:00:00 PM\n      startTime = new Date(1634040000000);\n    } else if (selectedSite === \"khambhat\") {\n      // Oct 13, 2021 12:00:00 PM\n      startTime = new Date(1634126400000);\n    } else if (selectedSite === \"bidar\") {\n      // Oct 20, 2021 12:00:00 PM\n      startTime = new Date(1634731200000);\n    } else if (selectedSite === \"chittuguppa\") {\n      // Oct 22, 2021 12:00:00 PM\n      startTime = new Date(1634904000000);\n    } else if (selectedSite === \"farhatabad\") {\n      // Oct 25, 2021 12:00:00 PM\n      startTime = new Date(1635163200000);\n    } else if (selectedSite === \"godhur\") {\n      // Oct 29, 2021 12:00:00 PM\n      startTime = new Date(1635508800000);\n    } else if (selectedSite === \"bankaM\") {\n      // Oct 30, 2021 12:00:00 PM\n      startTime = new Date(1635595200000);\n    } else if (selectedSite === \"bankaN\") {\n      // Oct 30, 2021 12:00:00 PM\n      startTime = new Date(1635595200000);\n    } else if (selectedSite === \"maddur\") {\n      // Nov 12, 2021 12:00:00 PM\n      startTime = new Date(1636718400000);\n    }\n\n    return startTime;\n  };\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleTimeReset = () => {\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  /**\n   * END of functions related to time component\n   */\n\n  const handleSiteChange = (event) => {\n    setSelectedSite(event.target.value);\n  };\n\n  // Function to get AP and DP array\n  const getAPDP = (data) => {\n    let entries = Object.entries(data);\n\n    let arrayAP = [];\n    let arrayDP = [];\n\n    for (let i = 0; i < entries.length; i++) {\n      let key = entries[i][0];\n      let value = entries[i][1];\n      if (key.startsWith(\"ap\")) {\n        let objectAP = { [key]: value };\n        arrayAP.push(objectAP);\n      } else if (key.startsWith(\"dp\")) {\n        let objectDP = { [key]: value };\n        arrayDP.push(objectDP);\n      } else {\n        // Leave createdon_client key\n      }\n    }\n\n    return { arrayAP, arrayDP };\n  };\n\n  const generateBlockNames = (siteName, length) => {\n    // console.log(siteName, length);\n    let blocks = [];\n    let inverters = 0;\n    if (\n      siteName === \"byagwat\" ||\n      siteName === \"bhadlal2\" ||\n      siteName === \"bhadlal3\" ||\n      siteName === \"sadashivpet\"\n    ) {\n      inverters = 2;\n    } else if (\n      siteName === \"hindupur\" ||\n      siteName === \"sircilla\" ||\n      siteName === \"gadarpur\" ||\n      siteName === \"yemmiganur\" ||\n      siteName === \"jhandekalan\" ||\n      siteName === \"bhongir\" ||\n      siteName === \"padmajiwadi\" ||\n      siteName === \"mothkur\" ||\n      siteName === \"mankhera\" ||\n      siteName === \"pattikonda\" ||\n      siteName === \"rayachoti\" ||\n      siteName === \"santhipuram\"\n    ) {\n      inverters = 4;\n    } else if (siteName === \"kherakhurd\") {\n      inverters = 6;\n    } else if (siteName === \"mahoba\") {\n      inverters = 8;\n    } else if (siteName === \"balangir\") {\n      inverters = 5;\n    } else if (siteName === \"nangla\" || siteName === \"jhunir\") {\n      inverters = 12;\n    } else if (siteName === \"bikaner\") {\n      inverters = 1;\n    } else if (siteName === \"kosigi\" || siteName === \"bazpur\") {\n      inverters = 4;\n    }\n\n    if (siteName === \"mahoba\") {\n      for (let i = 1; i <= Math.ceil(length / inverters); i++) {\n        if (i === 1) {\n          for (let j = 1; j <= inverters - 2; j++) {\n            blocks.push(i);\n          }\n        } else {\n          for (let j = 1; j <= inverters; j++) {\n            blocks.push(i);\n          }\n        }\n      }\n    } else if (siteName === \"balangir\") {\n      for (let i = 1; i <= 9; i++) {\n        if (i === 1) {\n          for (let j = 1; j <= inverters; j++) {\n            blocks.push(i);\n          }\n        } else {\n          for (let j = 1; j <= inverters - 1; j++) {\n            blocks.push(i);\n          }\n        }\n      }\n    } else if (siteName === \"bhadlal3\") {\n      blocks = [\n        1, 1, 2, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13,\n        13, 14, 14,\n      ];\n    } else if (siteName === \"nangla\") {\n      blocks = [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3];\n    } else if (siteName === \"jhunir\") {\n      blocks = [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3];\n    } else if (siteName === \"padmajiwadi\" || siteName === \"mothkur\") {\n      blocks = [1, 1, 1, 1, 2, 2, 2, 2];\n    } else if (siteName === \"bhongir\") {\n      blocks = [\n        1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6,\n        7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10,\n      ];\n    } else if (siteName === \"mankhera\") {\n      blocks = [\n        1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4,\n        5, 5, 5, 5, 5,\n      ];\n    } else if (siteName === \"sadashivpet\") {\n      blocks = [1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10];\n    } else if (siteName === \"pattikonda\") {\n      blocks = [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5];\n    } else if (siteName === \"rayachoti\") {\n      blocks = [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5];\n    } else if (siteName === \"bikaner\") {\n      blocks = [1];\n    } else if (siteName === \"santhipuram\") {\n      blocks = [\n        1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6,\n        7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10,\n      ];\n    } else if (siteName === \"chattisgarh\") {\n      blocks = [\n        1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6,\n        7, 7, 7, 7,\n      ];\n    } else if (siteName === \"balanagar\") {\n      blocks = [\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        2,\n        2,\n        2,\n        2,\n        2,\n        2,\n        3,\n        3,\n        3,\n        3,\n        3,\n        3,\n        4,\n        4,\n        4,\n        4,\n        4,\n        4,\n        5,\n        5,\n        5,\n        5,\n        5,\n        5,\n        6,\n        6,\n        6,\n        6,\n        6,\n        6,\n        7,\n        7,\n        7,\n        7,\n        7,\n        7,\n        8,\n        8,\n        8,\n        8,\n        8,\n        8,\n        \"mcr\",\n        \"mcr\",\n      ];\n    } else if (siteName === \"kosigi\") {\n      blocks = [1, 1, 1, 1, 2, 2, 2, 2];\n    } else if (\n      siteName === \"sandur\" ||\n      siteName === \"kudligi\" ||\n      siteName === \"sidlaghatta\"\n    ) {\n      blocks = [1, 1, 2, 2, 3];\n    } else if (\n      siteName === \"gulelgudda\" ||\n      siteName === \"hukkeri\" ||\n      siteName === \"kittur\"\n    ) {\n      blocks = [1, 1, 2, 2];\n    } else if (siteName === \"bazpur\") {\n      blocks = [\n        1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6,\n      ];\n    } else if (siteName === \"chittorgarh\") {\n      blocks = [selectedBarBlock];\n    } else if (siteName === \"khilchipur\") {\n      blocks = [\n        1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6,\n        7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10,\n      ];\n    } else if (siteName === \"khambhat\") {\n      blocks = [\n        1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11,\n        12, 12, 13, 13, 14, 14, 15, 15,\n      ];\n    } else if (siteName === \"bidar\") {\n      blocks = [\n        1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6,\n        7, 7, 7, 7, 8, 8, 8, 8,\n      ];\n    } else if (siteName === \"chittuguppa\") {\n      blocks = [\n        1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6,\n        7, 7, 7, 7, 8, 8, 8, 8,\n      ];\n    } else if (siteName === \"farhatabad\") {\n      blocks = [\n        1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6,\n        7, 7, 7, 7, 8, 8, 8, 8,\n      ];\n    } else if (siteName === \"godhur\") {\n      blocks = [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4];\n    } else if (siteName === \"manthani\") {\n      blocks = [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4];\n    } else if (siteName === \"bankaM\") {\n      blocks = [1, 1, 1, 1, 2, 2, 2, 2, \"mcr\", \"mcr\"];\n    } else if (siteName === \"bankaN\") {\n      blocks = [3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6];\n    } else if (siteName === \"maddur\") {\n      blocks = [\n        1,\n        1,\n        1,\n        1,\n        2,\n        2,\n        2,\n        2,\n        3,\n        3,\n        3,\n        3,\n        4,\n        4,\n        4,\n        4,\n        5,\n        5,\n        5,\n        5,\n        6,\n        6,\n        6,\n        6,\n        7,\n        7,\n        \"mcr\",\n        \"mcr\",\n      ];\n    } else {\n      for (let i = 1; i <= Math.ceil(length / inverters); i++) {\n        for (let j = 1; j <= inverters; j++) {\n          blocks.push(i);\n        }\n      }\n    }\n\n    return [...blocks];\n  };\n\n  const formattedBarChartData = (data, barBlock) => {\n    // Todo: check for empty object or array\n    // console.log(\"Inverter Efficiency, Bar chart data from server\", data);\n    // Min and max values to set the Y axis domain\n    // let min = 0;\n    // let max = 0;\n\n    let chartData = [];\n\n    let { arrayAP, arrayDP } = getAPDP(data);\n\n    // console.log(arrayAP, arrayDP);\n\n    let arrayInv = [];\n\n    for (let i = 0, j = 1; i < arrayAP.length; i++, j++) {\n      if (\n        Number(arrayAP[i][\"ap\" + j]) === 0 ||\n        Number(arrayDP[i][\"dp\" + j]) === 0\n      ) {\n        arrayInv.push({ label: \"Inv \" + j, value: 0 });\n      } else {\n        let invValue =\n          Number(arrayAP[i][\"ap\" + j]) / Number(arrayDP[i][\"dp\" + j]);\n        arrayInv.push({ label: \"Inv \" + j, value: invValue });\n      }\n    }\n\n    let lowestValue = null;\n    let lowestValueIndex = null;\n    let highestValue = null;\n    let highestValueIndex = null;\n    for (let i = 0, j = 1; i < arrayInv.length; i++, j++) {\n      if (lowestValue === null) {\n        lowestValue = Number(arrayInv[i][\"value\"]);\n        lowestValueIndex = i;\n      }\n      if (highestValue === null) {\n        highestValue = Number(arrayInv[i][\"value\"]);\n        highestValueIndex = i;\n      }\n      if (Number(arrayInv[i][\"value\"]) < lowestValue) {\n        lowestValue = Number(arrayInv[i][\"value\"]);\n        lowestValueIndex = i;\n      }\n      if (Number(arrayInv[i][\"value\"]) > highestValue) {\n        highestValue = Number(arrayInv[i][\"value\"]);\n        highestValueIndex = i;\n      }\n    }\n\n    let truncatedInv = [];\n    let blockNames = generateBlockNames(selectedSite, arrayInv.length);\n    for (let i = 0, j = 1; i < arrayInv.length; i++, j++) {\n      let invValue = Number(arrayInv[i][\"value\"]).toFixed(3) * 1000;\n      truncatedInv.push({\n        label: j,\n        value: invValue,\n        blockName: selectedSite === \"chittorgarh\" ? barBlock : blockNames[i],\n      });\n    }\n\n    // if (lowestValue === 0) {\n    //   min = -1;\n    // } else {\n    //   min = lowestValue + lowestValue;\n    //   min = Math.ceil(min);\n    // }\n\n    // if (highestValue === 0) {\n    //   max = 1;\n    // } else {\n    //   max = highestValue + highestValue / 2;\n    //   max = Math.ceil(max);\n    // }\n\n    // console.log(\n    //   \"lowestValue, lowestValueIndex, highestValues, highestValueIndex, and array of inverters\",\n    //   lowestValue,\n    //   lowestValueIndex,\n    //   highestValue,\n    //   highestValueIndex,\n    //   truncatedInv\n    // );\n\n    return {\n      lowestValue,\n      lowestValueIndex,\n      highestValue,\n      highestValueIndex,\n      chartData: truncatedInv,\n    };\n  };\n\n  const formattedLineChartData = (data) => {\n    // console.log(\"Line chart data before formating\", data);\n\n    let chartData = [];\n\n    let interval = 1;\n    if (data.length > 12) {\n      interval = 12;\n    }\n    // Min and max value for Y axis domain\n    // let min = 0;\n    // let max = 0;\n\n    // Set min and max domain, and format data\n    for (let i = 0; i < data.length; i++) {\n      // console.log(Object.entries(data[i]).length);\n      let date = new Date(data[i][\"createdon_client\"] * 1000);\n      let dateStr =\n        String(date.getHours()).padStart(2, 0) +\n        \":\" +\n        String(date.getMinutes()).padStart(2, 0);\n      let obj = {};\n      obj[\"createdon_client\"] = dateStr;\n      let { arrayAP, arrayDP } = getAPDP(data[i]);\n      // console.log(\"arrayAP\", arrayAP);\n      // console.log(\"arrayDP\", arrayDP);\n      for (let i = 0, j = 1; i < arrayAP.length; i++, j++) {\n        if (\n          Number(arrayAP[i][\"ap\" + j]) === 0 ||\n          Number(arrayDP[i][\"dp\" + j]) === 0\n        ) {\n          obj[\"Inv \" + j] = 0;\n        } else {\n          let invValue =\n            Number(arrayAP[i][\"ap\" + j]) / Number(arrayDP[i][\"dp\" + j]);\n          obj[\"Inv \" + j] = invValue;\n          if (isNaN(invValue)) {\n            // console.log(invValue);\n          }\n        }\n        // Find min and max\n        // if (obj[\"Inv \" + j] < min) {\n        //   min = obj[\"Inv \" + j];\n        // }\n        // if (obj[\"Inv \" + j] > max) {\n        //   max = obj[\"Inv \" + j];\n        // }\n      }\n      chartData.push(obj);\n    }\n\n    // console.log(chartData);\n\n    // Get the aggregated values\n    let aggregatedLines = [];\n\n    let firstObjectLength = Object.keys(chartData[0]).length;\n    // console.log(firstObjectLength);\n\n    for (let i = 1; i < firstObjectLength; i++) {\n      let value = null;\n      for (let j = 0; j < chartData.length; j++) {\n        value += chartData[j][\"Inv \" + i];\n      }\n      aggregatedLines.push({ label: \"Inv \" + i, value: value });\n    }\n\n    // console.log(\"aggregatedLines\", aggregatedLines);\n\n    let sortable = aggregatedLines.sort((a, b) => {\n      if (a.value < b.value) {\n        return -1;\n      }\n      if (a.value > b.value) {\n        return 1;\n      }\n      return 0;\n    });\n\n    // console.log(sortable);\n\n    // Array of lines\n    let lines = [];\n    let red = 0;\n    // let redColors = [\"#c62828\", \"#d32f2f\", \"#e53935\", \"#f44336\", \"#ef5350\"];\n    let redColors = [\"#E74C3C\", \"#EC7063\", \"#F1948A\"];\n    let blue = 3;\n    // Depends on minimum number of inverters\n    let blueColors = [\n      // \"#29b6f6\",\n      // \"#03a9f4\",\n      // \"#039be5\",\n      // \"#0288d1\",\n      \"#0277bd\",\n      \"#42a5f5\",\n      \"#2196f3\",\n      \"#1e88e5\",\n      \"#1976d2\",\n      \"#1565c0\",\n    ];\n    let green = sortable.length - 3;\n    let greenColors = [\"#43a047\", \"#388e3c\", \"#2e7d32\"];\n    let allColors = [...redColors, ...blueColors, ...greenColors];\n    // console.log(allColors);\n    let j = 0;\n    for (let i = 0; i < sortable.length; i++) {\n      if (red < 4) {\n        let index = String(sortable[i].label).split(\" \")[1];\n        lines[index - 1] = {\n          label: sortable[i].label,\n          value: sortable[i].value,\n          color: allColors[j],\n        };\n        red += 1;\n        j += 1;\n      } else if (blue < sortable.length - 3) {\n        let index = String(sortable[i].label).split(\" \")[1];\n        lines[index - 1] = {\n          label: sortable[i].label,\n          value: sortable[i].value,\n          color: allColors[j],\n        };\n        blue += 1;\n        j += 1;\n      } else {\n        let index = String(sortable[i].label).split(\" \")[1];\n        lines[index - 1] = {\n          label: sortable[i].label,\n          value: sortable[i].value,\n          color: allColors[j],\n        };\n        green += 1;\n        j += 1;\n      }\n    }\n\n    // console.log(\"Line chart formatted data\", chartData, lines, interval);\n\n    // console.log(lines);\n\n    return { chartData, lines, interval, min: lineChartMin };\n  };\n\n  // Set initial state to prevent crash and unwanted animation\n  const [barChartData, setBarChartData] = useState({\n    min: -1,\n    max: 1,\n    highestValue: 0,\n    highestValueIndex: 0,\n    chartData: [\n      {\n        label: \"Inv 1\",\n        value: 0,\n      },\n    ],\n  });\n  const [lineChartData, setLineChartData] = useState({\n    min: -1,\n    max: 1,\n    chartData: [\n      {\n        createdon_client: \"0\",\n        inv1: 0,\n      },\n    ],\n    lines: [],\n  });\n\n  // Status and time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, selectedSite) => {\n    // console.log(\"getStatusAndTime function called\", selectedSite);\n    setEnabledLinearProgress(true);\n\n    axios\n      .get(serverUrl + \"/\" + selectedSite + \"/site\", {\n        cancelToken: source.token,\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n        setEnabledLinearProgress(false);\n      })\n      .catch((error) => {\n        // console.log(error);\n        if (error?.response?.status === 401) {\n          // console.log(error.response, \"401\");\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n          setEnabledLinearProgress(false);\n        }\n      });\n  };\n\n  const [selectedBarBlock, setSelectedBarBlock] = useState(1);\n  const [selectedLineBlock, setSelectedLineBlock] = useState(1);\n\n  const handleBarBlockChange = (event) => {\n    try {\n      setSelectedBarBlock(() => event.target.value);\n    } finally {\n      fetchData(mainTime, selectedSite, event.target.value, selectedLineBlock);\n    }\n  };\n\n  const handleLineBlockChange = (event) => {\n    try {\n      setSelectedLineBlock(() => event.target.value);\n    } finally {\n      fetchData(mainTime, selectedSite, selectedBarBlock, event.target.value);\n    }\n  };\n\n  const fetchData = (endTime, selectedSite, barBlock, lineBlock) => {\n    // console.log(\"Fetching data...\", selectedSite);\n    // console.log(barBlock, lineBlock);\n    // setLogoutMsg(false);\n    setEnabledLinearProgress(true);\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n    } else {\n      newEndTime = endTime;\n    }\n\n    // Status and time\n    getStatusAndTime(startTime, newEndTime, selectedSite);\n\n    let barBlockStr = \"B\" + String(barBlock).padStart(2, \"0\");\n    let lineBlockStr = \"B\" + String(lineBlock).padStart(2, \"0\");\n\n    // console.log(barBlockStr, lineBlockStr);\n\n    let modifiedSite = String(selectedSite).includes(\"banka\")\n      ? selectedSite.replace(/ +/g, \"\")\n      : selectedSite;\n\n    modifiedSite = String(modifiedSite).toLocaleLowerCase();\n\n    // console.log('site for chart', modifiedSite);\n\n    // Fetch bar chart data\n    axios\n      .post(\n        serverUrl + \"/efficiency/barchart\",\n        {\n          // blockId: \"B\" + String(selectedBarBlock).padStart(2, 0),\n          blockId: barBlockStr,\n          startTime: selectedSite !== \"chittorgarh\" ? startTime : 1632182400000,\n          endTime: newEndTime,\n          beginTime: selectedSite !== \"chittorgarh\" ? beginTime : 1632182400000,\n          site: modifiedSite,\n        },\n        {\n          cancelToken: source.token,\n          headers: {\n            jwtToken: userToken,\n          },\n        }\n      )\n      .then((response) => {\n        // console.log(\"inverter efficiency\", response.data);\n        setBarChartData(formattedBarChartData(response.data, barBlock));\n        // setLogoutMsg(false);\n        setEnabledLinearProgress(false);\n      })\n      .catch((error) => {\n        setBarChartData({\n          min: -1,\n          max: 1,\n          highestValue: 0,\n          highestValueIndex: 0,\n          chartData: [\n            {\n              label: \"Inv 1\",\n              value: 0,\n            },\n          ],\n        });\n        console.log(error);\n        // if (error.response.status === 401) {\n        // setLogoutMsg(true);\n        // console.log(error.response.status);\n        // }\n\n        // handleSessionExpire();\n        setEnabledLinearProgress(false);\n      });\n\n    // Fetch line chart data\n    // let modifiedSelectedSite = String(selectedSite).includes('banka') ? selectedSite.replace(/ +/g, \"\") : selectedSite\n    axios\n      .post(\n        serverUrl + \"/efficiency/graph/\" + modifiedSite,\n        {\n          blockId: lineBlockStr,\n        },\n        {\n          cancelToken: source.token,\n          headers: {\n            jwtToken: userToken,\n            startTime:\n              selectedSite !== \"chittorgarh\" ? startTime : 1632182400000,\n            endTime: newEndTime,\n            beginTime:\n              selectedSite !== \"chittorgarh\" ? beginTime : 1632182400000,\n          },\n        }\n      )\n      .then((response) => {\n        // console.log(\"inverter efficiency graph\", response.data);\n        setLineChartData(formattedLineChartData(response.data));\n      })\n      .catch((error) => {\n        setLineChartData({\n          min: -1,\n          max: 1,\n          chartData: [\n            {\n              createdon_client: \"0\",\n              inv1: 0,\n            },\n          ],\n          lines: [],\n        });\n        // if (error.response.status === 401) {\n        // setLogoutMsg(true);\n        // console.log(error.response.status);\n        // }\n        // console.log(error);\n        // handleSessionExpire();\n      });\n  };\n\n  useEffect(() => {\n    // console.log(userToken);\n    fetchData(mainTime, selectedSite, selectedBarBlock, selectedLineBlock);\n\n    // Fetch data every 5 minutes\n    const interval = setInterval(() => {\n      fetchData(mainTime, selectedSite, selectedBarBlock, selectedLineBlock);\n    }, 300000);\n\n    return () => {\n      clearInterval(interval);\n      source.cancel();\n    };\n  }, [selectedSite, mainTime]);\n\n  const handleMinChange = (event) => {\n    // console.log(event.target.value);\n    setLineChartData((prevState) => ({\n      ...prevState,\n      min: event.target.value,\n    }));\n  };\n\n  const [enableBarChartScroll, setEnableBarChartScroll] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid container alignItems=\"center\" justify=\"space-between\">\n        <Grid item>\n          <Typography variant=\"h6\">Inverter Efficiency</Typography>\n        </Grid>\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size=\"1.25rem\"\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item style={{ marginRight: \"1.5rem\" }}>\n              <FormControl className={classes.formControl}>\n                <Select\n                  labelId=\"site-select-label\"\n                  id=\"site-select\"\n                  value={selectedSite}\n                  onChange={handleSiteChange}\n                  MenuProps={{\n                    classes: { paper: classes.menuPaper },\n                    getContentAnchorEl: () => null,\n                  }}\n                >\n                  {/* <MenuItem value={\"balanagar\"}>\n                    <Typography variant=\"h6\">Balanagar</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"balangir\"}>\n                    <Typography variant=\"h6\">Balangir</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"bankaM\"}>\n                    <Typography variant=\"h6\">Banka M</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"bankaN\"}>\n                    <Typography variant=\"h6\">Banka N</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"bazpur\"}>\n                    <Typography variant=\"h6\">Bazpur</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"bidar\"}>\n                    <Typography variant=\"h6\">Bidar</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"bhadlal2\"}>\n                    <Typography variant=\"h6\">Bhadla L2</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"bhadlal3\"}>\n                    <Typography variant=\"h6\">Bhadla L3</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"bhongir\"}>\n                    <Typography variant=\"h6\">Bhongir</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"bikaner\"}>\n                    <Typography variant=\"h6\">Bikaner</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"byagwat\"}>\n                    <Typography variant=\"h6\">Byagwat</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"chattisgarh\"}>\n                    <Typography variant=\"h6\">Chattisgarh</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"chittuguppa\"}>\n                    <Typography variant=\"h6\">Chittuguppa</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"chittorgarh\"}>\n                    <Typography variant=\"h6\">Chittorgarh</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"farhatabad\"}>\n                    <Typography variant=\"h6\">Farhatabad</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"gadarpur\"}>\n                    <Typography variant=\"h6\">Gadarpur</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"godhur\"}>\n                    <Typography variant=\"h6\">Godhur</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"gulelgudda\"}>\n                    <Typography variant=\"h6\">Gulelgudda</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"hindupur\"}>\n                    <Typography variant=\"h6\">Hindupur</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"hukkeri\"}>\n                    <Typography variant=\"h6\">Hukkeri</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"jhandekalan\"}>\n                    <Typography variant=\"h6\">Jhandekalan</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"jhunir\"}>\n                    <Typography variant=\"h6\">Jhunir</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"khambhat\"}>\n                    <Typography variant=\"h6\">Khambhat</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"kherakhurd\"}>\n                    <Typography variant=\"h6\">Kherakhurd</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"khilchipur\"}>\n                    <Typography variant=\"h6\">Khilchipur</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"kittur\"}>\n                    <Typography variant=\"h6\">Kittur</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"kosigi\"}>\n                    <Typography variant=\"h6\">Kosigi</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"kudligi\"}>\n                    <Typography variant=\"h6\">Kudligi</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"maddur\"}>\n                    <Typography variant=\"h6\">Maddur</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"mahoba\"}>\n                    <Typography variant=\"h6\">Mahoba</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"mankhera\"}>\n                    <Typography variant=\"h6\">Mankhera</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"manthani\"}>\n                    <Typography variant=\"h6\">Manthani</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"mothkur\"}>\n                    <Typography variant=\"h6\">Mothkur</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"nangla\"}>\n                    <Typography variant=\"h6\">Nangla</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"padmajiwadi\"}>\n                    <Typography variant=\"h6\">Padmajiwadi</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"pattikonda\"}>\n                    <Typography variant=\"h6\">Pattikonda</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"sadashivpet\"}>\n                    <Typography variant=\"h6\">Sadashivpet</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"sandur\"}>\n                    <Typography variant=\"h6\">Sandur</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"santhipuram\"}>\n                    <Typography variant=\"h6\">Santhipuram</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"sidlaghatta\"}>\n                    <Typography variant=\"h6\">Sidlaghatta</Typography>\n                  </MenuItem>\n                  <MenuItem value={\"rayachoti\"}>\n                    <Typography variant=\"h6\">Rayachoti</Typography>\n                  </MenuItem> */}\n                  {/* <MenuItem value={\"sircilla\"}>\n                    <Typography variant=\"h6\">Sircilla</Typography>\n                  </MenuItem> */}\n                  {/* <MenuItem value={\"yemmiganur\"}>\n                    <Typography variant=\"h6\">Yemmiganur</Typography>\n                  </MenuItem> */}\n                  {JSON.parse(localStorage.getItem(\"siteNamesCaps\")).map(\n                    (site) => (\n                      <MenuItem value={String(site).toLowerCase()}>\n                        <Typography variant=\"h6\">{site}</Typography>\n                      </MenuItem>\n                    )\n                  )}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item>\n              <IconButton onClick={() => setOpenDateTimePicker(true)}>\n                <EventIcon color=\"action\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      {selectedSite && (\n        <>\n          <Card\n            elevation={6}\n            style={{\n              width: \"100%\",\n              height: \"500px\",\n              marginTop: \"1rem\",\n              paddingTop: \".5rem\",\n              paddingBottom: \"3.5rem\",\n            }}\n          >\n            <Grid\n              container\n              justify=\"space-between\"\n              alignItems=\"flex-end\"\n              style={{ paddingInline: \"2rem\", marginBottom: \".5rem\" }}\n            >\n              <Grid\n                item\n                style={{\n                  visibility:\n                    selectedSite !== \"chittorgarh\" ? \"hidden\" : \"visible\",\n                }}\n              >\n                <Grid container alignItems=\"center\">\n                  <span>Selected block:&ensp;</span>\n                  <FormControl style={{ minWidth: 20 }}>\n                    <Select\n                      labelId=\"block-bar-simple-select-label\"\n                      id=\"block-bar-simple-select\"\n                      value={selectedBarBlock}\n                      label=\"Block\"\n                      onChange={handleBarBlockChange}\n                      MenuProps={{ classes: { paper: classes.menuPaper } }}\n                    >\n                      <MenuItem value={1}>1</MenuItem>\n                      {Array.from(Array(33).keys()).map((element, index) => {\n                        return (\n                          <MenuItem key={index} value={Number(index + 2)}>\n                            {Number(index + 2)}\n                          </MenuItem>\n                        );\n                      })}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </Grid>\n\n              <Grid item>\n                <span>Scroll:</span>\n                <Switch\n                  checked={enableBarChartScroll}\n                  onChange={() =>\n                    setEnableBarChartScroll((prevState) => !prevState)\n                  }\n                  color=\"primary\"\n                  name=\"scrollSwitch\"\n                />\n              </Grid>\n            </Grid>\n            <CustomBarChart\n              data={barChartData}\n              enableScroll={enableBarChartScroll}\n              siteName={selectedSite}\n            />\n          </Card>\n\n          <Card\n            elevation={6}\n            style={{\n              width: \"100%\",\n              height: \"520px\",\n              marginTop: \"2rem\",\n              paddingTop: \".5rem\",\n              paddingBottom: \"3.5rem\",\n            }}\n          >\n            <Grid\n              container\n              justify=\"space-between\"\n              alignItems=\"flex-end\"\n              style={{ paddingInline: \"2rem\", marginBottom: \".5rem\" }}\n            >\n              <Grid\n                item\n                style={{\n                  visibility:\n                    selectedSite !== \"chittorgarh\" ? \"hidden\" : \"visible\",\n                }}\n              >\n                <Grid container justify=\"space-between\" alignItems=\"center\">\n                  <span>Selected block:&ensp;</span>\n                  <FormControl style={{ minWidth: 30 }}>\n                    <Select\n                      // labelId=\"block-line-simple-select-label\"\n                      id=\"block-line-simple-select\"\n                      value={selectedLineBlock}\n                      label=\"Block\"\n                      onChange={handleLineBlockChange}\n                      MenuProps={{ classes: { paper: classes.menuPaper } }}\n                    >\n                      <MenuItem value={1}>1</MenuItem>\n                      {Array.from(Array(33).keys()).map((element, index) => {\n                        return (\n                          <MenuItem key={index} value={Number(index + 2)}>\n                            {Number(index + 2)}\n                          </MenuItem>\n                        );\n                      })}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </Grid>\n\n              <Grid item>\n                <label htmlFor=\"min\">Scale Min: </label>\n                <input\n                  type=\"number\"\n                  onChange={handleMinChange}\n                  id=\"min\"\n                  name=\"min\"\n                  placeholder=\"0.0\"\n                  step=\"0.1\"\n                  min=\"0.0\"\n                  max=\"0.9\"\n                  style={{\n                    width: \"3.5rem\",\n                    marginRight: \".25rem\",\n                  }}\n                />\n              </Grid>\n            </Grid>\n            <CustomLineChart data={lineChartData} />\n          </Card>\n        </>\n      )}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }}></div>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nexport default function BiaxialLineChart({\n  data,\n  interval,\n  width,\n  height,\n  leftAxisY,\n  rightAxisY,\n}) {\n  // console.log(\"Biaxial line data\", data);\n  const [opacity, setOpacity] = useState({\n    actual: 1,\n    predicted: 1,\n  });\n\n  const selectLine = (dataKey) => {\n    setOpacity((prevState) => {\n      return { ...prevState, [dataKey]: prevState[dataKey] === 0 ? 1 : 0 };\n    });\n  };\n\n  const renderLegend = ({ payload }) => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          gap: \"24px\",\n          marginTop: \".5rem\",\n        }}\n      >\n        {payload.map(({ dataKey, color }) => {\n          return (\n            <strong\n              key={dataKey}\n              style={{\n                fontSize: \"1rem\",\n                color: color,\n                cursor: \"pointer\",\n                opacity: opacity[dataKey] === 0 ? 0.5 : 1,\n              }}\n              onClick={() => selectLine(dataKey)}\n            >\n              {String(dataKey).toUpperCase()}\n            </strong>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <LineChart\n        // width={width}\n        // height={height}\n        data={data}\n        margin={{ top: 25, right: 40, bottom: 20, left: 0 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"time\" interval={interval} />\n        <YAxis domain={leftAxisY} />\n        {/* <YAxis yAxisId=\"right\" domain={rightAxisY} orientation=\"right\" /> */}\n        <Tooltip />\n        <Legend content={renderLegend} />\n        <Line\n          name=\"Predicted\"\n          // yAxisId=\"right\"\n          type=\"monotone\"\n          dataKey=\"predicted\"\n          stroke=\"#EC7063\"\n          strokeWidth={2}\n          strokeOpacity={opacity.predicted}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n        <Line\n          name=\"Actual\"\n          // yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey=\"actual\"\n          stroke=\"#82ca9d\"\n          strokeWidth={2}\n          strokeOpacity={opacity.actual}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Card, Grid, Typography, Button } from \"@material-ui/core\";\nimport CustomBarChart from \"../components/InverterEfficiency/CustomBarChart\";\nimport CustomLineChart from \"../components/InverterEfficiency/CustomLineChart\";\nimport axios from \"axios\";\nimport { ML_URL, SERVER_URL } from \"../constants/constants\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n} from \"@material-ui/pickers\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport BiaxialLineChart from \"../components/mlPredictions/BiaxialLineChart\";\nimport { AppState } from \"../AppContext\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    // margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    // marginTop: theme.spacing(2),\n  },\n  grow: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function InverterEfficiency({ handleSessionExpire }) {\n  const classes = useStyles();\n\n  const { setEnabledLinearProgress } = AppState();\n\n  let source = axios.CancelToken.source();\n\n  const userToken = localStorage.getItem(\"userToken\");\n\n  const [selectedSite, setSelectedSite] = useState(\"mahoba\");\n\n  const [generationData, setGenerationData] = useState([\n    {\n      time: \"00:00\",\n      predicted: 0,\n      actual: 0,\n    },\n  ]);\n\n  const [generationInterval, setGenerationInterval] = useState(12);\n  const [generationLeftYDomain, setGenerationLeftYDomain] = useState([0, 30]);\n\n  /**\n   * Functions related to time component\n   */\n\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const getMinDateForPicker = () => {\n    let startTime = new Date();\n    if (selectedSite === \"gadarpur\") {\n      // Aug 5, 2021 12:00:00 PM\n      startTime.setTime(1628164800000);\n    } else if (selectedSite === \"mahoba\") {\n      /*|| selectedSite === \"yemmiganur\"*/\n    }\n    {\n      // Aug 6, 2021 12:00:00 PM\n      startTime.setTime(1628251200000);\n    }\n\n    return startTime;\n  };\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleTimeReset = () => {\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  /**\n   * END of functions related to time component\n   */\n\n  const handleSiteChange = (event) => {\n    setSelectedSite(event.target.value);\n  };\n\n  // Status and time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, selectedSite) => {\n    // console.log(\"getStatusAndTime function called\", selectedSite);\n    setEnabledLinearProgress(true);\n    axios\n      .get(SERVER_URL + \"/\" + selectedSite + \"/site\", {\n        cancelToken: source.token,\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n        setEnabledLinearProgress(false);\n      })\n      .catch((error) => {\n        // console.log(\"------------------> ERROR  :\", error);\n        // if (error.response && error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  const formatGenerationData = (data) => {\n    let formattedData = [];\n    let max = 0;\n    let predictedMax = 0;\n    let actualMax = 0;\n    for (let i = 0; i < data.length; i++) {\n      let time = new Date(data[i].timestamp);\n      let timeStr =\n        String(time.getHours()).padStart(2, 0) +\n        \":\" +\n        String(time.getMinutes()).padStart(2, 0);\n      formattedData.push({\n        time: timeStr,\n        actual: Number(data[i].actual).toFixed(3),\n        predicted: Number(data[i].predicted).toFixed(3),\n      });\n      predictedMax =\n        predictedMax < data[i].predicted ? data[i].predicted : predictedMax;\n      actualMax = actualMax < data[i].actual ? data[i].actual : actualMax;\n    }\n    max = predictedMax > actualMax ? predictedMax : actualMax;\n    setGenerationLeftYDomain([0, Math.ceil(max) + Math.ceil(max / 10)]);\n    return formattedData;\n  };\n\n  const fetchData = (endTime, selectedSite) => {\n    // console.log(\"Fetching data...\", selectedSite);\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\n      //   \"TIME TO FETCH 'newEndTime':\",\n      //   startTime,\n      //   newEndTime,\n      //   new Date(newEndTime).toLocaleString(),\n      //   \"beginTime\",\n      //   new Date(beginTime).toLocaleString()\n      // );\n    } else {\n      newEndTime = endTime;\n      // console.log(\n      //   \"TIME TO FETCH:\",\n      //   startTime,\n      //   newEndTime,\n      //   new Date(newEndTime).toLocaleString(),\n      //   \"beginTime\",\n      //   new Date(beginTime).toLocaleString()\n      // );\n    }\n\n    // Status and time\n    getStatusAndTime(startTime, newEndTime, selectedSite);\n\n    // console.log(beginTime, endTime);\n\n    // Fetch biaxial line chart data\n    axios\n      .post(\n        ML_URL + \"/generation\",\n        {\n          startTime: beginTime,\n          endTime: newEndTime,\n          siteName: selectedSite,\n        }\n        // ,\n        // {\n        //   cancelToken: source.token,\n        //   headers: {\n        //     jwtToken: userToken,\n        //   },\n        // }\n      )\n      .then((response) => {\n        // console.log(\"Data: \", response.data);\n        setGenerationData(formatGenerationData(response.data));\n      })\n      .catch((error) => {\n        // console.log(error);\n        // handleSessionExpire();\n      });\n  };\n\n  useEffect(() => {\n    // console.log(userToken);\n    fetchData(mainTime, selectedSite);\n\n    // Fetch data every 5 minutes\n    const interval = setInterval(() => {\n      fetchData(mainTime, selectedSite);\n    }, 300000);\n\n    return () => {\n      clearInterval(interval);\n      source.cancel();\n    };\n  }, [selectedSite, mainTime]);\n\n  return (\n    <React.Fragment>\n      <Grid container alignItems=\"center\" justify=\"space-between\">\n        <Grid item>\n          <Typography variant=\"h6\">ML Predictions</Typography>\n        </Grid>\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size=\"1.25rem\"\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item style={{ marginRight: \"1.5rem\" }}>\n              <FormControl className={classes.formControl}>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={selectedSite}\n                  onChange={handleSiteChange}\n                >\n                  <MenuItem value={\"mahoba\"}>\n                    <Typography variant=\"h6\">Mahoba</Typography>\n                  </MenuItem>\n                  {/* <MenuItem value={\"yemmiganur\"}>\n                    <Typography variant=\"h6\">Yemmiganur</Typography>\n                  </MenuItem> */}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item>\n              <IconButton onClick={() => setOpenDateTimePicker(true)}>\n                <EventIcon color=\"action\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <div style={{ marginBlock: \"1rem\" }}></div>\n      {selectedSite && (\n        <Card\n          elevation={6}\n          style={{\n            height: \"500px\",\n            paddingTop: \"1rem\",\n          }}\n        >\n          <Typography\n            variant=\"h6\"\n            color=\"textSecondary\"\n            style={{ paddingLeft: \"1.5rem\" }}\n          >\n            Power Generation\n          </Typography>\n          <div style={{ height: \"94%\" }}>\n            <BiaxialLineChart\n              interval={generationInterval}\n              leftAxisY={generationLeftYDomain}\n              // rightAxisY={generationRightYDomain}\n              data={generationData}\n            />\n          </div>\n        </Card>\n      )}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }}></div>\n    </React.Fragment>\n  );\n}\n","import { Card, Grid } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport { SERVER_URL } from \"../../constants/constants\";\n\n// const calculateSum = (array) => {\n//     let capacity = 0;\n//     let powerGeneration = 0;\n\n//     array.forEach(element => {\n//         capacity += Math.round(Number(element.capacity));\n//         powerGeneration += Math.round(Number(element.powerGeneration));\n//     })\n\n//     return {capacity: capacity, powerGeneration: powerGeneration};\n// }\n\nconst getStartTime = () => {\n  let date = new Date();\n  date.setHours(0, 1, 0, 0);\n  return date.getTime();\n};\n\nconst getPeakTime = (timestamp) => {\n  let date = new Date(timestamp);\n  return date.toLocaleTimeString();\n};\n\nconst getMaxNow = (max, generation) => {\n  let maxNum = Number(max);\n  let generationNum = Number(generation);\n  let result = maxNum - generationNum;\n\n  if (generationNum > maxNum) {\n    return 0;\n  } else {\n    return result;\n  }\n};\n\nconst getMaxLabel = (max, generation) => {\n  let maxNum = Number(max);\n  let generationNum = Number(generation);\n\n  if (generationNum > maxNum) {\n    return generationNum;\n  } else {\n    return maxNum;\n  }\n};\n\nfunction Comparison({ data, handleSessionExpire }) {\n  const [comparisonData, setComparisonData] = useState({\n    capacity: 1714,\n    powerGeneration: 0,\n    max: 0,\n    maxTime: Date.now(),\n  });\n\n  const fetchData = () => {\n    axios\n      .post(\n        SERVER_URL + \"/dashboard/sites/peakgeneration\",\n        {\n          startTime: getStartTime(),\n          endTime: Date.now(),\n          email: localStorage.getItem(\"userEmail\"),\n          // sites: [localStorage.getItem(\"siteNames\")],\n        },\n        {\n          headers: {\n            jwtToken: localStorage.getItem(\"userToken\"),\n          },\n        }\n      )\n      .then((response) => {\n        // console.log(response.data);\n        let value = response.data;\n\n        setComparisonData({\n          capacity: Math.round(value.totalCapacity),\n          powerGeneration: Math.round(value.currentCapacity),\n          max: Math.round(value.peakReached),\n          maxTime: value.peakReachedTime,\n        });\n      })\n      .catch((error) => {\n        if (error?.response?.status === 401) {\n          // console.log(error.response, \"401\");\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n        // empty\n      });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [data]);\n\n  return (\n    // <div style={{width: '90vw', marginBlock: '1rem'}}>\n    //     <ProgressBar animated label={comparisonData.powerGeneration} now={comparisonData.powerGeneration} max={comparisonData.capacity} />&nbsp;{comparisonData.capacity}\n    // </div>\n    <Grid container style={{ marginTop: \"0rem\" }} alignItems=\"center\">\n      <Grid item xs style={{ marginRight: \"1rem\" }}>\n        {/* <ProgressBar variant='success' animated label={`${comparisonData.powerGeneration} MW`} now={comparisonData.powerGeneration} max={comparisonData.capacity} /> */}\n        <ProgressBar>\n          <ProgressBar\n            animated\n            label={`${comparisonData.powerGeneration} MW`}\n            max={comparisonData.capacity}\n            variant=\"success\"\n            now={comparisonData.powerGeneration}\n            key={1}\n          />\n          <ProgressBar\n            animated\n            data-toggle=\"tooltip\"\n            data-placement=\"bottom\"\n            title={`Max Time: ${getPeakTime(comparisonData.maxTime * 1000)}`}\n            //   label={`${comparisonData.max} MW`}\n            max={comparisonData.capacity}\n            variant=\"info\"\n            now={getMaxNow(comparisonData.max, comparisonData.powerGeneration)}\n            key={2}\n          />\n          {\n            <span style={{ color: \"#000\" }}>\n              &ensp;\n              {`Max: ${getMaxLabel(\n                comparisonData.max,\n                comparisonData.powerGeneration\n              )} MW`}\n            </span>\n          }\n        </ProgressBar>\n      </Grid>\n      <Grid item>\n        Capacity:{\" \"}\n        <span style={{ color: \"#008f56\" }}>\n          {comparisonData.capacity} <small>MW</small>\n        </span>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Comparison;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { blue } from \"@material-ui/core/colors\";\nimport Container from \"@material-ui/core/Container\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  Grid,\n  IconButton,\n} from \"@material-ui/core\";\n\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(0.5),\n      width: \"54ch\",\n    },\n  },\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: \"block\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(11),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  msg: {\n    fontSize: theme.typography.pxToRem(11),\n    fontWeight: theme.typography.fontWeightRegular,\n    color: \"#2196f3\",\n  },\n}));\n\nexport default function NoteDialog({\n  handleClose,\n  open,\n  sendNotemsg,\n  getNotemsg,\n  notemsg,\n  showNotemsg,\n  setNotemsg,\n  setOpen,\n  setMsgid,\n  deleteNotemsg,\n  setAlertopen,\n  alertopen,\n}) {\n  const classes = useStyles();\n\n  const [expandedId, setExpandedId] = useState(\"0\");\n\n  const handlealertClickOpen = (data) => {\n    // console.log(data);\n    setAlertopen(true);\n    setMsgid(data);\n  };\n\n  const handlealertClose = () => {\n    setAlertopen(false);\n  };\n\n  return (\n    <>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        open={open}\n      >\n        {/* <IconButton\n          // edge=\"end\"\n          style={{ justifyContent: \"end\" }}\n          // color=\"inherit\"\n          onClick={handleClose}\n          aria-label=\"close\"\n        > */}\n        <Grid\n          container\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            // marginTop: \"0.5rem\",\n            // paddingRight: \"0.5rem\",\n          }}\n        >\n          <Grid item>\n            <DialogTitle style={{ color: \"#2196f3\" }} id=\"simple-dialog-title\">\n              Site Notes\n            </DialogTitle>\n          </Grid>\n          <Grid item style={{ paddingRight: \"0.5rem\" }}>\n            <CloseIcon\n              style={{ color: \"#EC7063\" }}\n              onClick={handleClose}\n              aria-label=\"close\"\n            />\n          </Grid>\n        </Grid>\n        {/* </IconButton> */}\n\n        <Container style={{ width: \"30rem\", marginTop: \"-1rem\" }}>\n          <Grid\n            container\n            style={{\n              marginTop: \"0.5rem\",\n              paddingLeft: \"0.4rem\",\n              // maxHeight: \"20rem\",\n            }}\n          >\n            {showNotemsg.map((data) => (\n              <Grid item>\n                <Accordion\n                  key={data.id}\n                  style={{ width: \"13rem\" }}\n                  expanded={expandedId === data.id}\n                >\n                  <AccordionSummary\n                    expandIcon={\n                      <ExpandMoreIcon\n                        color={expandedId === data.id ? \"primary\" : \"inherit\"}\n                        onClick={() =>\n                          setExpandedId((prev) =>\n                            prev === data.id ? \"0\" : data.id\n                          )\n                        }\n                      />\n                    }\n                    ariaControls={`${data.id}_panel1a-content`}\n                    id={`${data.id}_panel1a-id`}\n                  >\n                    <Typography className={classes.heading}>\n                      {new Date(Number(data.timestamp)).toLocaleString()}\n                    </Typography>\n                    {/* <IconButton\n                      size=\"small\"\n                      onClick={() => handlealertClickOpen(data)}\n                      style={{\n                        paddingInline: \".5rem\",\n                        paddingLeft: \"0.5rem\",\n                      }}\n                    >\n                      <DeleteRoundedIcon\n                        style={{ fontSize: \"1rem\" }}\n                        color=\"error\"\n                      />\n                    </IconButton> */}\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Typography\n                      className={classes.msg}\n                      // style={{ color: \"blue\", fontSize: \"0.8rem\" }}\n                    >\n                      {data.notes}\n                    </Typography>\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n            ))}\n          </Grid>\n          <br />\n        </Container>\n      </Dialog>\n      <div>\n        <Dialog\n          open={alertopen}\n          onClose={handlealertClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          {/* <DialogTitle id=\"alert-dialog-title\">\n            {\"Use Google's location service?\"}\n          </DialogTitle> */}\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Are You Sure Want To Delete?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={deleteNotemsg} color=\"primary\" autoFocus>\n              Ok\n            </Button>\n            <Button onClick={handlealertClose} color=\"primary\">\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </>\n  );\n}\n","import Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport SignalCellularAltIcon from \"@material-ui/icons/SignalCellularAlt\";\nimport SignalCellularConnectedNoInternet0BarIcon from \"@material-ui/icons/SignalCellularConnectedNoInternet0Bar\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  TableSortLabel,\n} from \"@material-ui/core\";\nimport Comparison from \"../components/Comparison/Comparison\";\nimport NoteDialog from \"../components/Badisidd/NoteDialog\";\nimport { AppState } from \"../AppContext\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: { maxHeight: \"83vh\" },\n});\n\nexport default function Sites({\n  handleSiteClickInParent,\n  handleSessionExpire,\n  setOpen,\n  setShowNotemsg,\n  open,\n}) {\n  const classes = useStyles();\n  const { setEnabledLinearProgress } = AppState();\n\n  let source = axios.CancelToken.source();\n  //Show note features\n  // const [notesite, setNotesite] = useState(\"Badisidd\");\n\n  // const [open, setOpen] = React.useState(false);\n  // const [alertopen, setAlertopen] = React.useState(false);\n\n  const serverUrl = SERVER_URL + \"/dashboard/sites\";\n\n  const [sortBy, setSortBy] = useState({ header: \"name\", order: \"asc\" });\n\n  // Sites details state\n  const [sitesArray, setSitesArray] = useState([\n    {\n      name: \"Loading...\",\n      ip: \"None\",\n      capacity: \"0\",\n      status: 0,\n      time: 0,\n      powerGeneration: 0,\n      GHI: \"0.00\",\n      GTI: \"0.00\",\n      moduleTemp: \"0.00\",\n      network: false,\n    },\n  ]);\n\n  const sortValues = (data, header, order) => {\n    let sortedSitesArray = [];\n    if (order === \"asc\") {\n      sortedSitesArray = data.sort((a, b) => {\n        if (header !== \"name\") {\n          return Number(a[header]) > Number(b[header])\n            ? 1\n            : Number(b[header]) > Number(a[header])\n            ? -1\n            : 0;\n        } else {\n          return a[header] > b[header] ? 1 : b[header] > a[header] ? -1 : 0;\n        }\n      });\n    } else {\n      sortedSitesArray = data.sort((a, b) => {\n        if (header !== \"name\") {\n          return Number(a[header]) < Number(b[header])\n            ? 1\n            : Number(b[header]) < Number(a[header])\n            ? -1\n            : 0;\n        } else {\n          return a[header] < b[header] ? 1 : b[header] < a[header] ? -1 : 0;\n        }\n      });\n    }\n\n    return sortedSitesArray;\n  };\n\n  const getSitesData = () => {\n    // console.log(\"getSitesData function called\");\n    const userToken = localStorage.getItem(\"userToken\");\n\n    axios\n      .post(\n        serverUrl,\n        { email: localStorage.getItem(\"userEmail\") },\n        {\n          cancelToken: source.token,\n          headers: {\n            jwtToken: userToken,\n          },\n        }\n      )\n      .then((response) => {\n        // console.log(\"sites\", response.data);\n        // response.data.push({\n        //   id: \"badisidd\",\n        //   name: \"Badisidd\",\n        // });\n        // const tempResponse = response.data;\n        // console.log(tempResponse);\n        let sortedSitesArray = sortValues(\n          response.data,\n          sortBy.header,\n          sortBy.order\n        );\n        setSitesArray(sortedSitesArray);\n\n        // const sortedSitesArray = response.data.sort((a, b) =>\n        //   a.name < b.name ? 1 : b.name < a.name ? -1 : 0\n        // );\n\n        localStorage.setItem(\"sitesArray\", JSON.stringify(sortedSitesArray));\n\n        // Sites side panel\n        let totalSites = sortedSitesArray.length;\n        let totalCapacity = 0;\n        let online = 0;\n        let offline = 0;\n        sortedSitesArray.forEach((element) => {\n          totalCapacity += Number(element.capacity);\n          if (element.status === 1) {\n            online += 1;\n          }\n          if (element.status === 0) {\n            offline += 1;\n          }\n        });\n\n        localStorage.setItem(\n          \"sitesSidePanelLocalStorage\",\n          JSON.stringify({\n            totalSites: totalSites,\n            totalCapacity: totalCapacity,\n            online: online,\n            offline: offline,\n          })\n        );\n\n        if (localStorage.getItem(\"siteNames\") !== null) {\n          let siteNamesCount = localStorage\n            .getItem(\"siteNames\")\n            .split(\",\").length;\n          if (sortedSitesArray.length > siteNamesCount) {\n            let siteNames = sortedSitesArray.map((obj) => obj.name);\n            // console.log(\"SITE NAMES v1\", siteNames);\n            localStorage.setItem(\"siteNames\", siteNames);\n          }\n        } else {\n          let siteNames = sortedSitesArray.map((obj) => obj.name);\n          // console.log(\"SITE NAMES v2\", siteNames);\n          localStorage.setItem(\"siteNames\", siteNames);\n        }\n      })\n      .catch((error) => {\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n        }\n        // handleSessionExpire();\n      });\n  };\n\n  // useEffect to get sites details every 1 minute\n  useEffect(() => {\n    if (localStorage.getItem(\"sitesArray\")) {\n      let sitesJSON = JSON.parse(localStorage.getItem(\"sitesArray\"));\n      setSitesArray(sitesJSON);\n    }\n    getSitesData();\n\n    const interval = setInterval(getSitesData, 60000);\n\n    return () => {\n      clearInterval(interval);\n      // source.cancel();\n    };\n  }, []);\n\n  const getFormattedDate = (timestamp) => {\n    const date = new Date(timestamp);\n    return `${String(date.getDate()).padStart(2, \"0\")}/${String(\n      date.getMonth() + 1\n    ).padStart(2, \"0\")}, ${date.toLocaleString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false,\n    })}`;\n  };\n\n  const handleSiteClick = (event, row) => {\n    event.preventDefault();\n    // console.log(row, \"--234\");\n    // setNotesite(siteName);\n    // getNotemsg();\n    handleSiteClickInParent(row);\n  };\n\n  const [headersOrder, setHeadersOrder] = useState({\n    name: \"asc\",\n    capacity: \"desc\",\n    network: \"desc\",\n    status: \"desc\",\n    time: \"desc\",\n    powerGeneration: \"desc\",\n    GHI: \"desc\",\n    GTI: \"desc\",\n    moduleTemp: \"desc\",\n  });\n\n  const handleOrderChange = (event, header, id) => {\n    // console.log(event, header);\n    setHeadersOrder((prevState) => {\n      const headerOrder = prevState[header] === \"asc\" ? \"desc\" : \"asc\";\n      const headerOrderRev = headerOrder === \"asc\" ? \"desc\" : \"asc\";\n      const newHeadersOrder = {\n        name: headerOrderRev,\n        capacity: headerOrderRev,\n        network: headerOrderRev,\n        status: headerOrderRev,\n        time: headerOrderRev,\n        powerGeneration: headerOrderRev,\n        GHI: headerOrderRev,\n        GTI: headerOrderRev,\n        moduleTemp: headerOrderRev,\n      };\n      newHeadersOrder[header] = headerOrder;\n      sortValues(sitesArray, header, headerOrder);\n      setSortBy({ header: header, order: headerOrder });\n      let headerId = document.getElementById(id);\n      let headers = document.querySelectorAll(\".header\");\n      if (headers) {\n        headers.forEach((element) => {\n          element.style.color = \"black\";\n        });\n      }\n      if (headerId && headerOrder === \"asc\") {\n        headerId.style.color = \"#1A5276\";\n      } else {\n        headerId.style.color = \"green\";\n      }\n      return newHeadersOrder;\n    });\n  };\n\n  // const handleClickOpen = (row) => {\n  //   // console.log(\"sites data\", row);\n  //   // setNotesite(row);\n  //   setOpen(true);\n  //   // getNotemsg();\n  // };\n  // const handleClose = (value) => {\n  //   setOpen(false);\n  //   // setSelectedValue(value);\n  // };\n\n  return (\n    <>\n      <Comparison data={sitesArray} handleSessionExpire={handleSessionExpire} />\n      <TableContainer\n        component={Paper}\n        elevation={6}\n        className={classes.tableContainer}\n        style={{ marginTop: \"0.25rem\" }}\n      >\n        {/* <Grid container justify=\"space-between\" alignItems=\"flex-end\">\n        <Grid item>\n          <FormControl>\n            <InputLabel id=\"sort-by-select-label\">Sort by</InputLabel>\n            <Select\n              labelId=\"sort-by-select-label\"\n              id=\"sort-by-simple-select\"\n              value={sortBy}\n              onChange={onSortHeaderChange}\n            >\n              <MenuItem value={\"name\"}>Site name&ensp;</MenuItem>\n              <MenuItem value={\"capacity\"}>Capacity&ensp;</MenuItem>\n              <MenuItem value={\"time\"}>Last Event&ensp;</MenuItem>\n              <MenuItem value={\"powerGeneration\"}>\n                Power Generation&ensp;\n              </MenuItem>\n              <MenuItem value={\"GHI\"}>GHI&ensp;</MenuItem>\n              <MenuItem value={\"GTI\"}>GTI&ensp;</MenuItem>\n              <MenuItem value={\"moduleTemp\"}>Module Temp&ensp;</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={enableDesc}\n                onChange={handleOrderChange}\n                name=\"checkedASC\"\n                color=\"primary\"\n              />\n            }\n            label=\"DESC\"\n          />\n        </Grid>\n      </Grid> */}\n        <Table\n          className={classes.table}\n          size=\"small\"\n          aria-label=\"customized table\"\n          stickyHeader={true}\n        >\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>\n                <span\n                  onClick={(event) =>\n                    handleOrderChange(event, \"name\", \"siteNameHeader\")\n                  }\n                  id=\"siteNameHeader\"\n                  className=\"header\"\n                >\n                  Site\n                </span>\n                {/* <TableSortLabel\n                active\n                direction={headersOrder.name}\n                onClick={(event) => handleOrderChange(event, \"name\")}\n              /> */}\n              </StyledTableCell>\n              <StyledTableCell\n                align=\"left\"\n                style={{ paddingTop: \".6rem\", paddingBottom: \".5rem\" }}\n              >\n                <span\n                  onClick={(event) =>\n                    handleOrderChange(event, \"capacity\", \"capacityHeader\")\n                  }\n                  id=\"capacityHeader\"\n                  className=\"header\"\n                >\n                  Capacity\n                </span>\n                {/* <TableSortLabel\n                active\n                direction={headersOrder.capacity}\n                onClick={(event) => handleOrderChange(event, \"capacity\")}\n              /> */}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">\n                <span\n                  onClick={(event) =>\n                    handleOrderChange(event, \"network\", \"networkHeader\")\n                  }\n                  id=\"networkHeader\"\n                  className=\"header\"\n                >\n                  Network\n                </span>\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">\n                <span\n                  onClick={(event) =>\n                    handleOrderChange(event, \"status\", \"statusHeader\")\n                  }\n                  id=\"statusHeader\"\n                  className=\"header\"\n                >\n                  Status\n                </span>\n                {/* <TableSortLabel\n                active\n                direction={headersOrder.status}\n                onClick={(event) => handleOrderChange(event, \"status\")}\n              /> */}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">\n                <span\n                  onClick={(event) =>\n                    handleOrderChange(event, \"time\", \"timeHeader\")\n                  }\n                  id=\"timeHeader\"\n                  className=\"header\"\n                >\n                  Last Event\n                </span>\n                {/* Last Event\n              <TableSortLabel\n                active\n                direction={headersOrder.time}\n                onClick={(event) => handleOrderChange(event, \"time\")}\n              /> */}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">\n                <span\n                  onClick={(event) =>\n                    handleOrderChange(\n                      event,\n                      \"powerGeneration\",\n                      \"powerGenerationHeader\"\n                    )\n                  }\n                  id=\"powerGenerationHeader\"\n                  className=\"header\"\n                >\n                  Power Generation\n                </span>\n                {/* Power Gen\n              <TableSortLabel\n                active\n                direction={headersOrder.powerGeneration}\n                onClick={(event) => handleOrderChange(event, \"powerGeneration\")}\n              /> */}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">\n                <span\n                  onClick={(event) =>\n                    handleOrderChange(event, \"GHI\", \"ghiHeader\")\n                  }\n                  id=\"ghiHeader\"\n                  className=\"header\"\n                >\n                  GHI\n                </span>\n                {/* GHI\n              <TableSortLabel\n                active\n                direction={headersOrder.GHI}\n                onClick={(event) => handleOrderChange(event, \"GHI\")}\n              /> */}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">\n                <span\n                  onClick={(event) =>\n                    handleOrderChange(event, \"GTI\", \"gtiHeader\")\n                  }\n                  id=\"gtiHeader\"\n                  className=\"header\"\n                >\n                  GTI\n                </span>\n                {/* GTI\n              <TableSortLabel\n                active\n                direction={headersOrder.GTI}\n                onClick={(event) => handleOrderChange(event, \"GTI\")}\n              /> */}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">\n                <span\n                  onClick={(event) =>\n                    handleOrderChange(event, \"moduleTemp\", \"moduleTempHeader\")\n                  }\n                  id=\"moduleTempHeader\"\n                  className=\"header\"\n                >\n                  Module Temp\n                </span>\n                {/* Mod Temp\n              <TableSortLabel\n                active\n                direction={headersOrder.moduleTemp}\n                onClick={(event) => handleOrderChange(event, \"moduleTemp\")}\n              /> */}\n              </StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sitesArray.map((row) => (\n              <StyledTableRow key={row.name}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  <a\n                    href=\"#\"\n                    onClick={(event) => handleSiteClick(event, row)}\n                    style={{ color: \"inherit\", textDecoration: \"none\" }}\n                  >\n                    {row.name}\n                  </a>\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {row.capacity} <small>MW</small>\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {row.network === true ? (\n                    <Tooltip title={row.ip} placement=\"right\">\n                      <SignalCellularAltIcon />\n                    </Tooltip>\n                  ) : (\n                    <Tooltip title={row.ip} placement=\"right\">\n                      <SignalCellularConnectedNoInternet0BarIcon />\n                    </Tooltip>\n                  )}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {row.status === 1 ? (\n                    <span style={{ color: \"green\" }}>Online</span>\n                  ) : (\n                    <span style={{ color: \"red\" }}>Offline</span>\n                  )}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {getFormattedDate(row.time * 1000)}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {Number(row.powerGeneration) === -111 ? (\n                    \"x\"\n                  ) : (\n                    <span>\n                      {Number(row.powerGeneration).toFixed(2)} <small>MW</small>\n                    </span>\n                  )}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {Number(row.GHI) === -111 ? (\n                    \"x\"\n                  ) : (\n                    <span>{Number(row.GHI).toFixed(2)}</span>\n                  )}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {Number(row.GTI) === -111 ? (\n                    \"x\"\n                  ) : (\n                    <span>{Number(row.GTI).toFixed(2)}</span>\n                  )}\n                </StyledTableCell>\n                <StyledTableCell align=\"center\">\n                  {Number(row.moduleTemp) === -111 ? (\n                    \"x\"\n                  ) : (\n                    <span>{Number(row.moduleTemp).toFixed(2)}°C</span>\n                  )}\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"x\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"x\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"x\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"x\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv5)) ? \"-\" : Number(value.inv5).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv6)) ? \"-\" : Number(value.inv6).toFixed(2)}\n        </span>\n      </StyledTableCell> */}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"x\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"x\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"x\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"x\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      {/* <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv5)) ? \"-\" : Number(value.inv5).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv6)) ? \"-\" : Number(value.inv6).toFixed(2)}\n      </StyledTableCell> */}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={7}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]2[0-4]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            {/* <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 5</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 6</strong>\n            </StyledTableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Hindupur/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Hindupur({\n  sitestatusBar,\n  handleSessionExpire,\n  handleClickOpen,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/hindupur/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    const startTime = new Date(1625823000000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/hindupur/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/hindupur/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/hindupur/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/hindupur/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/hindupur/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S2CB1 I\",\n      \"S8 / S2CB2 I\",\n      \"S9 / S2CB3 I\",\n      \"S10 / S2CB4 I\",\n      \"S11 / S2CB5 I\",\n      \"S12 / S2CB6 I\",\n      \"S13 / S3CB1 I\",\n      \"S14 / S3CB2 I\",\n      \"S15 / S3CB3 I\",\n      \"S16 / S3CB4 I\",\n      \"S17 / S3CB5 I\",\n      \"S18 / S3CB6 I\",\n      \"S19 / S4CB1 I\",\n      \"S20 / S4CB2 I\",\n      \"S21 / S4CB3 I\",\n      \"S22 / S4CB4 I\",\n      \"S23 / S4CB5 I\",\n      \"S24 / S4CB6 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n      let inv6Value = NaN;\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n        if (arrayFromObject[heading.length * 5 + i][1]) {\n          inv6Value = arrayFromObject[heading.length * 5 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n        inv6: inv6Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    let blockStr = \"\";\n    if (block > 9) {\n      blockStr = \"B\" + String(block);\n    } else {\n      blockStr = \"B0\" + block;\n    }\n\n    // console.log(\"blockStr\", blockStr);\n\n    axios\n      .get(serverUrl + \"/hindupur/grid/\" + blockStr, {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block B0\" + block + \":\", response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to hindupur site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to hindupur site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to hindupur site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Hindupur</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">50 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size=\"1.5rem\"\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 6.53}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={75} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                  <MenuItem value={8}>B08</MenuItem>\n                  <MenuItem value={9}>B09</MenuItem>\n                  <MenuItem value={10}>B10</MenuItem>\n                  <MenuItem value={11}>B11</MenuItem>\n                  <MenuItem value={12}>B12</MenuItem>\n                  <MenuItem value={13}>B13</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"x\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"x\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"x\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"x\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv5)) ? \"-\" : Number(value.inv5).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv6)) ? \"-\" : Number(value.inv6).toFixed(2)}\n        </span>\n      </StyledTableCell> */}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"x\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"x\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"x\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"x\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      {/* <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv5)) ? \"-\" : Number(value.inv5).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv6)) ? \"-\" : Number(value.inv6).toFixed(2)}\n      </StyledTableCell> */}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={7}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]2[0-4]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            {/* <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 5</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 6</strong>\n            </StyledTableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Sircilla/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Sircilla({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/sircilla/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    const startTime = new Date(1625509800000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/sircilla/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/sircilla/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(1));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/sircilla/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/sircilla/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/sircilla/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S2CB1 I\",\n      \"S8 / S2CB2 I\",\n      \"S9 / S2CB3 I\",\n      \"S10 / S2CB4 I\",\n      \"S11 / S2CB5 I\",\n      \"S12 / S2CB6 I\",\n      \"S13 / S3CB1 I\",\n      \"S14 / S3CB2 I\",\n      \"S15 / S3CB3 I\",\n      \"S16 / S3CB4 I\",\n      \"S17 / S3CB5 I\",\n      \"S18 / S3CB6 I\",\n      \"S19 / S4CB1 I\",\n      \"S20 / S4CB2 I\",\n      \"S21 / S4CB3 I\",\n      \"S22 / S4CB4 I\",\n      \"S23 / S4CB5 I\",\n      \"S24 / S4CB6 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n      let inv6Value = NaN;\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n        if (arrayFromObject[heading.length * 5 + i][1]) {\n          inv6Value = arrayFromObject[heading.length * 5 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n        inv6: inv6Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/sircilla/grid/B0\" + block, {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block B0\" + block + \":\", response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to sircilla site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to sircilla site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to sircilla site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Sircilla</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">30 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.58}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={45} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"x\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"x\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"x\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"x\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv5)) ? \"-\" : Number(value.inv5).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv6)) ? \"-\" : Number(value.inv6).toFixed(2)}\n        </span>\n      </StyledTableCell> */}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"x\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"x\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"x\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"x\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      {/* <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv5)) ? \"-\" : Number(value.inv5).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv6)) ? \"-\" : Number(value.inv6).toFixed(2)}\n      </StyledTableCell> */}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={7}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]2[0-4]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            {/* <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 5</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 6</strong>\n            </StyledTableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Gadarpur/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Gadarpur({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/gadarpur/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    const startTime = new Date(1625509800000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/gadarpur/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // if (error?.response?.status === 401) {\n        //   handleSessionExpire();\n        // }\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/gadarpur/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // if (error?.response?.status === 401) {\n        //   handleSessionExpire();\n        // }\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/gadarpur/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error?.response?.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/gadarpur/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // if (error?.response?.status === 401) {\n        //   handleSessionExpire();\n        // }\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/gadarpur/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error?.response?.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S2CB1 I\",\n      \"S8 / S2CB2 I\",\n      \"S9 / S2CB3 I\",\n      \"S10 / S2CB4 I\",\n      \"S11 / S2CB5 I\",\n      \"S12 / S2CB6 I\",\n      \"S13 / S3CB1 I\",\n      \"S14 / S3CB2 I\",\n      \"S15 / S3CB3 I\",\n      \"S16 / S3CB4 I\",\n      \"S17 / S3CB5 I\",\n      \"S18 / S3CB6 I\",\n      \"S19 / S4CB1 I\",\n      \"S20 / S4CB2 I\",\n      \"S21 / S4CB3 I\",\n      \"S22 / S4CB4 I\",\n      \"S23 / S4CB5 I\",\n      \"S24 / S4CB6 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n      let inv6Value = NaN;\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n        if (arrayFromObject[heading.length * 5 + i][1]) {\n          inv6Value = arrayFromObject[heading.length * 5 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n        inv6: inv6Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/gadarpur/grid/B0\" + block, {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block B0\" + block + \":\", response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error?.response?.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to gadarpur site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to gadarpur site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to gadarpur site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Gadarpur 1&#38;2</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">25 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.58}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={40} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","export const common = [\n  { label: \"Day Generation Cumulative (KWH)\", checked: true },\n  { label: \"Power Generation Instant (MW)\", checked: true },\n  { label: \"Peak Power\", checked: true },\n  { label: \"Plant PR Instant\", checked: true },\n  { label: \"GA Instant\", checked: true },\n  { label: \"PA Instant\", checked: true },\n  { label: \"GHI Instant\", checked: true },\n  { label: \"GTI Instant\", checked: true },\n  { label: \"GHI Instant 2\", checked: true },\n  { label: \"GTI Instant 2\", checked: true },\n  { label: \"Amb. Temp Instant\", checked: true },\n  { label: \"Amb. Temp Instant 2\", checked: true },\n  { label: \"Mod. Temp Instant\", checked: true },\n  { label: \"Mod. Temp Instant 2\", checked: true },\n  { label: \"Wind Speed Instant\", checked: true },\n  { label: \"Wind Speed Instant 2\", checked: true },\n  { label: \"Wind Dir Instant\", checked: true },\n  { label: \"Wind Dir Instant 2\", checked: true },\n  { label: \"Humidity Instant\", checked: true },\n  { label: \"Humidity Instant 2\", checked: true },\n  { label: \"Rain\", checked: true },\n  { label: \"Rain 2\", checked: true },\n];\n\nexport const uncheckedCommon = [\n  { label: \"Day Generation Cumulative (KWH)\", checked: false },\n  { label: \"Power Generation Instant (MW)\", checked: false },\n  { label: \"Peak Power\", checked: false },\n  { label: \"Plant PR Instant\", checked: false },\n  { label: \"GA Instant\", checked: false },\n  { label: \"PA Instant\", checked: false },\n  { label: \"GHI Instant\", checked: false },\n  { label: \"GTI Instant\", checked: false },\n  { label: \"GHI Instant 2\", checked: false },\n  { label: \"GTI Instant 2\", checked: false },\n  { label: \"Amb. Temp Instant\", checked: false },\n  { label: \"Amb. Temp Instant 2\", checked: false },\n  { label: \"Mod. Temp Instant\", checked: false },\n  { label: \"Mod. Temp Instant 2\", checked: false },\n  { label: \"Wind Speed Instant\", checked: false },\n  { label: \"Wind Speed Instant 2\", checked: false },\n  { label: \"Wind Dir Instant\", checked: false },\n  { label: \"Wind Dir Instant 2\", checked: false },\n  { label: \"Humidity Instant\", checked: false },\n  { label: \"Humidity Instant 2\", checked: false },\n  { label: \"Rain\", checked: false },\n  { label: \"Rain 2\", checked: false },\n];\n\nexport const inverters = [\n  { label: \"L1 I\", checked: true },\n  { label: \"L2 I\", checked: true },\n  { label: \"L3 I\", checked: true },\n  { label: \"L1 V\", checked: true },\n  { label: \"L2 V\", checked: true },\n  { label: \"L3 V\", checked: true },\n  { label: \"Frequency\", checked: true },\n  { label: \"DC I\", checked: true },\n  { label: \"DC V\", checked: true },\n  { label: \"Active Power\", checked: true },\n  { label: \"DC Power\", checked: true },\n  { label: \"Reactive Power\", checked: true },\n  { label: \"PF\", checked: true },\n  { label: \"Cab Temp\", checked: true },\n  { label: \"IGBT Temp\", checked: true },\n  { label: \"DC Energy\", checked: true },\n];\n\nexport const uncheckedInverters = [\n  { label: \"L1 I\", checked: false },\n  { label: \"L2 I\", checked: false },\n  { label: \"L3 I\", checked: false },\n  { label: \"L1 V\", checked: false },\n  { label: \"L2 V\", checked: false },\n  { label: \"L3 V\", checked: false },\n  { label: \"Frequency\", checked: false },\n  { label: \"DC I\", checked: false },\n  { label: \"DC V\", checked: false },\n  { label: \"Active Power\", checked: false },\n  { label: \"DC Power\", checked: false },\n  { label: \"Reactive Power\", checked: false },\n  { label: \"PF\", checked: false },\n  { label: \"Cab Temp\", checked: false },\n  { label: \"IGBT Temp\", checked: false },\n  { label: \"DC Energy\", checked: false },\n];\n\nexport const inverterSlots = [\n  { label: \"S1 L2 I\", checked: true },\n  { label: \"S1 L1 I\", checked: true },\n  { label: \"S1 L3 I\", checked: true },\n  { label: \"S1 L1 V\", checked: true },\n  { label: \"S1 L2 V\", checked: true },\n  { label: \"S1 L3 V\", checked: true },\n  { label: \"S1 DC I\", checked: true },\n  { label: \"S1 DC V\", checked: true },\n  { label: \"S1 Active Power\", checked: true },\n  { label: \"S1 DC Power\", checked: true },\n  { label: \"S1 PF\", checked: true },\n  { label: \"S1 Cab Temp\", checked: true },\n  { label: \"S1 IGBT Temp\", checked: true },\n  { label: \"S2 L1 I\", checked: true },\n  { label: \"S2 L2 I\", checked: true },\n  { label: \"S2 L3 I\", checked: true },\n  { label: \"S2 L1 V\", checked: true },\n  { label: \"S2 L2 V\", checked: true },\n  { label: \"S2 L3 V\", checked: true },\n  { label: \"S2 DC I\", checked: true },\n  { label: \"S2 DC V\", checked: true },\n  { label: \"S2 Active Power\", checked: true },\n  { label: \"S2 DC Power\", checked: true },\n  { label: \"S2 PF\", checked: true },\n  { label: \"S2 Cab Temp\", checked: true },\n  { label: \"S2 IGBT Temp\", checked: true },\n  { label: \"S3 L1 I\", checked: true },\n  { label: \"S3 L2 I\", checked: true },\n  { label: \"S3 L3 I\", checked: true },\n  { label: \"S3 L1 V\", checked: true },\n  { label: \"S3 L2 V\", checked: true },\n  { label: \"S3 L3 V\", checked: true },\n  { label: \"S3 DC I\", checked: true },\n  { label: \"S3 DC V\", checked: true },\n  { label: \"S3 Active Power\", checked: true },\n  { label: \"S3 DC Power\", checked: true },\n  { label: \"S3 PF\", checked: true },\n  { label: \"S3 Cab Temp\", checked: true },\n  { label: \"S3 IGBT Temp\", checked: true },\n  { label: \"S4 L1 I\", checked: true },\n  { label: \"S4 L2 I\", checked: true },\n  { label: \"S4 L3 I\", checked: true },\n  { label: \"S4 L1 V\", checked: true },\n  { label: \"S4 L2 V\", checked: true },\n  { label: \"S4 L3 V\", checked: true },\n  { label: \"S4 DC I\", checked: true },\n  { label: \"S4 DC V\", checked: true },\n  { label: \"S4 Active Power\", checked: true },\n  { label: \"S4 DC Power\", checked: true },\n  { label: \"S4 PF\", checked: true },\n  { label: \"S4 Cab Temp\", checked: true },\n  { label: \"S4 IGBT Temp\", checked: true },\n  { label: \"S1 + S2 Peak Active Power\", checked: true },\n  { label: \"S3 + S4 Peak Active Power\", checked: true },\n];\n\nexport const uncheckedInverterSlots = [\n  { label: \"S1 L2 I\", checked: false },\n  { label: \"S1 L1 I\", checked: false },\n  { label: \"S1 L3 I\", checked: false },\n  { label: \"S1 L1 V\", checked: false },\n  { label: \"S1 L2 V\", checked: false },\n  { label: \"S1 L3 V\", checked: false },\n  { label: \"S1 DC I\", checked: false },\n  { label: \"S1 DC V\", checked: false },\n  { label: \"S1 Active Power\", checked: false },\n  { label: \"S1 DC Power\", checked: false },\n  { label: \"S1 PF\", checked: false },\n  { label: \"S1 Cab Temp\", checked: false },\n  { label: \"S1 IGBT Temp\", checked: false },\n  { label: \"S2 L1 I\", checked: false },\n  { label: \"S2 L2 I\", checked: false },\n  { label: \"S2 L3 I\", checked: false },\n  { label: \"S2 L1 V\", checked: false },\n  { label: \"S2 L2 V\", checked: false },\n  { label: \"S2 L3 V\", checked: false },\n  { label: \"S2 DC I\", checked: false },\n  { label: \"S2 DC V\", checked: false },\n  { label: \"S2 Active Power\", checked: false },\n  { label: \"S2 DC Power\", checked: false },\n  { label: \"S2 PF\", checked: false },\n  { label: \"S2 Cab Temp\", checked: false },\n  { label: \"S2 IGBT Temp\", checked: false },\n  { label: \"S3 L1 I\", checked: false },\n  { label: \"S3 L2 I\", checked: false },\n  { label: \"S3 L3 I\", checked: false },\n  { label: \"S3 L1 V\", checked: false },\n  { label: \"S3 L2 V\", checked: false },\n  { label: \"S3 L3 V\", checked: false },\n  { label: \"S3 DC I\", checked: false },\n  { label: \"S3 DC V\", checked: false },\n  { label: \"S3 Active Power\", checked: false },\n  { label: \"S3 DC Power\", checked: false },\n  { label: \"S3 PF\", checked: false },\n  { label: \"S3 Cab Temp\", checked: false },\n  { label: \"S3 IGBT Temp\", checked: false },\n  { label: \"S4 L1 I\", checked: false },\n  { label: \"S4 L2 I\", checked: false },\n  { label: \"S4 L3 I\", checked: false },\n  { label: \"S4 L1 V\", checked: false },\n  { label: \"S4 L2 V\", checked: false },\n  { label: \"S4 L3 V\", checked: false },\n  { label: \"S4 DC I\", checked: false },\n  { label: \"S4 DC V\", checked: false },\n  { label: \"S4 Active Power\", checked: false },\n  { label: \"S4 DC Power\", checked: false },\n  { label: \"S4 PF\", checked: false },\n  { label: \"S4 Cab Temp\", checked: false },\n  { label: \"S4 IGBT Temp\", checked: false },\n  { label: \"S1 + S2 Peak Active Power\", checked: false },\n  { label: \"S3 + S4 Peak Active Power\", checked: false },\n];\n\nexport const inverterStrings = [\n  { label: \"S1 / S1CB1 I\", checked: true },\n  { label: \"S2 / S1CB2 I\", checked: true },\n  { label: \"S3 / S1CB3 I\", checked: true },\n  { label: \"S4 / S1CB4 I\", checked: true },\n  { label: \"S5 / S1CB5 I\", checked: true },\n  { label: \"S6 / S1CB6 I\", checked: true },\n  { label: \"S7 / S1CB7 I\", checked: true },\n  { label: \"S8 / S1CB8 I\", checked: true },\n  { label: \"S9 / S2CB1 I\", checked: true },\n  { label: \"S10 / S2CB2 I\", checked: true },\n  { label: \"S11 / S2CB3 I\", checked: true },\n  { label: \"S12 / S2CB4 I\", checked: true },\n  { label: \"S13 / S2CB5 I\", checked: true },\n  { label: \"S14 / S2CB6 I\", checked: true },\n  { label: \"S15 / S2CB7 I\", checked: true },\n  { label: \"S16 / S2CB8 I\", checked: true },\n  { label: \"S17 / S3CB1 I\", checked: true },\n  { label: \"S18 / S3CB2 I\", checked: true },\n  { label: \"S19 / S3CB3 I\", checked: true },\n  { label: \"S20 / S3CB4 I\", checked: true },\n  { label: \"S21 / S3CB5 I\", checked: true },\n  { label: \"S22 / S3CB6 I\", checked: true },\n  { label: \"S23 / S3CB7 I\", checked: true },\n  { label: \"S24 / S3CB8 I\", checked: true },\n  { label: \"S25 / S4CB1 I\", checked: true },\n  { label: \"S26 / S4CB2 I\", checked: true },\n  { label: \"S27 / S4CB3 I\", checked: true },\n  { label: \"S28 / S4CB4 I\", checked: true },\n  { label: \"S29 / S4CB5 I\", checked: true },\n  { label: \"S30 / S4CB6 I\", checked: true },\n  { label: \"S31 / S4CB7 I\", checked: true },\n  { label: \"S32 / S4CB8 I\", checked: true },\n];\n\nexport const uncheckedInverterStrings = [\n  { label: \"S1 / S1CB1 I\", checked: false },\n  { label: \"S2 / S1CB2 I\", checked: false },\n  { label: \"S3 / S1CB3 I\", checked: false },\n  { label: \"S4 / S1CB4 I\", checked: false },\n  { label: \"S5 / S1CB5 I\", checked: false },\n  { label: \"S6 / S1CB6 I\", checked: false },\n  { label: \"S7 / S1CB7 I\", checked: false },\n  { label: \"S8 / S1CB8 I\", checked: false },\n  { label: \"S9 / S2CB1 I\", checked: false },\n  { label: \"S10 / S2CB2 I\", checked: false },\n  { label: \"S11 / S2CB3 I\", checked: false },\n  { label: \"S12 / S2CB4 I\", checked: false },\n  { label: \"S13 / S2CB5 I\", checked: false },\n  { label: \"S14 / S2CB6 I\", checked: false },\n  { label: \"S15 / S2CB7 I\", checked: false },\n  { label: \"S16 / S2CB8 I\", checked: false },\n  { label: \"S17 / S3CB1 I\", checked: false },\n  { label: \"S18 / S3CB2 I\", checked: false },\n  { label: \"S19 / S3CB3 I\", checked: false },\n  { label: \"S20 / S3CB4 I\", checked: false },\n  { label: \"S21 / S3CB5 I\", checked: false },\n  { label: \"S22 / S3CB6 I\", checked: false },\n  { label: \"S23 / S3CB7 I\", checked: false },\n  { label: \"S24 / S3CB8 I\", checked: false },\n  { label: \"S25 / S4CB1 I\", checked: false },\n  { label: \"S26 / S4CB2 I\", checked: false },\n  { label: \"S27 / S4CB3 I\", checked: false },\n  { label: \"S28 / S4CB4 I\", checked: false },\n  { label: \"S29 / S4CB5 I\", checked: false },\n  { label: \"S30 / S4CB6 I\", checked: false },\n  { label: \"S31 / S4CB7 I\", checked: false },\n  { label: \"S32 / S4CB8 I\", checked: false },\n];\n","import axios from \"axios\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { Button, Grid, ListItemText, OutlinedInput } from \"@material-ui/core\";\nimport MuiAccordion from \"@material-ui/core/Accordion\";\nimport MuiAccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport MuiAccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n// import Accordion from \"@material-ui/core/Accordion\";\n// import AccordionSummary from \"@material-ui/core/AccordionSummary\";\n// import AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  common,\n  uncheckedCommon,\n  inverters,\n  uncheckedInverters,\n  inverterSlots,\n  uncheckedInverterSlots,\n  inverterStrings,\n  uncheckedInverterStrings,\n} from \"../constants/csvParameters\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport { siteNamesAndBlocks } from \"../constants/SiteNamesY\";\nimport { AppState } from \"../AppContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    minWidth: 120,\n  },\n  dateStyle: {\n    width: 140,\n  },\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  formControlLabelStyle: {\n    margin: 0,\n    // padding: 0,\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Accordion = withStyles({\n  root: {\n    border: \"1px solid rgba(0, 0, 0, .125)\",\n    boxShadow: \"none\",\n    \"&:not(:last-child)\": {\n      borderBottom: 0,\n    },\n    \"&:before\": {\n      display: \"none\",\n    },\n    \"&$expanded\": {\n      margin: \"auto\",\n    },\n  },\n  expanded: {},\n})(MuiAccordion);\n\nconst AccordionSummary = withStyles({\n  root: {\n    backgroundColor: \"#FEF9E7\",\n    borderBottom: \"1px solid rgba(0, 0, 0, .125)\",\n    marginBottom: -1,\n    // minHeight: 56,\n    minHeight: 1,\n    maxHeight: 44,\n    \"&$expanded\": {\n      //   minHeight: 56,\n      minHeight: 1,\n      maxHeight: 44,\n    },\n  },\n  content: {\n    \"&$expanded\": {\n      margin: \"12px 0\",\n    },\n  },\n  expanded: {},\n})(MuiAccordionSummary);\n\nconst AccordionDetails = withStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(1),\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(1),\n  },\n}))(MuiAccordionDetails);\n\nconst getSiteNames = () => {\n  let siteNames = localStorage.getItem(\"siteNames\");\n  if (siteNames !== null) {\n    let siteNamesArray = siteNames.split(\",\");\n    return siteNamesArray;\n  }\n};\n\nconst getFromDate = (date) => {\n  let newDate = new Date(date.getTime());\n  newDate.setHours(0, 0, 0, 0);\n  return newDate;\n};\n\nconst getToDate = (date) => {\n  let newDate = new Date(date.getTime());\n  newDate.setHours(23, 59, 59, 999);\n  return newDate;\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst BlockMenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 130,\n    },\n  },\n};\n\nexport default function CustomCSV({ handleSessionExpire }) {\n  const classes = useStyles();\n\n  let localsite = JSON.parse(localStorage.getItem(\"siteNamesAndBlocks\")).map(\n    (el) => el.name\n  );\n\n  // const getSites = () => {\n  //   let selectedsite = localsite.map((el) => el.name);\n  //   return selectedsite;\n  // };\n  const [site, setSite] = useState(localsite[0]);\n  // console.log(\"selSite\", site, localsite);\n\n  const { setEnabledLinearProgress } = AppState();\n\n  const getBlockNames = (siteName = site) => {\n    if (siteName === \"Banka N\") {\n      return [3, 4, 5, 6];\n    }\n\n    if (siteName === \"Banka M\") {\n      return [1, 2, \"MCR\"];\n    }\n\n    let element = JSON.parse(localStorage.getItem(\"siteNamesAndBlocks\")).find(\n      (site) => {\n        return site.name === siteName;\n      }\n    );\n\n    return Array.from({ length: element.blocks[0] }, (v, i) => i + 1);\n  };\n\n  const [selectedBlock, setSelectedBlock] = useState(getBlockNames());\n  const [fromDate, setFromDate] = useState(() => {\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    return getFromDate(date);\n  });\n  const [toDate, setToDate] = useState(() => {\n    let date = new Date();\n    return getToDate(date);\n  });\n\n  const [globalSelectAll, setGlobalSelectAll] = useState(true);\n  const [commonSelectAll, setCommmonSelectAll] = useState(true);\n  const [invertersSelectAll, setInvertersSelectAll] = useState(true);\n  const [inverterSlotsSelectAll, setInverterSlotsSelectAll] = useState(true);\n  const [inverterStringsSelectAll, setInverterStringsSelectAll] =\n    useState(true);\n\n  const [disableDownload, setDisableDownload] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [alertMessage, setAlertMessage] = useState({\n    severity: \"info\",\n    message: \"\",\n  });\n\n  const [parameters, setParameters] = useState([]);\n\n  const [commonParams, setCommonParams] = useState(\n    JSON.parse(JSON.stringify(common))\n  );\n\n  const [invertersParams, setInvertersParams] = useState(\n    JSON.parse(JSON.stringify(inverters))\n  );\n\n  const [inverterSlotsParams, setInverterSlotsParams] = useState(\n    JSON.parse(JSON.stringify(inverterSlots))\n  );\n\n  const [inverterStringsParams, setInverterStringsParams] = useState(\n    JSON.parse(JSON.stringify(inverterStrings))\n  );\n\n  const [variants, setVariants] = useState([]);\n\n  const [frequency, setFrequency] = useState(\"full\");\n\n  const handleFrequency = (event) => {\n    let value = event.target.value;\n    setFrequency(value);\n  };\n\n  // const handleBlockChange = (event) => {\n  //   setSelectedBlock(event.target.value);\n  // };\n\n  const handleBlockChange = (event) => {\n    const value = event.target.value;\n    if (value[value.length - 1] === \"all\") {\n      setSelectedBlock(\n        selectedBlock.length === getBlockNames().length ? [] : getBlockNames()\n      );\n      return;\n    }\n    setSelectedBlock(value);\n  };\n\n  useEffect(() => {\n    let variants = JSON.parse(localStorage.getItem(\"csvVariants\"));\n\n    if (variants) {\n      let variantsKies = [];\n      variants.forEach((element) => {\n        variantsKies.push(element.key);\n      });\n      setVariants(variantsKies);\n    }\n\n    return () => {\n      setEnabledLinearProgress(false);\n    };\n  }, []);\n\n  const handleVariantsSave = () => {\n    let variantsLength = variants.length;\n\n    variantsLength += 1;\n\n    // console.log(commonParams)\n\n    let object = {\n      key: \"v\" + variantsLength,\n      commonParams: [...commonParams],\n      invertersParams: [...invertersParams],\n      inverterSlotsParams: [...inverterSlotsParams],\n      inverterStringsParams: [...inverterStringsParams],\n    };\n\n    let combinedVariants = [];\n\n    let oldVariants = JSON.parse(localStorage.getItem(\"csvVariants\"));\n\n    if (oldVariants) {\n      combinedVariants.push(...oldVariants);\n    }\n\n    combinedVariants.push(object);\n\n    localStorage.setItem(\"csvVariants\", JSON.stringify(combinedVariants));\n\n    setVariants((prevState) => {\n      let newVariants = [];\n      newVariants.push(...prevState, \"v\" + variantsLength);\n      // console.log('newVariants', newVariants);\n      return newVariants;\n    });\n  };\n\n  const [selectedVariant, setSelectedVariant] = useState(\"none\");\n\n  const findVariant = (key) => {\n    let variants = JSON.parse(localStorage.getItem(\"csvVariants\"));\n\n    if (variants) {\n      let variant = {};\n      variants.forEach((element) => {\n        if (element.key === key) {\n          variant = { ...element };\n        }\n      });\n      // console.log('variant', variant);\n      setCommonParams(variant.commonParams);\n      setInvertersParams(variant.invertersParams);\n      setInverterSlotsParams(variant.inverterSlotsParams);\n      setInverterStringsParams(variant.inverterStringsParams);\n    }\n  };\n\n  const handleVariantChange = (event) => {\n    setSelectedVariant(event.target.value);\n    findVariant(event.target.value);\n  };\n\n  const handleVariantClick = (key) => {\n    // console.log('handleVariantClick', key)\n    findVariant(key);\n  };\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  const handleCommonParamChange = (label) => {\n    let changedParams = [...commonParams];\n    for (const element of changedParams) {\n      if (element.label === label) {\n        element.checked = !element.checked;\n        if (element.checked === false) {\n          setCommmonSelectAll(false);\n          setGlobalSelectAll(false);\n        }\n      }\n    }\n    setCommonParams(changedParams);\n  };\n\n  const handleInvertersParamChange = (label) => {\n    let changedParams = [...invertersParams];\n    for (const element of changedParams) {\n      if (element.label === label) {\n        element.checked = !element.checked;\n        if (element.checked === false) {\n          setInvertersSelectAll(false);\n          setGlobalSelectAll(false);\n        }\n      }\n    }\n    setInvertersParams(changedParams);\n  };\n\n  const handleInverterSlotsParamChange = (label) => {\n    let changedParams = [...inverterSlotsParams];\n    for (const element of changedParams) {\n      if (element.label === label) {\n        element.checked = !element.checked;\n        if (element.checked === false) {\n          setInverterSlotsSelectAll(false);\n          setGlobalSelectAll(false);\n        }\n      }\n    }\n    setInverterSlotsParams(changedParams);\n  };\n\n  const handleInverterStringsParamChange = (label) => {\n    let changedParams = [...inverterStringsParams];\n    for (const element of changedParams) {\n      if (element.label === label) {\n        element.checked = !element.checked;\n        if (element.checked === false) {\n          setInverterStringsSelectAll(false);\n          setGlobalSelectAll(false);\n        }\n      }\n    }\n    setInverterStringsParams(changedParams);\n  };\n\n  const handleGlobalSelectAllChange = (event) => {\n    setGlobalSelectAll((prevState) => !prevState);\n    if (event.target.checked === false) {\n      setCommmonSelectAll(false);\n      setInvertersSelectAll(false);\n      setInverterSlotsSelectAll(false);\n      setInverterStringsSelectAll(false);\n      setCommonParams(JSON.parse(JSON.stringify(uncheckedCommon)));\n      setInvertersParams(JSON.parse(JSON.stringify(uncheckedInverters)));\n      setInverterSlotsParams(\n        JSON.parse(JSON.stringify(uncheckedInverterSlots))\n      );\n      setInverterStringsParams(\n        JSON.parse(JSON.stringify(uncheckedInverterStrings))\n      );\n    } else {\n      setCommmonSelectAll(true);\n      setInvertersSelectAll(true);\n      setInverterSlotsSelectAll(true);\n      setInverterStringsSelectAll(true);\n      setCommonParams(JSON.parse(JSON.stringify(common)));\n      setInvertersParams(JSON.parse(JSON.stringify(inverters)));\n      setInverterSlotsParams(JSON.parse(JSON.stringify(inverterSlots)));\n      setInverterStringsParams(JSON.parse(JSON.stringify(inverterStrings)));\n    }\n  };\n\n  const handleCommonSelectAllChange = (event) => {\n    setCommmonSelectAll((prevState) => !prevState);\n    if (event.target.checked === false) {\n      setGlobalSelectAll(false);\n      setCommonParams(JSON.parse(JSON.stringify(uncheckedCommon)));\n    }\n  };\n\n  const handleInvertersSelectAllChange = (event) => {\n    setInvertersSelectAll((prevState) => !prevState);\n    if (event.target.checked === false) {\n      setGlobalSelectAll(false);\n      setInvertersParams(JSON.parse(JSON.stringify(uncheckedInverters)));\n    }\n  };\n\n  const handleInverterSlotsSelectAllChange = (event) => {\n    setInverterSlotsSelectAll((prevState) => !prevState);\n    if (event.target.checked === false) {\n      setGlobalSelectAll(false);\n      setInverterSlotsParams(\n        JSON.parse(JSON.stringify(uncheckedInverterSlots))\n      );\n    }\n  };\n\n  const handleInverterStringsSelectAllChange = (event) => {\n    setInverterStringsSelectAll((prevState) => !prevState);\n    if (event.target.checked === false) {\n      setGlobalSelectAll(false);\n      setInverterStringsParams(\n        JSON.parse(JSON.stringify(uncheckedInverterStrings))\n      );\n    }\n  };\n\n  const handleSiteChange = (event) => {\n    let value = event.target.value;\n    setSite(value);\n    setSelectedBlock(getBlockNames(value));\n  };\n\n  const handleFromDateChange = (date) => {\n    setFromDate(getFromDate(date));\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(getToDate(date));\n  };\n\n  const getCustomCSV = (route, fileName, parameters) => {\n    // console.log(frequency, blockNames);\n    setEnabledLinearProgress(true);\n\n    const userToken = localStorage.getItem(\"userToken\");\n\n    // console.log(\"customCSV\", site, parameters);\n\n    // let blockNames = selectedBlock === 'all' ? getAllBlockNames() : selectedBlock !== 'mcr' ? ['B' + String(selectedBlock).padStart(2, 0)] : [selectedBlock];\n\n    let blockNames = [];\n\n    selectedBlock.forEach((element) => {\n      if (element !== \"MCR\") {\n        blockNames.push(\"B\" + String(element).padStart(2, 0));\n      } else {\n        blockNames.push(element);\n      }\n    });\n\n    // console.log(\"blockNames\", blockNames);\n\n    axios\n      .post(\n        route,\n        {\n          startTime: fromDate.getTime(),\n          endTime: toDate.getTime(),\n          site: String(site).includes(\"banka\") ? \"bankam\" : site,\n          parameters: parameters,\n          block: blockNames,\n          frequency: frequency,\n        },\n        {\n          headers: {\n            jwtToken: userToken,\n            responseType: \"blob\",\n          },\n        }\n      )\n      .then((response) => {\n        // console.log(response);\n        setEnabledLinearProgress(false);\n        const downloadUrl = window.URL.createObjectURL(\n          new Blob([response.data])\n        );\n        const link = document.createElement(\"a\");\n        link.href = downloadUrl;\n\n        let filename = `${fileName}_${fromDate.getDate()}_${\n          fromDate.getMonth() + 1\n        }_${fromDate.getFullYear()}-${toDate.getDate()}_${\n          toDate.getMonth() + 1\n        }_${toDate.getFullYear()}.csv`;\n        link.setAttribute(\"download\", filename);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        setDisableDownload(false);\n      })\n      .catch((error) => {\n        // console.log(error);\n        setEnabledLinearProgress(false);\n        setAlertMessage({ severity: \"error\", message: \"No data found!\" });\n        setOpenSnackbar(true);\n        setDisableDownload(false);\n      });\n  };\n\n  const fetchCSV = (parameters) => {\n    let filename = site + \"_\" + selectedBlock;\n    let route = SERVER_URL + \"/customcsv\";\n    getCustomCSV(route, filename, parameters);\n  };\n\n  const iterateParams = (params) => {\n    let aggregatedParameters = [];\n\n    for (const param of params) {\n      if (param.checked) {\n        aggregatedParameters.push(param.label);\n      }\n    }\n\n    return aggregatedParameters;\n  };\n\n  const aggregateParameters = () => {\n    let aggregatedParameters = [];\n\n    aggregatedParameters = [\n      ...iterateParams(commonParams),\n      ...iterateParams(invertersParams),\n      ...iterateParams(inverterSlotsParams),\n      ...iterateParams(inverterStringsParams),\n    ];\n\n    return aggregatedParameters;\n  };\n\n  const handleDownloadBtnClick = () => {\n    setDisableDownload(true);\n\n    if (site === \"none\") {\n      setAlertMessage({\n        severity: \"warning\",\n        message: \"Select a site.\",\n      });\n      setOpenSnackbar(true);\n      setDisableDownload(false);\n      return;\n    }\n\n    const aggregatedParameters = aggregateParameters();\n\n    // console.log(aggregatedParameters);\n\n    if (aggregatedParameters.length === 0) {\n      setAlertMessage({\n        severity: \"warning\",\n        message: \"Select at least one parameter.\",\n      });\n      setOpenSnackbar(true);\n      setDisableDownload(false);\n      return;\n    }\n\n    let fromDateTime = fromDate.getTime();\n    let toDateTime = toDate.getTime();\n\n    let difference = toDateTime - fromDateTime;\n\n    if (difference > 0) {\n      fetchCSV(aggregatedParameters);\n    } else {\n      setAlertMessage({\n        severity: \"info\",\n        message: \"Select a different 'To' date.\",\n      });\n      setOpenSnackbar(true);\n      setDisableDownload(false);\n    }\n  };\n\n  useEffect(() => {\n    if (commonSelectAll === true) {\n      setCommonParams(JSON.parse(JSON.stringify(common)));\n    }\n  }, [commonSelectAll]);\n\n  useEffect(() => {\n    if (invertersSelectAll === true) {\n      setInvertersParams(JSON.parse(JSON.stringify(inverters)));\n    }\n  }, [invertersSelectAll]);\n\n  useEffect(() => {\n    if (inverterSlotsSelectAll === true) {\n      setInverterSlotsParams(JSON.parse(JSON.stringify(inverterSlots)));\n    }\n  }, [inverterSlotsSelectAll]);\n\n  useEffect(() => {\n    if (inverterStringsSelectAll === true) {\n      setInverterStringsParams(JSON.parse(JSON.stringify(inverterStrings)));\n    }\n  }, [inverterStringsSelectAll]);\n\n  const getAllBlockNames = (siteName = site) => {\n    let element = JSON.parse(localStorage.getItem(\"siteNamesAndBlocks\")).find(\n      (site) => {\n        return site.name === siteName;\n      }\n    );\n\n    let blockNumbers = Array.from(\n      { length: element.blocks[0] },\n      (v, i) => i + 1\n    );\n\n    let blockNames = [];\n\n    blockNumbers.forEach((element) => {\n      blockNames.push(\"B\" + String(element).padStart(2, 0));\n    });\n\n    return blockNames;\n  };\n\n  return (\n    <div style={{ paddingTop: \".5rem\" }}>\n      {/* <Typography\n        variant=\"h6\"\n        color=\"textSecondary\"\n        style={{ marginBottom: \"1.5rem\" }}\n      >\n        Download CSV\n      </Typography> */}\n\n      <Grid container alignItems=\"flex-end\" justify=\"space-between\">\n        <Grid item>\n          <FormControl\n            className={classes.formControl}\n            style={{ marginRight: \"1rem\" }}\n          >\n            <InputLabel id=\"demo-simple-select-label\">Site</InputLabel>\n            <Select\n              //   autoWidth\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={site}\n              onChange={handleSiteChange}\n            >\n              {/* <MenuItem value=\"none\">\n                <em style={{ color: \"#9e9e9e\" }}>None</em>\n              </MenuItem> */}\n              {JSON.parse(localStorage.getItem(\"siteNamesAndBlocks\")).map(\n                (site) => (\n                  <MenuItem key={site.name} value={site.name}>\n                    {site.name}\n                  </MenuItem>\n                )\n              )}\n            </Select>\n          </FormControl>\n          {/* <FormControl\n            style={{\n              width: '60px',\n              textAlign: 'left',\n              marginRight: '1rem'\n            }}\n          >\n            <InputLabel id='site-select-helper-label'>Block</InputLabel>\n            <Select\n              labelId='site-select-helper-label'\n              id='site-select-helper'\n              value={selectedBlock}\n              onChange={handleBlockChange}\n            >\n              {<MenuItem value={'all'} key={1}>All</MenuItem>}\n              {getBlockNames().map((element, index) => {\n                return (\n                  <MenuItem key={index + 2} value={element}>{element}</MenuItem>\n                )\n              })}\n            </Select>\n          </FormControl> */}\n          <FormControl style={{ marginRight: \"1rem\", maxWidth: \"110px\" }}>\n            <InputLabel id=\"block-multiple-checkbox-label\">Block</InputLabel>\n            <Select\n              labelId=\"block-multiple-checkbox-label\"\n              id=\"block-multiple-checkbox\"\n              multiple\n              value={selectedBlock}\n              onChange={handleBlockChange}\n              // input={<OutlinedInput label=\"Tag\" />}\n              renderValue={(selected) => selected.join(\", \")}\n              // MenuProps={BlockMenuProps}\n              MenuProps={{\n                classes: { paper: classes.menuPaper },\n                getContentAnchorEl: () => null,\n              }}\n            >\n              <MenuItem key={\"all\"} value={\"all\"} style={{ paddingBlock: 0 }}>\n                <Checkbox\n                  size=\"small\"\n                  color=\"primary\"\n                  checked={\n                    getBlockNames().length > 0 &&\n                    selectedBlock.length === getBlockNames().length\n                  }\n                  indeterminate={\n                    selectedBlock.length > 0 &&\n                    selectedBlock.length < getBlockNames().length\n                  }\n                />\n                <ListItemText primary={\"All\"} />\n              </MenuItem>\n              {getBlockNames().map((name) => (\n                <MenuItem key={name} value={name} style={{ paddingBlock: 0 }}>\n                  <Checkbox\n                    size=\"small\"\n                    color=\"primary\"\n                    checked={selectedBlock.indexOf(name) > -1}\n                  />\n                  <ListItemText primary={name} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              autoOk={true}\n              disableToolbar\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              id=\"from-date-picker-inline\"\n              label=\"From\"\n              value={fromDate}\n              onChange={handleFromDateChange}\n              KeyboardButtonProps={{\n                \"aria-labelte\": \"from date\",\n              }}\n              style={{ marginRight: \"1rem\" }}\n              className={classes.dateStyle}\n            />\n\n            <KeyboardDatePicker\n              autoOk={true}\n              disableToolbar\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              id=\"to-date-picker-inline\"\n              label=\"To\"\n              value={toDate}\n              onChange={handleToDateChange}\n              KeyboardButtonProps={{\n                \"aria-label\": \"to date\",\n              }}\n              className={classes.dateStyle}\n            />\n          </MuiPickersUtilsProvider>\n          <FormControl style={{ marginLeft: \"1rem\", maxWidth: \"110px\" }}>\n            <InputLabel id=\"frequency-checkbox-label\">Frequency</InputLabel>\n            <Select\n              labelId=\"frequency-checkbox-label\"\n              id=\"frequency-checkbox\"\n              value={frequency}\n              onChange={handleFrequency}\n            >\n              <MenuItem key={\"full\"} value={\"full\"}>\n                Full\n              </MenuItem>\n              <MenuItem key={\"hourly\"} value={\"hourly\"}>\n                Hr Avg\n              </MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <FormControl\n                className={classes.formControl}\n                style={{ marginRight: \"1rem\" }}\n              >\n                <InputLabel id=\"variants-select-label\">Variants</InputLabel>\n                <Select\n                  //   autoWidth\n                  labelId=\"variants-select-label\"\n                  id=\"variants-simple-select\"\n                  value={selectedVariant}\n                  onChange={handleVariantChange}\n                >\n                  <MenuItem value=\"none\">\n                    <span style={{ color: \"#9e9e9e\" }}>Select</span>\n                  </MenuItem>\n                  {variants.length > 0 &&\n                    variants.map((element) => {\n                      return (\n                        <MenuItem\n                          value={element}\n                          onClick={() => handleVariantClick(element)}\n                        >\n                          {element}\n                        </MenuItem>\n                      );\n                    })}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item style={{ marginRight: \"2rem\" }}>\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                onClick={handleVariantsSave}\n              >\n                Save\n              </Button>\n            </Grid>\n            <Grid item>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={globalSelectAll}\n                    onChange={handleGlobalSelectAllChange}\n                    name=\"checkedA\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Select All\"\n              />\n            </Grid>\n            <Grid item style={{ marginLeft: \".5rem\", paddingRight: \"1.5rem\" }}>\n              <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={handleDownloadBtnClick}\n                disabled={disableDownload}\n              >\n                Download\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      {/* <Grid\n        container\n        alignItems=\"center\"\n        style={{ marginTop: \"1.5rem\", marginBottom: \".5rem\" }}\n        justify=\"space-between\"\n      >\n        <Grid item>\n          <Typography variant=\"h6\" color=\"textSecondary\">\n            Select Parameters\n          </Typography>\n        </Grid>\n      </Grid> */}\n\n      <div className={classes.root} style={{ marginTop: \"1.5rem\" }}>\n        <Accordion defaultExpanded>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            style={{ paddingTop: 0, paddingBottom: 0 }}\n          >\n            <Grid container alignItems=\"center\" justify=\"space-between\">\n              <Grid item>\n                <Typography style={{ color: \"#000\" }}>Common</Typography>\n              </Grid>\n              <Grid item style={{ marginRight: \"2rem\" }}>\n                <FormControlLabel\n                  className={classes.formControlLabelStyle}\n                  onClick={(event) => event.stopPropagation()}\n                  control={\n                    <Checkbox\n                      checked={commonSelectAll}\n                      onChange={handleCommonSelectAllChange}\n                      size=\"small\"\n                      name=\"checkedA\"\n                      color=\"primary\"\n                    />\n                  }\n                  label={<span style={{ fontSize: \".9rem\" }}>Select All</span>}\n                />\n              </Grid>\n            </Grid>\n          </AccordionSummary>\n          <AccordionDetails>\n            <FormGroup row>\n              {commonParams.map((element, index) => (\n                <FormControlLabel\n                  key={element.label}\n                  control={\n                    <Checkbox\n                      checked={element.checked}\n                      onChange={(event) =>\n                        handleCommonParamChange(element.label)\n                      }\n                      size=\"small\"\n                      name={element.label.replace(/\\s/g, \"\")}\n                      color=\"default\"\n                    />\n                  }\n                  label={element.label}\n                />\n              ))}\n            </FormGroup>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion defaultExpanded>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n            // style={{ backgroundColor: \"#9e9e9e\", color: \"#fff\" }}\n          >\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n              <Grid item>\n                <Typography style={{ color: \"#000\" }}>Inverters</Typography>\n              </Grid>\n              <Grid item style={{ marginRight: \"1rem\" }}>\n                <FormControlLabel\n                  onClick={(event) => event.stopPropagation()}\n                  control={\n                    <Checkbox\n                      checked={invertersSelectAll}\n                      onChange={handleInvertersSelectAllChange}\n                      size=\"small\"\n                      name=\"checkedA\"\n                      color=\"primary\"\n                    />\n                  }\n                  label={<span style={{ fontSize: \".9rem\" }}>Select All</span>}\n                />\n              </Grid>\n            </Grid>\n          </AccordionSummary>\n          <AccordionDetails>\n            <FormGroup row>\n              {invertersParams.map((element, index) => (\n                <FormControlLabel\n                  key={element.label}\n                  control={\n                    <Checkbox\n                      checked={element.checked}\n                      onChange={(event) =>\n                        handleInvertersParamChange(element.label)\n                      }\n                      size=\"small\"\n                      name={element.label.replace(/\\s/g, \"\")}\n                      color=\"default\"\n                    />\n                  }\n                  label={element.label}\n                />\n              ))}\n            </FormGroup>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n            // style={{ backgroundColor: \"#9e9e9e\", color: \"#fff\" }}\n          >\n            <Grid container alignItems=\"center\" justify=\"space-between\">\n              <Grid item>\n                <Typography style={{ color: \"#000\" }}>\n                  Inverter Slots\n                </Typography>\n              </Grid>\n              <Grid item style={{ marginRight: \"1rem\" }}>\n                <FormControlLabel\n                  onClick={(event) => event.stopPropagation()}\n                  control={\n                    <Checkbox\n                      checked={inverterSlotsSelectAll}\n                      onChange={handleInverterSlotsSelectAllChange}\n                      size=\"small\"\n                      name=\"checkedA\"\n                      color=\"primary\"\n                    />\n                  }\n                  label={<span style={{ fontSize: \".9rem\" }}>Select All</span>}\n                />\n              </Grid>\n            </Grid>\n          </AccordionSummary>\n          <AccordionDetails>\n            <FormGroup row>\n              {inverterSlotsParams.map((element, index) => (\n                <FormControlLabel\n                  key={element.label}\n                  control={\n                    <Checkbox\n                      checked={element.checked}\n                      onChange={(event) =>\n                        handleInverterSlotsParamChange(element.label)\n                      }\n                      size=\"small\"\n                      name={element.label.replace(/\\s/g, \"\")}\n                      color=\"default\"\n                    />\n                  }\n                  label={element.label}\n                />\n              ))}\n            </FormGroup>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n            // style={{ backgroundColor: \"#9e9e9e\", color: \"#fff\" }}\n          >\n            <Grid container alignItems=\"center\" justify=\"space-between\">\n              <Grid item>\n                <Typography style={{ color: \"#000\" }}>\n                  Inverter Strings\n                </Typography>\n              </Grid>\n              <Grid item style={{ marginRight: \"1rem\" }}>\n                <FormControlLabel\n                  onClick={(event) => event.stopPropagation()}\n                  control={\n                    <Checkbox\n                      checked={inverterStringsSelectAll}\n                      onChange={handleInverterStringsSelectAllChange}\n                      size=\"small\"\n                      name=\"checkedA\"\n                      color=\"primary\"\n                    />\n                  }\n                  label={<span style={{ fontSize: \".9rem\" }}>Select All</span>}\n                />\n              </Grid>\n            </Grid>\n          </AccordionSummary>\n          <AccordionDetails>\n            <FormGroup row>\n              {inverterStringsParams.map((element, index) => (\n                <FormControlLabel\n                  key={element.label}\n                  control={\n                    <Checkbox\n                      checked={element.checked}\n                      onChange={(event) =>\n                        handleInverterStringsParamChange(element.label)\n                      }\n                      size=\"small\"\n                      name={element.label.replace(/\\s/g, \"\")}\n                      color=\"default\"\n                    />\n                  }\n                  label={element.label}\n                />\n              ))}\n            </FormGroup>\n          </AccordionDetails>\n        </Accordion>\n      </div>\n      <Snackbar\n        open={openSnackbar}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleSnackbarClose}\n      >\n        <Alert onClose={handleSnackbarClose} severity={alertMessage.severity}>\n          {alertMessage.message}\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }}></div>\n    </div>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"x\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"x\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"x\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"x\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv5)) ? \"-\" : Number(value.inv5).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv6)) ? \"-\" : Number(value.inv6).toFixed(2)}\n        </span>\n      </StyledTableCell> */}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"x\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"x\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"x\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"x\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      {/* <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv5)) ? \"-\" : Number(value.inv5).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv6)) ? \"-\" : Number(value.inv6).toFixed(2)}\n      </StyledTableCell> */}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={7}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]2[0-4]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            {/* <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 5</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 6</strong>\n            </StyledTableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Yemmiganur/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Yemmiganur({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/yemmiganur/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    const startTime = new Date(1625509800000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/yemmiganur/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/yemmiganur/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/yemmiganur/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/yemmiganur/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/yemmiganur/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S2CB1 I\",\n      \"S8 / S2CB2 I\",\n      \"S9 / S2CB3 I\",\n      \"S10 / S2CB4 I\",\n      \"S11 / S2CB5 I\",\n      \"S12 / S2CB6 I\",\n      \"S13 / S3CB1 I\",\n      \"S14 / S3CB2 I\",\n      \"S15 / S3CB3 I\",\n      \"S16 / S3CB4 I\",\n      \"S17 / S3CB5 I\",\n      \"S18 / S3CB6 I\",\n      \"S19 / S4CB1 I\",\n      \"S20 / S4CB2 I\",\n      \"S21 / S4CB3 I\",\n      \"S22 / S4CB4 I\",\n      \"S23 / S4CB5 I\",\n      \"S24 / S4CB6 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n      let inv6Value = NaN;\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n        if (arrayFromObject[heading.length * 5 + i][1]) {\n          inv6Value = arrayFromObject[heading.length * 5 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n        inv6: inv6Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/yemmiganur/grid/B0\" + block, {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block B0\" + block + \":\", response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to yemmiganur site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to yemmiganur site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to yemmiganur site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Yemmiganur</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">30 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 6.62}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={45} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"1rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"x\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"x\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"x\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"x\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv5))\n            ? \"-\"\n            : Number(value.inv5) === -111\n            ? \"x\"\n            : Number(value.inv5).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv6))\n            ? \"-\"\n            : Number(value.inv6) === -111\n            ? \"x\"\n            : Number(value.inv6).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv7))\n            ? \"-\"\n            : Number(value.inv7) === -111\n            ? \"x\"\n            : Number(value.inv7).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv8))\n            ? \"-\"\n            : Number(value.inv8) === -111\n            ? \"x\"\n            : Number(value.inv8).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv5)) ? \"-\" : Number(value.inv5).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv6)) ? \"-\" : Number(value.inv6).toFixed(2)}\n        </span>\n      </StyledTableCell> */}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"x\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"x\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"x\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"x\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv5))\n          ? \"-\"\n          : Number(value.inv5) === -111\n          ? \"x\"\n          : Number(value.inv5).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv6))\n          ? \"-\"\n          : Number(value.inv6) === -111\n          ? \"x\"\n          : Number(value.inv6).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv7))\n          ? \"-\"\n          : Number(value.inv7) === -111\n          ? \"x\"\n          : Number(value.inv7).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv8))\n          ? \"-\"\n          : Number(value.inv8) === -111\n          ? \"x\"\n          : Number(value.inv8).toFixed(2)}\n      </StyledTableCell>\n      {/* <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv5)) ? \"-\" : Number(value.inv5).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv6)) ? \"-\" : Number(value.inv6).toFixed(2)}\n      </StyledTableCell> */}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={9}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]2[0-4]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 5</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 6</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 7</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 8</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Mahoba/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Mahoba({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/mahoba/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Jul 20, 2021  12:00 pm\n    const startTime = new Date(1626762600000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/mahoba/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/mahoba/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/mahoba/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/mahoba/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/mahoba/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S2CB1 I\",\n      \"S8 / S2CB2 I\",\n      \"S9 / S2CB3 I\",\n      \"S10 / S2CB4 I\",\n      \"S11 / S2CB5 I\",\n      \"S12 / S2CB6 I\",\n      \"S13 / S3CB1 I\",\n      \"S14 / S3CB2 I\",\n      \"S15 / S3CB3 I\",\n      \"S16 / S3CB4 I\",\n      \"S17 / S3CB5 I\",\n      \"S18 / S3CB6 I\",\n      \"S19 / S4CB1 I\",\n      \"S20 / S4CB2 I\",\n      \"S21 / S4CB3 I\",\n      \"S22 / S4CB4 I\",\n      \"S23 / S4CB5 I\",\n      \"S24 / S4CB6 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n      let inv6Value = NaN;\n      let inv7Value = NaN;\n      let inv8Value = NaN;\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n        if (arrayFromObject[heading.length * 5 + i][1]) {\n          inv6Value = arrayFromObject[heading.length * 5 + i][1];\n        }\n        if (arrayFromObject[heading.length * 6 + i][1]) {\n          inv7Value = arrayFromObject[heading.length * 6 + i][1];\n        }\n        if (arrayFromObject[heading.length * 7 + i][1]) {\n          inv8Value = arrayFromObject[heading.length * 7 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n        inv6: inv6Value,\n        inv7: inv7Value,\n        inv8: inv8Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/mahoba/grid/B0\" + block, {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block B0\" + block + \":\", response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to mahoba site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to mahoba site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to mahoba site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Mahoba</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">30 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 8.93}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={45} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"1rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"x\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"x\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"x\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"x\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv5))\n            ? \"-\"\n            : Number(value.inv5) === -111\n            ? \"x\"\n            : Number(value.inv5).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"x\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"x\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"x\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"x\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv5))\n          ? \"-\"\n          : Number(value.inv5) === -111\n          ? \"x\"\n          : Number(value.inv5).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 5</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Balangir/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Balangir({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/balangir/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\n        //   \"time: \",\n        //   new Date(response.data.time * 1000).toLocaleString()\n        // );\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // July 23, 2021 4:00:00 PM\n    const startTime = new Date(1627056000000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/balangir/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/balangir/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/balangir/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/balangir/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/balangir/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n\n    if (!block) {\n      localStorage.setItem(\"siteInverterTableBlock\", 1);\n      block = localStorage.getItem(\"siteInverterTableBlock\");\n    }\n\n    axios\n      .get(serverUrl + \"/balangir/grid/B0\" + block, {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block B0\" + block + \":\", response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    localStorage.setItem(\"siteInverterTableBlock\", event.target.value);\n\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to balangir site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    // console.log(\n    //   getEnablePacket(),\n    //   new Date(newEndTime).toLocaleString(),\n    //   new Date(timestamp).toLocaleString()\n    // );\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(\n      localStorage.getItem(\"siteInverterTableBlock\"),\n      startTime,\n      newEndTime,\n      beginTime\n    );\n  };\n\n  // useEffect to fetch data related to balangir site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to balangir site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n      localStorage.setItem(\"siteInverterTableBlock\", 1);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Balangir</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">25 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 7.28}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={40} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                  <MenuItem value={8}>B08</MenuItem>\n                  <MenuItem value={9}>B09</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"x\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"x\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"x\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"x\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={3}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/BhadlaL2/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function BhadlaL2({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/bhadlal2/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // July 26, 2021 6:00:00 PM\n    const startTime = new Date(1627322400000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/bhadlal2/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/bhadlal2/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/bhadlal2/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/bhadlal2/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/bhadlal2/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/bhadlal2/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to bhadlal2 site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to bhadlal2 site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to bhadlal2 site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Bhadla L2</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">100 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 2.44}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability * 100}\n        plant_availability={cardsValues.plant_availability * 100}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={150} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 120]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                  <MenuItem value={8}>B08</MenuItem>\n                  <MenuItem value={9}>B09</MenuItem>\n                  <MenuItem value={10}>B10</MenuItem>\n                  <MenuItem value={11}>B11</MenuItem>\n                  <MenuItem value={12}>B12</MenuItem>\n                  <MenuItem value={13}>B13</MenuItem>\n                  <MenuItem value={14}>B14</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"x\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"x\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"x\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"x\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"x\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"x\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"x\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"x\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\n// import EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Jhandekalan/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\n// import customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Jhandekalan({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/jhandekalan/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // July 27, 2021 12:00:00 AM\n    const startTime = new Date(1627344000000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/jhandekalan/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/jhandekalan/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/jhandekalan/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/jhandekalan/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/jhandekalan/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/jhandekalan/grid/B0\" + block, {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block B0\" + block + \":\", response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to jhandekalan site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to jhandekalan site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to jhandekalan site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Jhandekalan</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">24 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 7.16}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={40} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Nangla/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Nangla({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/nangla/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Aug 30, 2021 12:00:00 PM\n    const startTime = new Date(1630324800000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/nangla/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/nangla/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/nangla/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/nangla/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/nangla/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/nangla/grid/B0\" + block, {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block B0\" + block + \":\", response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to nangla site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to nangla site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to nangla site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Nangla</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">15 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 7.57}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={30} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"x\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"x\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"x\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"x\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={3}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/BhadlaL3/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function BhadlaL3({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/bhadlal3/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // July 30, 2021 6:00:00 PM\n    const startTime = new Date(1627668000000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/bhadlal3/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/bhadlal3/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/bhadlal3/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/bhadlal3/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/bhadlal3/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/bhadlal3/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to bhadlal3 site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to bhadlal3 site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to bhadlal3 site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Bhadla L3</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">100 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 2.44}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability * 100}\n        plant_availability={cardsValues.plant_availability * 100}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={150} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 100]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                  <MenuItem value={8}>B08</MenuItem>\n                  <MenuItem value={9}>B09</MenuItem>\n                  <MenuItem value={10}>B10</MenuItem>\n                  <MenuItem value={11}>B11</MenuItem>\n                  <MenuItem value={12}>B12</MenuItem>\n                  <MenuItem value={13}>B13</MenuItem>\n                  <MenuItem value={14}>B14</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: { width: \"100%\" },\n});\n\nexport default function CustomizedTable({ data }) {\n  const classes = useStyles();\n\n  const [page, setPage] = useState(0);\n\n  const [pageCount, setPageCount] = useState(0);\n\n  const [paginatedData, setPaginatedData] = useState([]);\n\n  const [energyHeaders, setEnergyHeaders] = useState(null);\n\n  const getEnergyDifference = (lastValue, firstValue) => {\n    let numLast = Number(lastValue);\n    let numFirst = Number(firstValue);\n    return numLast - numFirst;\n  };\n\n  const formatEnergyHeaders = () => {\n    // Set colors on energy headers\n    let energyHeaders = {};\n    if (data.length > 0) {\n      let maxEnergyDifference = null;\n      let maxEnergyDifferenceKey = null;\n      // Find max difference\n      for (let i = 1; i <= 12; i++) {\n        let difference = getEnergyDifference(\n          data[0][\"e\" + i],\n          data[data.length - 1][\"e\" + i]\n        );\n        if (maxEnergyDifference === null) {\n          maxEnergyDifference = difference;\n          maxEnergyDifferenceKey = \"e\" + i;\n        }\n        if (maxEnergyDifference < difference) {\n          maxEnergyDifference = difference;\n          maxEnergyDifferenceKey = \"e\" + i;\n        }\n      }\n      // Set colors based on difference\n      for (let i = 1; i <= 12; i++) {\n        let difference = getEnergyDifference(\n          data[0][\"e\" + i],\n          data[data.length - 1][\"e\" + i]\n        );\n        if (\n          difference <\n          maxEnergyDifference - maxEnergyDifference * (5 / 100)\n        ) {\n          energyHeaders[\"e\" + i] = [difference, \"red\"];\n        } else {\n          energyHeaders[\"e\" + i] = [difference, \"black\"];\n        }\n      }\n      energyHeaders[maxEnergyDifferenceKey] = [maxEnergyDifference, \"green\"];\n      setEnergyHeaders(Object.entries(energyHeaders));\n    }\n  };\n\n  useEffect(() => {\n    setPage(() => (data.length > 0 ? 1 : 0));\n    setPageCount(() => (data.length > 0 ? Math.ceil(data.length / 10) : 0));\n    setPaginatedData(() => (data.length > 0 ? data.slice(0, 10) : []));\n    formatEnergyHeaders();\n  }, [data]);\n\n  const handlePageChange = (event, value) => {\n    let paginatedData = data.slice(10 * (value - 1), 10 * value);\n    setPaginatedData(paginatedData);\n    setPage(value);\n  };\n\n  return (\n    <div>\n      <TableContainer component={Paper} className={classes.tableContainer}>\n        <Table aria-label=\"customized table\" size=\"small\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell\n                style={{\n                  position: \"sticky\",\n                  left: 0,\n                }}\n              >\n                Time\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">I1</StyledTableCell>\n              <StyledTableCell align=\"right\">I2</StyledTableCell>\n              <StyledTableCell align=\"right\">I3</StyledTableCell>\n              <StyledTableCell align=\"right\">I4</StyledTableCell>\n              <StyledTableCell align=\"right\">I5</StyledTableCell>\n              <StyledTableCell align=\"right\">I6</StyledTableCell>\n              <StyledTableCell align=\"right\">I7</StyledTableCell>\n              <StyledTableCell align=\"right\">I8</StyledTableCell>\n              <StyledTableCell align=\"right\">I9</StyledTableCell>\n              <StyledTableCell align=\"right\">I10</StyledTableCell>\n              <StyledTableCell align=\"right\">I11</StyledTableCell>\n              <StyledTableCell align=\"right\">I12</StyledTableCell>\n              {energyHeaders &&\n                energyHeaders.map((element, index) => {\n                  let title = \"E\" + (index + 1);\n                  return (\n                    <StyledTableCell align=\"right\">\n                      {title}&nbsp;\n                      <span style={{ color: element[1][1] }}>\n                        ({element[1][0]})\n                      </span>\n                    </StyledTableCell>\n                  );\n                })}\n              <StyledTableCell align=\"right\">Temp</StyledTableCell>\n              <StyledTableCell align=\"right\">VDC</StyledTableCell>\n              <StyledTableCell align=\"right\">Total&nbsp;Energy</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedData.map((row) => (\n              <StyledTableRow key={String(row.time).split(\" \")[1]}>\n                <StyledTableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  style={{\n                    position: \"sticky\",\n                    left: 0,\n                    backgroundColor: \"white\",\n                  }}\n                >\n                  {String(row.time).split(\" \")[1]}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\" style={{ color: row.i1[1] }}>\n                  {row.i1[0]}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\" style={{ color: row.i2[1] }}>\n                  {row.i2[0]}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\" style={{ color: row.i3[1] }}>\n                  {row.i3[0]}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\" style={{ color: row.i4[1] }}>\n                  {row.i4[0]}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\" style={{ color: row.i5[1] }}>\n                  {row.i5[0]}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\" style={{ color: row.i6[1] }}>\n                  {row.i6[0]}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\" style={{ color: row.i7[1] }}>\n                  {row.i7[0]}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\" style={{ color: row.i8[1] }}>\n                  {row.i8[0]}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\" style={{ color: row.i9[1] }}>\n                  {row.i9[0]}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\" style={{ color: row.i10[1] }}>\n                  {row.i10[0]}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\" style={{ color: row.i11[1] }}>\n                  {row.i11[0]}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\" style={{ color: row.i12[1] }}>\n                  {row.i12[0]}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{row.e1}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.e2}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.e3}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.e4}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.e5}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.e6}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.e7}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.e8}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.e9}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.e10}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.e11}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.e12}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.intertemp}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.vdc}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {row.totalenergy}\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <div\n        style={{\n          marginTop: \".5rem\",\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <Pagination\n          count={pageCount}\n          page={page}\n          onChange={handlePageChange}\n          shape=\"rounded\"\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nexport default function CustomizedLineChart({\n  data,\n  lines,\n  interval,\n  width,\n  height,\n  leftAxisY,\n  rightAxisY,\n}) {\n  const [opacity, setOpacity] = useState({\n    i1: 1,\n    i2: 1,\n    i3: 1,\n    i4: 1,\n    i5: 1,\n    i6: 1,\n    i7: 1,\n    i8: 1,\n    i9: 1,\n    i10: 1,\n    i11: 1,\n    i12: 1,\n    temperature: 1,\n  });\n\n  const selectLine = (dataKey) => {\n    setOpacity((prevState) => {\n      return { ...prevState, [dataKey]: prevState[dataKey] === 0 ? 1 : 0 };\n    });\n  };\n\n  const renderLegend = ({ payload }) => {\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\" }}>\n        {payload.map(({ dataKey, color }) => {\n          return (\n            <strong\n              key={dataKey}\n              style={{\n                fontSize: \"1rem\",\n                color: color,\n                cursor: \"pointer\",\n                opacity: opacity[dataKey] === 0 ? 0.5 : 1,\n              }}\n              onClick={() => selectLine(dataKey)}\n            >\n              {String(dataKey).toLowerCase() === \"temperature\"\n                ? \"TEMP\"\n                : String(dataKey).toUpperCase()}\n            </strong>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <LineChart\n        // width={width}\n        // height={height}\n        data={data}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"time\" interval={interval} />\n        <YAxis\n          yAxisId=\"left\"\n          domain={leftAxisY}\n          allowDataOverflow={true}\n          // unit={\" I\"}\n          label={{ value: \"I\", position: \"insideLeft\", offset: 20 }}\n        />\n        <YAxis\n          yAxisId=\"right\"\n          domain={rightAxisY}\n          orientation=\"right\"\n          allowDataOverflow={true}\n          // unit={\"°C\"}\n          label={{ value: \"°C\", position: \"insideRight\", offset: 20 }}\n        />\n        <Tooltip />\n        <Legend content={renderLegend} />\n        {Array.from({ length: lines }, (_, i) => i + 1).map((element) => (\n          <Line\n            name={\"I\" + element}\n            yAxisId=\"left\"\n            type=\"monotone\"\n            dataKey={\"i\" + element}\n            stroke=\"#82ca9d\"\n            strokeWidth={2}\n            strokeOpacity={opacity[\"i\" + element]}\n            activeDot={{ r: 6 }}\n            dot={false}\n          />\n        ))}\n        <Line\n          name=\"Temperature\"\n          yAxisId=\"right\"\n          type=\"monotone\"\n          dataKey=\"temperature\"\n          stroke=\"#EC7063\"\n          strokeWidth={2}\n          strokeOpacity={opacity.temperature}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./SCB.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Card, Grid, Typography, Button } from \"@material-ui/core\";\nimport CustomBarChart from \"../InverterEfficiency/CustomBarChart\";\nimport CustomLineChart from \"../InverterEfficiency/CustomLineChart\";\nimport axios from \"axios\";\nimport { ML_URL, SERVER_URL } from \"../../constants/constants\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n} from \"@material-ui/pickers\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport BiaxialLineChart from \"../mlPredictions/BiaxialLineChart\";\nimport CustomizedTable from \"./CustomizedTable\";\nimport CustomizedLineChart from \"./CustomizedLineChart\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { AppState } from \"../../AppContext\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n}));\n\nconst formatCurrentOrEnergyDataForTable = (data, letter) => {\n  // Current or Energy => coe\n  let coeData = [];\n\n  let pattern = \"\";\n  if (letter === \"i\") {\n    pattern = /i[1-9]|i[1][0-2]/;\n  } else if (letter === \"e\") {\n    pattern = /e[1-9]|e[1][0-2]/;\n  }\n\n  data.forEach((element) => {\n    let elementArray = Object.entries(element);\n    let coeValuesInRow = {};\n\n    // key, value\n    let maxCoeInRow = [\"\", null];\n\n    elementArray.forEach((innerElement) => {\n      if (innerElement[0].match(pattern)) {\n        let numInnerElement = Number(innerElement[1]);\n        if (maxCoeInRow[1] === null) {\n          maxCoeInRow[0] = innerElement[0];\n          maxCoeInRow[1] = numInnerElement;\n        }\n        if (maxCoeInRow[1] < innerElement[1]) {\n          maxCoeInRow[0] = innerElement[0];\n          maxCoeInRow[1] = numInnerElement;\n        }\n      }\n    });\n\n    elementArray.forEach((innerElement) => {\n      if (innerElement[0].match(pattern)) {\n        let numInnerElement = Number(innerElement[1]);\n        if (numInnerElement < maxCoeInRow[1] - maxCoeInRow[1] * (5 / 100)) {\n          // Values less than 95 percent of max current value\n          coeValuesInRow[innerElement[0]] = [numInnerElement, \"red\"];\n        } else {\n          // Values greater than or equal to 95 percent of max current value\n          coeValuesInRow[innerElement[0]] = [numInnerElement, \"black\"];\n        }\n      }\n    });\n\n    coeValuesInRow[maxCoeInRow[0]] = [maxCoeInRow[1], \"green\"];\n    coeData.push(coeValuesInRow);\n  });\n\n  return coeData;\n};\n\nexport default function SCBOnline({ handleSessionExpire }) {\n  const classes = useStyles();\n\n  let source = axios.CancelToken.source();\n\n  const userToken = localStorage.getItem(\"userToken\");\n\n  const { setEnabledLinearProgress } = AppState();\n  const [disabledViewBtn, setDisabledViewBtn] = useState(false);\n\n  const [customizedTableData, setCustomizedTableData] = useState([]);\n\n  const [customizedLineChartData, setCustomizedLineChartData] = useState([\n    {\n      time: \"00:00\",\n      i1: 0,\n      i2: 0,\n      i3: 0,\n      i4: 0,\n      i5: 0,\n      i6: 0,\n      i7: 0,\n      i8: 0,\n      i9: 0,\n      i10: 0,\n      i11: 0,\n      i12: 0,\n      intertemp: 0,\n    },\n  ]);\n\n  // States related to SCB\n  const [selectedSite, setSelectedSite] = useState(\"gadarpur\");\n\n  const [scb, setSCB] = useState(1);\n  const [totalSCB, setTotalSCB] = useState(10);\n\n  const [block, setBlock] = useState(1);\n  const [totalBlocks, setTotalBlocks] = useState(6);\n\n  const [inverter, setInverter] = useState(1);\n  const [totalInverters, setTotalInverters] = useState(4);\n\n  const [smb, setSMB] = useState(1);\n  const [totalSMB, setTotalSMB] = useState(10);\n\n  // For line chart\n  const [leftYMin, setLeftYMin] = useState(0);\n\n  // CSV\n  const [enableExcelBtn, setEnableExcelBtn] = useState(true);\n  // Energy CSV\n  const [enableEnergyCSVBtn, setEnableEnergyCSVBtn] = useState(true);\n\n  let [currentDataForTable, setCurrentDataForTable] = useState([]);\n\n  const handleLeftYMinChange = (event) => {\n    setLeftYMin(Number(event.target.value));\n  };\n\n  /**\n   * Functions related to time component\n   */\n\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  useEffect(() => {\n    return () => {\n      setEnabledLinearProgress(false);\n    };\n  }, []);\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const getMinDateForPicker = () => {\n    let startTime = new Date();\n    if (selectedSite === \"gadarpur\") {\n      // Aug 19, 2021 6:00:00 PM\n      startTime.setTime(1629396000000);\n    }\n\n    return startTime;\n  };\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleTimeReset = () => {\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  /**\n   * END of functions related to time component\n   */\n\n  const handleSiteChange = (event) => {\n    setSelectedSite(event.target.value);\n  };\n\n  const handleBlockChange = (event) => {\n    setBlock(event.target.value);\n  };\n\n  const handleInverterChange = (event) => {\n    setInverter(event.target.value);\n  };\n\n  const handleSCBChange = (event) => {\n    setSCB(event.target.value);\n  };\n\n  // Status and time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, selectedSite) => {\n    // console.log(\"getStatusAndTime function called\", selectedSite);\n    setEnabledLinearProgress(true);\n    axios\n      .get(SERVER_URL + \"/\" + selectedSite + \"/site\", {\n        headers: {\n          cancelToken: source.token,\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n        setEnabledLinearProgress(false);\n      })\n      .catch((error) => {\n        // console.log(error);\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n        }\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  const getCurrentDataForLineChart = (rawData) => {\n    let lineChartData = [];\n    rawData.forEach((element) => {\n      const {\n        i1,\n        i2,\n        i3,\n        i4,\n        i5,\n        i6,\n        i7,\n        i8,\n        i9,\n        i10,\n        i11,\n        i12,\n        intertemp,\n        time,\n      } = {\n        ...element,\n      };\n      lineChartData.push({\n        i1,\n        i2,\n        i3,\n        i4,\n        i5,\n        i6,\n        i7,\n        i8,\n        i9,\n        i10,\n        i11,\n        i12,\n        temperature: intertemp,\n        time: String(time).split(\" \")[1],\n      });\n    });\n    return lineChartData.reverse();\n  };\n\n  const fetchData = (endTime, selectedSite) => {\n    // console.log(\"Fetching data for \", selectedSite);\n    setEnabledLinearProgress(true);\n    setDisabledViewBtn(true);\n    let newEndTime = endTime;\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n    } else {\n      newEndTime = endTime;\n    }\n\n    // Status and time\n    getStatusAndTime(beginTime, newEndTime, selectedSite);\n\n    // console.log(beginTime, new Date(newEndTime).toLocaleTimeString(), scb);\n\n    // Fetch customized table data\n    axios\n      .post(\n        SERVER_URL + \"/\" + selectedSite + \"/scb\",\n        {\n          fromDate: beginTime,\n          endTime: newEndTime,\n          block: \"b0\" + block,\n          inverter: String(inverter),\n          smb: String(scb),\n        },\n        {\n          cancelToken: source.token,\n          headers: {\n            jwtToken: userToken,\n          },\n        }\n      )\n      .then((response) => {\n        setCustomizedLineChartData(getCurrentDataForLineChart(response.data));\n        let currentData = formatCurrentOrEnergyDataForTable(response.data, \"i\");\n        // let energyData = formatCurrentOrEnergyDataForTable(response.data, \"e\");\n        let formattedDataForTable = [];\n        // Insert modified current data in table\n        response.data.forEach((element, index) => {\n          let row = { ...element, ...currentData[index] };\n          formattedDataForTable.push(row);\n        });\n        setCustomizedTableData(formattedDataForTable);\n        setDisabledViewBtn(false);\n        setEnabledLinearProgress(false);\n      })\n      .catch((error) => {\n        // console.log(error);\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n        }\n        // handleSessionExpire();\n        setDisabledViewBtn(false);\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  const handleViewBtnClick = () => {\n    fetchData(mainTime, selectedSite);\n  };\n\n  useEffect(() => {\n    fetchData(mainTime, selectedSite);\n\n    // Fetch data every 5 minutes\n    const interval = setInterval(() => {\n      fetchData(mainTime, selectedSite);\n    }, 300000);\n\n    return () => {\n      clearInterval(interval);\n      source.cancel();\n    };\n  }, [mainTime]);\n\n  const getExcelFile = () => {\n    setEnabledLinearProgress(true);\n    setEnableExcelBtn(false);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let startTime = fiveAM.getTime();\n\n    let newEndTime = null;\n    if (isTimeReset) {\n      newEndTime = Date.now();\n    } else {\n      newEndTime = mainTime;\n    }\n\n    axios\n      .post(\n        SERVER_URL + \"/\" + selectedSite + \"/scb/excel\",\n        {\n          fromDate: startTime,\n          endTime: newEndTime,\n          block: \"b0\" + block,\n          inverter: inverter,\n          smb: scb,\n        },\n        {\n          cancelToken: source.token,\n          headers: {\n            jwtToken: userToken,\n            responseType: \"blob\",\n          },\n        }\n      )\n      .then((response) => {\n        setEnabledLinearProgress(false);\n        const downloadUrl = window.URL.createObjectURL(\n          new Blob([response.data])\n        );\n        const link = document.createElement(\"a\");\n        link.href = downloadUrl;\n        let startDate = new Date(startTime);\n        let endDate = new Date(mainTime);\n        let filename = `SCB_${endDate.getDate()}_${\n          endDate.getMonth() + 1\n        }_${endDate.getFullYear()}.csv`;\n        link.setAttribute(\"download\", filename);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        setEnableExcelBtn(true);\n      })\n      .catch((error) => {\n        setEnabledLinearProgress(false);\n        setEnableExcelBtn(true);\n      });\n  };\n\n  const getEnergyCSV = () => {\n    setEnabledLinearProgress(true);\n    setEnableEnergyCSVBtn(false);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let startTime = fiveAM.getTime();\n\n    let newEndTime = null;\n    if (isTimeReset) {\n      newEndTime = Date.now();\n    } else {\n      newEndTime = mainTime;\n    }\n\n    axios\n      .post(\n        SERVER_URL + \"/\" + selectedSite + \"/scb/energy\",\n        {\n          fromDate: startTime,\n          endTime: newEndTime,\n          block: \"b0\" + block,\n          inverter: inverter,\n        },\n        {\n          cancelToken: source.token,\n          headers: {\n            jwtToken: userToken,\n            responseType: \"blob\",\n          },\n        }\n      )\n      .then((response) => {\n        setEnabledLinearProgress(false);\n        const downloadUrl = window.URL.createObjectURL(\n          new Blob([response.data])\n        );\n        const link = document.createElement(\"a\");\n        link.href = downloadUrl;\n        let endDate = new Date(mainTime);\n        let filename = `Energy_export_${block}_${inverter}__${endDate.getDate()}_${\n          endDate.getMonth() + 1\n        }_${endDate.getFullYear()}.csv`;\n        link.setAttribute(\"download\", filename);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        setEnableEnergyCSVBtn(true);\n      })\n      .catch((error) => {\n        setEnabledLinearProgress(false);\n        setEnableEnergyCSVBtn(true);\n      });\n  };\n\n  return (\n    <div style={{ paddingTop: \".5rem\", width: \"90vw\" }}>\n      <Grid container alignItems=\"center\" justify=\"space-between\">\n        <Grid item>\n          <Grid container alignItems=\"flex-end\">\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <FormControl className={classes.siteFormControl}>\n                <InputLabel id=\"site-select-label\">Site</InputLabel>\n                <Select\n                  labelId=\"site-select-label\"\n                  id=\"site-select\"\n                  value={selectedSite}\n                  onChange={handleSiteChange}\n                >\n                  <MenuItem value={\"gadarpur\"}>\n                    <span>Gadarpur&ensp;</span>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"block-select-label\">Block</InputLabel>\n                <Select\n                  labelId=\"block-select-label\"\n                  id=\"block-select\"\n                  value={block}\n                  onChange={handleBlockChange}\n                >\n                  {Array.from({ length: totalBlocks }, (_, i) => i + 1).map(\n                    (element, index) => {\n                      return (\n                        <MenuItem key={index} value={element}>\n                          <span>{element}&ensp;</span>\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <FormControl>\n                <InputLabel id=\"inverter-select-label\">Inverter</InputLabel>\n                <Select\n                  labelId=\"inverter-select-label\"\n                  id=\"inverter-select\"\n                  value={inverter}\n                  onChange={handleInverterChange}\n                >\n                  {Array.from({ length: totalInverters }, (_, i) => i + 1).map(\n                    (element, index) => {\n                      return (\n                        <MenuItem key={index} value={element}>\n                          <span variant=\"h6\">{element}&ensp;</span>\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <FormControl>\n                <InputLabel id=\"scb-select-label\">SCB</InputLabel>\n                <Select\n                  labelId=\"scb-select-label\"\n                  id=\"scb-select\"\n                  value={scb}\n                  onChange={handleSCBChange}\n                >\n                  {Array.from({ length: totalSCB }, (_, i) => i + 1).map(\n                    (element) => {\n                      return (\n                        <MenuItem value={element}>\n                          <span variant=\"h6\">{element}&ensp;</span>\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item style={{ marginRight: \".5rem\" }}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleViewBtnClick}\n                disabled={disabledViewBtn}\n              >\n                {disabledViewBtn ? \"Loading\" : \"View\"}\n              </Button>\n            </Grid>\n            <Grid item style={{ marginRight: \".5rem\" }}>\n              <Button\n                variant=\"outlined\"\n                onClick={getExcelFile}\n                disabled={!enableExcelBtn}\n              >\n                CSV\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                onClick={getEnergyCSV}\n                disabled={!enableEnergyCSVBtn}\n              >\n                Energy CSV\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item style={{ marginRight: \"2rem\" }}>\n              <Grid container>\n                <Grid item>\n                  {status === 0 ? (\n                    // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                    //   Offline\n                    // </span>\n                    <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                      Offline\n                    </Typography>\n                  ) : (\n                    // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                    //   Online\n                    // </span>\n                    <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                      Online\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n                <Grid item>\n                  {timestamp === undefined ? (\n                    <CircularProgress\n                      size=\"1.25rem\"\n                      // style={{ marginRight: '.5rem' }}\n                    />\n                  ) : (\n                    <Typography variant=\"h6\">\n                      {getFormattedDateAndTimeString(timestamp)}\n                    </Typography>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item>\n              <IconButton onClick={() => setOpenDateTimePicker(true)}>\n                <EventIcon color=\"action\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n            <Grid item style={{ paddingRight: \"0rem\", marginRight: \"1rem\" }}>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <div style={{ marginBlock: \"1.5rem\" }}></div>\n      {selectedSite && (\n        <div>\n          <Paper\n            style={{\n              paddingTop: \"1rem\",\n              paddingBottom: \".5rem\",\n            }}\n          >\n            {/* <div\n              style={{\n                textAlign: \"right\",\n                marginRight: \"2rem\",\n                marginBottom: \".5rem\",\n              }}\n            >\n              <label htmlFor=\"min\">Scale Min: </label>\n              <input\n                type=\"number\"\n                onChange={handleLeftYMinChange}\n                id=\"min\"\n                name=\"min\"\n                placeholder=\"0\"\n                step=\"1\"\n                min=\"0\"\n                max=\"12\"\n                style={{\n                  width: \"3rem\",\n                }}\n              />\n            </div> */}\n            <div style={{ height: \"400px\" }}>\n              <CustomizedLineChart\n                data={customizedLineChartData}\n                lines={12}\n                interval={12}\n                leftAxisY={[leftYMin, 18]}\n                rightAxisY={[0, 64]}\n              />\n            </div>\n          </Paper>\n          <div style={{ marginBlock: \"1.75rem\" }}></div>\n          <CustomizedTable data={customizedTableData} />\n        </div>\n      )}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"1.5rem\" }}></div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./SCB.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Card, Grid, Typography, Button } from \"@material-ui/core\";\nimport CustomBarChart from \"../InverterEfficiency/CustomBarChart\";\nimport CustomLineChart from \"../InverterEfficiency/CustomLineChart\";\nimport axios from \"axios\";\nimport { ML_URL, SERVER_URL } from \"../../constants/constants\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport BiaxialLineChart from \"../mlPredictions/BiaxialLineChart\";\nimport CustomizedTable from \"./CustomizedTable\";\nimport CustomizedLineChart from \"./CustomizedLineChart\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { AppState } from \"../../AppContext\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  textField: {\n    width: 150,\n  },\n}));\n\nconst formatCurrentOrEnergyDataForTable = (data, letter) => {\n  // Current or Energy => coe\n  let coeData = [];\n\n  let pattern = \"\";\n  if (letter === \"i\") {\n    pattern = /i[1-9]|i[1][0-2]/;\n  } else if (letter === \"e\") {\n    pattern = /e[1-9]|e[1][0-2]/;\n  }\n\n  data.forEach((element) => {\n    let elementArray = Object.entries(element);\n    let coeValuesInRow = {};\n\n    // key, value\n    let maxCoeInRow = [\"\", null];\n\n    elementArray.forEach((innerElement) => {\n      if (innerElement[0].match(pattern)) {\n        let numInnerElement = Number(innerElement[1]);\n        if (maxCoeInRow[1] === null) {\n          maxCoeInRow[0] = innerElement[0];\n          maxCoeInRow[1] = numInnerElement;\n        }\n        if (maxCoeInRow[1] < innerElement[1]) {\n          maxCoeInRow[0] = innerElement[0];\n          maxCoeInRow[1] = numInnerElement;\n        }\n      }\n    });\n\n    elementArray.forEach((innerElement) => {\n      if (innerElement[0].match(pattern)) {\n        let numInnerElement = Number(innerElement[1]);\n        if (numInnerElement < maxCoeInRow[1] - maxCoeInRow[1] * (5 / 100)) {\n          // Values less than 95 percent of max current value\n          coeValuesInRow[innerElement[0]] = [numInnerElement, \"red\"];\n        } else {\n          // Values greater than or equal to 95 percent of max current value\n          coeValuesInRow[innerElement[0]] = [numInnerElement, \"black\"];\n        }\n      }\n    });\n\n    coeValuesInRow[maxCoeInRow[0]] = [maxCoeInRow[1], \"green\"];\n    coeData.push(coeValuesInRow);\n  });\n\n  return coeData;\n};\n\nexport default function SCBCustom({ handleSessionExpire }) {\n  const classes = useStyles();\n  const { setEnabledLinearProgress } = AppState();\n\n  let source = axios.CancelToken.source();\n\n  const userToken = localStorage.getItem(\"userToken\");\n\n  const [customizedTableData, setCustomizedTableData] = useState([]);\n\n  const [customizedLineChartData, setCustomizedLineChartData] = useState([\n    {\n      time: \"00:00\",\n      i1: 0,\n      i2: 0,\n      i3: 0,\n      i4: 0,\n      i5: 0,\n      i6: 0,\n      i7: 0,\n      i8: 0,\n      i9: 0,\n      i10: 0,\n      i11: 0,\n      i12: 0,\n      intertemp: 0,\n    },\n  ]);\n\n  // States related to SCB\n  const [selectedSite, setSelectedSite] = useState(\"gadarpur\");\n\n  const [scb, setSCB] = useState(1);\n  const [totalSCB, setTotalSCB] = useState(10);\n\n  const [block, setBlock] = useState(1);\n  const [totalBlocks, setTotalBlocks] = useState(6);\n\n  const [inverter, setInverter] = useState(1);\n  const [totalInverters, setTotalInverters] = useState(4);\n\n  const [smb, setSMB] = useState(1);\n  const [totalSMB, setTotalSMB] = useState(10);\n\n  // For line chart\n  const [leftYMin, setLeftYMin] = useState(0);\n\n  // CSV\n  const [enableExcelBtn, setEnableExcelBtn] = useState(true);\n\n  // Energy CSV\n  const [enableEnergyCSVBtn, setEnableEnergyCSVBtn] = useState(true);\n\n  // Day energy csv\n  const [enableDayEnergyCSVBtn, setEnableDayEnergyCSVBtn] = useState(true);\n\n  let [currentDataForTable, setCurrentDataForTable] = useState([]);\n\n  const handleLeftYMinChange = (event) => {\n    setLeftYMin(Number(event.target.value));\n  };\n\n  const getFromDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(0, 0, 0, 0);\n    return newDate;\n  };\n\n  const getToDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(23, 59, 59, 999);\n    return newDate;\n  };\n\n  const [fromDate, setFromDate] = useState(() => {\n    let date = new Date();\n    return getFromDate(date);\n  });\n\n  const [toDate, setToDate] = useState(() => {\n    let date = new Date();\n    return getToDate(date);\n  });\n\n  const handleFromDateChange = (date) => {\n    setFromDate(getFromDate(date));\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(getToDate(date));\n  };\n\n  /**\n   * Functions related to time component\n   */\n\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const getMinDateForPicker = () => {\n    let startTime = new Date();\n    if (selectedSite === \"gadarpur\") {\n      // Aug 19, 2021 6:00:00 PM\n      startTime.setTime(1629396000000);\n    }\n\n    return startTime;\n  };\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleTimeReset = () => {\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  /**\n   * END of functions related to time component\n   */\n\n  const handleSiteChange = (event) => {\n    setSelectedSite(event.target.value);\n  };\n\n  const handleBlockChange = (event) => {\n    setBlock(event.target.value);\n  };\n\n  const handleInverterChange = (event) => {\n    setInverter(event.target.value);\n  };\n\n  const handleSCBChange = (event) => {\n    setSCB(event.target.value);\n  };\n\n  // Status and time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, selectedSite) => {\n    // console.log(\"getStatusAndTime function called\", selectedSite);\n    setEnabledLinearProgress(true);\n    axios\n      .get(SERVER_URL + \"/\" + selectedSite + \"/site\", {\n        cancelToken: source.token,\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n        setEnabledLinearProgress(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  const getCurrentDataForLineChart = (rawData) => {\n    let lineChartData = [];\n    rawData.forEach((element) => {\n      const {\n        i1,\n        i2,\n        i3,\n        i4,\n        i5,\n        i6,\n        i7,\n        i8,\n        i9,\n        i10,\n        i11,\n        i12,\n        intertemp,\n        time,\n      } = {\n        ...element,\n      };\n      lineChartData.push({\n        i1,\n        i2,\n        i3,\n        i4,\n        i5,\n        i6,\n        i7,\n        i8,\n        i9,\n        i10,\n        i11,\n        i12,\n        temperature: intertemp,\n        time: String(time).split(\" \")[1],\n      });\n    });\n    return lineChartData.reverse();\n  };\n\n  const fetchData = (endTime, selectedSite) => {\n    // console.log(\"Fetching data for \", selectedSite);\n    setEnabledLinearProgress(true);\n\n    let newEndTime = endTime;\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n    } else {\n      newEndTime = endTime;\n    }\n\n    // Status and time\n    getStatusAndTime(beginTime, newEndTime, selectedSite);\n\n    // console.log(beginTime, new Date(newEndTime).toLocaleTimeString(), scb);\n\n    // Fetch customized table data\n    axios\n      .post(\n        SERVER_URL + \"/\" + selectedSite + \"/scb\",\n        {\n          fromDate: beginTime,\n          endTime: newEndTime,\n          block: \"b0\" + block,\n          inverter: String(inverter),\n          smb: String(scb),\n        },\n        {\n          cancelToken: source.token,\n          headers: {\n            jwtToken: userToken,\n          },\n        }\n      )\n      .then((response) => {\n        setCustomizedLineChartData(getCurrentDataForLineChart(response.data));\n        let currentData = formatCurrentOrEnergyDataForTable(response.data, \"i\");\n        // let energyData = formatCurrentOrEnergyDataForTable(response.data, \"e\");\n        let formattedDataForTable = [];\n        // Insert modified current data in table\n        response.data.forEach((element, index) => {\n          let row = { ...element, ...currentData[index] };\n          formattedDataForTable.push(row);\n        });\n        setCustomizedTableData(formattedDataForTable);\n        setEnabledLinearProgress(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        // handleSessionExpire();\n        if (error?.response?.status === 401) {\n          // console.log(error.response, \"401\");\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  const handleViewBtnClick = () => {\n    fetchData(mainTime, selectedSite);\n  };\n\n  useEffect(() => {\n    fetchData(mainTime, selectedSite);\n\n    // Fetch data every 5 minutes\n    const interval = setInterval(() => {\n      fetchData(mainTime, selectedSite);\n    }, 300000);\n\n    return () => {\n      clearInterval(interval);\n      source.cancel();\n    };\n  }, [mainTime]);\n\n  const getExcelFile = () => {\n    setEnableExcelBtn(false);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let startTime = fiveAM.getTime();\n\n    let newEndTime = null;\n    if (isTimeReset) {\n      newEndTime = Date.now();\n    } else {\n      newEndTime = mainTime;\n    }\n\n    axios\n      .post(\n        SERVER_URL + \"/\" + selectedSite + \"/scb/excel\",\n        {\n          fromDate: startTime,\n          endTime: newEndTime,\n          block: \"b0\" + block,\n          inverter: inverter,\n          smb: scb,\n        },\n        {\n          cancelToken: source.token,\n          headers: {\n            jwtToken: userToken,\n            responseType: \"blob\",\n          },\n        }\n      )\n      .then((response) => {\n        const downloadUrl = window.URL.createObjectURL(\n          new Blob([response.data])\n        );\n        const link = document.createElement(\"a\");\n        link.href = downloadUrl;\n        let startDate = new Date(startTime);\n        let endDate = new Date(mainTime);\n        let filename = `SCB_${endDate.getDate()}_${\n          endDate.getMonth() + 1\n        }_${endDate.getFullYear()}.csv`;\n        link.setAttribute(\"download\", filename);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        setEnableExcelBtn(true);\n      })\n      .catch((error) => {\n        setEnableExcelBtn(true);\n        if (error?.response?.status === 401) {\n          // console.log(error.response, \"401\");\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n      });\n  };\n\n  const getEnergyCSV = () => {\n    setEnableEnergyCSVBtn(false);\n    setEnabledLinearProgress(true);\n\n    // console.log(\"Custom Energy CSV\");\n    // console.log(\"To date\", toDate.toLocaleString());\n\n    axios\n      .post(\n        SERVER_URL + \"/\" + selectedSite + \"/scb/energy/date\",\n        {\n          fromDate: fromDate.getTime(),\n          endDate: toDate.getTime(),\n        },\n        {\n          cancelToken: source.token,\n          headers: {\n            jwtToken: userToken,\n            responseType: \"blob\",\n          },\n        }\n      )\n      .then((response) => {\n        const downloadUrl = window.URL.createObjectURL(\n          new Blob([response.data])\n        );\n        const link = document.createElement(\"a\");\n        link.href = downloadUrl;\n        // let endDate = new Date(mainTime);\n        // let filename = `${selectedSite}_energy_${block}_${inverter}__${endDate.getDate()}_${\n        //   endDate.getMonth() + 1\n        // }_${endDate.getFullYear()}.csv`;\n        let filename = `${selectedSite}_energy__${fromDate.getDate()}_${\n          fromDate.getMonth() + 1\n        }__${toDate.getDate()}_${toDate.getMonth() + 1}.csv`;\n        link.setAttribute(\"download\", filename);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        setEnableEnergyCSVBtn(true);\n        setEnabledLinearProgress(false);\n      })\n      .catch((error) => {\n        setEnableEnergyCSVBtn(true);\n        if (error?.response?.status === 401) {\n          // console.log(error.response, \"401\");\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  const getDayEnergyCSV = () => {\n    setEnableDayEnergyCSVBtn(false);\n    setEnabledLinearProgress(true);\n\n    // console.log(\"Custom Day Energy CSV\");\n    // console.log(\"To date\", toDate.toLocaleString());\n\n    axios\n      .post(\n        SERVER_URL + \"/\" + selectedSite + \"/scb/energy/datetodate\",\n        {\n          fromDate: fromDate.getTime(),\n          endDate: toDate.getTime(),\n        },\n        {\n          cancelToken: source.token,\n          headers: {\n            jwtToken: userToken,\n            responseType: \"blob\",\n          },\n        }\n      )\n      .then((response) => {\n        const downloadUrl = window.URL.createObjectURL(\n          new Blob([response.data])\n        );\n        const link = document.createElement(\"a\");\n        link.href = downloadUrl;\n        // let endDate = new Date(mainTime);\n        // let filename = `${selectedSite}_energy_${block}_${inverter}__${endDate.getDate()}_${\n        //   endDate.getMonth() + 1\n        // }_${endDate.getFullYear()}.csv`;\n        let filename = `${selectedSite}_energy__${fromDate.getDate()}_${\n          fromDate.getMonth() + 1\n        }__${toDate.getDate()}_${toDate.getMonth() + 1}.csv`;\n        link.setAttribute(\"download\", filename);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        setEnableDayEnergyCSVBtn(true);\n        setEnabledLinearProgress(false);\n      })\n      .catch((error) => {\n        setEnableDayEnergyCSVBtn(true);\n        if (error?.response?.status === 401) {\n          // console.log(error.response, \"401\");\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  return (\n    <div style={{ paddingTop: \".5rem\", width: \"90vw\" }}>\n      <Grid container alignItems=\"center\" justify=\"space-between\">\n        <Grid item>\n          <Grid container alignItems=\"flex-end\">\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <FormControl className={classes.siteFormControl}>\n                <InputLabel id=\"site-select-label\">Site</InputLabel>\n                <Select\n                  labelId=\"site-select-label\"\n                  id=\"site-select\"\n                  value={selectedSite}\n                  onChange={handleSiteChange}\n                >\n                  <MenuItem value={\"gadarpur\"}>\n                    <span>Gadarpur&ensp;</span>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            {/* <Grid item style={{ marginRight: \"1rem\" }}>\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"block-select-label\">Block</InputLabel>\n                <Select\n                  labelId=\"block-select-label\"\n                  id=\"block-select\"\n                  value={block}\n                  onChange={handleBlockChange}\n                >\n                  {Array.from({ length: totalBlocks }, (_, i) => i + 1).map(\n                    (element) => {\n                      return (\n                        <MenuItem value={element}>\n                          <Typography variant=\"h6\">{element}&ensp;</Typography>\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n            </Grid> */}\n            {/* <Grid item style={{ marginRight: \"1rem\" }}>\n              <FormControl>\n                <InputLabel id=\"inverter-select-label\">Inverter</InputLabel>\n                <Select\n                  labelId=\"inverter-select-label\"\n                  id=\"inverter-select\"\n                  value={inverter}\n                  onChange={handleInverterChange}\n                >\n                  {Array.from({ length: totalInverters }, (_, i) => i + 1).map(\n                    (element) => {\n                      return (\n                        <MenuItem value={element}>\n                          <Typography variant=\"h6\">{element}&ensp;</Typography>\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <FormControl>\n                <InputLabel id=\"scb-select-label\">SCB</InputLabel>\n                <Select\n                  labelId=\"scb-select-label\"\n                  id=\"scb-select\"\n                  value={scb}\n                  onChange={handleSCBChange}\n                >\n                  {Array.from({ length: totalSCB }, (_, i) => i + 1).map(\n                    (element) => {\n                      return (\n                        <MenuItem value={element}>\n                          <Typography variant=\"h6\">{element}&ensp;</Typography>\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n            </Grid> */}\n            {/* <Grid item style={{ marginRight: \".5rem\" }}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleViewBtnClick}\n              >\n                View\n              </Button>\n            </Grid>\n            <Grid item style={{ marginRight: \".5rem\" }}>\n              <Button\n                variant=\"outlined\"\n                onClick={getExcelFile}\n                disabled={!enableExcelBtn}\n              >\n                CSV\n              </Button>\n            </Grid> */}\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"from-date-picker-inline\"\n                  label=\"From\"\n                  value={fromDate}\n                  onChange={handleFromDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-labelte\": \"from date\",\n                  }}\n                  style={{ marginRight: \"1rem\" }}\n                  className={classes.textField}\n                />\n\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"to-date-picker-inline\"\n                  label=\"To\"\n                  value={toDate}\n                  onChange={handleToDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"to date\",\n                  }}\n                  className={classes.textField}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <Button\n                variant=\"outlined\"\n                onClick={getEnergyCSV}\n                disabled={!enableEnergyCSVBtn}\n              >\n                Energy CSV\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                onClick={getDayEnergyCSV}\n                disabled={!enableDayEnergyCSVBtn}\n              >\n                Day Energy CSV\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport SCBOnline from \"../components/SCB/SCBOnline\";\nimport SCBCustom from \"../components/SCB/SCBCustom\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  tabs: {\n    \"& .MuiTabs-indicator\": {\n      backgroundColor: \"#148F77\",\n      // height: 3,\n    },\n    \"& .MuiTab-root.Mui-selected\": {\n      color: \"#148F77\",\n    },\n  },\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scb-tab-${index}`,\n    \"aria-controls\": `scb-tabpanel-${index}`,\n  };\n}\n\nexport default function BasicTabs({ handleSessionExpire }) {\n  const [value, setValue] = React.useState(0);\n  const classes = useStyles();\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box>\n      <Tabs\n        style={{ color: \"#000000\" }}\n        className={classes.tabs}\n        // TabIndicatorProps={{\n        //   style: { background: \"#148F77\" },\n        // }}\n        value={value}\n        onChange={handleChange}\n        aria-label=\"scb tabs\"\n        // indicatorColor=\"primary\"\n      >\n        <Tab label=\"Online\" {...a11yProps(0)} />\n        <Tab label=\"Custom\" {...a11yProps(1)} />\n      </Tabs>\n\n      <TabPanel value={value} index={0}>\n        <SCBOnline handleSessionExpire={handleSessionExpire} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <SCBCustom handleSessionExpire={handleSessionExpire} />\n      </TabPanel>\n    </Box>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"x\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"x\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"x\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"x\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv5))\n            ? \"-\"\n            : Number(value.inv5) === -111\n            ? \"x\"\n            : Number(value.inv5).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {block !== 5 && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv6))\n              ? \"-\"\n              : Number(value.inv6) === -111\n              ? \"x\"\n              : Number(value.inv6).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"x\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"x\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"x\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"x\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv5))\n          ? \"-\"\n          : Number(value.inv5) === -111\n          ? \"x\"\n          : Number(value.inv5).toFixed(2)}\n      </StyledTableCell>\n      {block !== 5 && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv6))\n            ? \"-\"\n            : Number(value.inv6) === -111\n            ? \"x\"\n            : Number(value.inv6).toFixed(2)}\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, selectedBlock }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows, block }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={7}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={selectedBlock}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={selectedBlock}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={selectedBlock}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={selectedBlock}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={selectedBlock} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 5</strong>\n            </StyledTableCell>\n            {selectedBlock !== 5 && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 6</strong>\n              </StyledTableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Mankhera/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Mankhera({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/mankhera/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Aug 30, 2021 12:00:00 PM\n    const startTime = new Date(1630324800000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/mankhera/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/mankhera/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/mankhera/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/mankhera/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/mankhera/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n      let inv6Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n        if (arrayFromObject[heading.length * 5 + i][1]) {\n          inv6Value = arrayFromObject[heading.length * 5 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n        inv6: inv6Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/mankhera/grid/B0\" + block, {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block B0\" + block + \":\", response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to mankhera site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to mankhera site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to mankhera site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Mankhera</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">25 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 7.06}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={40} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} selectedBlock={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Jhunir/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Jhunir({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/jhunir/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Aug 30, 2021 12:00:00 PM\n    const startTime = new Date(1630324800000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/jhunir/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/jhunir/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/jhunir/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/jhunir/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/jhunir/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/jhunir/grid/B0\" + block, {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block B0\" + block + \":\", response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to jhunir site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to jhunir site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to jhunir site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Jhunir</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">15 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 7.57}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={30} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Bhongir/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Bhongir({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/bhongir/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Sep 01, 2021 5:00:00 PM\n    const startTime = new Date(1630515600000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/bhongir/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/bhongir/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/bhongir/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/bhongir/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/bhongir/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 CAB Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 CAB Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 CAB Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/bhongir/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to bhongir site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to bhongir site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to bhongir site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Bhongir</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">50 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={75} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                  <MenuItem value={8}>B08</MenuItem>\n                  <MenuItem value={9}>B09</MenuItem>\n                  <MenuItem value={10}>B10</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Padmajiwadi/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Padmajiwadi({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/padmajiwadi/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Sep 02, 2021 2:00:00 PM\n    const startTime = new Date(1630591200000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/padmajiwadi/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/padmajiwadi/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/padmajiwadi/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/padmajiwadi/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/padmajiwadi/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 CAB Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 CAB Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 CAB Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/padmajiwadi/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to padmajiwadi site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to padmajiwadi site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to padmajiwadi site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Padmajiwadi</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">10 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 4.67}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={15} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Mothkur/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Mothkur({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/mothkur/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Sep 03, 2021 12:00:00 PM\n    const startTime = new Date(1630670400000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/mothkur/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/mothkur/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/mothkur/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/mothkur/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/mothkur/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 CAB Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 CAB Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 CAB Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/mothkur/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to mothkur site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to mothkur site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to mothkur site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Mothkur</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">10 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 4.67}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={15} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Sadashivpet/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Sadashivpet({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/sadashivpet/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Sep 01, 2021 5:00:00 PM\n    const startTime = new Date(1630515600000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/sadashivpet/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/sadashivpet/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/sadashivpet/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/sadashivpet/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/sadashivpet/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 CAB Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 CAB Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 CAB Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/sadashivpet/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to sadashivpet site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to sadashivpet site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to sadashivpet site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Sadashivpet</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">50 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={75} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                  <MenuItem value={8}>B08</MenuItem>\n                  <MenuItem value={9}>B09</MenuItem>\n                  <MenuItem value={10}>B10</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Pattikonda/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Pattikonda({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/pattikonda/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Sep 7, 2021 12:00:00 PM\n    const startTime = new Date(1631016000000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/pattikonda/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/pattikonda/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/pattikonda/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/pattikonda/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/pattikonda/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      // \"S1 CAB Temp\",\n      // \"S2 CAB Temp\",\n      // \"S3 CAB Temp\",\n      // \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/pattikonda/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to pattikonda site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to pattikonda site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to pattikonda site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Pattikonda</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">20 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 6.619}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={30} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Rayachoti/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Rayachoti({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/rayachoti/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Sep 09, 2021 12:00:00 PM\n    const startTime = new Date(1631188800000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/rayachoti/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/rayachoti/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/rayachoti/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/rayachoti/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/rayachoti/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      // \"S1 CAB Temp\",\n      // \"S2 CAB Temp\",\n      // \"S3 CAB Temp\",\n      // \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/rayachoti/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to rayachoti site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to rayachoti site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to rayachoti site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Rayachoti</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">20 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 6.619}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={30} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow key={values[i].heading} value={values[i]} />\n        );\n      } else {\n        otherRows.push(<CustomizedRow key={i} value={values[i]} />);\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            {/* <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Bikaner/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Bikaner({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/bikaner/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Sep 10, 2021 12:00:00 PM\n    const startTime = new Date(1631275200000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/bikaner/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/bikaner/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/bikaner/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/bikaner/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/bikaner/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      // \"S1 CAB Temp\",\n      // \"S2 CAB Temp\",\n      // \"S3 CAB Temp\",\n      // \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/bikaner/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to bikaner site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to bikaner site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to bikaner site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Bikaner</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">5 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 6.619}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={5} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1000]}\n          rightAxisY={[0, 8]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    // console.log(block);\n\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            {/* )} */}\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            {/* )} */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Santhipuram/BlockTable\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Santhipuram({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/santhipuram/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Sep 15, 2021 12:00:00 PM\n    const startTime = new Date(1631707200000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/santhipuram/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/santhipuram/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/santhipuram/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/santhipuram/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/santhipuram/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = () => {\n    // console.log(\"getInverterValues function called\", blockTableId);\n\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    axios\n      .get(\n        serverUrl + \"/santhipuram/grid/B\" + String(blockTableId).padStart(2, 0),\n        {\n          headers: {\n            jwtToken: userToken,\n            startTime: date.getTime(),\n            endTime: mainTime,\n            beginTime: beginTime,\n            enablePacket: getEnablePacket(),\n            clientPacketTime: timestamp,\n            isNext: getIsNext(),\n          },\n        }\n      )\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    let tableInterval = setInterval(getInverterValues, 60000);\n\n    return () => {\n      clearInterval(tableInterval);\n    };\n  });\n\n  useEffect(() => {\n    // console.log(blockTableId);\n    getInverterValues();\n  }, [blockTableId]);\n\n  const handleBlockChange = (event) => {\n    // console.log(event.target.value);\n    setBlockTableId((prevState) => {\n      return Number(event.target.value);\n    });\n  };\n\n  // Function to call above functions to get data related to santhipuram site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    // console.log(blockTableId);\n    // getInverterValues();\n  };\n\n  // useEffect to fetch data related to santhipuram site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to santhipuram site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Santhipuram</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">40 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={60} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select\n                  defaultValue={1}\n                  value={blockTableId}\n                  onChange={handleBlockChange}\n                >\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                  <MenuItem value={8}>B08</MenuItem>\n                  <MenuItem value={9}>B09</MenuItem>\n                  <MenuItem value={10}>B10</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import { Card, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Bar, BarChart, CartesianGrid, Cell, XAxis, YAxis } from \"recharts\";\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    const labelStr = String(label);\n    return (\n      <div style={{ color: \"#009688\" }}>\n        {labelStr.split(\" \")[0]}: {payload[0].value}\n        {label === \"Humidity\" ? \"%\" : \"°C\"}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst CustomizedLabel = ({ x, y, fill, value, index }) => {\n  return (\n    <text\n      x={x}\n      y={y}\n      dx=\"10\"\n      dy=\"-10\"\n      fontSize=\"10\"\n      fontFamily=\"sans-serif\"\n      fill={fill}\n      textAnchor=\"middle\"\n    >\n      {value}\n      {index === 2 ? \"%\" : \"°C\"}\n    </text>\n  );\n};\n\nexport default function AmbientModuleTemp({\n  ambientTemp,\n  moduleTemp,\n  humidity,\n  ambientTemp2,\n  moduleTemp2,\n  humidity2,\n}) {\n  const data = [\n    {\n      name: \"Amb 1\",\n      value: Number(ambientTemp) && Number(ambientTemp) !== -111 ? Number(ambientTemp) : 0,\n    },\n    {\n      name: \"Amb 2\",\n      value: Number(ambientTemp2) && Number(ambientTemp2) !== -111 ? Number(ambientTemp2) : 0,\n    },\n    {\n      name: \"Mod 1\",\n      value: Number(moduleTemp) && Number(moduleTemp) !== -111 ? Number(moduleTemp) : 0,\n    },\n    {\n      name: \"Mod 2\",\n      value: Number(moduleTemp2) && Number(moduleTemp2) !== -111 ? Number(moduleTemp2) : 0,\n    },\n    {\n      name: \"Hum 1\",\n      value: Number(humidity) && Number(humidity) !== -111 ? Number(humidity) : 0,\n    },\n    {\n      name: \"Hum 2\",\n      value: Number(humidity2) && Number(humidity2) !== -111 ? Number(humidity2) : 0,\n    },\n  ];\n  return (\n    <Card\n      elevation={6}\n      style={{\n        // height: '310px',\n        paddingTop: \".5rem\",\n        paddingBottom: \".5rem\",\n        paddingLeft: \"0rem\",\n        paddingRight: \"0rem\",\n        height: 255,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        // justifyContent: \"center\",\n      }}\n    >\n      <Typography>Temperatures {\" and \"} Humidity</Typography>\n      <BarChart\n        width={370}\n        height={200}\n        data={data}\n        margin={{\n          //   top: 5,\n          right: 50,\n          //   left: 1,\n          bottom: 15,\n        }}\n        barSize={20}\n      >\n        <XAxis\n          dataKey=\"name\"\n          scale=\"point\"\n          padding={{ left: 20 }}\n          angle={315}\n          tickMargin={15}\n          // tick={{ fontSize: 10 }}\n        />\n        <YAxis domain={[0, 100]} />\n        {/* <Tooltip /> */}\n\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <Bar\n          isAnimationActive={false}\n          dataKey=\"value\"\n          fill=\"#8884d8\"\n          background={{ fill: \"#eee\" }}\n          label={<CustomizedLabel />}\n          //   label={{ position: \"top\" }}\n        >\n          {/* <LabelList dataKey='name' content={renderCustomizedLabel} /> */}\n          {data.map((entry, index) => {\n            if (index === 1 || index === 3) {\n              return (\n                <Cell\n                  cursor=\"pointer\"\n                  fill={\n                    index === 0 || index === 1\n                      ? \"#42a5f5\"\n                      : index === 2 || index == 3\n                      ? \"#82ca9d\"\n                      : \"#8884d8\"\n                  }\n                  key={`cell-${index}`}\n                />\n              );\n            } else {\n              return (\n                <Cell\n                  cursor=\"pointer\"\n                  fill={\n                    index === 0 || index === 1\n                      ? \"#42a5f5\"\n                      : index === 2 || index == 3\n                      ? \"#82ca9d\"\n                      : \"#8884d8\"\n                  }\n                  key={`cell-${index}`}\n                />\n              );\n            }\n          })}\n        </Bar>\n      </BarChart>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nexport default function BiaxialLineChart({\n  data,\n  interval,\n  width,\n  height,\n  leftAxisY,\n  rightAxisY,\n}) {\n  // console.log(\"Biaxial line data\", data);\n  const [opacity, setOpacity] = useState({\n    ghi: 1,\n    ghi2: 1,\n    gti: 1,\n    gti2: 1,\n    pg: 1,\n  });\n\n  const selectLine = (dataKey) => {\n    setOpacity((prevState) => {\n      return { ...prevState, [dataKey]: prevState[dataKey] === 0 ? 1 : 0 };\n    });\n  };\n\n  const renderLegend = (props) => {\n    const { payload } = props;\n\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\" }}>\n        {payload.map((entry, index) => {\n          // <li key={`item-${index}`}>{entry.value}</li>\n\n          return (\n            <strong\n              key={entry.value}\n              style={{\n                fontSize: \"1rem\",\n                color: entry.color,\n                cursor: \"pointer\",\n                opacity: opacity[entry.dataKey] === 0 ? 0.5 : 1,\n              }}\n              onClick={() => selectLine(entry.dataKey)}\n            >\n              {String(entry.value).toUpperCase()}\n            </strong>\n          );\n        })}\n      </div>\n    );\n  };\n\n  // const renderLegend = ({ payload }) => {\n  //   return (\n  //     <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\" }}>\n  //       {payload.map(({ dataKey, color }) => {\n  //         return (\n  //           <strong\n  //             key={dataKey}\n  //             style={{\n  //               fontSize: \"1rem\",\n  //               color: color,\n  //               cursor: \"pointer\",\n  //               opacity: opacity[dataKey] === 0 ? 0.5 : 1,\n  //             }}\n  //             onClick={() => selectLine(dataKey)}\n  //           >\n  //             {String(dataKey.value).toUpperCase()}\n  //           </strong>\n  //         );\n  //       })}\n  //     </div>\n  //   );\n  // };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"83%\">\n      <LineChart\n        // width={width}\n        // height={height}\n        data={data}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"time\" interval={interval} />\n        <YAxis yAxisId=\"left\" domain={leftAxisY} />\n        <YAxis yAxisId=\"right\" domain={rightAxisY} orientation=\"right\" />\n        <Tooltip />\n        <Legend content={renderLegend} />\n        <Line\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey=\"ghi\"\n          // stroke=\"#3498DB\"\n          stroke=\"#5499C7\"\n          strokeWidth={2}\n          strokeOpacity={opacity.ghi}\n          activeDot={{ r: 6 }}\n          dot={false}\n          name=\"GHI 1\"\n        />\n        <Line\n          name=\"GHI 2\"\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey=\"ghi2\"\n          // stroke=\"#F5B041\"\n          stroke=\"#AF7AC5\"\n          strokeWidth={2}\n          strokeOpacity={opacity.ghi2}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n        <Line\n          name=\"GTI 1\"\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey=\"gti\"\n          // stroke=\"#AF7AC5\"\n          stroke=\"#F5B041\"\n          strokeWidth={2}\n          strokeOpacity={opacity.gti}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n        <Line\n          name=\"GTI 2\"\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey=\"gti2\"\n          stroke=\"#E67E22\"\n          strokeWidth={2}\n          strokeOpacity={opacity.gti2}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n        <Line\n          name=\"PG\"\n          yAxisId=\"right\"\n          type=\"monotone\"\n          dataKey=\"pg\"\n          stroke=\"#82ca9d\"\n          strokeWidth={2}\n          strokeOpacity={opacity.pg}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\nimport { inverters } from \"../../constants/csvParameters\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n    maxWidth: \"90vw\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, inverters }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      {Array.from(Array(inverters).keys()).map((element, index) => {\n        return (\n          <StyledTableCell\n            align=\"center\"\n            style={{ backgroundColor: rowBackgroundColor }}\n          >\n            <span>\n              {isNaN(Number(value[\"inv\" + Number(index + 1)]))\n                ? \"-\"\n                : Number(value[\"inv\" + Number(index + 1)]) === -111\n                ? \"X\"\n                : Number(value[\"inv\" + Number(index + 1)]).toFixed(2)}\n            </span>\n          </StyledTableCell>\n        );\n      })}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, inverters }) => {\n  // console.log(inverters);\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          position: \"sticky\",\n          left: 0,\n          backgroundColor: \"white\",\n          minWidth: \"300px\",\n        }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n\n      {Array.from(Array(inverters).keys()).map((element, index) => {\n        return (\n          <StyledTableCell align=\"center\">\n            {isNaN(Number(value[\"inv\" + Number(index + 1)]))\n              ? \"-\"\n              : Number(value[\"inv\" + Number(index + 1)]) === -111\n              ? \"X\"\n              : Number(value[\"inv\" + Number(index + 1)]).toFixed(2)}\n          </StyledTableCell>\n        );\n      })}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  // console.log(\"Inverter table values\", values);\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const [inverters, setInverters] = useState(1);\n\n  useEffect(() => {\n    // console.log(inverters);\n    setInverters(() => {\n      if (block <= 2) {\n        return 1;\n      } else if (block >= 3 && block <= 22) {\n        return 2;\n      } else if (block >= 23 && block <= 26) {\n        return 36;\n      } else if (block >= 27 && block <= 34) {\n        return 2;\n      }\n    });\n  }, [block]);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={37}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            inverters={inverters}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            inverters={inverters}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} inverters={inverters} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow\n          // style={{\n          //   position: \"sticky\",\n          //   left: 0,\n          // }}\n          >\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n                zIndex: 101,\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n\n            {Array.from(Array(inverters).keys()).map((element, index) => {\n              return (\n                <StyledTableCell\n                  align=\"center\"\n                  // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n                  style={{ minWidth: \"100px\" }}\n                >\n                  <strong>Inv {index + 1}</strong>\n                </StyledTableCell>\n              );\n            })}\n            {/* <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { Card, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function CustomCard2({\n  firstTitle,\n  secondTitle,\n  firstValue,\n  secondValue,\n  imagePath,\n  imageHeight,\n}) {\n  return (\n    <Card elevation={4} style={{ height: \"80px\" }}>\n      <Grid\n        container\n        alignItems=\"center\"\n        style={{\n          padding: \"1rem 2rem 1rem 1rem\",\n        }}\n      >\n        <img\n          src={imagePath}\n          alt={imagePath}\n          style={{ height: imageHeight, marginRight: \"1rem\" }}\n        />\n        <Grid item>\n          <Grid container>\n            <Grid item xs={5}>\n              <Typography>{firstTitle}</Typography>\n            </Grid>\n            <Grid item xs={2} />\n            <Grid item xs={5} style={{ paddingLeft: \".25rem\" }}>\n              <Typography>{secondTitle}</Typography>\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item xs={5}>\n              <Typography color=\"primary\">{firstValue}</Typography>\n            </Grid>\n            <Grid item xs={2} />\n            <Grid item xs={5} style={{ paddingLeft: \".25rem\" }}>\n              <Typography color=\"primary\">{secondValue}</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n","import { Card, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function CustomCard2({\n  firstTitle,\n  secondTitle,\n  firstValue,\n  ghi2,\n  gti2,\n  secondValue,\n  imagePath,\n  imageHeight,\n}) {\n  return (\n    <Card elevation={4} style={{ height: \"80px\" }}>\n      <Grid\n        container\n        alignItems=\"center\"\n        style={{\n          padding: \".5rem 2rem 0rem 1rem\",\n        }}\n      >\n        <img\n          src={imagePath}\n          alt={imagePath}\n          style={{ height: imageHeight, marginRight: \"1rem\" }}\n        />\n        <Grid item>\n          <Grid container>\n            <Grid item xs={5}>\n              <Typography>{firstTitle}</Typography>\n            </Grid>\n            <Grid item xs={2} />\n            <Grid item xs={5} style={{ paddingLeft: \".25rem\" }}>\n              <Typography>{secondTitle}</Typography>\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item xs={5}>\n              <Typography color=\"primary\" variant=\"body2\">\n                {firstValue}\n              </Typography>\n            </Grid>\n            <Grid item xs={2} />\n            <Grid item xs={5} style={{ paddingLeft: \".25rem\" }}>\n              <Typography color=\"primary\" variant=\"body2\">\n                {secondValue}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item xs={5}>\n              <Typography color=\"primary\" variant=\"body2\">\n                {ghi2}\n              </Typography>\n            </Grid>\n            <Grid item xs={2} />\n            <Grid item xs={5} style={{ paddingLeft: \".25rem\" }}>\n              <Typography color=\"primary\" variant=\"body2\">\n                {gti2}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n","import { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport CustomCard from \"../CustomCard\";\nimport CustomCard2 from \"./CustomCard2\";\nimport CustomCard2b from \"./CustomCard2b\";\n\nconst useStyles = makeStyles((theme) => ({\n  // cardGridContainerStyle: {\n  //   marginTop: theme.spacing(3.5),\n  // },\n}));\n\nexport default function CustomCards({\n  day_generation = 0,\n  revenue = 0,\n  peak_power = 0,\n  ghi = 0,\n  gti = 0,\n  ghi2 = 0,\n  gti2 = 0,\n  plant_pr = 0,\n  grid_availability = 0,\n  plant_availability = 0,\n}) {\n  const classes = useStyles();\n\n  const getFormattedRevenue = (revenue) => {\n    if (isNaN(revenue)) {\n      return \"x\";\n    }\n    const revenueNum = Number(revenue).toFixed(0);\n    if (revenueNum < 0) {\n      return \"0\";\n    }\n    const revenueStr = revenueNum;\n    let lastThree = revenueStr.substring(revenueStr.length - 3);\n    let otherNumbers = revenueStr.substring(0, revenueStr.length - 3);\n    if (otherNumbers !== \"\") {\n      lastThree = \",\" + lastThree;\n    }\n    let res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\n    return res;\n  };\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        // style={{ marginTop: \"1.75rem\" }}\n        justify=\"space-between\"\n        // className={customCardsStyle.materialGrid}\n        // spacing={3}\n      >\n        <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/powerGeneration.png\"\n            imageHeight={48}\n            title=\"Generation\"\n            value={\n              Number(day_generation) === -111 ? (\n                \"x\"\n              ) : (\n                <span>\n                  {Number(day_generation).toFixed(2)}&nbsp;<small>MWH</small>\n                </span>\n              )\n            }\n          />\n        </Grid>\n        <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/revenue.png\"\n            imageHeight={42}\n            title=\"Revenue\"\n            value={<span>{getFormattedRevenue(revenue)}</span>}\n          />\n        </Grid>\n        <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/peakPower.png\"\n            imageHeight={45}\n            title=\"Peak Power\"\n            value={\n              Number(peak_power) === -111 || isNaN(Number(peak_power)) ? (\n                \"x\"\n              ) : (\n                <span>\n                  {Number(peak_power).toFixed(2)}&nbsp;<small>MW</small>\n                </span>\n              )\n            }\n          />\n        </Grid>\n        <Grid item>\n          <CustomCard2b\n            imagePath=\"/static/images/ray.png\"\n            imageHeight={50}\n            firstTitle=\"GHI\"\n            secondTitle=\"GTI\"\n            firstValue={Number(ghi) === -111 ? \"x\" : Number(ghi).toFixed(2)}\n            secondValue={Number(gti) === -111 ? \"x\" : Number(gti).toFixed(2)}\n            ghi2={Number(ghi2) === -111 ? \"x\" : Number(ghi2).toFixed(2)}\n            gti2={Number(gti2) === -111 ? \"x\" : Number(gti2).toFixed(2)}\n          />\n        </Grid>\n        {/* <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/peakPower.png\"\n            imageHeight={54}\n            title=\"Two\"\n            value={\n              <span>\n                {Number(peak_power).toFixed(2)}&nbsp;<small>MW</small>\n              </span>\n            }\n          />\n        </Grid>\n        <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/peakPower.png\"\n            imageHeight={54}\n            title=\"Three\"\n            value={\n              <span>\n                {Number(peak_power).toFixed(2)}&nbsp;<small>MW</small>\n              </span>\n            }\n          />\n        </Grid> */}\n        <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/plantPR.png\"\n            imageHeight={45}\n            title=\"Plant PR\"\n            value={\n              Number(plant_pr) === -111 ? (\n                \"x\"\n              ) : (\n                <span>{Number(plant_pr).toFixed(0)}%</span>\n              )\n            }\n          />\n        </Grid>\n        <Grid item>\n          <CustomCard2\n            imagePath=\"/static/images/gridAvailability.png\"\n            imageHeight={50}\n            firstTitle=\"GA\"\n            secondTitle=\"PA\"\n            firstValue={\n              <span>\n                {Number(grid_availability) === -111\n                  ? \"x\"\n                  : Number(grid_availability)\n                      .toFixed(1)\n                      .replace(/[.,]00$/, \"\")}\n                {Number(grid_availability) !== -111 && \"%\"}\n              </span>\n            }\n            secondValue={\n              <span>\n                {Number(plant_availability) === -111\n                  ? \"x\"\n                  : Number(plant_availability)\n                      .toFixed(1)\n                      .replace(/[.,]00$/, \"\")}\n                {Number(plant_availability) !== -111 && \"%\"}\n              </span>\n            }\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import { Card, Grid, Typography } from \"@material-ui/core\";\nimport C3Chart from \"react-c3js\";\nimport \"../../c3.css\";\nimport React, { useState, useLayoutEffect, useEffect } from \"react\";\n\nexport default function PowerGenerationGauge({ totalExport, maxValue }) {\n  const [totalExportNum, setTotalExportNum] = useState(0);\n\n  useEffect(() => {\n    let value =\n      Number(totalExport) && Number(totalExport) !== -111\n        ? Number(totalExport)\n        : 0;\n    if (value !== totalExport) {\n      setTotalExportNum(value);\n    }\n  }, [totalExport]);\n\n  return (\n    <Card elevation={6} style={{ height: 255, width: 320 }}>\n      <Typography\n        style={{ marginLeft: \"1rem\", marginTop: \".5rem\" }}\n        variant=\"h6\"\n      >\n        Power Generation\n      </Typography>\n      <Grid container justify=\"center\">\n        <Grid item style={{ height: \"parent\" }}>\n          <C3Chart\n            data={{\n              columns: [[\"Current Export\", totalExportNum]],\n              type: \"gauge\",\n            }}\n            gauge={{\n              label: {\n                format: function (value) {\n                  return value + \" MW\";\n                },\n                show: true,\n              },\n              min: 0,\n              max: maxValue,\n              width: 45,\n            }}\n            color={{\n              pattern: [\"#4caf50\"],\n            }}\n            size={{\n              height: 200,\n            }}\n          />\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nfunction Compass({ size, rotate }) {\n  useEffect(() => {\n    // console.log(\"useEffect for rotation running...\");\n\n    const needle = document.getElementById(\"needle\");\n\n    // let rotationValue = String(360 - rotate);\n    let rotationValue = Number(rotate) && Number(rotate) !== -111 ? Number(rotate) : 0;\n\n    needle.style.transformOrigin = \"center\";\n    needle.style.transform = `rotate(${rotationValue}deg)`;\n  }, [rotate]);\n\n  return (\n    <svg\n      width={String(size)}\n      height={String(size)}\n      viewBox=\"0 0 316 316\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g id=\"body\">\n        <circle\n          id=\"Ellipse\"\n          cx=\"158\"\n          cy=\"158\"\n          r=\"154\"\n          fill=\"white\"\n          stroke=\"#616161\"\n          // stroke-width=\"8\"\n          strokeWidth=\"8\"\n        />\n        <path\n          id=\"N\"\n          d=\"M164.094 53H161.832L153.242 39.8516V53H150.98V35.9375H153.242L161.855 49.1445V35.9375H164.094V53Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NW\"\n          d=\"M65.8047 80H64.4854L59.4746 72.3301V80H58.1553V70.0469H59.4746L64.499 77.751V70.0469H65.8047V80ZM70.2822 76.8623L70.4736 78.1748L70.7539 76.9922L72.7227 70.0469H73.8301L75.751 76.9922L76.0244 78.1953L76.2363 76.8555L77.7812 70.0469H79.1006L76.6875 80H75.4912L73.4404 72.7471L73.2832 71.9883L73.126 72.7471L71 80H69.8037L67.3975 70.0469H68.71L70.2822 76.8623Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SW\"\n          d=\"M61.0879 241.563C59.9622 241.24 59.1419 240.843 58.627 240.374C58.1165 239.9 57.8613 239.317 57.8613 238.624C57.8613 237.84 58.1735 237.193 58.7979 236.683C59.4268 236.168 60.2425 235.91 61.2451 235.91C61.9287 235.91 62.5371 236.042 63.0703 236.307C63.6081 236.571 64.0228 236.936 64.3145 237.4C64.6107 237.865 64.7588 238.373 64.7588 238.925H63.4395C63.4395 238.323 63.248 237.852 62.8652 237.51C62.4824 237.163 61.9424 236.99 61.2451 236.99C60.598 236.99 60.0921 237.134 59.7275 237.421C59.3675 237.703 59.1875 238.098 59.1875 238.604C59.1875 239.009 59.3584 239.353 59.7002 239.636C60.0465 239.914 60.6322 240.169 61.457 240.401C62.2865 240.634 62.9336 240.891 63.3984 241.174C63.8678 241.452 64.2142 241.778 64.4375 242.151C64.6654 242.525 64.7793 242.965 64.7793 243.471C64.7793 244.277 64.4648 244.924 63.8359 245.412C63.207 245.895 62.3662 246.137 61.3135 246.137C60.6299 246.137 59.9919 246.007 59.3994 245.747C58.807 245.483 58.349 245.123 58.0254 244.667C57.7064 244.211 57.5469 243.694 57.5469 243.115H58.8662C58.8662 243.717 59.0872 244.193 59.5293 244.544C59.9759 244.89 60.5706 245.063 61.3135 245.063C62.0062 245.063 62.5371 244.922 62.9062 244.64C63.2754 244.357 63.46 243.972 63.46 243.484C63.46 242.997 63.2891 242.621 62.9473 242.356C62.6055 242.088 61.9857 241.823 61.0879 241.563ZM68.6143 242.862L68.8057 244.175L69.0859 242.992L71.0547 236.047H72.1621L74.083 242.992L74.3564 244.195L74.5684 242.855L76.1133 236.047H77.4326L75.0195 246H73.8232L71.7725 238.747L71.6152 237.988L71.458 238.747L69.332 246H68.1357L65.7295 236.047H67.042L68.6143 242.862Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SE\"\n          d=\"M246.088 241.563C244.962 241.24 244.142 240.843 243.627 240.374C243.117 239.9 242.861 239.317 242.861 238.624C242.861 237.84 243.174 237.193 243.798 236.683C244.427 236.168 245.243 235.91 246.245 235.91C246.929 235.91 247.537 236.042 248.07 236.307C248.608 236.571 249.023 236.936 249.314 237.4C249.611 237.865 249.759 238.373 249.759 238.925H248.439C248.439 238.323 248.248 237.852 247.865 237.51C247.482 237.163 246.942 236.99 246.245 236.99C245.598 236.99 245.092 237.134 244.728 237.421C244.368 237.703 244.188 238.098 244.188 238.604C244.188 239.009 244.358 239.353 244.7 239.636C245.047 239.914 245.632 240.169 246.457 240.401C247.286 240.634 247.934 240.891 248.398 241.174C248.868 241.452 249.214 241.778 249.438 242.151C249.665 242.525 249.779 242.965 249.779 243.471C249.779 244.277 249.465 244.924 248.836 245.412C248.207 245.895 247.366 246.137 246.313 246.137C245.63 246.137 244.992 246.007 244.399 245.747C243.807 245.483 243.349 245.123 243.025 244.667C242.706 244.211 242.547 243.694 242.547 243.115H243.866C243.866 243.717 244.087 244.193 244.529 244.544C244.976 244.89 245.571 245.063 246.313 245.063C247.006 245.063 247.537 244.922 247.906 244.64C248.275 244.357 248.46 243.972 248.46 243.484C248.46 242.997 248.289 242.621 247.947 242.356C247.605 242.088 246.986 241.823 246.088 241.563ZM257.094 241.399H252.78V244.927H257.791V246H251.468V236.047H257.723V237.127H252.78V240.326H257.094V241.399Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NE\"\n          d=\"M249.805 80H248.485L243.475 72.3301V80H242.155V70.0469H243.475L248.499 77.751V70.0469H249.805V80ZM257.762 75.3994H253.448V78.9268H258.459V80H252.136V70.0469H258.391V71.127H253.448V74.3262H257.762V75.3994Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"W\"\n          d=\"M34.6602 160.621L34.9883 162.871L35.4688 160.844L38.8438 148.938H40.7422L44.0352 160.844L44.5039 162.906L44.8672 160.609L47.5156 148.938H49.7773L45.6406 166H43.5898L40.0742 153.566L39.8047 152.266L39.5352 153.566L35.8906 166H33.8398L29.7148 148.938H31.9648L34.6602 160.621Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"E\"\n          d=\"M285.625 158.113H278.23V164.16H286.82V166H275.98V148.938H286.703V150.789H278.23V156.273H285.625V158.113Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"S\"\n          d=\"M157.008 271.395C155.078 270.84 153.672 270.16 152.789 269.355C151.914 268.543 151.477 267.543 151.477 266.355C151.477 265.012 152.012 263.902 153.082 263.027C154.16 262.145 155.559 261.703 157.277 261.703C158.449 261.703 159.492 261.93 160.406 262.383C161.328 262.836 162.039 263.461 162.539 264.258C163.047 265.055 163.301 265.926 163.301 266.871H161.039C161.039 265.84 160.711 265.031 160.055 264.445C159.398 263.852 158.473 263.555 157.277 263.555C156.168 263.555 155.301 263.801 154.676 264.293C154.059 264.777 153.75 265.453 153.75 266.32C153.75 267.016 154.043 267.605 154.629 268.09C155.223 268.566 156.227 269.004 157.641 269.402C159.062 269.801 160.172 270.242 160.969 270.727C161.773 271.203 162.367 271.762 162.75 272.402C163.141 273.043 163.336 273.797 163.336 274.664C163.336 276.047 162.797 277.156 161.719 277.992C160.641 278.82 159.199 279.234 157.395 279.234C156.223 279.234 155.129 279.012 154.113 278.566C153.098 278.113 152.312 277.496 151.758 276.715C151.211 275.934 150.938 275.047 150.938 274.055H153.199C153.199 275.086 153.578 275.902 154.336 276.504C155.102 277.098 156.121 277.395 157.395 277.395C158.582 277.395 159.492 277.152 160.125 276.668C160.758 276.184 161.074 275.523 161.074 274.688C161.074 273.852 160.781 273.207 160.195 272.754C159.609 272.293 158.547 271.84 157.008 271.395Z\"\n          fill=\"black\"\n        />\n        <line\n          id=\"Line 1\"\n          x1=\"159\"\n          y1=\"8\"\n          x2=\"159\"\n          y2=\"23\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 3\"\n          x1=\"23\"\n          y1=\"160\"\n          x2=\"8\"\n          y2=\"160\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 5\"\n          x1=\"57.8995\"\n          y1=\"65.3137\"\n          x2=\"47.2929\"\n          y2=\"54.7071\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 7\"\n          x1=\"47.2929\"\n          y1=\"261.899\"\n          x2=\"57.8995\"\n          y2=\"251.293\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 8\"\n          x1=\"258.293\"\n          y1=\"63.8995\"\n          x2=\"268.9\"\n          y2=\"53.2929\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 6\"\n          x1=\"269.899\"\n          y1=\"260.314\"\n          x2=\"259.293\"\n          y2=\"249.707\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 4\"\n          x1=\"308\"\n          y1=\"157\"\n          x2=\"293\"\n          y2=\"157\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 2\"\n          x1=\"159\"\n          y1=\"293\"\n          x2=\"159\"\n          y2=\"308\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n      </g>\n      <g id=\"needle\">\n        <path\n          id=\"Polygon 1\"\n          d=\"M158 68L168 158H157H148L158 68Z\"\n          // fill=\"#D50000\"\n          fill=\"#4caf50\"\n        />\n        <path\n          id=\"Polygon 2\"\n          d=\"M158 248L148 158H159H168L158 248Z\"\n          // fill=\"#9E9E9E\"\n          fill=\"#bdbdbd\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nCompass.defaultProps = {\n  size: \"300\",\n  rotate: 0,\n};\n\nexport default Compass;\n","import React from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@material-ui/core\";\nimport Compass from \"./Compass\";\n\nexport default function Wind({ windDirection, windSpeed, rain }) {\n  return (\n    <Card\n      elevation={6}\n      style={{\n        padding: \".5rem 1rem\",\n        height: 255,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Typography align=\"center\">\n        Wind <span style={{ color: \"#4caf50\" }}>Direction</span>\n        {\" & \"}\n        <span style={{ color: \"#2196f3\" }}>Speed</span>\n      </Typography>\n      <div style={{ textAlign: \"center\", padding: \".5rem\" }}>\n        <Compass\n          size={Number.isNaN(rain) === true ? 140 : 120}\n          rotate={windDirection}\n        />\n      </div>\n      <div>\n        <Typography align=\"center\">\n          <span\n            style={{\n              color: \"#4caf50\",\n            }}\n          >\n            {Number(windDirection) === -111 ? (\n              \"x\"\n            ) : (\n              <span>{windDirection} °</span>\n            )}\n          </span>\n          <span\n            style={{\n              marginLeft: \"1rem\",\n              color: \"#2196f3\",\n            }}\n          >\n            {Number(windSpeed) === -111 ? \"x\" : <span>{windSpeed} m/s</span>}\n          </span>\n        </Typography>\n        {!Number.isNaN(rain) && (\n          <Typography\n            // variant=\"h6\"\n            color=\"textSecondary\"\n            align=\"center\"\n            style={{ marginTop: \".25rem\", marginBottom: \".25rem\" }}\n          >\n            Rain: {Number(rain) === -111 ? \"x\" : <span>{rain} mm</span>}\n          </Typography>\n        )}\n      </div>\n    </Card>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nfunction Compass({ size, rotate }) {\n  useEffect(() => {\n    // console.log(\"useEffect for rotation running...\");\n\n    const needle = document.getElementById(\"needle2\");\n\n    // let rotationValue = String(360 - rotate);\n    let rotationValue = Number(rotate) && Number(rotate) !== -111 ? Number(rotate) : 0;\n\n    needle.style.transformOrigin = \"center\";\n    needle.style.transform = `rotate(${rotationValue}deg)`;\n  }, [rotate]);\n\n  return (\n    <svg\n      width={String(size)}\n      height={String(size)}\n      viewBox=\"0 0 316 316\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g id=\"body\">\n        <circle\n          id=\"Ellipse\"\n          cx=\"158\"\n          cy=\"158\"\n          r=\"154\"\n          fill=\"white\"\n          stroke=\"#616161\"\n          // stroke-width=\"8\"\n          strokeWidth=\"8\"\n        />\n        <path\n          id=\"N\"\n          d=\"M164.094 53H161.832L153.242 39.8516V53H150.98V35.9375H153.242L161.855 49.1445V35.9375H164.094V53Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NW\"\n          d=\"M65.8047 80H64.4854L59.4746 72.3301V80H58.1553V70.0469H59.4746L64.499 77.751V70.0469H65.8047V80ZM70.2822 76.8623L70.4736 78.1748L70.7539 76.9922L72.7227 70.0469H73.8301L75.751 76.9922L76.0244 78.1953L76.2363 76.8555L77.7812 70.0469H79.1006L76.6875 80H75.4912L73.4404 72.7471L73.2832 71.9883L73.126 72.7471L71 80H69.8037L67.3975 70.0469H68.71L70.2822 76.8623Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SW\"\n          d=\"M61.0879 241.563C59.9622 241.24 59.1419 240.843 58.627 240.374C58.1165 239.9 57.8613 239.317 57.8613 238.624C57.8613 237.84 58.1735 237.193 58.7979 236.683C59.4268 236.168 60.2425 235.91 61.2451 235.91C61.9287 235.91 62.5371 236.042 63.0703 236.307C63.6081 236.571 64.0228 236.936 64.3145 237.4C64.6107 237.865 64.7588 238.373 64.7588 238.925H63.4395C63.4395 238.323 63.248 237.852 62.8652 237.51C62.4824 237.163 61.9424 236.99 61.2451 236.99C60.598 236.99 60.0921 237.134 59.7275 237.421C59.3675 237.703 59.1875 238.098 59.1875 238.604C59.1875 239.009 59.3584 239.353 59.7002 239.636C60.0465 239.914 60.6322 240.169 61.457 240.401C62.2865 240.634 62.9336 240.891 63.3984 241.174C63.8678 241.452 64.2142 241.778 64.4375 242.151C64.6654 242.525 64.7793 242.965 64.7793 243.471C64.7793 244.277 64.4648 244.924 63.8359 245.412C63.207 245.895 62.3662 246.137 61.3135 246.137C60.6299 246.137 59.9919 246.007 59.3994 245.747C58.807 245.483 58.349 245.123 58.0254 244.667C57.7064 244.211 57.5469 243.694 57.5469 243.115H58.8662C58.8662 243.717 59.0872 244.193 59.5293 244.544C59.9759 244.89 60.5706 245.063 61.3135 245.063C62.0062 245.063 62.5371 244.922 62.9062 244.64C63.2754 244.357 63.46 243.972 63.46 243.484C63.46 242.997 63.2891 242.621 62.9473 242.356C62.6055 242.088 61.9857 241.823 61.0879 241.563ZM68.6143 242.862L68.8057 244.175L69.0859 242.992L71.0547 236.047H72.1621L74.083 242.992L74.3564 244.195L74.5684 242.855L76.1133 236.047H77.4326L75.0195 246H73.8232L71.7725 238.747L71.6152 237.988L71.458 238.747L69.332 246H68.1357L65.7295 236.047H67.042L68.6143 242.862Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SE\"\n          d=\"M246.088 241.563C244.962 241.24 244.142 240.843 243.627 240.374C243.117 239.9 242.861 239.317 242.861 238.624C242.861 237.84 243.174 237.193 243.798 236.683C244.427 236.168 245.243 235.91 246.245 235.91C246.929 235.91 247.537 236.042 248.07 236.307C248.608 236.571 249.023 236.936 249.314 237.4C249.611 237.865 249.759 238.373 249.759 238.925H248.439C248.439 238.323 248.248 237.852 247.865 237.51C247.482 237.163 246.942 236.99 246.245 236.99C245.598 236.99 245.092 237.134 244.728 237.421C244.368 237.703 244.188 238.098 244.188 238.604C244.188 239.009 244.358 239.353 244.7 239.636C245.047 239.914 245.632 240.169 246.457 240.401C247.286 240.634 247.934 240.891 248.398 241.174C248.868 241.452 249.214 241.778 249.438 242.151C249.665 242.525 249.779 242.965 249.779 243.471C249.779 244.277 249.465 244.924 248.836 245.412C248.207 245.895 247.366 246.137 246.313 246.137C245.63 246.137 244.992 246.007 244.399 245.747C243.807 245.483 243.349 245.123 243.025 244.667C242.706 244.211 242.547 243.694 242.547 243.115H243.866C243.866 243.717 244.087 244.193 244.529 244.544C244.976 244.89 245.571 245.063 246.313 245.063C247.006 245.063 247.537 244.922 247.906 244.64C248.275 244.357 248.46 243.972 248.46 243.484C248.46 242.997 248.289 242.621 247.947 242.356C247.605 242.088 246.986 241.823 246.088 241.563ZM257.094 241.399H252.78V244.927H257.791V246H251.468V236.047H257.723V237.127H252.78V240.326H257.094V241.399Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NE\"\n          d=\"M249.805 80H248.485L243.475 72.3301V80H242.155V70.0469H243.475L248.499 77.751V70.0469H249.805V80ZM257.762 75.3994H253.448V78.9268H258.459V80H252.136V70.0469H258.391V71.127H253.448V74.3262H257.762V75.3994Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"W\"\n          d=\"M34.6602 160.621L34.9883 162.871L35.4688 160.844L38.8438 148.938H40.7422L44.0352 160.844L44.5039 162.906L44.8672 160.609L47.5156 148.938H49.7773L45.6406 166H43.5898L40.0742 153.566L39.8047 152.266L39.5352 153.566L35.8906 166H33.8398L29.7148 148.938H31.9648L34.6602 160.621Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"E\"\n          d=\"M285.625 158.113H278.23V164.16H286.82V166H275.98V148.938H286.703V150.789H278.23V156.273H285.625V158.113Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"S\"\n          d=\"M157.008 271.395C155.078 270.84 153.672 270.16 152.789 269.355C151.914 268.543 151.477 267.543 151.477 266.355C151.477 265.012 152.012 263.902 153.082 263.027C154.16 262.145 155.559 261.703 157.277 261.703C158.449 261.703 159.492 261.93 160.406 262.383C161.328 262.836 162.039 263.461 162.539 264.258C163.047 265.055 163.301 265.926 163.301 266.871H161.039C161.039 265.84 160.711 265.031 160.055 264.445C159.398 263.852 158.473 263.555 157.277 263.555C156.168 263.555 155.301 263.801 154.676 264.293C154.059 264.777 153.75 265.453 153.75 266.32C153.75 267.016 154.043 267.605 154.629 268.09C155.223 268.566 156.227 269.004 157.641 269.402C159.062 269.801 160.172 270.242 160.969 270.727C161.773 271.203 162.367 271.762 162.75 272.402C163.141 273.043 163.336 273.797 163.336 274.664C163.336 276.047 162.797 277.156 161.719 277.992C160.641 278.82 159.199 279.234 157.395 279.234C156.223 279.234 155.129 279.012 154.113 278.566C153.098 278.113 152.312 277.496 151.758 276.715C151.211 275.934 150.938 275.047 150.938 274.055H153.199C153.199 275.086 153.578 275.902 154.336 276.504C155.102 277.098 156.121 277.395 157.395 277.395C158.582 277.395 159.492 277.152 160.125 276.668C160.758 276.184 161.074 275.523 161.074 274.688C161.074 273.852 160.781 273.207 160.195 272.754C159.609 272.293 158.547 271.84 157.008 271.395Z\"\n          fill=\"black\"\n        />\n        <line\n          id=\"Line 1\"\n          x1=\"159\"\n          y1=\"8\"\n          x2=\"159\"\n          y2=\"23\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 3\"\n          x1=\"23\"\n          y1=\"160\"\n          x2=\"8\"\n          y2=\"160\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 5\"\n          x1=\"57.8995\"\n          y1=\"65.3137\"\n          x2=\"47.2929\"\n          y2=\"54.7071\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 7\"\n          x1=\"47.2929\"\n          y1=\"261.899\"\n          x2=\"57.8995\"\n          y2=\"251.293\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 8\"\n          x1=\"258.293\"\n          y1=\"63.8995\"\n          x2=\"268.9\"\n          y2=\"53.2929\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 6\"\n          x1=\"269.899\"\n          y1=\"260.314\"\n          x2=\"259.293\"\n          y2=\"249.707\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 4\"\n          x1=\"308\"\n          y1=\"157\"\n          x2=\"293\"\n          y2=\"157\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 2\"\n          x1=\"159\"\n          y1=\"293\"\n          x2=\"159\"\n          y2=\"308\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n      </g>\n      <g id=\"needle2\">\n        <path\n          id=\"Polygon 1\"\n          d=\"M158 68L168 158H157H148L158 68Z\"\n          // fill=\"#D50000\"\n          fill=\"#4caf50\"\n        />\n        <path\n          id=\"Polygon 2\"\n          d=\"M158 248L148 158H159H168L158 248Z\"\n          // fill=\"#9E9E9E\"\n          fill=\"#bdbdbd\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nCompass.defaultProps = {\n  size: \"300\",\n  rotate: 0,\n};\n\nexport default Compass;\n","import React from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@material-ui/core\";\nimport Compass2 from \"./Compass2\";\n\nexport default function Wind({ windDirection, windSpeed, rain }) {\n  return (\n    <Card\n      elevation={6}\n      style={{\n        padding: \".5rem 1rem\",\n        height: 255,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Typography align=\"center\">\n        Wind <span style={{ color: \"#4caf50\" }}>Direction</span>\n        {\" & \"}\n        <span style={{ color: \"#2196f3\" }}>Speed</span>\n      </Typography>\n      <div style={{ textAlign: \"center\", padding: \".5rem\" }}>\n        <Compass2\n          size={Number.isNaN(rain) === true ? 140 : 120}\n          rotate={windDirection}\n        />\n      </div>\n      <div>\n        <Typography align=\"center\">\n          <span\n            style={{\n              color: \"#4caf50\",\n            }}\n          >\n            {Number(windDirection) === -111 ? (\n              \"x\"\n            ) : (\n              <span>{windDirection} °</span>\n            )}\n          </span>\n          <span\n            style={{\n              marginLeft: \"1rem\",\n              color: \"#2196f3\",\n            }}\n          >\n            {Number(windSpeed) === -111 ? \"x\" : <span>{windSpeed} m/s</span>}\n          </span>\n        </Typography>\n        {!Number.isNaN(rain) && (\n          <Typography\n            // variant=\"h6\"\n            color=\"textSecondary\"\n            align=\"center\"\n            style={{ marginTop: \".25rem\", marginBottom: \".25rem\" }}\n          >\n            Rain: {Number(rain) === -111 ? \"x\" : <span>{rain} mm</span>}\n          </Typography>\n        )}\n      </div>\n    </Card>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport { parse } from \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/Chittorgarh/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/Chittorgarh/BiaxialLineChart\";\nimport BlockTable from \"../components/Chittorgarh/BlockTable\";\nimport CustomCards from \"../components/Chittorgarh/CustomCards\";\nimport PowerGenerationGauge from \"../components/Chittorgarh/PowerGenerationGauge\";\nimport Wind from \"../components/Chittorgarh/Wind\";\nimport Wind2 from \"../components/Chittorgarh/Wind2\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Chittorgarh({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n  const [ambientTemp2, setAmbientTemp2] = useState(0);\n  const [moduleTemp2, setModuleTemp2] = useState(0);\n  const [humidity2, setHumidity2] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n  const [windDirection2, setWindDirection2] = useState(0);\n  const [windSpeed2, setWindSpeed2] = useState(0);\n  const [rain2, setRain2] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      gti2: \"0,00\",\n      ghi: \"0.00\",\n      ghi2: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/chittorgarh/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Sep 10, 2021 12:00:00 PM\n    const startTime = new Date(1631275200000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/chittorgarh/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/chittorgarh/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/chittorgarh/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        const ambientTempStr2 = response.data.ambientTemp2;\n        const moduleTempStr2 = response.data.moduleTemp2;\n        const humidityStr2 = response.data.humidity2;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n        setAmbientTemp2(Number(ambientTempStr2).toFixed(1));\n        setModuleTemp2(Number(moduleTempStr2).toFixed(1));\n        setHumidity2(Number(humidityStr2).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/chittorgarh/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        const windDirectionStr2 = response.data.direction2;\n        const windSpeedStr2 = response.data.speed2;\n        const rainStr2 = response.data.rain2;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n        setWindDirection2(Number(windDirectionStr2).toFixed(0));\n        setWindSpeed2(Number(windSpeedStr2).toFixed(1));\n        setRain2(Number(rainStr2).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/chittorgarh/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data, block) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 CAB Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 CAB Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 CAB Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    if (block === 23 || block === 24 || block === 25 || block === 26) {\n      let voltageValues = [\n        \"S1 / S1CB1 V\",\n        \"S2 / S1CB2 V\",\n        \"S3 / S1CB3 V\",\n        \"S4 / S1CB4 V\",\n        \"S5 / S1CB5 V\",\n        \"S6 / S1CB6 V\",\n        \"S7 / S1CB7 V\",\n        \"S8 / S1CB8 V\",\n        \"S9 / S2CB1 V\",\n        \"S10 / S2CB2 V\",\n        \"S11 / S2CB3 V\",\n        \"S12 / S2CB4 V\",\n        \"S13 / S2CB5 V\",\n        \"S14 / S2CB6 V\",\n        \"S15 / S2CB7 V\",\n        \"S16 / S2CB8 V\",\n        \"S17 / S3CB1 V\",\n        \"S18 / S3CB2 V\",\n        \"S19 / S3CB3 V\",\n        \"S20 / S3CB4 V\",\n        \"S21 / S3CB5 V\",\n        \"S22 / S3CB6 V\",\n        \"S23 / S3CB7 V\",\n        \"S24 / S3CB8 V\",\n        \"S25 / S4CB1 V\",\n        \"S26 / S4CB2 V\",\n        \"S27 / S4CB3 V\",\n        \"S28 / S4CB4 V\",\n        \"S29 / S4CB5 V\",\n        \"S30 / S4CB6 V\",\n        \"S31 / S4CB7 V\",\n        \"S32 / S4CB8 V\",\n      ];\n\n      heading.push(...voltageValues);\n    }\n\n    for (let i = 0; i < heading.length; i++) {\n      let invArray = [];\n      Array.from(Array(36).keys()).map((element, index) => {\n        invArray.push({ [\"inv\" + Number(index + 1)]: NaN });\n      });\n\n      try {\n        if (arrayFromObject[i][1]) {\n          invArray[0][\"inv1\"] = arrayFromObject[i][1];\n        }\n        for (let j = 1; j < 36; j++) {\n          if (arrayFromObject[heading.length * j + i][1]) {\n            invArray[j][\"inv\" + Number(j + 1)] =\n              arrayFromObject[heading.length * j + i][1];\n          }\n        }\n      } catch (error) {}\n\n      const invsObject = {};\n      invArray.forEach((value, index) => {\n        invsObject[\"inv\" + Number(index + 1)] =\n          value[\"inv\" + Number(index + 1)];\n      });\n\n      // console.log(invsObject);\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        ...invsObject,\n      });\n    }\n\n    // console.log(\"arrayOfObjectsX\", arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/chittorgarh/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: new Date(1632225600000).getTime(), // Sep 21, 2021 12:00:00 PM\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block and inverters\", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data, block);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to chittorgarh site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to chittorgarh site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to chittorgarh site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Chittorgarh</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">250 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 6.619}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        ghi2={cardsValues.ghi2}\n        gti2={cardsValues.gti2}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        // spacing={2}\n        justify=\"space-between\"\n        style={{ marginTop: \"2rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={375} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n            ambientTemp2={ambientTemp2}\n            moduleTemp2={moduleTemp2}\n            humidity2={humidity2}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n        <Grid item>\n          <Wind2\n            windDirection={windDirection2}\n            windSpeed={windSpeed2}\n            rain={rain2}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 300]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  {Array.from(Array(34).keys()).map((element, index) => {\n                    return (\n                      <MenuItem value={index + 1}>\n                        B{String(index + 1).padStart(2, 0)}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            {/* )} */}\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            {/* )} */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Chattisgarh/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Chattisgarh({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/chattisgarh/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Sep 27, 2021 12:00:00 PM\n    const startTime = new Date(1632744000000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/chattisgarh/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/chattisgarh/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/chattisgarh/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/chattisgarh/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/chattisgarh/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/chattisgarh/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to chattisgarh site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to chattisgarh site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to chattisgarh site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Chattisgarh</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">30 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={50} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 35]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {block !== \"mcr\" && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv3))\n              ? \"-\"\n              : Number(value.inv3) === -111\n              ? \"X\"\n              : Number(value.inv3).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n      {block !== \"mcr\" && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv4))\n              ? \"-\"\n              : Number(value.inv4) === -111\n              ? \"X\"\n              : Number(value.inv4).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n      {block !== \"mcr\" && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv5))\n              ? \"-\"\n              : Number(value.inv5) === -111\n              ? \"X\"\n              : Number(value.inv5).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n      {block !== \"mcr\" && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv6))\n              ? \"-\"\n              : Number(value.inv6) === -111\n              ? \"X\"\n              : Number(value.inv6).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      {block !== \"mcr\" && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </StyledTableCell>\n      )}\n      {block !== \"mcr\" && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </StyledTableCell>\n      )}\n      {block !== \"mcr\" && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv5))\n            ? \"-\"\n            : Number(value.inv5) === -111\n            ? \"X\"\n            : Number(value.inv5).toFixed(2)}\n        </StyledTableCell>\n      )}\n      {block !== \"mcr\" && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv6))\n            ? \"-\"\n            : Number(value.inv6) === -111\n            ? \"X\"\n            : Number(value.inv6).toFixed(2)}\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  // console.log(block);\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={7}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            {block !== \"mcr\" && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 3</strong>\n              </StyledTableCell>\n            )}\n            {block !== \"mcr\" && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 4</strong>\n              </StyledTableCell>\n            )}\n            {block !== \"mcr\" && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 5</strong>\n              </StyledTableCell>\n            )}\n            {block !== \"mcr\" && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 6</strong>\n              </StyledTableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Balanagar/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Balanagar({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  let source = axios.CancelToken.source();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/balanagar/site\", {\n        cancelToken: source.token,\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n          endpoint: \"site\",\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response && error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n      setIsNextCount(0);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    // console.log(\"selectedDate\");\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Sep 28, 2021 12:00:00 PM\n    const startTime = new Date(1632830400000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/balanagar/boxes\", {\n        cancelToken: source.token,\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n          endpoint: \"boxes\",\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/balanagar/gauge\", {\n        cancelToken: source.token,\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n          endpoint: \"gauge\",\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/balanagar/temperature\", {\n        cancelToken: source.token,\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n          endpoint: \"temperature\",\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/balanagar/wind\", {\n        cancelToken: source.token,\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n          endpoint: \"wind\",\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/balanagar/graph\", {\n        cancelToken: source.token,\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n          endpoint: \"graph\",\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n      let inv6Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n        if (arrayFromObject[heading.length * 5 + i][1]) {\n          inv6Value = arrayFromObject[heading.length * 5 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n        inv6: inv6Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log('getInverterValues function called', block);\n\n    if (!block) {\n      localStorage.setItem(\"siteInverterTableBlock\", 1);\n      block = localStorage.getItem(\"siteInverterTableBlock\");\n    }\n\n    let route = serverUrl;\n    if (block === \"mcr\") {\n      route += \"/balanagar/grid/mcr\";\n    } else {\n      route += \"/balanagar/grid/B\" + String(block).padStart(2, 0);\n    }\n    axios\n      .get(route, {\n        cancelToken: source.token,\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n          endpoint: \"grid\",\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId((prevState) => event.target.value);\n    localStorage.setItem(\"siteInverterTableBlock\", event.target.value);\n  };\n\n  useEffect(() => {\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(blockTableId, date.getTime(), mainTime, beginTime);\n  }, [blockTableId]);\n\n  // Function to call above functions to get data related to balanagar site\n  const getSiteData = (endTime) => {\n    // console.log(getEnablePacket(), getIsNext());\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(\n      localStorage.getItem(\"siteInverterTableBlock\"),\n      startTime,\n      newEndTime,\n      beginTime\n    );\n  };\n\n  // useEffect to fetch data related to balanagar site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to balanagar site\");\n    // console.log(\"mainTime\", new Date(mainTime).toLocaleString());\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 5 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n      localStorage.setItem(\"siteInverterTableBlock\", 1);\n      source.cancel();\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Balanagar</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">50 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={75} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={24}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 60]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                  <MenuItem value={8}>B08</MenuItem>\n                  <MenuItem value={\"mcr\"}>MCR</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            {/* )} */}\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            {/* )} */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Kosigi/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Kosigi({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/kosigi/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Sep 29, 2021 12:00:00 PM\n    const startTime = new Date(1632916800000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/kosigi/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/kosigi/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/kosigi/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/kosigi/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/kosigi/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 Cab Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 Cab Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 Cab Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 Cab Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/kosigi/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to kosigi site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to kosigi site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to kosigi site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Kosigi</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">10 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={15} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 15]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {block !== 3 && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv2))\n              ? \"-\"\n              : Number(value.inv2) === -111\n              ? \"X\"\n              : Number(value.inv2).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      {block !== 3 && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  // console.log(\"SANDUR block\", block);\n\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            {block !== 3 && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 2</strong>\n              </StyledTableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Sandur/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Sandur({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/sandur/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Sep 30, 2021 12:00:00 PM\n    const startTime = new Date(1633003200000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/sandur/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/sandur/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/sandur/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/sandur/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/sandur/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/sandur/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to sandur site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to sandur site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to sandur site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Sandur</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">20 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={30} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 30]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {block !== 3 && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv2))\n              ? \"-\"\n              : Number(value.inv2) === -111\n              ? \"X\"\n              : Number(value.inv2).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      {block !== 3 && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  // console.log(\"SANDUR block\", block);\n\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            {block !== 3 && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 2</strong>\n              </StyledTableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Kudligi/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Kudligi({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/kudligi/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Sep 30, 2021 12:00:00 PM\n    const startTime = new Date(1633003200000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/kudligi/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/kudligi/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/kudligi/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/kudligi/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/kudligi/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/kudligi/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to kudligi site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to kudligi site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to kudligi site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Kudligi</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">20 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={30} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 30]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {block !== 3 && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv2))\n              ? \"-\"\n              : Number(value.inv2) === -111\n              ? \"X\"\n              : Number(value.inv2).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      {block !== 3 && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  // console.log(\"SANDUR block\", block);\n\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            {block !== 3 && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 2</strong>\n              </StyledTableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Gulelgudda/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Gulelgudda({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/gulelgudda/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Oct 1, 2021 06:00:00 PM\n    const startTime = new Date(1633111200000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/gulelgudda/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/gulelgudda/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/gulelgudda/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/gulelgudda/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/gulelgudda/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    // console.log(\"heading length\", heading.length);\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/gulelgudda/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to gulelgudda site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to gulelgudda site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to gulelgudda site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Gulelgudda</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">15 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={25} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 30]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {block !== 3 && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv2))\n              ? \"-\"\n              : Number(value.inv2) === -111\n              ? \"X\"\n              : Number(value.inv2).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      {block !== 3 && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  // console.log(\"SANDUR block\", block);\n\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            {block !== 3 && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 2</strong>\n              </StyledTableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Hukkeri/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Hukkeri({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/hukkeri/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Oct 1, 2021 06:00:00 PM\n    const startTime = new Date(1633111200000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/hukkeri/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/hukkeri/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/hukkeri/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/hukkeri/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/hukkeri/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/hukkeri/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to hukkeri site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to hukkeri site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to hukkeri site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Hukkeri</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">15 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={25} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 30]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\n\nfunction AddSite() {\n  return <div>Add Site</div>;\n}\n\nexport default AddSite;\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {block !== 3 && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv2))\n              ? \"-\"\n              : Number(value.inv2) === -111\n              ? \"X\"\n              : Number(value.inv2).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      {block !== 3 && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  // console.log(\"SANDUR block\", block);\n\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            {block !== 3 && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 2</strong>\n              </StyledTableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Kittur/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Kittur({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/kittur/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Oct 07, 2021 12:00:00 AM\n    const startTime = new Date(1633564800000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/kittur/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/kittur/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/kittur/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/kittur/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/kittur/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/kittur/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to kittur site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to kittur site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to kittur site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Kittur</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">15 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={25} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 30]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    // console.log(block);\n\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            {/* )} */}\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            {/* )} */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Bazpur/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Bazpur({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/bazpur/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Oct 08, 2021 12:00:00 PM\n    const startTime = new Date(1633694400000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/bazpur/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/bazpur/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/bazpur/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/bazpur/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/bazpur/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 CAB Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 CAB Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 CAB Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block) => {\n    // console.log(\"getInverterValues function called\", blockTableId);\n\n    if (!block) {\n      localStorage.setItem(\"siteInverterTableBlock\", 1);\n      block = localStorage.getItem(\"siteInverterTableBlock\");\n    }\n\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    axios\n      .get(serverUrl + \"/bazpur/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: date.getTime(),\n          endTime: mainTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    let tableInterval = setInterval(\n      () => getInverterValues(localStorage.getItem(\"siteInverterTableBlock\")),\n      60000\n    );\n\n    return () => {\n      clearInterval(tableInterval);\n    };\n  });\n\n  useEffect(() => {\n    // console.log(blockTableId);\n    getInverterValues(blockTableId);\n  }, [blockTableId]);\n\n  const handleBlockChange = (event) => {\n    localStorage.setItem(\"siteInverterTableBlock\", event.target.value);\n    setBlockTableId((prevState) => {\n      return Number(event.target.value);\n    });\n  };\n\n  // Function to call above functions to get data related to bazpur site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(\n      localStorage.getItem(\"siteInverterTableBlock\"),\n      newEndTime,\n      beginTime\n    );\n    // console.log(blockTableId);\n    // getInverterValues();\n  };\n\n  // useEffect to fetch data related to bazpur site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to bazpur site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n      localStorage.setItem(\"siteInverterTableBlock\", 1);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Bazpur 1&#38;2</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">25 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={40} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1200]}\n          rightAxisY={[0, 30]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select\n                  defaultValue={1}\n                  value={blockTableId}\n                  onChange={handleBlockChange}\n                >\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    // console.log(block);\n\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            {/* )} */}\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            {/* )} */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Bidar/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Bidar({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/bidar/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Oct 20, 2021 12:00:00 PM\n    const startTime = new Date(1634731200000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/bidar/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/bidar/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/bidar/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/bidar/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/bidar/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 CAB Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 CAB Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 CAB Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = () => {\n    // console.log(\"getInverterValues function called\", blockTableId);\n\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    axios\n      .get(serverUrl + \"/bidar/grid/B\" + String(blockTableId).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: date.getTime(),\n          endTime: mainTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    let tableInterval = setInterval(getInverterValues, 60000);\n\n    return () => {\n      clearInterval(tableInterval);\n    };\n  });\n\n  useEffect(() => {\n    // console.log(blockTableId);\n    getInverterValues();\n  }, [blockTableId]);\n\n  const handleBlockChange = (event) => {\n    // console.log(event.target.value);\n    setBlockTableId((prevState) => {\n      return Number(event.target.value);\n    });\n  };\n\n  // Function to call above functions to get data related to bidar site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    // console.log(blockTableId);\n    // getInverterValues();\n  };\n\n  // useEffect to fetch data related to bidar site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to bidar site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Bidar</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">40 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={60} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select\n                  defaultValue={1}\n                  value={blockTableId}\n                  onChange={handleBlockChange}\n                >\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                  <MenuItem value={8}>B08</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {block !== 3 && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv2))\n              ? \"-\"\n              : Number(value.inv2) === -111\n              ? \"X\"\n              : Number(value.inv2).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      {block !== 3 && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  // console.log(\"SANDUR block\", block);\n\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            {block !== 3 && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 2</strong>\n              </StyledTableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Sidlaghatta/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Sidlaghatta({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/sidlaghatta/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Oct 11, 2021 12:00:00 PM\n    const startTime = new Date(1633953600000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/sidlaghatta/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/sidlaghatta/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/sidlaghatta/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/sidlaghatta/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/sidlaghatta/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/sidlaghatta/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to sidlaghatta site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to sidlaghatta site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to sidlaghatta site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Sidlaghatta</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">20 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={30} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 30]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    // console.log(block);\n\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            {/* )} */}\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            {/* )} */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Khilchipur/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Khilchipur({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/khilchipur/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Oct 12, 2021 12:00:00 PM\n    const startTime = new Date(1634040000000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/khilchipur/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/khilchipur/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/khilchipur/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/khilchipur/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/khilchipur/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/khilchipur/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to khilchipur site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to khilchipur site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to khilchipur site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Khilchipur</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">25 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={40} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                  <MenuItem value={8}>B08</MenuItem>\n                  <MenuItem value={9}>B09</MenuItem>\n                  <MenuItem value={10}>B10</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    // console.log(block);\n\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Khambhat/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Khambhat({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/khambhat/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Oct 13, 2021 12:00:00 PM\n    const startTime = new Date(1634126400000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/khambhat/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/khambhat/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/khambhat/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/khambhat/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/khambhat/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 Cab Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 Cab Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 Cab Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 Cab Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/khambhat/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to khambhat site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to khambhat site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to khambhat site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Khambhat</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">15 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={25} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1200]}\n          rightAxisY={[0, 25]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                  <MenuItem value={8}>B08</MenuItem>\n                  <MenuItem value={9}>B09</MenuItem>\n                  <MenuItem value={10}>B10</MenuItem>\n                  <MenuItem value={11}>B11</MenuItem>\n                  <MenuItem value={12}>B12</MenuItem>\n                  <MenuItem value={13}>B13</MenuItem>\n                  <MenuItem value={14}>B14</MenuItem>\n                  <MenuItem value={15}>B15</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    // fontSize: 16,\n  },\n  body: {\n    // fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: { width: \"100%\" },\n});\n\nexport default function CustomizedTable({\n  data,\n  ticketForModal,\n  handleNotificationClick,\n}) {\n  // console.log('Inside alerts table file', data)\n  const classes = useStyles();\n\n  const [page, setPage] = useState(0);\n\n  const [pageCount, setPageCount] = useState(0);\n\n  const [paginatedData, setPaginatedData] = useState([]);\n\n  const formatTime = (timestamp) => {\n    let date = new Date(timestamp * 1000);\n    return (\n      String(date.getDate()).padStart(2, 0) +\n      \"/\" +\n      String(date.getMonth() + 1).padStart(2, 0) +\n      \"/\" +\n      String(date.getFullYear()).slice(2) +\n      \", \" +\n      String(date.getHours()).padStart(2, 0) +\n      \":\" +\n      String(date.getMinutes()).padStart(2, 0)\n    );\n  };\n\n  useEffect(() => {\n    if (data) {\n      setPage(() => (data.length > 0 ? 1 : 0));\n      setPageCount(() => (data.length > 0 ? Math.ceil(data.length / 13) : 0));\n      setPaginatedData(() => (data.length > 0 ? data.slice(0, 13) : []));\n    }\n  }, [data]);\n\n  const handlePageChange = (event, value) => {\n    let paginatedData = data.slice(13 * (value - 1), 13 * value);\n    setPaginatedData(paginatedData);\n    setPage(value);\n  };\n\n  return (\n    <div>\n      <TableContainer component={Paper} className={classes.tableContainer}>\n        <Table aria-label=\"customized table\" size=\"small\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell\n                style={\n                  {\n                    // position: \"sticky\",\n                    // left: 0,\n                  }\n                }\n              >\n                <strong>Ticket</strong>\n              </StyledTableCell>\n              <StyledTableCell align=\"left\">\n                {\" \"}\n                <strong>Status</strong>\n              </StyledTableCell>\n              <StyledTableCell align=\"left\">\n                {\" \"}\n                <strong>Log Time</strong>\n              </StyledTableCell>\n              <StyledTableCell align=\"left\">\n                {\" \"}\n                <strong>Update Time</strong>\n              </StyledTableCell>\n              <StyledTableCell align=\"left\">\n                {\" \"}\n                <strong>Site</strong>\n              </StyledTableCell>\n              <StyledTableCell align=\"left\">\n                {\" \"}\n                <strong>Issue</strong>\n              </StyledTableCell>\n              <StyledTableCell align=\"left\">\n                {\" \"}\n                <strong>Category</strong>\n              </StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedData.map((row, index) => (\n              <StyledTableRow key={index}>\n                <StyledTableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  style={{\n                    cursor: Number(row.ticket) && \"pointer\",\n                    color: \"blue\",\n                  }}\n                  onClick={() => {\n                    // ticketForModal(row);\n                    localStorage.setItem(\"alertsTable\", \"notification_close\");\n                    handleNotificationClick(row);\n                  }}\n                >\n                  {row.ticket}\n                </StyledTableCell>\n\n                <StyledTableCell\n                  align=\"left\"\n                  style={{\n                    color:\n                      row.status === \"Open\"\n                        ? \"red\"\n                        : row.status === \"Pending\"\n                        ? \"orange\"\n                        : \"green\",\n                  }}\n                >\n                  {row.status}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {String(row.ticket).includes(\"No\")\n                    ? \"-\"\n                    : formatTime(row.timestamp)}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {String(row.ticket).includes(\"No\")\n                    ? \"-\"\n                    : formatTime(row.timestamp)}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">{row.site}</StyledTableCell>\n                <StyledTableCell align=\"left\">{row.alarm}</StyledTableCell>\n                <StyledTableCell align=\"left\">\n                  {String(row.state).slice(0, 1).toUpperCase()}\n                  {String(row.state).slice(1)}\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n            {paginatedData.length === 0 && (\n              <StyledTableRow>\n                <StyledTableCell align=\"left\">Loading...</StyledTableCell>\n              </StyledTableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <div\n        style={{\n          marginTop: \".5rem\",\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <Pagination\n          count={pageCount}\n          page={page}\n          onChange={handlePageChange}\n          shape=\"rounded\"\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Checkbox, ListItemIcon, ListItemText } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  // styles\n  formControl: {\n    margin: theme.spacing(1),\n    // minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  inputlabel: {\n    marginTop: \"-0.4rem\",\n    backgroundColor: \"transparent\",\n    color: \"#21618C\",\n    // fontSize: \"15px\",\n    padding: \"4px\",\n  },\n}));\n\nexport default function AlertsDropdown({\n  label,\n  items = [],\n  selectedItems = [],\n  handleChange,\n}) {\n  const classes = useStyles();\n\n  const isAllSelected =\n    items.length > 0 && selectedItems.length === items.length;\n\n  // items = selectedItems, item = currennt selected item\n  const isChecked = (items, item) => {\n    let isChecked = false;\n    items.forEach((element) => {\n      if (element === item) {\n        isChecked = true;\n      }\n    });\n    return isChecked;\n  };\n\n  return (\n    <FormControl\n      variant=\"outlined\"\n      className={classes.formControl}\n      style={{ maxWidth: \"100px\", marginTop: \"0.5rem\" }}\n      size=\"small\"\n    >\n      <InputLabel id={`${label}-select-label`} className={classes.inputlabel}>\n        {label}\n      </InputLabel>\n      <Select\n        // style={{ fontSize: \".8rem\" }}\n        labelId={`${label}-select-label`}\n        id={`${label}-select`}\n        style={{ fontSize: 14, height: \"4vh\" }}\n        value={selectedItems}\n        onChange={handleChange}\n        multiple\n        renderValue={(data) => data.join(\", \")}\n        MenuProps={{\n          classes: { paper: classes.menuPaper },\n          getContentAnchorEl: () => null,\n        }}\n      >\n        <MenuItem\n          value=\"all\"\n          classes={{\n            root: isAllSelected ? classes.selectedAll : \"\",\n          }}\n          style={{ paddingBlock: 0 }}\n        >\n          <ListItemIcon>\n            <Checkbox\n              style={{ paddingBlock: 0 }}\n              size=\"small\"\n              color=\"primary\"\n              classes={{ indeterminate: classes.indeterminateColor }}\n              checked={isAllSelected || items.length === 0}\n              indeterminate={\n                selectedItems.length > 0 && selectedItems.length < items.length\n              }\n            />\n          </ListItemIcon>\n          <ListItemText\n            // classes={{ primary: classes.selectAllText }}\n            classes={{ primary: classes.listItemText }}\n            primary=\"Select All\"\n            style={{ paddingTop: \".05rem\" }}\n          />\n        </MenuItem>\n        {items.map((element, index) => {\n          return (\n            <MenuItem key={index} value={element} style={{ paddingBlock: 0 }}>\n              <ListItemIcon>\n                <Checkbox\n                  style={{ paddingBlock: 0 }}\n                  checked={isChecked(selectedItems, element)}\n                  size=\"small\"\n                  color=\"primary\"\n                />\n              </ListItemIcon>\n              <ListItemText\n                classes={{ primary: classes.listItemText }}\n                primary={element}\n                style={{ paddingTop: \".05rem\" }}\n              />\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { TextField, NoSsr } from \"@material-ui/core\";\n\nimport axios from \"axios\";\nimport CustomTable from \"../components/Alerts/CustomTable\";\nimport Input from \"@material-ui/core/Input\";\nimport { AppState } from \"../AppContext\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport {\n  Button,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Modal,\n  Select,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n// import MultiDropdownSingle from \"../components/UI/MultiDropdownSingle\";\nimport AlertsDropdown from \"../components/UI/AlertsDropdown\";\n// import { red } from \"@material-ui/core/colors\";\n\nconst StyledKeyboardDatePicker = styled(KeyboardDatePicker)`\n  label {\n    margin-top: -0.4rem;\n    background-color: transparent;\n    color: #21618c;\n\n    padding: 4px;\n\n    // font-size: 15px;\n  }\n  .MuiSvgIcon-root {\n    padding-left: 1px;\n    padding-right: 1px;\n    margin-left: -15px;\n    margin-right: -15px;\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 80,\n    maxWidth: 140,\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n  inputlabel: {\n    marginTop: \"-0.4rem\",\n    backgroundColor: \"transparent\",\n    color: \"#21618C\",\n    padding: \"4px\",\n  },\n  date: {\n    // marginTop: \"-0.4rem\",\n    // backgroundColor: \"white\",\n    // fontSize: \"15px\",\n    // padding: \"4px\",\n    maxWidth: 130,\n  },\n}));\n\nconst alertsValue = [\"Open\", \"Pending\", \"Resolved\"];\nconst issueValue = [\"Network\", \"Service\", \"INV SCB\"];\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 150,\n    },\n  },\n};\n\nfunction getStyles(name, alertsValue, theme) {\n  return {\n    fontWeight:\n      alertsValue.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nfunction metStyles(name, issueValue, theme) {\n  return {\n    fontWeight:\n      issueValue.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nfunction Alerts({\n  handleTicketModal,\n  handleNotificationClick,\n  handleSessionExpire,\n}) {\n  const { enabledLinearProgress, setEnabledLinearProgress, setSnackbar } =\n    AppState();\n  let source = axios.CancelToken.source();\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [alertsData, setAlertsData] = useState([]);\n\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n\n  const getSites = (sites = siteNamesAndBlocks) => {\n    return sites.map((site) => site.name);\n  };\n\n  // const getSites = (sites = siteNamesAndBlocks) => {\n  //   return sites.map((site) => {\n  //     localStorage.setItem(\"selected2\");\n  //     return site.name;\n  //   });\n  // };\n\n  // const [selectedSite, setSelectedSite] = useState([\"All\"]);\n  // const [selectedSite, setSelectedSite] = useState(getSites());\n  const [selectedSite, setSelectedSite] = useState(\n    !localStorage.getItem(\"siteslocally\")\n      ? getSites()\n      : localStorage.getItem(\"siteslocally\").split(\",\")\n  );\n  // const [selected2, setSelected2] = useState(null);\n  const [siteOptions, setSiteOptions] = useState(getSites());\n\n  const isAllSelected =\n    JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length > 0 &&\n    selectedSite.length ===\n      JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length;\n\n  // const AllSelected =\n  //   alertsValue.length > 0 && status.length === alertsValue.length;\n\n  const [site, setSite] = useState();\n  // const [issue, setIssue] = useState();\n  const [category, setCategory] = useState();\n  // const [status, setStatus] = useState((prevState) =>\n  //   localStorage.getItem(\"alertsStatus\")\n  //     ? localStorage.getItem(\"alertsStatus\")\n  //     : \"Open\"\n  // );\n\n  const [status, setStatus] = React.useState([\"Open\", \"Pending\"]);\n  // const [issue, setIssue] = React.useState([\"Network\", \"Service\", \"INV SCB\"]);\n  const [issue, setIssue] = React.useState(\n    !localStorage.getItem(\"issueStatus\")\n      ? [\"Network\", \"Service\", \"INV SCB\"]\n      : localStorage.getItem(\"issueStatus\").split(\",\")\n  );\n\n  // const [flag, setFlag] = React.useState(false);\n\n  useEffect(() => {\n    setSite(\"%\");\n    // setIssue(\"%\");\n    setCategory(\"%\");\n    // setStatus(\"%\")\n  }, []);\n\n  const [disabledViewBtn, setDisabledViewBtn] = useState(false);\n  const [disabledCSVBtn, setDisabledCSVBtn] = useState(false);\n\n  const getFromDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(0, 0, 0, 0);\n    return newDate;\n  };\n\n  const getToDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(23, 59, 59, 999);\n    return newDate;\n  };\n\n  const [fromDate, setFromDate] = useState(() => {\n    // Tuesday, June 1, 2021 12:01:00 AM\n    let date = new Date(1622505660000);\n    return getFromDate(date);\n  });\n\n  const [toDate, setToDate] = useState(() => {\n    let date = new Date();\n    return getToDate(date);\n  });\n\n  const handleStatus = (event, key) => {\n    localStorage.setItem(\"alertsStatus\", event.target.value);\n    // setStatus(localStorage.getItem(\"alertsStatus\"));\n    // let value = event.target.value;\n    // setStatus((prevState) => ({ ...prevState, [key]: value }));\n    // setStatus(value);\n\n    let value = event.target.value;\n    if (value[value.length - 1] === \"all\") {\n      setStatus(status.length === alertsValue.length ? [] : alertsValue);\n      return;\n    }\n    setStatus(value);\n    // console.log(value, \"156\");\n    // if (value === [\"Open,Pending\"]) {\n    //   // setFlag(true);\n    //   setStatus([\"false\"]);\n    // }\n  };\n  const handleIssue = (event, key) => {\n    localStorage.setItem(\"issueStatus\", event.target.value);\n    // setStatus(localStorage.getItem(\"alertsStatus\"));\n    // let value = event.target.value;\n    // setStatus((prevState) => ({ ...prevState, [key]: value }));\n    // setStatus(value);\n\n    let value = event.target.value;\n    localStorage.setItem(\n      \"issueStatus\",\n      value[value.length - 1] === \"all\"\n        ? [\"Network\", \"Service\", \"INV SCB\"]\n        : value\n    );\n    if (value[value.length - 1] === \"all\") {\n      setIssue(issue.length === issueValue.length ? [] : issueValue);\n      return;\n    }\n    setIssue(value);\n    // console.log(value, \"156\");\n    // if (value === [\"Open,Pending\"]) {\n    //   // setFlag(true);\n    //   setStatus([\"false\"]);\n    // }\n  };\n\n  const handleSiteChange = (event) => {\n    // const value = event.target.value;\n\n    // if (value[value.length - 1] === \"All\") {\n    //   setSelectedSite(\n    //     selectedSite.length ===\n    //       JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length\n    //       ? []\n    //       : JSON.parse(localStorage.getItem(\"siteNamesCaps\"))\n    //   );\n    //   return;\n    // }\n\n    // setSelectedSite(value);\n\n    // fetchPerformance(fromDate.getTime(), toDate.getTime(), event.target.value);\n\n    let value = event.target.value;\n    localStorage.setItem(\n      \"siteslocally\",\n      value[value.length - 1] === \"all\" ? siteOptions : value\n    );\n\n    if (value[value.length - 1] === \"all\") {\n      setSelectedSite(\n        selectedSite.length === siteOptions.length ? [] : siteOptions\n      );\n      return;\n    }\n    setSelectedSite(value);\n    // setSelected2(value);\n  };\n\n  const fetchAlertsData = () => {\n    // console.log(\"Fetch alerts data using useEffect...\");\n    // console.log(\n    //   // selectedSite,\n    //   issue,\n    //   category,\n    //   localStorage.getItem(\"siteslocally\")\n    // );\n\n    let jwtToken = localStorage.getItem(\"userToken\");\n    // let t = localStorage.getItem(\"selected2\");\n    setEnabledLinearProgress(true);\n    // console.log(status);\n\n    setAlertsData([]);\n\n    axios\n      .post(\n        SERVER_URL + \"/notification/alerts\",\n        {\n          // site: !selectedSite ? \"%\" : selectedSite,\n          // if(t === \"null\"){\n          //   sele\n          // }\n          // selectedSite: selectedSite,\n          selectedSite: !localStorage.getItem(\"siteslocally\")\n            ? selectedSite\n            : localStorage.getItem(\"siteslocally\").split(\",\"),\n\n          // issue: !issue ? \"%\" : issue,\n          issue: !localStorage.getItem(\"issueStatus\")\n            ? issue\n            : localStorage.getItem(\"issueStatus\").split(\",\"),\n          // category: !category ? \"%\" : category,\n          category,\n          // status: [\"Open\", \"Pending\"]\n          //   ? false\n          //   : status === !status\n          //   ? \"Open\"\n          //   : status,\n          // status: !status ? \"Open\" : status,\n          // status: [\"Open\", \"Pending\"]\n          //   ? false\n          //   : (status === status.length) == 3\n          //   ? \"%\"\n          //   : status === !status\n          //   ? \"open\"\n          //   : status,\n\n          // status: !status ? \"Open\" : status,\n          status,\n          fromDate: fromDate.getTime(),\n          toDate: toDate.getTime(),\n          email: localStorage.getItem(\"userEmail\"),\n        },\n        {\n          cancelToken: source.token,\n          headers: { jwtToken: jwtToken },\n        }\n      )\n      .then((response) => {\n        setEnabledLinearProgress(false);\n        // console.log(\"alerts table data auto\", response.data);\n        if (String(response.data[0].ticket).includes(\"No\")) {\n          // console.log(response.data[0].ticket);\n          setAlertsData([\n            {\n              ticket: \"No data found!\",\n              status: \"-\",\n              site: \"-\",\n              alarm: \"-\",\n              state: \"-\",\n              remarks: \"No data found!\",\n            },\n          ]);\n        } else {\n          setAlertsData([...response.data]);\n        }\n      })\n      .catch((error) => {\n        setEnabledLinearProgress(false);\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n        }\n      });\n  };\n\n  const fetchAlertsDataWithDisableBtn = () => {\n    // console.log(\"Fetch alerts data using view btn...\");\n    // console.log(\n    // selectedSite,\n    // issue,\n    // category,\n    // localStorage.getItem(\"siteslocally\")\n    // );\n    // localStorage.setItem(\"selected2\", selectedSite);\n    setEnabledLinearProgress(true);\n    setDisabledViewBtn(true);\n\n    let jwtToken = localStorage.getItem(\"userToken\");\n\n    // console.log(typeof status, status);\n\n    setAlertsData([]);\n\n    axios\n      .post(\n        SERVER_URL + \"/notification/alerts\",\n        {\n          // selectedSite: selectedSite,\n          selectedSite: !localStorage.getItem(\"siteslocally\")\n            ? selectedSite\n            : localStorage.getItem(\"siteslocally\").split(\",\"),\n\n          issue: !localStorage.getItem(\"issueStatus\")\n            ? issue\n            : localStorage.getItem(\"issueStatus\").split(\",\"),\n          category: category,\n          // status: status,\n          // status: [\"Open\", \"Pending\"]\n          //   ? false\n          //   : (status === status.length) <= 3\n          //   ? \"%\"\n          //   : status === !status\n          //   ? \"open\"\n          //   : status,\n\n          // status: !status ? \"Open\" : status,\n          status: status,\n\n          fromDate: fromDate.getTime(),\n          toDate: toDate.getTime(),\n          email: localStorage.getItem(\"userEmail\"),\n        },\n        {\n          cancelToken: source.token,\n          headers: { jwtToken: jwtToken },\n        }\n      )\n      .then((response) => {\n        // console.log('alerts table data', response.data);\n        setEnabledLinearProgress(false);\n        if (String(response.data[0].ticket).includes(\"No\")) {\n          // console.log(response.data[0].ticket);\n          setAlertsData([\n            {\n              ticket: \"No data found!\",\n              status: \"-\",\n              site: \"-\",\n              alarm: \"-\",\n              state: \"-\",\n              remarks: \"No data found!\",\n            },\n          ]);\n        } else {\n          setAlertsData([...response.data]);\n        }\n        setDisabledViewBtn(false);\n      })\n      .catch((error) => {\n        setEnabledLinearProgress(false);\n        setDisabledViewBtn(false);\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n        }\n      });\n  };\n  // const stateUpdate = () => {\n  //   setStatus([\"Open\", \"Pending\"]);\n  // };\n\n  const fetchCSV = async () => {\n    // console.log(\"hitt csv-->\");\n    let jwtToken = localStorage.getItem(\"userToken\");\n    setDisabledCSVBtn(true);\n    setEnabledLinearProgress(true);\n    try {\n      const response = await axios.post(\n        SERVER_URL + \"/notification/alerts/csv\",\n        {\n          selectedSite: !localStorage.getItem(\"siteslocally\")\n            ? selectedSite\n            : localStorage.getItem(\"siteslocally\").split(\",\"),\n\n          issue: !localStorage.getItem(\"issueStatus\")\n            ? issue\n            : localStorage.getItem(\"issueStatus\").split(\",\"),\n          category: category,\n          status: status,\n\n          fromDate: fromDate.getTime(),\n          toDate: toDate.getTime(),\n          email: localStorage.getItem(\"userEmail\"),\n          // sites: selectedSites,\n          // startTime: fromDate.getTime(),\n          // endTime: toDate.getTime(),\n          // frequency: frequency,\n        },\n        {\n          cancelToken: source.token,\n          headers: { jwtToken: jwtToken },\n        }\n      );\n      console.log(response.data);\n      const downloadUrl = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = downloadUrl;\n      let filename = `${fromDate.getDate()}_${\n        fromDate.getMonth() + 1\n      } to ${toDate.getDate()}_${toDate.getMonth() + 1}.csv`;\n      link.setAttribute(\"download\", filename);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      setEnabledLinearProgress(false);\n      setDisabledCSVBtn(false);\n    } catch (error) {\n      // console.log(error);\n      setSnackbar((prevState) => ({\n        ...prevState,\n        open: true,\n        severity: \"error\",\n        message: \"No data found.\",\n      }));\n      setEnabledLinearProgress(false);\n      setDisabledCSVBtn(false);\n    }\n  };\n\n  const issueUpdate = () => {\n    setIssue([\"All\"]);\n  };\n  useEffect(() => {\n    fetchAlertsData();\n    // fetchAlertsDataWithDisableBtn();\n\n    let alertsInterval = setInterval(fetchAlertsData, 100000);\n    // let alertsInterval = setInterval(fetchAlertsDataWithDisableBtn, 60000);\n\n    // let updateAlertState = setInterval(stateUpdate, 60000);\n\n    return () => {\n      clearInterval(alertsInterval);\n      source.cancel();\n    };\n  }, []);\n\n  const handleFromDateChange = (date) => {\n    setFromDate(getFromDate(date));\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(getToDate(date));\n  };\n\n  const ticketForModal = (row) => {\n    handleTicketModal(row);\n  };\n\n  const handleView = () => {\n    fetchAlertsDataWithDisableBtn();\n  };\n\n  return (\n    <div style={{ marginTop: \".25rem\" }}>\n      <Grid\n        container\n        // alignItems=\"center\"\n        // style={{ marginBottom: \".25rem\" }}\n        // spacing={4}\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Typography\n              style={{ fontSize: \"1rem\", marginRight: \".5rem\" }}\n              color=\"textSecondary\"\n            >\n              Site\n            </Typography>\n            {site && (\n              <FormControl>\n                <Select\n                  id=\"site-simple-select\"\n                  value={site}\n                  label=\"Site\"\n                  onChange={(event) => setSite(event.target.value)}\n                >\n                  <MenuItem value={\"%\"}>All&ensp;</MenuItem>\n                  <MenuItem value={\"Byagwat\"}>Byagwat&ensp;</MenuItem>\n                </Select>\n              </FormControl>\n            )}\n          </Grid>\n        </Grid> */}\n        <Grid item>\n          {/* <Grid container alignItems=\"center\"> */}\n          {/* <Typography style={{ fontSize: \"0.9rem\" }} color=\"textSecondary\">\n              Site\n            </Typography> */}\n\n          {/* <Grid item style={{ marginLeft: \"0.4rem\" }}> */}\n          <AlertsDropdown\n            label=\"Sites\"\n            items={siteOptions}\n            selectedItems={selectedSite}\n            handleChange={handleSiteChange}\n          />\n          {/* </Grid> */}\n          {/* </Grid> */}\n        </Grid>\n        <Grid item>\n          {/* <Grid container alignItems=\"center\"> */}\n          {/* <Typography\n              style={{ fontSize: \"0.9rem\", marginRight: \".5rem\" }}\n              color=\"textSecondary\"\n            >\n              Issue\n            </Typography> */}\n          {/* {issue && (\n              <FormControl>\n                <Select\n                  id=\"site-simple-select\"\n                  value={issue}\n                  label=\"Issue\"\n                  onChange={(event) => setIssue(event.target.value)}\n                >\n                  <MenuItem value={\"%\"}>All&ensp;</MenuItem>\n                  <MenuItem value={\"Network\"}>Network&ensp;</MenuItem>\n                  <AlertsDropdown\n                    // label=\"Sites\"\n                    items={issueValue}\n                    selectedItems={issue}\n                    handleChange={handleIssue}\n                  />\n                </Select>\n              </FormControl>\n            )} */}\n          <AlertsDropdown\n            label=\"Issue\"\n            items={issueValue}\n            selectedItems={issue}\n            handleChange={handleIssue}\n          />\n          {/* </Grid> */}\n        </Grid>\n        <Grid item style={{ marginTop: \"\" }}>\n          {/* <Grid container alignItems=\"center\"> */}\n          {/* <Typography\n              style={{ fontSize: \"0.9rem\", marginRight: \".5rem\" }}\n              color=\"textSecondary\"\n            >\n              Category\n            </Typography> */}\n          {category && (\n            <FormControl\n              className={classes.formControl}\n              variant=\"outlined\"\n              size=\"small\"\n            >\n              <InputLabel\n                id={`Category-select-label`}\n                className={classes.inputlabel}\n              >\n                Category\n              </InputLabel>\n              <Select\n                id=\"site-simple-select\"\n                value={category}\n                style={{ fontSize: 14, height: \"4vh\" }}\n                // label=\"Category\"\n                onChange={(event) => setCategory(event.target.value)}\n              >\n                <MenuItem value={\"%\"}>All&ensp;</MenuItem>\n                <MenuItem value={\"critical\"}>Critical&ensp;</MenuItem>\n              </Select>\n            </FormControl>\n          )}\n          {/* </Grid> */}\n        </Grid>\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Typography\n              style={{ fontSize: \"1rem\", marginRight: \".5rem\" }}\n              color=\"textSecondary\"\n            >\n              Status\n            </Typography>\n            {status && (\n              <FormControl>\n                <Select\n                  id=\"site-simple-select\"\n                  value={status}\n                  label=\"Status\"\n                  onChange={(event) => {\n                    localStorage.setItem(\"alertsStatus\", event.target.value);\n                    setStatus(localStorage.getItem(\"alertsStatus\"));\n                  }}\n                >\n                  <MenuItem value={\"%\"}>All&ensp;</MenuItem>\n                  <MenuItem value={\"Open\"}>Open&ensp;</MenuItem>\n                  <MenuItem value={\"Pending\"}>Pending&ensp;</MenuItem>\n                  <MenuItem value={\"Resolved\"}>Resolved&ensp;</MenuItem>\n                </Select>\n              </FormControl>\n            )}\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Typography\n              style={{ fontSize: \"1rem\", marginRight: \".5rem\" }}\n              color=\"textSecondary\"\n            >\n              Status\n            </Typography>\n            {status && (\n              <FormControl className={classes.formControl}>\n                <Select\n                  labelId=\"demo-mutiple-name-label\"\n                  id=\"demo-mutiple-name\"\n                  multiple\n                  value={status}\n                  style={{ maxWidth: \"10rem\" }}\n                  // onChange={(event) => handleStatus(event, \"status\")}\n                  onChange={handleStatus}\n                  input={<Input />}\n                  MenuProps={MenuProps}\n                >\n                  <MenuItem value={\"%\"}>All&ensp;</MenuItem>\n                  <MenuItem value={\"Open\"}>Open&ensp;</MenuItem>\n                  <MenuItem value={\"Pending\"}>Pending&ensp;</MenuItem>\n                  <MenuItem value={\"Resolved\"}>Resolved&ensp;</MenuItem>\n                  {/* {alertsValue.map((name) => (\n                  <MenuItem\n                    key={name}\n                    value={name}\n                    style={getStyles(name, alertsValue, theme)}\n                  >\n                    {name}\n                  </MenuItem>\n                ))} \n                </Select>\n              </FormControl>\n            )}\n          </Grid>\n        </Grid> */}\n        <Grid item>\n          {/* <Grid container alignItems=\"center\"> */}\n          {/* <Typography\n              style={{ fontSize: \"0.9rem\", marginRight: \".5rem\" }}\n              color=\"textSecondary\"\n            >\n              Status\n            </Typography> */}\n          {/* <Grid item> */}\n          <AlertsDropdown\n            label=\"Alert\"\n            items={alertsValue}\n            selectedItems={status}\n            handleChange={handleStatus}\n          />\n          {/* </Grid> */}\n          {/* </Grid> */}\n        </Grid>\n        <Grid item>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid\n              container\n              spacing={2}\n              style={{ marginTop: \"0rem\", marginLeft: \"0rem\" }}\n            >\n              <Grid item>\n                <NoSsr>\n                  <StyledKeyboardDatePicker\n                    className={classes.date}\n                    size=\"small\"\n                    views={[\"year\", \"month\", \"date\"]}\n                    inputVariant=\"outlined\"\n                    autoOk={true}\n                    // disableToolbar\n                    // variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    id=\"from-date-picker-inline\"\n                    label=\"From\"\n                    inputProps={{\n                      style: { fontSize: 14, height: \"0.4rem\" },\n                    }}\n                    value={fromDate}\n                    onChange={handleFromDateChange}\n                    KeyboardButtonProps={{\n                      \"aria-labelte\": \"from date\",\n                    }}\n                    style={{ width: \"140px\" }}\n                  />\n                </NoSsr>\n              </Grid>\n              <Grid item>\n                <NoSsr>\n                  <StyledKeyboardDatePicker\n                    className={classes.date}\n                    size=\"small\"\n                    autoOk={true}\n                    views={[\"year\", \"month\", \"date\"]}\n                    // disableToolbar\n                    // variant=\"inline\"\n                    // variant=\"outlined\"\n                    inputVariant=\"outlined\"\n                    format=\"MM/dd/yyyy\"\n                    id=\"to-date-picker-inline\"\n                    label=\"To\"\n                    value={toDate}\n                    inputProps={{ style: { fontSize: 14, height: \"0.4rem\" } }}\n                    onChange={handleToDateChange}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"to date\",\n                    }}\n                    style={{ width: \"150px\" }}\n                  />\n                </NoSsr>\n              </Grid>\n            </Grid>\n          </MuiPickersUtilsProvider>\n        </Grid>\n        {/* <Grid item>\n          <form className={classes.container} noValidate>\n            <TextField\n              className={classes.date}\n              size=\"small\"\n              inputVariant=\"outlined\"\n              id=\"date\"\n              defaultValue={fromDate}\n              label=\"From\"\n              type=\"date\"\n              // defaultValue=\"2017-05-24\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </form>\n        </Grid> */}\n        <Grid item style={{ marginLeft: \"1rem\", marginTop: \"0.2rem\" }}>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            style={{\n              // paddingInline: \"1.5rem\",\n              // marginTop: \"-0.6rem\",\n              fontSize: \"14px\",\n              height: \"2rem\",\n            }}\n            color=\"primary\"\n            onClick={handleView}\n            disabled={disabledViewBtn}\n          >\n            {disabledViewBtn ? \"Loading\" : \"View\"}\n          </Button>\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\", marginTop: \"0.2rem\" }}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            style={{\n              // paddingInline: \"1.5rem\",\n              // marginTop: \"-0.6rem\",\n              fontSize: \"14px\",\n              height: \"2rem\",\n            }}\n            onClick={fetchCSV}\n            disabled={disabledCSVBtn}\n          >\n            {disabledCSVBtn ? \"Downloading\" : \"CSV\"}\n          </Button>\n        </Grid>\n      </Grid>\n      <CustomTable\n        data={alertsData}\n        ticketForModal={ticketForModal}\n        handleNotificationClick={handleNotificationClick}\n      />\n    </div>\n  );\n}\n\nexport default Alerts;\n","import React, { useState, useEffect } from \"react\";\n// import \"./SCB.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Card, Grid, Typography, Button } from \"@material-ui/core\";\n\nimport axios from \"axios\";\nimport { ML_URL, SERVER_URL } from \"../../constants/constants\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { AppState } from \"../../AppContext\";\n// import CustomDiagram from \"./CustomDiagram\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  textField: {\n    width: 140,\n  },\n}));\n\nconst EquipmentOptions = ({\n  equipment,\n  handleEquipmentChange,\n  equipmentKey,\n}) => {\n  return (\n    <Select\n      labelId=\"equipment-select-label\"\n      id=\"equipment-select\"\n      value={equipment}\n      onChange={(event) => handleEquipmentChange(event, equipmentKey)}\n    >\n      {/* <MenuItem value={\"energy_meter\"}>\n      <span>Energy Meter&ensp;</span>\n    </MenuItem> */}\n      <MenuItem value={\"none\"}>\n        <span>Select&ensp;</span>\n      </MenuItem>\n      <MenuItem value={\"icogem\"}>\n        <span>ICOG EM&ensp;</span>\n      </MenuItem>\n      <MenuItem value={\"invTotal\"}>\n        <span>Inverter&ensp;</span>\n      </MenuItem>\n      <MenuItem value={\"invStringTotal\"}>\n        <span>Inverter String&ensp;</span>\n      </MenuItem>\n      <MenuItem value={\"mcrem\"}>\n        <span>MCR EM&ensp;</span>\n      </MenuItem>\n      <MenuItem value={\"scbTotal\"}>\n        <span>SCB&ensp;</span>\n      </MenuItem>\n      <MenuItem value={\"stringTotal\"}>\n        <span>String&ensp;</span>\n      </MenuItem>\n    </Select>\n  );\n};\n\nconst getTitle = (value1, value2) => {\n  let title1 = \"\";\n  let title2 = \"\";\n  switch (value1) {\n    case \"icogem\":\n      title1 = \"ICOG EM\";\n      break;\n    case \"invTotal\":\n      title1 = \"Inverter\";\n      break;\n    case \"invStringTotal\":\n      title1 = \"Inverter String\";\n      break;\n    case \"mcrem\":\n      title1 = \"MCR EM\";\n      break;\n    case \"scbTotal\":\n      title1 = \"SCB\";\n      break;\n    case \"stringTotal\":\n      title1 = \"String\";\n      break;\n    default:\n      title1 = \"\";\n  }\n\n  switch (value2) {\n    case \"icogem\":\n      title2 = \"ICOG EM\";\n      break;\n    case \"invTotal\":\n      title2 = \"Inverter\";\n      break;\n    case \"invStringTotal\":\n      title2 = \"Inverter String\";\n      break;\n    case \"mcrem\":\n      title2 = \"MCR EM\";\n      break;\n    case \"scbTotal\":\n      title2 = \"SCB\";\n      break;\n    case \"stringTotal\":\n      title2 = \"String\";\n      break;\n    default:\n      title2 = \"\";\n  }\n\n  return `Difference between ${title1} and ${title2}`;\n};\n\nexport default function Energy({ handleSessionExpire }) {\n  const classes = useStyles();\n\n  const { setEnabledLinearProgress } = AppState();\n\n  const userToken = localStorage.getItem(\"userToken\");\n\n  const [selectedSite, setSelectedSite] = useState(\"gadarpur\");\n  const [block, setBlock] = useState(1);\n\n  const [location, setLocation] = useState(1);\n  const [equipment, setEquipment] = useState({\n    equipment1: \"none\",\n    equipment2: \"none\",\n    equipment3: \"none\",\n    equipment4: \"none\",\n    equipment5: \"none\",\n  });\n  const [parameter, setParameter] = useState(\"a\");\n\n  const [energyData, setEnergyData] = useState();\n\n  const fetchEnergyData = (fromDate, toDate, site, location) => {\n    // console.log(site, location, new Date(fromDate).toLocaleString(), new Date(toDate).toLocaleString());\n    setEnabledLinearProgress(true);\n    axios\n      .post(\n        SERVER_URL + \"/scbanalytics/logs\",\n        {\n          site: site,\n          location: \"b\" + String(location).padStart(2, 0),\n          fromDate: fromDate,\n          toDate: toDate,\n        },\n        { headers: { jwtToken: localStorage.getItem(\"userToken\") } }\n      )\n      .then((response) => {\n        // console.log('scb analytics', response.data);\n        setEnergyData((prevState) => {\n          return { ...response.data, none: 0 };\n        });\n        setEnabledLinearProgress(false);\n      })\n      .catch((error) => {\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n        }\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  const handleLocationChange = (event) => {\n    setLocation(event.target.value);\n    fetchEnergyData(\n      fromDate.getTime(),\n      toDate.getTime(),\n      selectedSite,\n      event.target.value\n    );\n  };\n\n  const handleBlockChange = (event) => {\n    setBlock(event.target.value);\n  };\n\n  const handleEquipmentChange = (event, equipmentKey) => {\n    setEquipment((prevState) => ({\n      ...prevState,\n      [equipmentKey]: event.target.value,\n    }));\n  };\n\n  const handleParameterChange = (event) => {\n    setParameter(event.target.value);\n  };\n\n  /**\n   * Functions related to time component\n   */\n\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const getMinDateForPicker = () => {\n    let startTime = new Date();\n    if (selectedSite === \"gadarpur\") {\n      // Aug 19, 2021 6:00:00 PM\n      startTime.setTime(1629396000000);\n    }\n\n    return startTime;\n  };\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleTimeReset = () => {\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getFromDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(0, 0, 0, 0);\n    return newDate;\n  };\n\n  const getToDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(23, 59, 59, 999);\n    return newDate;\n  };\n\n  const [fromDate, setFromDate] = useState(() => {\n    let date = new Date();\n    return getFromDate(date);\n  });\n\n  const [toDate, setToDate] = useState(() => {\n    let date = new Date();\n    return getToDate(date);\n  });\n\n  const handleFromDateChange = (date) => {\n    setFromDate(getFromDate(date));\n    fetchEnergyData(date.getTime(), toDate.getTime(), selectedSite, location);\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(getToDate(date));\n    fetchEnergyData(fromDate.getTime(), date.getTime(), selectedSite, location);\n  };\n\n  /**\n   * END of functions related to time component\n   */\n\n  const handleSiteChange = (event) => {\n    setSelectedSite(event.target.value);\n    fetchEnergyData(\n      fromDate.getTime(),\n      toDate.getTime(),\n      event.target.value,\n      location\n    );\n  };\n\n  // Status and time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, selectedSite) => {\n    // console.log(\"getStatusAndTime function called\", selectedSite);\n    setEnabledLinearProgress(true);\n    axios\n      .get(SERVER_URL + \"/\" + selectedSite + \"/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n        setEnabledLinearProgress(false);\n      })\n      .catch((error) => {\n        // console.log(error);\n        if (error.response.status === 401) {\n          handleSessionExpire();\n        }\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  const fetchData = (endTime, selectedSite) => {\n    // console.log(\"Fetching data for \", selectedSite);\n\n    let newEndTime = endTime;\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n    } else {\n      newEndTime = endTime;\n    }\n\n    // Status and time\n    getStatusAndTime(beginTime, newEndTime, selectedSite);\n\n    // Fetch customized table data\n    axios\n      .post(\n        SERVER_URL + \"/\" + selectedSite + \"/scb\",\n        {\n          fromDate: beginTime,\n          endTime: newEndTime,\n          block: \"b0\" + block,\n        },\n        {\n          headers: {\n            jwtToken: userToken,\n          },\n        }\n      )\n      .then((response) => {})\n      .catch((error) => {\n        // console.log(error);\n        // handleSessionExpire();\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n        }\n      });\n\n    fetchEnergyData(\n      fromDate.getTime(),\n      toDate.getTime(),\n      selectedSite,\n      location\n    );\n  };\n\n  const handleViewBtnClick = () => {\n    fetchData(mainTime, selectedSite);\n  };\n\n  useEffect(() => {\n    fetchData(mainTime, selectedSite);\n\n    // // Fetch data every 5 minutes\n    // const interval = setInterval(() => {\n    //   fetchData(mainTime, selectedSite);\n    // }, 300000);\n\n    // return () => {\n    //   clearInterval(interval);\n    // };\n  }, [mainTime]);\n\n  const calculateDifference = (value1, value2) => {\n    let value1Num = Number(value1);\n    let value2Num = Number(value2);\n\n    let difference = value2Num - value1Num;\n\n    return Math.abs(\n      Number(difference)\n        .toFixed(2)\n        .replace(/[.,]00$/, \"\")\n    );\n  };\n\n  const EquipmentBox = ({ value, equipmentKey, customId }) => {\n    // console.log('analytics energy equipment key', equipmentKey, customId);\n\n    if (!energyData) {\n      return (\n        <div style={{ height: \"250px\" }}>\n          <div\n            style={{\n              marginTop: \"1.5rem\",\n              border: \"1px solid lightblue\",\n              borderRadius: \"5px\",\n              padding: \".5rem\",\n              textAlign: \"center\",\n            }}\n            id={customId}\n          >\n            {Number(value)\n              .toFixed(2)\n              .replace(/[.,]00$/, \"\")}\n          </div>\n        </div>\n      );\n    }\n\n    let invEnergy = Object.entries(energyData.invEnergy);\n\n    switch (equipmentKey) {\n      case \"none\":\n        return (\n          <div style={{ height: \"250px\" }}>\n            <div\n              style={{\n                marginTop: \"1.5rem\",\n                border: \"1px solid lightblue\",\n                borderRadius: \"5px\",\n                padding: \".5rem\",\n                textAlign: \"center\",\n              }}\n              id={customId}\n            >\n              {value}\n            </div>\n          </div>\n        );\n      case \"icogem\":\n        return (\n          <div style={{ height: \"250px\" }}>\n            <div\n              style={{\n                marginTop: \"1.5rem\",\n                border: \"1px solid lightblue\",\n                borderRadius: \"5px\",\n                padding: \".5rem\",\n                textAlign: \"center\",\n              }}\n              id={customId}\n            >\n              {value}\n            </div>\n          </div>\n        );\n      case \"mcrem\":\n        return (\n          <div style={{ height: \"250px\" }}>\n            <div\n              style={{\n                marginTop: \"1.5rem\",\n                border: \"1px solid lightblue\",\n                borderRadius: \"5px\",\n                padding: \".5rem\",\n                textAlign: \"center\",\n              }}\n              id={customId}\n            >\n              {value}\n            </div>\n          </div>\n        );\n      case \"invTotal\":\n        // console.log(invEnergy)\n        return (\n          <div\n            style={{\n              marginTop: \"1.5rem\",\n              border: \"1px solid lightblue\",\n              borderRadius: \"5px\",\n              padding: \".5rem\",\n              textAlign: \"left\",\n              height: \"250px\",\n              overflowY: \"scroll\",\n            }}\n            id={customId}\n          >\n            <div>\n              Total: <span style={{ color: \"blue\" }}>{value}</span>\n            </div>\n            {invEnergy.map((element) => {\n              return (\n                <div>\n                  {element[0]}:{\" \"}\n                  <span style={{ color: \"blue\" }}>\n                    {Number(element[1][\"invEnergy\"])\n                      .toFixed(2)\n                      .replace(/[.,]00$/, \"\")}\n                  </span>\n                </div>\n              );\n            })}\n          </div>\n        );\n      case \"invStringTotal\":\n        return (\n          <div\n            style={{\n              marginTop: \"1.5rem\",\n              border: \"1px solid lightblue\",\n              borderRadius: \"5px\",\n              padding: \".5rem\",\n              textAlign: \"left\",\n              height: \"250px\",\n              overflowY: \"scroll\",\n            }}\n            id={customId}\n          >\n            <div>\n              Total: <span style={{ color: \"blue\" }}>{value}</span>\n            </div>\n            {invEnergy.map((element) => {\n              let invString = Object.entries(element[1][\"invString\"]);\n              return invString.map((innerEl) => {\n                return (\n                  <div>\n                    {element[0]}, {innerEl[0]}:{\" \"}\n                    <span style={{ color: \"blue\" }}>\n                      {Number(innerEl[1])\n                        .toFixed(2)\n                        .replace(/[.,]00$/, \"\")}\n                    </span>\n                  </div>\n                );\n              });\n            })}\n          </div>\n        );\n      case \"scbTotal\":\n        return (\n          <div\n            style={{\n              marginTop: \"1.5rem\",\n              border: \"1px solid lightblue\",\n              borderRadius: \"5px\",\n              padding: \".5rem\",\n              textAlign: \"left\",\n              height: \"250px\",\n              overflowY: \"scroll\",\n            }}\n            id={customId}\n          >\n            <div>\n              Total: <span style={{ color: \"blue\" }}>{value}</span>\n            </div>\n            {invEnergy.map((element) => {\n              let scbEnergy = Object.entries(element[1][\"scbEnergy\"]);\n              return scbEnergy.map((innerEl) => {\n                return (\n                  <div>\n                    {element[0]}, {innerEl[0]}:{\" \"}\n                    <span style={{ color: \"blue\" }}>\n                      {Number(innerEl[1][\"scbEnergy\"])}\n                    </span>\n                  </div>\n                );\n              });\n            })}\n          </div>\n        );\n      case \"stringTotal\":\n        return (\n          <div\n            style={{\n              marginTop: \"1.5rem\",\n              border: \"1px solid lightblue\",\n              borderRadius: \"5px\",\n              padding: \".5rem\",\n              textAlign: \"left\",\n              height: \"250px\",\n              overflowY: \"scroll\",\n            }}\n            id={customId}\n          >\n            <div>\n              Total: <span style={{ color: \"blue\" }}>{value}</span>\n            </div>\n            {invEnergy.map((element) => {\n              let scbEnergy = Object.entries(element[1][\"scbEnergy\"]);\n              return scbEnergy.map((innerEl) => {\n                // return (<div>{element[0]}, {innerEl[0]}: {innerEl[1]['scbTotalEnergy']}</div>)\n                let insideInnerEl = Object.entries(innerEl[1]);\n                return insideInnerEl.map((e, i) => {\n                  if (e[0].startsWith(\"e\")) {\n                    return (\n                      <div>\n                        {element[0]}, {innerEl[0]}, string {e[0].slice(1)}:{\" \"}\n                        <span style={{ color: \"blue\" }}>\n                          {Number(e[1])\n                            .toFixed(2)\n                            .replace(/[.,]00$/, \"\")}\n                        </span>\n                      </div>\n                    );\n                  }\n                });\n              });\n            })}\n          </div>\n        );\n      default:\n        return (\n          <div\n            style={{\n              marginTop: \"1.5rem\",\n              border: \"1px solid lightblue\",\n              borderRadius: \"5px\",\n              padding: \".5rem\",\n              textAlign: \"center\",\n              maxHeight: \"250px\",\n            }}\n            id={customId}\n          >\n            <span style={{ color: \"blue\" }}>{value}</span>\n          </div>\n        );\n    }\n  };\n\n  useEffect(() => {\n    let equipment1 = document.getElementById(\"equipment1\");\n    // console.log('equipment1', equipment1.getBoundingClientRect());\n  }, []);\n\n  const getTopPosition = (labelId) => {\n    let label = document.getElementById(labelId);\n    if (label) {\n      let labelRect = label.getBoundingClientRect();\n      return Math.round(labelRect.y - 5) + \"px\";\n    } else {\n      return \"0px\";\n    }\n  };\n\n  const getLeftPosition = (element1Id, element2Id, differenceElId) => {\n    let element1 = document.getElementById(element1Id);\n    let element2 = document.getElementById(element2Id);\n    let differenceEl = document.getElementById(differenceElId);\n    if (element1 && element2 && differenceEl) {\n      let element1Rect = element1.getBoundingClientRect();\n      let element2Rect = element2.getBoundingClientRect();\n      let differenceElRect = differenceEl.getBoundingClientRect();\n      let leftPosition =\n        element1Rect.x +\n        element1Rect.width +\n        (element2Rect.x - (element1Rect.x + element1Rect.width)) / 2 -\n        differenceElRect.width / 2;\n      // console.log('leftPosition', leftPosition);\n      return Math.round(leftPosition) + \"px\";\n    } else {\n      return \"0px\";\n    }\n  };\n\n  return (\n    <div style={{ marginTop: \".25rem\", width: \"90vw\" }}>\n      <Grid container alignItems=\"center\" justify=\"space-between\">\n        <Grid item>\n          <Grid container alignItems=\"flex-end\">\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <FormControl className={classes.siteFormControl}>\n                <InputLabel id=\"site-select-label\">Site</InputLabel>\n                <Select\n                  labelId=\"site-select-label\"\n                  id=\"site-select\"\n                  value={selectedSite}\n                  onChange={handleSiteChange}\n                >\n                  <MenuItem value={\"gadarpur\"}>\n                    <span>Gadarpur&ensp;</span>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            {/* <Grid item style={{ marginRight: \"1rem\" }}>\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"block-select-label\">Block</InputLabel>\n                <Select\n                  labelId=\"block-select-label\"\n                  id=\"block-select\"\n                  value={block}\n                  onChange={handleBlockChange}\n                >\n                  {Array.from({ length: 10 }, (_, i) => i + 1).map(\n                    (element) => {\n                      return (\n                        <MenuItem value={element}>\n                          <span>{element}&ensp;</span>\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n            </Grid> */}\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"from-date-picker-inline\"\n                  label=\"From\"\n                  value={fromDate}\n                  onChange={handleFromDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-labelte\": \"from date\",\n                  }}\n                  style={{ marginRight: \"1rem\" }}\n                  className={classes.textField}\n                />\n\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"to-date-picker-inline\"\n                  label=\"To\"\n                  value={toDate}\n                  onChange={handleToDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"to date\",\n                  }}\n                  className={classes.textField}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.siteFormControl}>\n                <InputLabel id=\"location-select-label\">Location</InputLabel>\n                <Select\n                  labelId=\"location-select-label\"\n                  id=\"location-select\"\n                  value={location}\n                  onChange={handleLocationChange}\n                >\n                  <MenuItem value={1}>\n                    <span>B01&ensp;</span>\n                  </MenuItem>\n                  <MenuItem value={2}>\n                    <span>B02&ensp;</span>\n                  </MenuItem>\n                  <MenuItem value={3}>\n                    <span>B03&ensp;</span>\n                  </MenuItem>\n                  <MenuItem value={4}>\n                    <span>B04&ensp;</span>\n                  </MenuItem>\n                  <MenuItem value={5}>\n                    <span>B05&ensp;</span>\n                  </MenuItem>\n                  <MenuItem value={6}>\n                    <span>B06&ensp;</span>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item style={{ marginRight: \"2rem\" }}>\n              <Grid container>\n                <Grid item>\n                  {status === 0 ? (\n                    // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                    //   Offline\n                    // </span>\n                    <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                      Offline\n                    </Typography>\n                  ) : (\n                    // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                    //   Online\n                    // </span>\n                    <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                      Online\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n                <Grid item>\n                  {timestamp === undefined ? (\n                    <CircularProgress\n                      size=\"1.25rem\"\n                      // style={{ marginRight: '.5rem' }}\n                    />\n                  ) : (\n                    <Typography variant=\"h6\">\n                      {getFormattedDateAndTimeString(timestamp)}\n                    </Typography>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item>\n              <IconButton onClick={() => setOpenDateTimePicker(true)}>\n                <EventIcon color=\"action\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n            <Grid item style={{ paddingRight: \"0rem\", marginRight: \"1rem\" }}>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        style={{ marginTop: \".75rem\" }}\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <div>\n            <strong>Equipments :</strong>\n          </div>\n\n          <div style={{ marginTop: \"1.5rem\", height: \"250px\" }}>Values : </div>\n        </Grid>\n\n        <Grid item style={{ marginTop: \"0rem\" }}>\n          <FormControl className={classes.siteFormControl}>\n            {/* <InputLabel id=\"equipment-select-label\">Equipment</InputLabel> */}\n            <EquipmentOptions\n              equipmentKey=\"equipment1\"\n              equipment={equipment.equipment1}\n              handleEquipmentChange={handleEquipmentChange}\n            />\n          </FormControl>\n          <EquipmentBox\n            customId=\"equipment1\"\n            equipmentKey={equipment.equipment1}\n            value={\n              energyData\n                ? Number(energyData[equipment.equipment1])\n                    .toFixed(2)\n                    .replace(/[.,]00$/, \"\")\n                : \"Loading...\"\n            }\n          />\n        </Grid>\n\n        <Grid item style={{ marginTop: \"0rem\" }}>\n          <FormControl className={classes.siteFormControl}>\n            {/* <InputLabel id=\"equipment-select-label\">Equipment</InputLabel> */}\n            <EquipmentOptions\n              equipmentKey=\"equipment2\"\n              equipment={equipment.equipment2}\n              handleEquipmentChange={handleEquipmentChange}\n            />\n          </FormControl>\n          <EquipmentBox\n            customId=\"equipment2\"\n            equipmentKey={equipment.equipment2}\n            value={\n              energyData\n                ? Number(energyData[equipment.equipment2])\n                    .toFixed(2)\n                    .replace(/[.,]00$/, \"\")\n                : \"Loading...\"\n            }\n          />\n        </Grid>\n\n        <Grid item style={{ marginTop: \"0rem\" }}>\n          <FormControl className={classes.siteFormControl}>\n            {/* <InputLabel id=\"equipment-select-label\">Equipment</InputLabel> */}\n            <EquipmentOptions\n              equipmentKey=\"equipment3\"\n              equipment={equipment.equipment3}\n              handleEquipmentChange={handleEquipmentChange}\n            />\n          </FormControl>\n          <EquipmentBox\n            customId=\"equipment3\"\n            equipmentKey={equipment.equipment3}\n            value={\n              energyData\n                ? Number(energyData[equipment.equipment3])\n                    .toFixed(2)\n                    .replace(/[.,]00$/, \"\")\n                : \"Loading...\"\n            }\n          />\n        </Grid>\n\n        <Grid item style={{ marginTop: \"0rem\" }}>\n          <FormControl className={classes.siteFormControl}>\n            {/* <InputLabel id=\"equipment-select-label\">Equipment</InputLabel> */}\n            <EquipmentOptions\n              equipmentKey=\"equipment4\"\n              equipment={equipment.equipment4}\n              handleEquipmentChange={handleEquipmentChange}\n            />\n          </FormControl>\n          <EquipmentBox\n            customId=\"equipment4\"\n            equipmentKey={equipment.equipment4}\n            value={\n              energyData\n                ? Number(energyData[equipment.equipment4])\n                    .toFixed(2)\n                    .replace(/[.,]00$/, \"\")\n                : \"Loading...\"\n            }\n          />\n        </Grid>\n\n        <Grid item style={{ marginTop: \"0rem\", paddingRight: \"2rem\" }}>\n          <FormControl className={classes.siteFormControl}>\n            {/* <InputLabel id=\"equipment-select-label\">Equipment</InputLabel> */}\n            <EquipmentOptions\n              equipmentKey=\"equipment5\"\n              equipment={equipment.equipment5}\n              handleEquipmentChange={handleEquipmentChange}\n            />\n          </FormControl>\n          <EquipmentBox\n            customId=\"equipment5\"\n            equipmentKey={equipment.equipment5}\n            value={\n              energyData\n                ? Number(energyData[equipment.equipment5])\n                    .toFixed(2)\n                    .replace(/[.,]00$/, \"\")\n                : \"Loading...\"\n            }\n          />\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        style={{ marginTop: \"2rem\" }}\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <span id=\"differencesLabel\">Differences : </span>\n        </Grid>\n\n        <Grid item>\n          <div\n            id=\"difference1\"\n            title={getTitle(equipment.equipment1, equipment.equipment2)}\n            style={{\n              position: \"absolute\",\n              left: getLeftPosition(\"equipment1\", \"equipment2\", \"difference1\"),\n              top: getTopPosition(\"differencesLabel\"),\n              minWidth: \"100px\",\n              border: \"1px solid orange\",\n              borderRadius: \"5px\",\n              padding: \".5rem\",\n              textAlign: \"center\",\n            }}\n          >\n            {energyData\n              ? calculateDifference(\n                  energyData[equipment.equipment2],\n                  energyData[equipment.equipment1]\n                )\n              : \"Loading...\"}\n          </div>\n        </Grid>\n\n        <Grid item>\n          <div\n            id=\"difference2\"\n            title={getTitle(equipment.equipment2, equipment.equipment3)}\n            style={{\n              position: \"absolute\",\n              left: getLeftPosition(\"equipment2\", \"equipment3\", \"difference2\"),\n              top: getTopPosition(\"differencesLabel\"),\n              minWidth: \"100px\",\n              border: \"1px solid orange\",\n              borderRadius: \"5px\",\n              padding: \".5rem\",\n              textAlign: \"center\",\n            }}\n          >\n            {energyData\n              ? calculateDifference(\n                  energyData[equipment.equipment3],\n                  energyData[equipment.equipment2]\n                )\n              : \"Loading...\"}\n          </div>\n        </Grid>\n        <Grid item>\n          <div\n            id=\"difference3\"\n            title={getTitle(equipment.equipment3, equipment.equipment4)}\n            style={{\n              position: \"absolute\",\n              left: getLeftPosition(\"equipment3\", \"equipment4\", \"difference3\"),\n              top: getTopPosition(\"differencesLabel\"),\n              minWidth: \"100px\",\n              border: \"1px solid orange\",\n              borderRadius: \"5px\",\n              padding: \".5rem\",\n              textAlign: \"center\",\n            }}\n          >\n            {energyData\n              ? calculateDifference(\n                  energyData[equipment.equipment4],\n                  energyData[equipment.equipment3]\n                )\n              : \"Loading...\"}\n          </div>\n        </Grid>\n        <Grid item>\n          <div\n            title={getTitle(equipment.equipment4, equipment.equipment5)}\n            id=\"difference4\"\n            style={{\n              position: \"absolute\",\n              left: getLeftPosition(\"equipment4\", \"equipment5\", \"difference4\"),\n              top: getTopPosition(\"differencesLabel\"),\n              minWidth: \"100px\",\n              border: \"1px solid orange\",\n              borderRadius: \"5px\",\n              padding: \".5rem\",\n              textAlign: \"center\",\n            }}\n          >\n            {energyData\n              ? calculateDifference(\n                  energyData[equipment.equipment5],\n                  energyData[equipment.equipment4]\n                )\n              : \"Loading...\"}\n          </div>\n        </Grid>\n      </Grid>\n\n      <div style={{ marginBlock: \"1.5rem\" }}></div>\n      {/* {selectedSite && <CustomDiagram />} */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"1.5rem\" }}></div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Energy from \"../components/Analytics/Energy\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  tabs: {\n    \"& .MuiTabs-indicator\": {\n      backgroundColor: \"#148F77\",\n      // height: 3,\n    },\n    \"& .MuiTab-root.Mui-selected\": {\n      color: \"#148F77\",\n    },\n  },\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scb-tab-${index}`,\n    \"aria-controls\": `scb-tabpanel-${index}`,\n  };\n}\n\nexport default function Analytics({ handleSessionExpire }) {\n  const [value, setValue] = React.useState(0);\n  const classes = useStyles();\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box>\n      <Tabs\n        style={{ color: \"#000000\" }}\n        className={classes.tabs}\n        value={value}\n        onChange={handleChange}\n        aria-label=\"analytics tabs\"\n        // indicatorColor=\"primary\"\n      >\n        <Tab label=\"Energy\" {...a11yProps(0)} />\n        <Tab label=\"Second\" {...a11yProps(1)} />\n        <Tab label=\"Third\" {...a11yProps(1)} />\n      </Tabs>\n\n      <TabPanel value={value} index={0} style={{ paddingTop: \"0.5rem\" }}>\n        <Energy handleSessionExpire={handleSessionExpire} />\n      </TabPanel>\n      <TabPanel value={value} index={1} style={{ paddingTop: \"0.5rem\" }}>\n        Second\n      </TabPanel>\n      <TabPanel value={value} index={2} style={{ paddingTop: \"0.5rem\" }}>\n        Third\n      </TabPanel>\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Cell,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  LabelList,\n  Legend,\n  Brush,\n} from \"recharts\";\n\nconst renderLegend = (props) => {\n  const { payload } = props;\n\n  return (\n    <div style={{textAlign: 'center', marginTop: '5px'}}>\n      {\n        payload.map((entry, index) => {\n          if (entry.value === 'prBudget') {\n            return (<span key={`item-${index}`} style={{color: '#5DADE2'}}>&#9679;&nbsp;Budget&emsp;</span>) \n          } else {\n            return (<span key={`item-${index}`}><span style={{color: '#48C9B0'}}>&#9679;</span>&nbsp;<span style={{color: '#EC7063'}}>&#9679;</span>&nbsp;Actual</span>)\n          }\n          \n        })\n      }\n    </div>\n  )\n}\n\nexport default function CustomBarChart({ chartData, enableScroll }) {\n\n  // console.log(chartData);\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload) {\n      return (\n        <div>\n          <div>{`Block: ${payload[0].payload.blockName}`}</div>\n          <div>{`Inv ${label}: ${payload[0].value / 1000}`}</div>\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  const toDecimal = (value, index) => {\n    return value / 1000;\n  };\n\n  const [brushStartIndex, setBrushStartIndex] = useState(0);\n\n  useEffect(() => {\n    if (enableScroll === false) {\n      setBrushStartIndex(0);\n    }\n  }, [enableScroll]);\n\n  return enableScroll === true ? (\n    <ResponsiveContainer style={{ height: \"100%\" }}>\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          // left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"site\" />\n        <YAxis domain={[0, data => 110]} />\n        {/* <Tooltip content={<CustomTooltip />} /> */}\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n        \n        <Brush\n          endIndex={11}\n          onChange={(obj) => setBrushStartIndex(obj.startIndex)}\n          dataKey=\"site\"\n          height={18}\n          stroke=\"#A6ACAF\"\n          tickFormatter={() => ''}\n          \n        />\n\n        <Legend wrapperStyle={{\n        paddingTop: \"5px\"\n        }} \n        // formatter={(value, entry, index) => value === 'plantPr' ? 'Actual PR' : 'Budget'}\n        content={renderLegend}\n         />\n\n        <Bar isAnimationActive={false} dataKey=\"prBudget\" fill=\"#5DADE2\">\n          <LabelList\n            dataKey=\"prBudget\"\n            position=\"center\"\n            fill=\"#fff\"\n            angle='270'\n          />\n          {/* {chartData.map((datum, index) => {\n            \n              return <Cell key={`cell-${index}`} />;\n            \n          })} */}\n        </Bar>\n        <Bar isAnimationActive={false} dataKey=\"plantPr\">\n          <LabelList\n            dataKey=\"plantPr\"\n            position=\"center\"\n            fill=\"#fff\"\n            angle='270'\n          />\n          {chartData.map((datum, index) => {\n              if (Number(datum.plantPr) >= Number(datum.prBudget)) {\n                return <Cell key={`cell-${index}`} fill='#48C9B0' />;\n              } else {\n                return <Cell key={`cell-${index}`} fill='#EC7063' />;\n              }             \n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  ) : (\n    <ResponsiveContainer >\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 0,\n          bottom: 5,\n        }}\n        barCategoryGap={1.25}\n        barGap={1}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"site\"\n          angle={270}\n          tickMargin={32} fontSize={10} interval={0} />\n        <YAxis domain={[0, data => 110]}  />\n        {/* <Tooltip content={<CustomTooltip />} /> */}\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n\n        <Legend wrapperStyle={{\n        paddingTop: \"45px\"\n        }} \n        formatter={(value, entry, index) => value === 'plantPr' ? 'Actual PR' : 'Budget'}\n        content={renderLegend} />\n\n        <Bar isAnimationActive={false} dataKey=\"prBudget\" fill=\"#5DADE2\">\n          <LabelList\n            dataKey=\"prBudget\"\n            position=\"center\"\n            fill=\"#000\"\n            angle='270'\n            fontSize={8}\n            \n          />\n          {/* {chartData.map((datum, index) => {\n            \n              return <Cell key={`cell-${index}`} fill={\"#29b6f6\"} />;\n            \n          })} */}\n        </Bar>\n        <Bar isAnimationActive={false} dataKey=\"plantPr\" >\n          <LabelList\n            dataKey=\"plantPr\"\n            position=\"center\"\n            fill=\"#000\"\n            angle='270'\n            fontSize={8}\n          />\n          {chartData.map((datum, index) => {\n              if (Number(datum.plantPr) >= Number(datum.prBudget)) {\n                return <Cell key={`cell-${index}`} fill='#48C9B0' />;\n              } else {\n                return <Cell key={`cell-${index}`} fill='#EC7063' />;\n              }             \n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Checkbox, ListItemIcon, ListItemText } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  // styles\n}));\n\nexport default function MultiDropdownSingle({\n  label,\n  items = [],\n  selectedItems = [],\n  handleChange,\n}) {\n  const classes = useStyles();\n\n  const isAllSelected =\n    items.length > 0 && selectedItems.length === items.length;\n\n  // items = selectedItems, item = currennt selected item\n  const isChecked = (items, item) => {\n    let isChecked = false;\n    items.forEach((element) => {\n      if (element === item) {\n        isChecked = true;\n      }\n    });\n    return isChecked;\n  };\n\n  return (\n    <FormControl style={{ maxWidth: \"200px\" }}>\n      <InputLabel id={`${label}-select-label`}>{label}</InputLabel>\n      <Select\n        style={{ fontSize: \".8rem\" }}\n        labelId={`${label}-select-label`}\n        id={`${label}-select`}\n        value={selectedItems}\n        onChange={handleChange}\n        multiple\n        renderValue={(data) => data.join(\", \")}\n        MenuProps={{\n          classes: { paper: classes.menuPaper },\n          getContentAnchorEl: () => null,\n        }}\n      >\n        <MenuItem\n          value=\"all\"\n          classes={{\n            root: isAllSelected ? classes.selectedAll : \"\",\n          }}\n          style={{ paddingBlock: 0 }}\n        >\n          <ListItemIcon>\n            <Checkbox\n              style={{ paddingBlock: 0 }}\n              size=\"small\"\n              color=\"primary\"\n              classes={{ indeterminate: classes.indeterminateColor }}\n              checked={isAllSelected || items.length === 0}\n              indeterminate={\n                selectedItems.length > 0 && selectedItems.length < items.length\n              }\n            />\n          </ListItemIcon>\n          <ListItemText\n            // classes={{ primary: classes.selectAllText }}\n            classes={{ primary: classes.listItemText }}\n            primary=\"Select All\"\n            style={{ paddingTop: \".05rem\" }}\n          />\n        </MenuItem>\n        {items.map((element, index) => {\n          return (\n            <MenuItem key={index} value={element} style={{ paddingBlock: 0 }}>\n              <ListItemIcon>\n                <Checkbox\n                  style={{ paddingBlock: 0 }}\n                  checked={isChecked(selectedItems, element)}\n                  size=\"small\"\n                  color=\"primary\"\n                />\n              </ListItemIcon>\n              <ListItemText\n                classes={{ primary: classes.listItemText }}\n                primary={element}\n                style={{ paddingTop: \".05rem\" }}\n              />\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n// import \"./SCB.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport {\n  Card,\n  Grid,\n  Typography,\n  Button,\n  OutlinedInput,\n  ListItemIcon,\n  Checkbox,\n  ListItemText,\n} from \"@material-ui/core\";\n\nimport axios from \"axios\";\nimport { ML_URL, SERVER_URL } from \"../../constants/constants\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Paper from \"@material-ui/core/Paper\";\n// import CustomDiagram from \"./CustomDiagram\";\nimport { siteNamesCaps } from \"../../constants/SiteNamesY\";\nimport CustomBarChart from \"./SiteRanking/CustomBarChart\";\nimport MultiDropdownSingle from \"../UI/MultiDropdownSingle\";\nimport { AppState } from \"../../AppContext\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  textField: {\n    width: 120,\n  },\n  menuPaper: {\n    maxHeight: 400,\n  },\n  formControlStyle: {},\n  listItemText: {\n    fontSize: \".9rem\",\n  },\n}));\n\nexport default function SiteRanking({ handleSessionExpire }) {\n  const classes = useStyles();\n  const { setEnabledLinearProgress } = AppState();\n\n  const [disabledViewBtn, setDisabledViewBtn] = useState(false);\n\n  const userToken = localStorage.getItem(\"userToken\");\n\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n\n  const getSites = (sites = siteNamesAndBlocks) => {\n    return sites.map((site) => site.name);\n  };\n  let localsite = JSON.parse(localStorage.getItem(\"siteNamesAndBlocks\")).map(\n    (el) => el.name\n  );\n  const [selectedSite, setSelectedSite] = useState([localsite[0]]);\n\n  const [siteOptions, setSiteOptions] = useState(getSites());\n\n  const isAllSelected =\n    JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length > 0 &&\n    selectedSite.length ===\n      JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length;\n\n  const [parameter, setParameter] = useState(\"pr\");\n\n  const [sort, setSort] = useState(\"desc\");\n\n  const [filter, setFilter] = useState(\"none\");\n\n  const [enableBarChartScroll, setEnableBarChartScroll] = useState(true);\n\n  const [barChartDataOG, setBarChartDataOG] = useState([]);\n  const [barChartData, setBarChartData] = useState([]);\n\n  const fetchPerformance = (fromDate, toDate) => {\n    let today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    // console.log('site ranking', fromDate.toLocaleString(), toDate.toLocaleString(), today.toLocaleString());\n    setEnabledLinearProgress(true);\n    setDisabledViewBtn(true);\n    axios\n      .post(\n        SERVER_URL + \"/performance/pr\",\n        {\n          fromDate: fromDate.getTime(),\n          toDate: toDate.getTime(),\n          today: today.getTime(),\n          sites: selectedSite,\n          parameter: parameter,\n        },\n        {\n          headers: { jwtToken: localStorage.getItem(\"userToken\") },\n        }\n      )\n      .then((response) => {\n        // console.log(\"site performance\", response.data);\n\n        setBarChartDataOG(response.data);\n\n        if (sort === \"desc\") {\n          setBarChartData(\n            response.data.sort((a, b) => {\n              return parseFloat(b.plantPr) - parseFloat(a.plantPr);\n            })\n          );\n        } else {\n          setBarChartData(\n            response.data.sort((a, b) => {\n              return parseFloat(a.plantPr) - parseFloat(b.plantPr);\n            })\n          );\n        }\n        setEnabledLinearProgress(false);\n        setDisabledViewBtn(false);\n      })\n      .catch((error) => {\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n        }\n        setEnabledLinearProgress(false);\n        setDisabledViewBtn(false);\n      });\n  };\n\n  const handleParameterChange = (event) => {\n    setParameter(event.target.value);\n    // fetchPerformance(fromDate.getTime(), toDate.getTime(), selectedSite);\n  };\n\n  const handleSiteChange = (event) => {\n    // const value = event.target.value;\n\n    // if (value[value.length - 1] === \"All\") {\n    //   setSelectedSite(\n    //     selectedSite.length ===\n    //       JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length\n    //       ? []\n    //       : JSON.parse(localStorage.getItem(\"siteNamesCaps\"))\n    //   );\n    //   return;\n    // }\n\n    // setSelectedSite(value);\n\n    // fetchPerformance(fromDate.getTime(), toDate.getTime(), event.target.value);\n\n    let value = event.target.value;\n    if (value[value.length - 1] === \"all\") {\n      setSelectedSite(\n        selectedSite.length === siteOptions.length ? [] : siteOptions\n      );\n      return;\n    }\n    setSelectedSite(value);\n  };\n\n  const sortElements = (value) => {\n    switch (value) {\n      case \"desc\":\n        setBarChartData((prevState) =>\n          prevState.sort(\n            (a, b) => parseFloat(b.plantPr) - parseFloat(a.plantPr)\n          )\n        );\n        break;\n      case \"asc\":\n        setBarChartData((prevState) =>\n          prevState.sort(\n            (a, b) => parseFloat(a.plantPr) - parseFloat(b.plantPr)\n          )\n        );\n        break;\n      default:\n        setBarChartData((prevState) =>\n          prevState.sort(\n            (a, b) => parseFloat(b.plantPr) - parseFloat(a.plantPr)\n          )\n        );\n    }\n  };\n\n  const handleSortChange = (event) => {\n    let value = event.target.value;\n    sortElements(value);\n    setSort(value);\n  };\n\n  const handleFilterChange = (event) => {\n    let value = event.target.value;\n\n    switch (value) {\n      case \"low\":\n        // console.log('low')\n        setBarChartData((prevState) => {\n          return barChartDataOG.filter(\n            (element) => Number(element.plantPr) < Number(element.prBudget)\n          );\n        });\n        break;\n      case \"high\":\n        // console.log(\"high\");\n        setBarChartData((prevState) => {\n          return barChartDataOG.filter(\n            (element) => Number(element.plantPr) >= Number(element.prBudget)\n          );\n        });\n        break;\n      default:\n        fetchPerformance(fromDate, toDate);\n    }\n\n    sortElements(value);\n\n    setFilter(value);\n  };\n\n  /**\n   * Functions related to time component\n   */\n\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const getMinDateForPicker = () => {\n    let startTime = new Date();\n    if (selectedSite === \"gadarpur\") {\n      // Aug 19, 2021 6:00:00 PM\n      startTime.setTime(1629396000000);\n    }\n\n    return startTime;\n  };\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleTimeReset = () => {\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getFromDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(0, 0, 0, 0);\n    return newDate;\n  };\n\n  const getToDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(23, 59, 59, 999);\n    return newDate;\n  };\n\n  const [fromDate, setFromDate] = useState(() => {\n    let date = new Date();\n    return getFromDate(date);\n  });\n\n  const [toDate, setToDate] = useState(() => {\n    let date = new Date();\n    return getToDate(date);\n  });\n\n  const handleFromDateChange = (date) => {\n    setFromDate(getFromDate(date));\n    // fetchPerformance(date.getTime(), toDate.getTime(), selectedSite);\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(getToDate(date));\n    // fetchPerformance(fromDate.getTime(), date.getTime(), selectedSite);\n  };\n\n  /**\n   * END of functions related to time component\n   */\n\n  // Status and time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, selectedSite) => {\n    // console.log(\"getStatusAndTime function called\", selectedSite);\n    axios\n      .get(SERVER_URL + \"/\" + selectedSite + \"/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        if (error.response.status === 401) {\n          handleSessionExpire();\n        }\n      });\n  };\n\n  useEffect(() => {\n    // fetchPerformance(fromDate, toDate, selectedSite);\n  }, []);\n\n  const calculateDifference = (value1, value2) => {\n    let value1Num = Number(value1);\n    let value2Num = Number(value2);\n\n    let difference = value2Num - value1Num;\n\n    return Math.abs(\n      Number(difference)\n        .toFixed(2)\n        .replace(/[.,]00$/, \"\")\n    );\n  };\n\n  const handleViewBtnClick = () => {\n    fetchPerformance(fromDate, toDate, selectedSite);\n  };\n\n  return (\n    <div style={{ marginTop: \"0rem\", width: \"90vw\" }}>\n      <Grid container alignItems=\"center\" justify=\"space-between\">\n        <Grid item>\n          <Grid container alignItems=\"flex-end\">\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <MultiDropdownSingle\n                label=\"Sites\"\n                items={siteOptions}\n                selectedItems={selectedSite}\n                handleChange={handleSiteChange}\n              />\n            </Grid>\n            {/* <Grid item style={{ marginRight: \"1rem\" }}>\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"block-select-label\">Block</InputLabel>\n                <Select\n                  labelId=\"block-select-label\"\n                  id=\"block-select\"\n                  value={block}\n                  onChange={handleBlockChange}\n                >\n                  {Array.from({ length: 10 }, (_, i) => i + 1).map(\n                    (element) => {\n                      return (\n                        <MenuItem value={element}>\n                          <span>{element}&ensp;</span>\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n            </Grid> */}\n\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"from-date-picker-inline\"\n                  label=\"From\"\n                  value={fromDate}\n                  onChange={handleFromDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-labelte\": \"from date\",\n                  }}\n                  style={{ marginRight: \"1rem\" }}\n                  className={classes.textField}\n                  InputProps={{\n                    style: {\n                      fontSize: \".8rem\",\n                    },\n                  }}\n                />\n\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"to-date-picker-inline\"\n                  label=\"To\"\n                  value={toDate}\n                  onChange={handleToDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"to date\",\n                  }}\n                  className={classes.textField}\n                  InputProps={{\n                    style: {\n                      fontSize: \".8rem\",\n                    },\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item style={{ marginRight: \"1.25rem\" }}>\n              <FormControl className={classes.formControlStyle}>\n                <InputLabel id=\"parameter-select-label\">Parameter</InputLabel>\n                <Select\n                  labelId=\"parameter-select-label\"\n                  id=\"parameter-select\"\n                  value={parameter}\n                  onChange={handleParameterChange}\n                  style={{ fontSize: \".8rem\" }}\n                >\n                  <MenuItem value={\"pr\"}>\n                    <span>PR&ensp;</span>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n\n            <Grid item>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={handleViewBtnClick}\n                disabled={disabledViewBtn}\n              >\n                {disabledViewBtn ? \"Loading\" : \"View\"}\n              </Button>\n            </Grid>\n            <Grid item style={{ marginLeft: \"1.75rem\", marginRight: \"1rem\" }}>\n              <FormControl className={classes.formControlStyle}>\n                <InputLabel id=\"filter-select-label\">Filter</InputLabel>\n                <Select\n                  labelId=\"filter-select-label\"\n                  id=\"filter-select\"\n                  value={filter}\n                  onChange={handleFilterChange}\n                  style={{ fontSize: \".8rem\" }}\n                >\n                  <MenuItem value={\"none\"}>\n                    <span>None&ensp;</span>\n                  </MenuItem>\n                  <MenuItem value={\"low\"}>\n                    <span>Low&ensp;</span>\n                  </MenuItem>\n                  <MenuItem value={\"high\"}>\n                    <span>High&ensp;</span>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item style={{ marginRight: \"0rem\" }}>\n              <FormControl className={classes.formControlStyle}>\n                <InputLabel id=\"sort-select-label\">Sort</InputLabel>\n                <Select\n                  labelId=\"sort-select-label\"\n                  id=\"sort-select\"\n                  value={sort}\n                  onChange={handleSortChange}\n                  style={{ fontSize: \".8rem\" }}\n                >\n                  <MenuItem value={\"desc\"}>\n                    <span>Desc&ensp;</span>\n                  </MenuItem>\n                  <MenuItem value={\"asc\"}>\n                    <span>Asc&ensp;</span>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        {/* <Grid item>\n          <Grid container alignItems='center'>\n            <Grid item style={{ marginRight: '2rem' }}>\n              <Grid container>\n                <Grid item>\n                  {status === 0 ? (\n                    // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                    //   Offline\n                    // </span>\n                    <Typography variant='h6' style={{ color: '#f44336' }}>\n                      Offline\n                    </Typography>\n                  ) : (\n                    // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                    //   Online\n                    // </span>\n                    <Typography variant='h6' style={{ color: '#4caf50' }}>\n                      Online\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item style={{ margin: '0 1rem' }}></Grid>\n                <Grid item>\n                  {timestamp === undefined ? (\n                    <CircularProgress\n                      size='1.25rem'\n                      // style={{ marginRight: '.5rem' }}\n                    />\n                  ) : (\n                    <Typography variant='h6'>\n                      {getFormattedDateAndTimeString(timestamp)}\n                    </Typography>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: 'hidden' }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format='dd/MM/yyyy hh:mm a'\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item>\n              <IconButton onClick={() => setOpenDateTimePicker(true)}>\n                <EventIcon color='action' fontSize='large' />\n              </IconButton>\n            </Grid>\n            <Grid item style={{ paddingRight: '0rem', marginRight: '1rem' }}>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color='primary' fontSize='large' />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n      </Grid>\n\n      <Grid container style={{ marginTop: \".25rem\" }}>\n        <Card\n          elevation={6}\n          style={{\n            width: \"100%\",\n            height: \"410px\",\n            marginTop: \"1rem\",\n            paddingTop: \".5rem\",\n            paddingBottom: \"3.5rem\",\n          }}\n        >\n          <Grid\n            container\n            justify=\"flex-end\"\n            alignItems=\"center\"\n            style={{ paddingInline: \"2rem\", marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <span>Scroll:</span>\n              <Switch\n                checked={enableBarChartScroll}\n                onChange={() =>\n                  setEnableBarChartScroll((prevState) => !prevState)\n                }\n                color=\"primary\"\n                name=\"scrollSwitch\"\n              />\n            </Grid>\n          </Grid>\n          <CustomBarChart\n            chartData={barChartData}\n            enableScroll={enableBarChartScroll}\n            siteName={selectedSite}\n          />\n        </Card>\n      </Grid>\n\n      <div style={{ marginBlock: \"1.5rem\" }}></div>\n      {/* {selectedSite && <CustomDiagram />} */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"1.5rem\" }}></div>\n    </div>\n  );\n}\n","\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Cell,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  LabelList,\n  Legend,\n  Brush,\n} from \"recharts\";\n\nconst renderLegend = (props) => {\n  const { payload } = props;\n\n  return (\n    <div style={{textAlign: 'center', marginTop: '5px', paddingLeft: '70px'}}>\n      {\n        payload.map((entry, index) => {\n          \n          return (<span key={`item-${index}`} style={{color: '#48C9B0'}}>&#9679;&ensp;Rank</span>)\n          \n          \n        })\n      }\n    </div>\n  )\n}\n\nconst getCustomTime = (value) => {\n  let date = new Date(value * 1000);\n  return String(date.getHours()).padStart(2, 0) + \":\" + String(date.getMinutes()).padStart(2, 0); \n}\n\n\n\nexport default function InvertersWakeUpChart({ chartData, enableScroll }) {\n\n  const getDataForScroll = () => {\n    let cells = [];\n\n    // console.log(chartData);\n    \n    if (chartData && chartData.length > 0) {\n      let fillIndex = chartData.length > 13 ? 13 : chartData.length - 1;\n      // console.log(fillIndex)\n      for (let i = brushStartIndex; i <= brushStartIndex + fillIndex; i++) {\n        cells.push(<Cell key={`cell-${i}`}  fill={chartData[i].color} />)\n      }\n    }\n    \n    return cells;\n  }\n\n  // console.log(chartData);\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload) {\n      return (\n        <div>\n          {/* <span>{`Rank: ${payload[0].payload.rank}\n          , Time: ${new Date(payload[0].payload.Timestamp * 1000).toLocaleTimeString()}`}</span> */}\n          <span>{`Rank: ${payload[0].payload.rank}`}&ensp;{payload[0].payload.timestamp !== '-1' ? `Time: ${getCustomTime(payload[0].payload.timestamp)}` : ''}</span>\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  const toDecimal = (value, index) => {\n    return value / 1000;\n  };\n\n  const [brushStartIndex, setBrushStartIndex] = useState(0);\n\n  useEffect(() => {\n    if (enableScroll === false) {\n      setBrushStartIndex(0);\n    }\n  }, [enableScroll]);\n\n  return enableScroll === true ? (\n    <ResponsiveContainer style={{ height: \"100%\" }}>\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          // left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"inverter\" fontSize={10} interval={0} stroke='black' />\n        <YAxis domain={[0, data => Math.ceil(data)]} />\n        <Tooltip content={<CustomTooltip />} />\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n        \n        <Brush\n          endIndex={13}\n          onChange={(obj) => setBrushStartIndex(obj.startIndex)}\n          dataKey=\"inverter\"\n          height={18}\n          stroke=\"#A6ACAF\"\n          tickFormatter={() => ''}\n          \n        />\n        <Legend wrapperStyle={{\n        paddingTop: \"10px\"\n        }}\n        // formatter={(value, entry, index) => value === 'plantPr' ? 'Actual PR' : 'Budget'}\n        content={renderLegend}\n\n        align='left'\n         />\n\n        \n        <Bar isAnimationActive={false} dataKey=\"rank\">\n          <LabelList\n            dataKey=\"rank\"\n            position=\"center\"\n            fill=\"#fff\"\n            angle='270'\n            // formatter={(value) => getCustomTime(value)}\n          />\n          {getDataForScroll()}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  ) : (\n    <ResponsiveContainer >\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 0,\n          bottom: 5,\n        }}\n        barCategoryGap={1.25}\n        barGap={1}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"inverter\"\n          angle={270}\n          tickMargin={32} fontSize={10} interval={0} stroke='black' />\n        <YAxis domain={[0, data => Math.ceil(data)]}  />\n        <Tooltip content={<CustomTooltip />} />\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n        {/* <Tooltip /> */}\n        <Legend wrapperStyle={{\n        paddingTop: \"45px\"\n        }} \n        // formatter={(value, entry, index) => value === 'plantPr' ? 'Actual PR' : 'Budget'}\n        content={renderLegend} />\n        <Bar isAnimationActive={false} dataKey=\"rank\" >\n          <LabelList\n            dataKey=\"rank\"\n            position=\"center\"\n            fill=\"#000\"\n            angle='270'\n            fontSize={10}\n            // formatter={(value) => getCustomTime(value)}\n          />\n          {chartData.map((datum, index) => {\n            //   if (Number(datum.Percentage) >= Number(datum.prBudget)) {\n            //     return <Cell key={`cell-${index}`} fill='#48C9B0' />;\n            //   } else {\n            //     return <Cell key={`cell-${index}`} fill='#EC7063' />;\n            //   }             \n              return <Cell key={`cell-${index}`} fill={datum.color} />;\n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Cell,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  LabelList,\n  Legend,\n  Brush,\n} from \"recharts\";\n\nconst renderLegend = (props) => {\n  const { payload } = props;\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"5px\", paddingLeft: \"70px\" }}>\n      {payload.map((entry, index) => {\n        return (\n          <span key={`item-${index}`} style={{ color: \"#48C9B0\" }}>\n            &#9679;&ensp;Rank\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nconst getCustomTime = (value) => {\n  let date = new Date(value * 1000);\n  return (\n    String(date.getHours()).padStart(2, 0) +\n    \":\" +\n    String(date.getMinutes()).padStart(2, 0)\n  );\n};\n\nexport default function InvertersWakeUpChart({ chartData, enableScroll }) {\n  const getDataForScroll = () => {\n    let cells = [];\n\n    // console.log(chartData);\n\n    if (chartData && chartData.length > 0) {\n      let fillIndex = chartData.length > 13 ? 13 : chartData.length - 1;\n      // console.log('fillIndex', fillIndex)\n      for (let i = brushStartIndex; i <= brushStartIndex + fillIndex; i++) {\n        cells.push(<Cell key={`cell-${i}`} fill={chartData[i].color} />);\n      }\n    }\n\n    return cells;\n  };\n\n  // console.log(chartData);\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload) {\n      return (\n        <div>\n          {/* <span>{`Rank: ${payload[0].payload.rank}\n          , Time: ${new Date(payload[0].payload.Timestamp * 1000).toLocaleTimeString()}`}</span> */}\n          <span>\n            {`Rank: ${payload[0].payload.rank}`}&ensp;\n            {payload[0].payload.timestamp !== \"-1\"\n              ? `Time: ${getCustomTime(payload[0].payload.timestamp)}`\n              : \"\"}\n          </span>\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  const toDecimal = (value, index) => {\n    return value / 1000;\n  };\n\n  const [brushStartIndex, setBrushStartIndex] = useState(0);\n\n  useEffect(() => {\n    if (enableScroll === false) {\n      setBrushStartIndex(0);\n    }\n  }, [enableScroll]);\n\n  return enableScroll === true ? (\n    <ResponsiveContainer style={{ height: \"100%\" }}>\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          // left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"inverter\" fontSize={10} interval={0} stroke=\"black\" />\n        <YAxis domain={[0, (data) => Math.ceil(data)]} />\n        <Tooltip content={<CustomTooltip />} />\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n\n        <Brush\n          endIndex={13}\n          onChange={(obj) => setBrushStartIndex(obj.startIndex)}\n          dataKey=\"inverter\"\n          height={18}\n          stroke=\"#A6ACAF\"\n          tickFormatter={() => \"\"}\n        />\n        <Legend\n          wrapperStyle={{\n            paddingTop: \"10px\",\n          }}\n          // formatter={(value, entry, index) => value === 'plantPr' ? 'Actual PR' : 'Budget'}\n          content={renderLegend}\n          align=\"left\"\n        />\n\n        <Bar isAnimationActive={false} dataKey=\"rank\">\n          <LabelList\n            dataKey=\"rank\"\n            position=\"center\"\n            fill=\"#fff\"\n            angle=\"270\"\n            // formatter={(value) => getCustomTime(value)}\n          />\n          {getDataForScroll()}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  ) : (\n    <ResponsiveContainer>\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 0,\n          bottom: 5,\n        }}\n        barCategoryGap={1.25}\n        barGap={1}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey=\"inverter\"\n          angle={270}\n          tickMargin={32}\n          fontSize={10}\n          interval={0}\n          stroke=\"black\"\n        />\n        <YAxis domain={[0, (data) => Math.ceil(data)]} />\n        <Tooltip content={<CustomTooltip />} />\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n        {/* <Tooltip /> */}\n        <Legend\n          wrapperStyle={{\n            paddingTop: \"45px\",\n          }}\n          // formatter={(value, entry, index) => value === 'plantPr' ? 'Actual PR' : 'Budget'}\n          content={renderLegend}\n        />\n        <Bar isAnimationActive={false} dataKey=\"rank\">\n          <LabelList\n            dataKey=\"rank\"\n            position=\"center\"\n            fill=\"#000\"\n            angle=\"270\"\n            fontSize={10}\n            // formatter={(value) => getCustomTime(value)}\n          />\n          {chartData.map((datum, index) => {\n            //   if (Number(datum.Percentage) >= Number(datum.prBudget)) {\n            //     return <Cell key={`cell-${index}`} fill='#48C9B0' />;\n            //   } else {\n            //     return <Cell key={`cell-${index}`} fill='#EC7063' />;\n            //   }\n            return <Cell key={`cell-${index}`} fill={datum.color} />;\n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n","import { Card, Grid, Switch, Select, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport React, { useState, useEffect } from 'react'\nimport InvertersWakeUpChart from './InvertersWakeUpChart';\nimport InvertersWakeUpChartSingle from './InvertersWakeUpChartSingle';\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n      flexGrow: 1,\n    },\n    textField: {\n      width: 120,\n    },\n    menuPaper: {\n      maxHeight: 400,\n    },\n    formControlStyle: {\n      \n    },\n    listItemText: {\n      fontSize: '.9rem'\n    }\n  }));\n\n  export default function InverersWakeUpChartCard({barChartDataParent, siteName, isSingleDay}) {\n    const classes = useStyles();\n\n    // const applyColors = (data) => {\n    //     let highestRankIndex = 0;\n    //     let highestRank = null;\n    //     data.forEach((element, index) => {\n    //     if (index === 0) {\n    //         highestRank = element.Rank;\n    //     }\n    //     if (element.Rank < highestRank) {\n    //         highestRank = element.Rank\n    //         highestRankIndex = index\n    //     }\n    //     })\n\n    //     let lowestRankIndex = 0;\n    //     let lowestRank = null;\n    //     data.forEach((element, index) => {\n    //     if (index === 0) {\n    //         lowestRank = element.Rank;\n    //     }\n    //     if (element.Rank > lowestRank) {\n    //         lowestRank = element.Rank\n    //         lowestRankIndex = index\n    //     }\n    //     })\n\n    //     let dataWithColors = data.map((element, index) => {\n    //         if (index === highestRankIndex) {\n    //           return { ...element, color: '#48C9B0'}\n    //         } else if (index === lowestRankIndex) {\n    //           return { ...element, color: '#E74C3C'}\n    //         } else {\n    //           return { ...element, color: '#5DADE2'}\n    //         }\n    //       })\n      \n    //       return dataWithColors;\n    // }\n\n    const applyColors = (data) => {\n        let highestRankIndex = [];\n        let highestRank = null;\n        data.forEach((element, index) => {\n        if (index === 0) {\n            highestRank = Number(element.rank);\n        }\n        if (Number(element.rank) <= highestRank) {\n            highestRank = Number(element.rank)\n            highestRankIndex[index] = index;\n        }\n        })\n\n        // console.log(highestRankIndex);\n\n        let lowestRankIndex = [];\n        let lowestRank = null;\n        data.forEach((element, index) => {\n        if (index === 0) {\n            lowestRank = Number(element.rank);\n        }\n        if (Number(element.rank) > lowestRank) {\n            lowestRank = Number(element.rank)\n        }\n        })\n\n        data.forEach((element, index) => {\n            if (Number(element.rank) === lowestRank) {\n                lowestRankIndex[index] = index\n            }\n        })\n\n\n        // console.log(lowestRankIndex)\n\n\n        let dataWithColors = data.map((element, index) => {\n            if (index === highestRankIndex[index]) {\n              return { ...element, color: '#48C9B0'}\n            } else if (index === lowestRankIndex[index]) {\n              return { ...element, color: '#E74C3C'}\n            } else {\n              return { ...element, color: '#5DADE2'}\n            }\n          })\n      \n          return dataWithColors;\n    }\n\n    const [barChartData, setBarChartData] = useState();\n\n    useEffect(() => {\n        if (barChartDataParent) {\n            setBarChartData(applyColors(barChartDataParent))\n        }\n    }, [barChartDataParent])\n\n    const [enableBarChartScroll, setEnableBarChartScroll] = useState(true);\n\n    const [sort, setSort] = useState('asc');\n\n    const handleSortChange = (event) => {\n        let value = event.target.value;\n        sortElements(value);\n        setSort(value);\n      }\n\n      const sortElements = (value) => {\n        switch (value) {\n          case 'desc':\n            setBarChartData(prevState => \n              prevState.sort((a, b) => parseFloat(b.rank) - parseFloat(a.rank)));\n            break;\n          case 'asc':\n            setBarChartData(prevState => \n              prevState.sort((a, b) => parseFloat(a.rank) - parseFloat(b.rank)));\n            break;\n          default:\n            setBarChartData(prevState => \n              prevState.sort((a, b) => parseFloat(b.rank) - parseFloat(a.rank)));\n        }\n      }\n\n    return (\n        <Card\n        elevation={4}\n        style={{\n          width: '100%',\n          height: '410px',\n          marginTop: '1rem',\n          paddingTop: '.5rem',\n          paddingBottom: '3.5rem',\n        }}\n      >\n        <Grid\n          container\n          justify='space-between'\n          alignItems='center'\n          style={{ paddingInline: '2rem', marginBottom: '.5rem' }}\n        >\n            <Grid item>\n                <Typography color='textSecondary' variant='h6'>{siteName}</Typography>\n            </Grid>\n          \n          <Grid item>\n              <Grid container alignItems='center'  >\n                  <Grid item style={{marginRight: '1rem'}}>\n                  <span>Scroll:</span>\n            <Switch\n              checked={enableBarChartScroll}\n              onChange={() =>\n                setEnableBarChartScroll((prevState) => !prevState)\n              }\n              color='primary'\n              name='scrollSwitch'\n            \n            />\n                  </Grid>\n              \n          <Grid item>\n              <Grid container alignItems='center' spacing={1}>\n                  <Grid item>\n                  <span>Sort: </span>\n                  </Grid>\n                  <Grid item>\n                  <FormControl className={classes.formControlStyle}>\n                {/* <InputLabel id='sort-select-label'>Sort</InputLabel> */}\n                \n                <Select\n                  labelId='sort-select-label'\n                  id='sort-select'\n                  value={sort}\n                  onChange={handleSortChange}\n                  style={{fontSize: '1rem'}}\n                >\n                  <MenuItem value={'desc'}>\n                    <span>Desc&ensp;</span>\n                  </MenuItem>\n                  <MenuItem value={'asc'}>\n                    <span>Asc&ensp;</span>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n                  </Grid>\n              </Grid>\n          \n          \n          </Grid>\n          </Grid>\n          </Grid>\n          \n        </Grid>\n        {barChartData && (isSingleDay ? <InvertersWakeUpChart\n          chartData={barChartData}\n          enableScroll={enableBarChartScroll}\n          siteName={siteName}\n        /> : <InvertersWakeUpChartSingle\n        chartData={barChartData}\n        enableScroll={enableBarChartScroll}\n        siteName={siteName}\n      />)}\n        \n      </Card>\n    )\n}","import React, { useState, useEffect } from \"react\";\n// import \"./SCB.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport {\n  Card,\n  Grid,\n  Typography,\n  Button,\n  OutlinedInput,\n  ListItemIcon,\n  Checkbox,\n  ListItemText,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n} from \"@material-ui/core\";\n\nimport axios from \"axios\";\nimport { ML_URL, SERVER_URL } from \"../../../constants/constants\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport InvertersWakeUpChart from \"./InvertersWakeUpChart\";\nimport { siteNamesCaps } from \"../../../constants/SiteNamesY\";\nimport InverersWakeUpChartCard from \"./InverersWakeUpChartCard\";\nimport InvertersWakeUpChartCard from \"./InverersWakeUpChartCard\";\nimport { AppState } from \"../../../AppContext\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  textField: {\n    width: 120,\n  },\n  menuPaper: {\n    maxHeight: 400,\n  },\n  formControlStyle: {},\n  listItemText: {\n    fontSize: \".9rem\",\n  },\n}));\n\nexport default function InvertersWakeUp({ handleSessionExpire }) {\n  const classes = useStyles();\n\n  const { setEnabledLinearProgress } = AppState();\n  const [disabledViewBtn, setDisabledViewBtn] = useState(false);\n  const [disabledDownload, setDisabledDownload] = useState(false);\n\n  const userToken = localStorage.getItem(\"userToken\");\n  let localsite = JSON.parse(localStorage.getItem(\"siteNamesAndBlocks\")).map(\n    (el) => el.name\n  );\n  const [selectedSite, setSelectedSite] = useState([localsite[1]]);\n  // console.log(\"Sitesss\", selectedSite);\n  const isAllSelected =\n    JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length > 0 &&\n    selectedSite.length ===\n      JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length;\n\n  const [parameter, setParameter] = useState(\"pr\");\n\n  const [sort, setSort] = useState(\"asc\");\n\n  const [filter, setFilter] = useState(\"none\");\n\n  const [enableBarChartScroll, setEnableBarChartScroll] = useState(true);\n\n  const [barChartDataOG, setBarChartDataOG] = useState([]);\n  const [barChartData, setBarChartData] = useState([]);\n\n  const [timePeriod, setTimePeriod] = useState(\"14\");\n\n  const handleSiteChange = (event) => {\n    const value = event.target.value;\n\n    if (value[value.length - 1] === \"All\") {\n      setSelectedSite(\n        selectedSite.length ===\n          JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length\n          ? []\n          : JSON.parse(localStorage.getItem(\"siteNamesCaps\"))\n      );\n      return;\n    }\n\n    setSelectedSite(value);\n\n    // fetchPerformance(fromDate.getTime(), toDate.getTime(), event.target.value);\n  };\n\n  const handleTimePeriodChange = (event) => {\n    setTimePeriod(event.target.value);\n  };\n\n  const applyColors = (data) => {\n    let highestRankIndex = 0;\n    let highestRank = null;\n    data.forEach((element, index) => {\n      if (index === 0) {\n        highestRank = element.Rank;\n      }\n      if (element.Rank < highestRank) {\n        highestRank = element.Rank;\n        highestRankIndex = index;\n      }\n    });\n\n    let lowestRankIndex = 0;\n    let lowestRank = null;\n    data.forEach((element, index) => {\n      if (index === 0) {\n        lowestRank = element.Rank;\n      }\n      if (element.Rank > lowestRank) {\n        lowestRank = element.Rank;\n        lowestRankIndex = index;\n      }\n    });\n\n    let dataWithColors = data.map((element, index) => {\n      if (index === highestRankIndex) {\n        return { ...element, color: \"#48C9B0\" };\n      } else if (index === lowestRankIndex) {\n        return { ...element, color: \"#E74C3C\" };\n      } else {\n        return { ...element, color: \"#5DADE2\" };\n      }\n    });\n\n    return dataWithColors;\n  };\n\n  const [isSingleDay, setIsSingleDay] = useState(true);\n\n  const fetchPerformance = (fromDate, toDate) => {\n    // console.log('site ranking', fromDate.toLocaleString(), toDate.toLocaleString(), today.toLocaleString());\n\n    setDisabledViewBtn(true);\n    setEnabledLinearProgress(true);\n\n    let fromDateTime = fromDate.getTime();\n    let toDateTime = toDate.getTime();\n\n    let day = toDate.getDate() - fromDate.getDate();\n    setIsSingleDay((prevState) => day === 1);\n\n    axios\n      .post(\n        SERVER_URL + \"/analytics\",\n        {\n          startTime: fromDateTime,\n          endTime: toDateTime,\n          site: selectedSite,\n        },\n        {\n          headers: { jwtToken: localStorage.getItem(\"userToken\") },\n        }\n      )\n      .then((response) => {\n        // console.log(\"inverters wake up\", response.data);\n\n        setBarChartDataOG(response.data);\n\n        // let dataWithColors = applyColors(response.data);\n\n        // setBarChartDataOG(dataWithColors);\n\n        // if (sort === 'desc') {\n        //   setBarChartData(dataWithColors.sort((a, b) => {\n        //     return parseFloat(b.Rank) - parseFloat(a.Rank);\n        //   }));\n        // } else {\n        //   setBarChartData(dataWithColors.sort((a, b) => {\n        //     return parseFloat(a.Rank) - parseFloat(b.Rank);\n        //   }));\n        // }\n        setDisabledViewBtn(false);\n        setEnabledLinearProgress(false);\n      })\n      .catch(() => {\n        setDisabledViewBtn(false);\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  const handleParameterChange = (event) => {\n    setParameter(event.target.value);\n    // fetchPerformance(fromDate.getTime(), toDate.getTime(), selectedSite);\n  };\n\n  const sortElements = (value) => {\n    switch (value) {\n      case \"desc\":\n        setBarChartData((prevState) =>\n          prevState.sort((a, b) => parseFloat(b.Rank) - parseFloat(a.Rank))\n        );\n        break;\n      case \"asc\":\n        setBarChartData((prevState) =>\n          prevState.sort((a, b) => parseFloat(a.Rank) - parseFloat(b.Rank))\n        );\n        break;\n      default:\n        setBarChartData((prevState) =>\n          prevState.sort((a, b) => parseFloat(b.Rank) - parseFloat(a.Rank))\n        );\n    }\n  };\n\n  const handleSortChange = (event) => {\n    let value = event.target.value;\n    sortElements(value);\n    setSort(value);\n  };\n\n  const handleFilterChange = (event) => {\n    let value = event.target.value;\n\n    switch (value) {\n      case \"low\":\n        // console.log('low')\n        setBarChartData((prevState) => {\n          return barChartDataOG.filter(\n            (element) => Number(element.plantPr) < Number(element.prBudget)\n          );\n        });\n        break;\n      case \"high\":\n        // console.log(\"high\");\n        setBarChartData((prevState) => {\n          return barChartDataOG.filter(\n            (element) => Number(element.plantPr) >= Number(element.prBudget)\n          );\n        });\n        break;\n      default:\n        fetchPerformance(fromDate, toDate);\n    }\n\n    sortElements(value);\n\n    setFilter(value);\n  };\n\n  /**\n   * Functions related to time component\n   */\n\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const getMinDateForPicker = () => {\n    let startTime = new Date();\n    if (selectedSite === \"gadarpur\") {\n      // Aug 19, 2021 6:00:00 PM\n      startTime.setTime(1629396000000);\n    }\n\n    return startTime;\n  };\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleTimeReset = () => {\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getFromDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(0, 1, 0, 0);\n    return newDate;\n  };\n\n  const getToDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(23, 59, 59, 999);\n    return newDate;\n  };\n\n  const [fromDate, setFromDate] = useState(() => {\n    let date = new Date();\n    return getFromDate(date);\n  });\n\n  const [toDate, setToDate] = useState(() => {\n    let date = new Date();\n    return getToDate(date);\n  });\n\n  const handleFromDateChange = (date) => {\n    setFromDate(getFromDate(date));\n    // fetchPerformance(date.getTime(), toDate.getTime(), selectedSite);\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(getToDate(date));\n    // fetchPerformance(fromDate.getTime(), date.getTime(), selectedSite);\n  };\n\n  /**\n   * END of functions related to time component\n   */\n\n  // Status and time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, selectedSite) => {\n    // console.log(\"getStatusAndTime function called\", selectedSite);\n    axios\n      .get(SERVER_URL + \"/\" + selectedSite + \"/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        if (error.response.status === 401) {\n          // handleSessionExpire();\n        }\n      });\n  };\n\n  useEffect(() => {\n    // fetchPerformance(fromDate, toDate, selectedSite);\n  }, []);\n\n  const calculateDifference = (value1, value2) => {\n    let value1Num = Number(value1);\n    let value2Num = Number(value2);\n\n    let difference = value2Num - value1Num;\n\n    return Math.abs(\n      Number(difference)\n        .toFixed(2)\n        .replace(/[.,]00$/, \"\")\n    );\n  };\n\n  const handleViewBtnClick = () => {\n    fetchPerformance(fromDate, toDate, selectedSite);\n  };\n\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    severity: \"success\",\n    message: \"Downloaded successfully!\",\n  });\n\n  const handleSnackbarClose = () => {\n    setSnackbar((prevState) => {\n      return { ...prevState, open: false };\n    });\n  };\n\n  const downloadReport = () => {\n    setDisabledDownload(true);\n\n    axios\n      .post(\n        SERVER_URL + \"/analytics/report\",\n        {\n          startTime: fromDate.getTime(),\n          endTime: toDate.getTime(),\n          site: selectedSite,\n        },\n        {\n          headers: {\n            jwtToken: localStorage.getItem(\"userToken\"),\n            responseType: \"blob\",\n          },\n        }\n      )\n      .then((response) => {\n        const downloadUrl = window.URL.createObjectURL(\n          new Blob([response.data])\n        );\n        const link = document.createElement(\"a\");\n        link.href = downloadUrl;\n\n        let filename = `Analytics_${fromDate.getDate()}_${\n          fromDate.getMonth() + 1\n        }_${fromDate.getFullYear()}-${toDate.getDate()}_${\n          toDate.getMonth() + 1\n        }_${toDate.getFullYear()}.csv`;\n        link.setAttribute(\"download\", filename);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        // setSnackbar(prevState => {return {...prevState, open: true, message: 'Downloaded successfully!'}})\n        setDisabledDownload(false);\n      })\n      .catch((error) => {\n        setSnackbar((prevState) => {\n          return {\n            ...prevState,\n            open: true,\n            severity: \"error\",\n            message: \"Download failed!\",\n          };\n        });\n        setDisabledDownload(false);\n      });\n  };\n\n  return (\n    <div style={{ marginTop: \".5rem\", width: \"90vw\" }}>\n      <Grid container alignItems=\"center\" justify=\"space-between\">\n        <Grid item>\n          <Grid container alignItems=\"flex-end\">\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <FormControl\n                className={classes.formControlStyle}\n                style={{\n                  minWidth: \"120px\",\n                  maxWidth: \"200px\",\n                  marginRight: \"1rem\",\n                }}\n              >\n                <InputLabel id=\"site-select-label\">Sites</InputLabel>\n                <Select\n                  style={{ fontSize: \".8rem\" }}\n                  labelId=\"site-select-label\"\n                  id=\"site-select\"\n                  value={selectedSite}\n                  onChange={handleSiteChange}\n                  multiple\n                  renderValue={(data) => data.join(\", \")}\n                  MenuProps={{\n                    classes: { paper: classes.menuPaper },\n                    getContentAnchorEl: () => null,\n                  }}\n                >\n                  <MenuItem\n                    value=\"All\"\n                    classes={{\n                      root: isAllSelected ? classes.selectedAll : \"\",\n                    }}\n                    style={{ paddingBlock: 0 }}\n                  >\n                    <ListItemIcon>\n                      <Checkbox\n                        style={{ paddingBlock: 0 }}\n                        size=\"small\"\n                        color=\"primary\"\n                        classes={{ indeterminate: classes.indeterminateColor }}\n                        checked={isAllSelected}\n                        indeterminate={\n                          selectedSite.length > 0 &&\n                          selectedSite.length <\n                            JSON.parse(localStorage.getItem(\"siteNamesCaps\"))\n                              .length\n                        }\n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      // classes={{ primary: classes.selectAllText }}\n                      classes={{ primary: classes.listItemText }}\n                      primary=\"Select All\"\n                      style={{ paddingTop: \".05rem\" }}\n                    />\n                  </MenuItem>\n                  {JSON.parse(localStorage.getItem(\"siteNamesCaps\")).map(\n                    (element) => {\n                      return (\n                        <MenuItem\n                          key={element}\n                          value={element}\n                          style={{ paddingBlock: 0 }}\n                        >\n                          <ListItemIcon>\n                            <Checkbox\n                              style={{ paddingBlock: 0 }}\n                              checked={selectedSite.indexOf(element) > -1}\n                              size=\"small\"\n                              color=\"primary\"\n                            />\n                          </ListItemIcon>\n                          <ListItemText\n                            classes={{ primary: classes.listItemText }}\n                            primary={element}\n                            style={{ paddingTop: \".05rem\" }}\n                          />\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                {/* <FormControl className={classes.formControlStyle} style={{marginRight: '1rem'}}>\n                <InputLabel id='site-select-label'>Site</InputLabel>\n                <Select\n                  labelId='site-select-label'\n                  id='site-select'\n                  value={selectedSite}\n                  onChange={handleSiteChange}\n                  style={{fontSize: '.8rem'}}\n                >\n                  {JSON.parse(localStorage.getItem(\"siteNamesCaps\")).map(element => (\n                      <MenuItem key={element} value={element}>{element}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl> */}\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"from-date-picker-inline\"\n                  label=\"From\"\n                  value={fromDate}\n                  onChange={handleFromDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-labelte\": \"from date\",\n                  }}\n                  style={{ marginRight: \"1rem\" }}\n                  className={classes.textField}\n                  InputProps={{\n                    style: {\n                      fontSize: \".8rem\",\n                    },\n                  }}\n                />\n\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"to-date-picker-inline\"\n                  label=\"To\"\n                  value={toDate}\n                  onChange={handleToDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"to date\",\n                  }}\n                  className={classes.textField}\n                  InputProps={{\n                    style: {\n                      fontSize: \".8rem\",\n                    },\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n              {/* <FormControl component=\"fieldset\" style={{marginLeft: '1rem'}}>\n                    <FormLabel component=\"legend\" style={{fontSize: '.8rem'}}>Time Period</FormLabel>\n                    <RadioGroup value={timePeriod} onChange={handleTimePeriodChange} row aria-label=\"time-period\" name=\"time-period-row-radio-buttons-group\">\n                        <FormControlLabel value='24' control={<Radio color='primary' size='small' />} label=\"24 hrs\" />\n                        <FormControlLabel  value='14' control={<Radio color='primary' size='small' />} label=\"06:00 - 20:00\" />\n                    </RadioGroup>\n                </FormControl> */}\n            </Grid>\n            <Grid item>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={handleViewBtnClick}\n                disabled={disabledViewBtn}\n              >\n                {disabledViewBtn ? \"Loading\" : \"View\"}\n              </Button>\n            </Grid>\n            <Grid item style={{ marginLeft: \"1rem\" }}>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={downloadReport}\n                disabled={disabledDownload}\n              >\n                {disabledDownload ? \"Downloading\" : \"Download\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        {/* <Grid item style={{marginRight: '1rem'}}>\n              <FormControl className={classes.formControlStyle}>\n                <InputLabel id='sort-select-label'>Sort</InputLabel>\n                <Select\n                  labelId='sort-select-label'\n                  id='sort-select'\n                  value={sort}\n                  onChange={handleSortChange}\n                  style={{fontSize: '.8rem'}}\n                >\n                  <MenuItem value={'desc'}>\n                    <span>Desc&ensp;</span>\n                  </MenuItem>\n                  <MenuItem value={'asc'}>\n                    <span>Asc&ensp;</span>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid> */}\n\n        {/* <Grid item>\n          <Grid container alignItems='center'>\n            <Grid item style={{ marginRight: '2rem' }}>\n              <Grid container>\n                <Grid item>\n                  {status === 0 ? (\n                    // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                    //   Offline\n                    // </span>\n                    <Typography variant='h6' style={{ color: '#f44336' }}>\n                      Offline\n                    </Typography>\n                  ) : (\n                    // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                    //   Online\n                    // </span>\n                    <Typography variant='h6' style={{ color: '#4caf50' }}>\n                      Online\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item style={{ margin: '0 1rem' }}></Grid>\n                <Grid item>\n                  {timestamp === undefined ? (\n                    <CircularProgress\n                      size='1.25rem'\n                      // style={{ marginRight: '.5rem' }}\n                    />\n                  ) : (\n                    <Typography variant='h6'>\n                      {getFormattedDateAndTimeString(timestamp)}\n                    </Typography>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: 'hidden' }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format='dd/MM/yyyy hh:mm a'\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item>\n              <IconButton onClick={() => setOpenDateTimePicker(true)}>\n                <EventIcon color='action' fontSize='large' />\n              </IconButton>\n            </Grid>\n            <Grid item style={{ paddingRight: '0rem', marginRight: '1rem' }}>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color='primary' fontSize='large' />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n      </Grid>\n\n      <Grid container style={{ marginTop: \".25rem\" }}>\n        {barChartDataOG.map((element) => (\n          <InvertersWakeUpChartCard\n            siteName={element.site}\n            barChartDataParent={element.inverters}\n            isSingleDay={isSingleDay}\n          />\n        ))}\n      </Grid>\n\n      <div style={{ marginBlock: \"1.5rem\" }}></div>\n      {/* {selectedSite && <CustomDiagram />} */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={4000}\n        onClose={handleSnackbarClose}\n        anchorOrigin={{ horizontal: \"left\", vertical: \"bottom\" }}\n      >\n        <Alert\n          onClose={handleSnackbarClose}\n          severity={snackbar.severity}\n          sx={{ width: \"100%\" }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"1.5rem\" }}></div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Cell,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  LabelList,\n  Legend,\n  Brush,\n} from \"recharts\";\n\nconst renderLegend = (props) => {\n  const { payload } = props;\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"5px\", paddingLeft: \"70px\" }}>\n      {payload.map((entry, index) => {\n        return (\n          <span key={`item-${index}`} style={{ color: \"#48C9B0\" }}>\n            &#9679;&ensp;Rank\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nconst getCustomTime = (value) => {\n  let date = new Date(value * 1000);\n  return (\n    String(date.getHours()).padStart(2, 0) +\n    \":\" +\n    String(date.getMinutes()).padStart(2, 0)\n  );\n};\n\nexport default function PeakPowerChart({ chartData, enableScroll }) {\n  // console.log(\"inside peak power chart\");\n\n  const getDataForScroll = () => {\n    let cells = [];\n\n    // console.log(chartData);\n\n    if (chartData && chartData.length > 0) {\n      let fillIndex = chartData.length > 13 ? 13 : chartData.length - 1;\n      // console.log(fillIndex)\n      for (let i = brushStartIndex; i <= brushStartIndex + fillIndex; i++) {\n        cells.push(<Cell key={`cell-${i}`} fill={chartData[i].color} />);\n      }\n    }\n\n    return cells;\n  };\n\n  // console.log(chartData);\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload) {\n      return (\n        <div>\n          {/* <span>{`Rank: ${payload[0].payload.rank}\n          , Time: ${new Date(payload[0].payload.Timestamp * 1000).toLocaleTimeString()}`}</span> */}\n          <span>\n            {`Rank: ${payload[0].payload.rank}`}&ensp;\n            {`Value: ${payload[0].payload.value}`}&ensp;\n            {payload[0].payload.timestamp !== \"-1\"\n              ? `Time: ${getCustomTime(payload[0].payload.timestamp)}`\n              : \"\"}\n          </span>\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  const toDecimal = (value, index) => {\n    return value / 1000;\n  };\n\n  const [brushStartIndex, setBrushStartIndex] = useState(0);\n\n  useEffect(() => {\n    if (enableScroll === false) {\n      setBrushStartIndex(0);\n    }\n  }, [enableScroll]);\n\n  return enableScroll === true ? (\n    <ResponsiveContainer style={{ height: \"100%\" }}>\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          // left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"inverter\" fontSize={10} interval={0} stroke=\"black\" />\n        <YAxis domain={[0, (data) => Math.ceil(data)]} />\n        <Tooltip content={<CustomTooltip />} />\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n\n        <Brush\n          endIndex={13}\n          onChange={(obj) => setBrushStartIndex(obj.startIndex)}\n          dataKey=\"inverter\"\n          height={18}\n          stroke=\"#A6ACAF\"\n          tickFormatter={() => \"\"}\n        />\n        <Legend\n          wrapperStyle={{\n            paddingTop: \"10px\",\n          }}\n          // formatter={(value, entry, index) => value === 'plantPr' ? 'Actual PR' : 'Budget'}\n          content={renderLegend}\n          align=\"left\"\n        />\n\n        <Bar isAnimationActive={false} dataKey=\"rank\">\n          <LabelList\n            dataKey=\"rank\"\n            position=\"center\"\n            fill=\"#fff\"\n            angle=\"270\"\n            // formatter={(value) => getCustomTime(value)}\n          />\n          {getDataForScroll()}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  ) : (\n    <ResponsiveContainer>\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 0,\n          bottom: 5,\n        }}\n        barCategoryGap={1.25}\n        barGap={1}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey=\"inverter\"\n          angle={270}\n          tickMargin={32}\n          fontSize={10}\n          interval={0}\n          stroke=\"black\"\n        />\n        <YAxis domain={[0, (data) => Math.ceil(data)]} />\n        <Tooltip content={<CustomTooltip />} />\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n        {/* <Tooltip /> */}\n        <Legend\n          wrapperStyle={{\n            paddingTop: \"45px\",\n          }}\n          // formatter={(value, entry, index) => value === 'plantPr' ? 'Actual PR' : 'Budget'}\n          content={renderLegend}\n        />\n        <Bar isAnimationActive={false} dataKey=\"rank\">\n          <LabelList\n            dataKey=\"rank\"\n            position=\"center\"\n            fill=\"#000\"\n            angle=\"270\"\n            fontSize={10}\n            // formatter={(value) => getCustomTime(value)}\n          />\n          {chartData.map((datum, index) => {\n            //   if (Number(datum.Percentage) >= Number(datum.prBudget)) {\n            //     return <Cell key={`cell-${index}`} fill='#48C9B0' />;\n            //   } else {\n            //     return <Cell key={`cell-${index}`} fill='#EC7063' />;\n            //   }\n            return <Cell key={`cell-${index}`} fill={datum.color} />;\n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Cell,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  LabelList,\n  Legend,\n  Brush,\n} from \"recharts\";\n\nconst renderLegend = (props) => {\n  const { payload } = props;\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"5px\", paddingLeft: \"70px\" }}>\n      {payload.map((entry, index) => {\n        return (\n          <span key={`item-${index}`} style={{ color: \"#48C9B0\" }}>\n            &#9679;&ensp;Rank\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nconst getCustomTime = (value) => {\n  let date = new Date(value * 1000);\n  return (\n    String(date.getHours()).padStart(2, 0) +\n    \":\" +\n    String(date.getMinutes()).padStart(2, 0)\n  );\n};\n\nexport default function PeakPowerChartSingle({ chartData, enableScroll }) {\n  const getDataForScroll = () => {\n    let cells = [];\n\n    // console.log(chartData);\n\n    if (chartData && chartData.length > 0) {\n      let fillIndex = chartData.length > 13 ? 13 : chartData.length - 1;\n      // console.log(fillIndex)\n      for (let i = brushStartIndex; i <= brushStartIndex + fillIndex; i++) {\n        cells.push(<Cell key={`cell-${i}`} fill={chartData[i].color} />);\n      }\n    }\n\n    return cells;\n  };\n\n  // console.log(chartData);\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload) {\n      return (\n        <div>\n          {/* <span>{`Rank: ${payload[0].payload.rank}\n          , Time: ${new Date(payload[0].payload.Timestamp * 1000).toLocaleTimeString()}`}</span> */}\n          <span>\n            {`Rank: ${payload[0].payload.rank}`}&ensp;\n            {`Value: ${payload[0].payload.value}`}&ensp;\n            {payload[0].payload.timestamp !== \"-1\"\n              ? `Time: ${getCustomTime(payload[0].payload.timestamp)}`\n              : \"\"}\n          </span>\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  const toDecimal = (value, index) => {\n    return value / 1000;\n  };\n\n  const [brushStartIndex, setBrushStartIndex] = useState(0);\n\n  useEffect(() => {\n    if (enableScroll === false) {\n      setBrushStartIndex(0);\n    }\n  }, [enableScroll]);\n\n  return enableScroll === true ? (\n    <ResponsiveContainer style={{ height: \"100%\" }}>\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          // left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"inverter\" fontSize={10} interval={0} stroke=\"black\" />\n        <YAxis domain={[0, (data) => Math.ceil(data)]} />\n        <Tooltip content={<CustomTooltip />} />\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n\n        <Brush\n          endIndex={13}\n          onChange={(obj) => setBrushStartIndex(obj.startIndex)}\n          dataKey=\"inverter\"\n          height={18}\n          stroke=\"#A6ACAF\"\n          tickFormatter={() => \"\"}\n        />\n        <Legend\n          wrapperStyle={{\n            paddingTop: \"10px\",\n          }}\n          // formatter={(value, entry, index) => value === 'plantPr' ? 'Actual PR' : 'Budget'}\n          content={renderLegend}\n          align=\"left\"\n        />\n\n        <Bar isAnimationActive={false} dataKey=\"rank\">\n          <LabelList\n            dataKey=\"rank\"\n            position=\"center\"\n            fill=\"#fff\"\n            angle=\"270\"\n            // formatter={(value) => getCustomTime(value)}\n          />\n          {getDataForScroll()}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  ) : (\n    <ResponsiveContainer>\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 0,\n          bottom: 5,\n        }}\n        barCategoryGap={1.25}\n        barGap={1}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey=\"inverter\"\n          angle={270}\n          tickMargin={32}\n          fontSize={10}\n          interval={0}\n          stroke=\"black\"\n        />\n        <YAxis domain={[0, (data) => Math.ceil(data)]} />\n        <Tooltip content={<CustomTooltip />} />\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n        {/* <Tooltip /> */}\n        <Legend\n          wrapperStyle={{\n            paddingTop: \"45px\",\n          }}\n          // formatter={(value, entry, index) => value === 'plantPr' ? 'Actual PR' : 'Budget'}\n          content={renderLegend}\n        />\n        <Bar isAnimationActive={false} dataKey=\"rank\">\n          <LabelList\n            dataKey=\"rank\"\n            position=\"center\"\n            fill=\"#000\"\n            angle=\"270\"\n            fontSize={10}\n            // formatter={(value) => getCustomTime(value)}\n          />\n          {chartData.map((datum, index) => {\n            //   if (Number(datum.Percentage) >= Number(datum.prBudget)) {\n            //     return <Cell key={`cell-${index}`} fill='#48C9B0' />;\n            //   } else {\n            //     return <Cell key={`cell-${index}`} fill='#EC7063' />;\n            //   }\n            return <Cell key={`cell-${index}`} fill={datum.color} />;\n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n","import { Card, Grid, Switch, Select, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport React, { useState, useEffect } from \"react\";\nimport PeakPowerChart from \"./PeakPowerChart\";\nimport PeakPowerChartSingle from \"./PeakPowerChartSingle\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  textField: {\n    width: 120,\n  },\n  menuPaper: {\n    maxHeight: 400,\n  },\n  formControlStyle: {},\n  listItemText: {\n    fontSize: \".9rem\",\n  },\n}));\n\nexport default function PeakPowerChartCard({\n  barChartDataParent,\n  siteName,\n  isSingleDay,\n}) {\n  // console.log('peak power chart card')\n  const classes = useStyles();\n\n  // const applyColors = (data) => {\n  //     let highestRankIndex = 0;\n  //     let highestRank = null;\n  //     data.forEach((element, index) => {\n  //     if (index === 0) {\n  //         highestRank = element.Rank;\n  //     }\n  //     if (element.Rank < highestRank) {\n  //         highestRank = element.Rank\n  //         highestRankIndex = index\n  //     }\n  //     })\n\n  //     let lowestRankIndex = 0;\n  //     let lowestRank = null;\n  //     data.forEach((element, index) => {\n  //     if (index === 0) {\n  //         lowestRank = element.Rank;\n  //     }\n  //     if (element.Rank > lowestRank) {\n  //         lowestRank = element.Rank\n  //         lowestRankIndex = index\n  //     }\n  //     })\n\n  //     let dataWithColors = data.map((element, index) => {\n  //         if (index === highestRankIndex) {\n  //           return { ...element, color: '#48C9B0'}\n  //         } else if (index === lowestRankIndex) {\n  //           return { ...element, color: '#E74C3C'}\n  //         } else {\n  //           return { ...element, color: '#5DADE2'}\n  //         }\n  //       })\n\n  //       return dataWithColors;\n  // }\n\n  const applyColors = (data) => {\n    let highestRankIndex = [];\n    let highestRank = null;\n    data.forEach((element, index) => {\n      if (index === 0) {\n        highestRank = Number(element.rank);\n      }\n      if (Number(element.rank) <= highestRank) {\n        highestRank = Number(element.rank);\n        highestRankIndex[index] = index;\n      }\n    });\n\n    // console.log(highestRankIndex);\n\n    let lowestRankIndex = [];\n    let lowestRank = null;\n    data.forEach((element, index) => {\n      if (index === 0) {\n        lowestRank = Number(element.rank);\n      }\n      if (Number(element.rank) > lowestRank) {\n        lowestRank = Number(element.rank);\n      }\n    });\n\n    data.forEach((element, index) => {\n      if (Number(element.rank) === lowestRank) {\n        lowestRankIndex[index] = index;\n      }\n    });\n\n    // console.log(lowestRankIndex)\n\n    let dataWithColors = data.map((element, index) => {\n      if (index === highestRankIndex[index]) {\n        return { ...element, color: \"#48C9B0\" };\n      } else if (index === lowestRankIndex[index]) {\n        return { ...element, color: \"#E74C3C\" };\n      } else {\n        return { ...element, color: \"#5DADE2\" };\n      }\n    });\n\n    return dataWithColors;\n  };\n\n  const [barChartData, setBarChartData] = useState();\n\n  useEffect(() => {\n    if (barChartDataParent) {\n      setBarChartData(applyColors(barChartDataParent));\n    }\n  }, [barChartDataParent]);\n\n  const [enableBarChartScroll, setEnableBarChartScroll] = useState(true);\n\n  const [sort, setSort] = useState(\"asc\");\n\n  const handleSortChange = (event) => {\n    let value = event.target.value;\n    sortElements(value);\n    setSort(value);\n  };\n\n  const sortElements = (value) => {\n    switch (value) {\n      case \"desc\":\n        setBarChartData((prevState) =>\n          prevState.sort((a, b) => parseFloat(b.rank) - parseFloat(a.rank))\n        );\n        break;\n      case \"asc\":\n        setBarChartData((prevState) =>\n          prevState.sort((a, b) => parseFloat(a.rank) - parseFloat(b.rank))\n        );\n        break;\n      default:\n        setBarChartData((prevState) =>\n          prevState.sort((a, b) => parseFloat(b.rank) - parseFloat(a.rank))\n        );\n    }\n  };\n\n  return (\n    <Card\n      elevation={4}\n      style={{\n        width: \"100%\",\n        height: \"410px\",\n        marginTop: \"1rem\",\n        paddingTop: \".5rem\",\n        paddingBottom: \"3.5rem\",\n      }}\n    >\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        style={{ paddingInline: \"2rem\", marginBottom: \".5rem\" }}\n      >\n        <Grid item>\n          <Typography color=\"textSecondary\" variant=\"h6\">\n            {siteName}\n          </Typography>\n        </Grid>\n\n        <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <span>Scroll:</span>\n              <Switch\n                checked={enableBarChartScroll}\n                onChange={() =>\n                  setEnableBarChartScroll((prevState) => !prevState)\n                }\n                color=\"primary\"\n                name=\"scrollSwitch\"\n              />\n            </Grid>\n\n            <Grid item>\n              <Grid container alignItems=\"center\" spacing={1}>\n                <Grid item>\n                  <span>Sort: </span>\n                </Grid>\n                <Grid item>\n                  <FormControl className={classes.formControlStyle}>\n                    {/* <InputLabel id='sort-select-label'>Sort</InputLabel> */}\n\n                    <Select\n                      labelId=\"sort-select-label\"\n                      id=\"sort-select\"\n                      value={sort}\n                      onChange={handleSortChange}\n                      style={{ fontSize: \"1rem\" }}\n                    >\n                      <MenuItem value={\"desc\"}>\n                        <span>Desc&ensp;</span>\n                      </MenuItem>\n                      <MenuItem value={\"asc\"}>\n                        <span>Asc&ensp;</span>\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      {barChartData &&\n        (isSingleDay ? (\n          <PeakPowerChart\n            chartData={barChartData}\n            enableScroll={enableBarChartScroll}\n            siteName={siteName}\n          />\n        ) : (\n          <PeakPowerChartSingle\n            chartData={barChartData}\n            enableScroll={enableBarChartScroll}\n            siteName={siteName}\n          />\n        ))}\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n// import \"./SCB.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport {\n  Card,\n  Grid,\n  Typography,\n  Button,\n  OutlinedInput,\n  ListItemIcon,\n  Checkbox,\n  ListItemText,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n} from \"@material-ui/core\";\n\nimport axios from \"axios\";\nimport { ML_URL, SERVER_URL } from \"../../../constants/constants\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { siteNamesCaps } from \"../../../constants/SiteNamesY\";\nimport PeakPowerChartCard from \"./PeakPowerChartCard\";\nimport { AppState } from \"../../../AppContext\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  textField: {\n    width: 120,\n  },\n  menuPaper: {\n    maxHeight: 400,\n  },\n  formControlStyle: {},\n  listItemText: {\n    fontSize: \".9rem\",\n  },\n}));\n\nexport default function PeakPower({ handleSessionExpire }) {\n  const classes = useStyles();\n\n  const { setEnabledLinearProgress } = AppState();\n\n  const userToken = localStorage.getItem(\"userToken\");\n\n  const [selectedSite, setSelectedSite] = useState([\"Balanagar\"]);\n\n  const isAllSelected =\n    JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length > 0 &&\n    selectedSite.length ===\n      JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length;\n\n  const [parameter, setParameter] = useState(\"pr\");\n\n  const [sort, setSort] = useState(\"asc\");\n\n  const [filter, setFilter] = useState(\"none\");\n\n  const [enableBarChartScroll, setEnableBarChartScroll] = useState(true);\n\n  const [barChartDataOG, setBarChartDataOG] = useState([]);\n  const [barChartData, setBarChartData] = useState([]);\n\n  const [timePeriod, setTimePeriod] = useState(\"14\");\n\n  const handleSiteChange = (event) => {\n    const value = event.target.value;\n\n    if (value[value.length - 1] === \"All\") {\n      setSelectedSite(\n        selectedSite.length ===\n          JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length\n          ? []\n          : JSON.parse(localStorage.getItem(\"siteNamesCaps\"))\n      );\n      return;\n    }\n\n    setSelectedSite(value);\n\n    // fetchPerformance(fromDate.getTime(), toDate.getTime(), event.target.value);\n  };\n\n  const handleTimePeriodChange = (event) => {\n    setTimePeriod(event.target.value);\n  };\n\n  const applyColors = (data) => {\n    let highestRankIndex = 0;\n    let highestRank = null;\n    data.forEach((element, index) => {\n      if (index === 0) {\n        highestRank = element.Rank;\n      }\n      if (element.Rank < highestRank) {\n        highestRank = element.Rank;\n        highestRankIndex = index;\n      }\n    });\n\n    let lowestRankIndex = 0;\n    let lowestRank = null;\n    data.forEach((element, index) => {\n      if (index === 0) {\n        lowestRank = element.Rank;\n      }\n      if (element.Rank > lowestRank) {\n        lowestRank = element.Rank;\n        lowestRankIndex = index;\n      }\n    });\n\n    let dataWithColors = data.map((element, index) => {\n      if (index === highestRankIndex) {\n        return { ...element, color: \"#48C9B0\" };\n      } else if (index === lowestRankIndex) {\n        return { ...element, color: \"#E74C3C\" };\n      } else {\n        return { ...element, color: \"#5DADE2\" };\n      }\n    });\n\n    return dataWithColors;\n  };\n\n  const [isSingleDay, setIsSingleDay] = useState(true);\n\n  const fetchPerformance = (fromDate, toDate) => {\n    // console.log('site ranking', fromDate.toLocaleString(), toDate.toLocaleString(), today.toLocaleString());\n    setEnabledLinearProgress(true);\n\n    setDisabledViewBtn(true);\n\n    let fromDateTime = fromDate.getTime();\n    let toDateTime = toDate.getTime();\n\n    let day = toDate.getDate() - fromDate.getDate();\n    setIsSingleDay((prevState) => day === 1);\n\n    // console.log(selectedSite);\n\n    axios\n      .post(\n        SERVER_URL + \"/peakap/\",\n        {\n          startTime: fromDateTime,\n          endTime: toDateTime,\n          site: selectedSite,\n        },\n        {\n          headers: { jwtToken: localStorage.getItem(\"userToken\") },\n        }\n      )\n      .then((response) => {\n        // console.log(\"peak power\", response.data);\n\n        setBarChartDataOG(response.data);\n\n        let dataWithColors = applyColors(response.data);\n\n        setBarChartDataOG(dataWithColors);\n\n        if (sort === \"desc\") {\n          setBarChartData(\n            dataWithColors.sort((a, b) => {\n              return parseFloat(b.Rank) - parseFloat(a.Rank);\n            })\n          );\n        } else {\n          setBarChartData(\n            dataWithColors.sort((a, b) => {\n              return parseFloat(a.Rank) - parseFloat(b.Rank);\n            })\n          );\n        }\n\n        setDisabledViewBtn(false);\n        setEnabledLinearProgress(false);\n      })\n      .catch(() => {\n        setDisabledViewBtn(false);\n        setEnabledLinearProgress(true);\n      });\n  };\n\n  const handleParameterChange = (event) => {\n    setParameter(event.target.value);\n    // fetchPerformance(fromDate.getTime(), toDate.getTime(), selectedSite);\n  };\n\n  const sortElements = (value) => {\n    switch (value) {\n      case \"desc\":\n        setBarChartData((prevState) =>\n          prevState.sort((a, b) => parseFloat(b.Rank) - parseFloat(a.Rank))\n        );\n        break;\n      case \"asc\":\n        setBarChartData((prevState) =>\n          prevState.sort((a, b) => parseFloat(a.Rank) - parseFloat(b.Rank))\n        );\n        break;\n      default:\n        setBarChartData((prevState) =>\n          prevState.sort((a, b) => parseFloat(b.Rank) - parseFloat(a.Rank))\n        );\n    }\n  };\n\n  const handleSortChange = (event) => {\n    let value = event.target.value;\n    sortElements(value);\n    setSort(value);\n  };\n\n  const handleFilterChange = (event) => {\n    let value = event.target.value;\n\n    switch (value) {\n      case \"low\":\n        // console.log('low')\n        setBarChartData((prevState) => {\n          return barChartDataOG.filter(\n            (element) => Number(element.plantPr) < Number(element.prBudget)\n          );\n        });\n        break;\n      case \"high\":\n        // console.log(\"high\");\n        setBarChartData((prevState) => {\n          return barChartDataOG.filter(\n            (element) => Number(element.plantPr) >= Number(element.prBudget)\n          );\n        });\n        break;\n      default:\n        fetchPerformance(fromDate, toDate);\n    }\n\n    sortElements(value);\n\n    setFilter(value);\n  };\n\n  /**\n   * Functions related to time component\n   */\n\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const getMinDateForPicker = () => {\n    let startTime = new Date();\n    if (selectedSite === \"gadarpur\") {\n      // Aug 19, 2021 6:00:00 PM\n      startTime.setTime(1629396000000);\n    }\n\n    return startTime;\n  };\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleTimeReset = () => {\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getFromDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(0, 1, 0, 0);\n    return newDate;\n  };\n\n  const getToDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(23, 59, 59, 999);\n    return newDate;\n  };\n\n  const [fromDate, setFromDate] = useState(() => {\n    let date = new Date();\n    return getFromDate(date);\n  });\n\n  const [toDate, setToDate] = useState(() => {\n    let date = new Date();\n    return getToDate(date);\n  });\n\n  const handleFromDateChange = (date) => {\n    setFromDate(getFromDate(date));\n    // fetchPerformance(date.getTime(), toDate.getTime(), selectedSite);\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(getToDate(date));\n    // fetchPerformance(fromDate.getTime(), date.getTime(), selectedSite);\n  };\n\n  /**\n   * END of functions related to time component\n   */\n\n  // Status and time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, selectedSite) => {\n    // console.log(\"getStatusAndTime function called\", selectedSite);\n    axios\n      .get(SERVER_URL + \"/\" + selectedSite + \"/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        if (error.response.status === 401) {\n          // handleSessionExpire();\n        }\n      });\n  };\n\n  useEffect(() => {\n    // fetchPerformance(fromDate, toDate, selectedSite);\n  }, []);\n\n  const calculateDifference = (value1, value2) => {\n    let value1Num = Number(value1);\n    let value2Num = Number(value2);\n\n    let difference = value2Num - value1Num;\n\n    return Math.abs(\n      Number(difference)\n        .toFixed(2)\n        .replace(/[.,]00$/, \"\")\n    );\n  };\n\n  const handleViewBtnClick = () => {\n    fetchPerformance(fromDate, toDate, selectedSite);\n  };\n\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    severity: \"success\",\n    message: \"Downloaded successfully!\",\n  });\n\n  const handleSnackbarClose = () => {\n    setSnackbar((prevState) => {\n      return { ...prevState, open: false };\n    });\n  };\n\n  const [disabledViewBtn, setDisabledViewBtn] = useState(false);\n  const [disabledDownload, setDisabledDownload] = useState(false);\n\n  const downloadReport = () => {\n    setEnabledLinearProgress(true);\n\n    setDisabledDownload(true);\n\n    axios\n      .post(\n        SERVER_URL + \"/peakap/report\",\n        {\n          startTime: fromDate.getTime(),\n          endTime: toDate.getTime(),\n          site: selectedSite,\n        },\n        {\n          headers: {\n            jwtToken: localStorage.getItem(\"userToken\"),\n            responseType: \"blob\",\n          },\n        }\n      )\n      .then((response) => {\n        const downloadUrl = window.URL.createObjectURL(\n          new Blob([response.data])\n        );\n        const link = document.createElement(\"a\");\n        link.href = downloadUrl;\n\n        let filename = `Analytics_${fromDate.getDate()}_${\n          fromDate.getMonth() + 1\n        }_${fromDate.getFullYear()}-${toDate.getDate()}_${\n          toDate.getMonth() + 1\n        }_${toDate.getFullYear()}.csv`;\n        link.setAttribute(\"download\", filename);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        // setSnackbar(prevState => {return {...prevState, open: true, message: 'Downloaded successfully!'}})\n        setDisabledDownload(false);\n        setEnabledLinearProgress(false);\n      })\n      .catch((error) => {\n        setSnackbar((prevState) => {\n          return {\n            ...prevState,\n            open: true,\n            severity: \"error\",\n            message: \"Download failed!\",\n          };\n        });\n        setDisabledDownload(false);\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  return (\n    <div style={{ marginTop: \".5rem\", width: \"90vw\" }}>\n      <Grid container alignItems=\"center\" justify=\"space-between\">\n        <Grid item>\n          <Grid container alignItems=\"flex-end\">\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <FormControl\n                className={classes.formControlStyle}\n                style={{\n                  minWidth: \"120px\",\n                  maxWidth: \"200px\",\n                  marginRight: \"1rem\",\n                }}\n              >\n                <InputLabel id=\"site-select-label\">Sites</InputLabel>\n                <Select\n                  style={{ fontSize: \".8rem\" }}\n                  labelId=\"site-select-label\"\n                  id=\"site-select\"\n                  value={selectedSite}\n                  onChange={handleSiteChange}\n                  multiple\n                  renderValue={(data) => data.join(\", \")}\n                  MenuProps={{\n                    classes: { paper: classes.menuPaper },\n                    getContentAnchorEl: () => null,\n                  }}\n                >\n                  <MenuItem\n                    value=\"All\"\n                    classes={{\n                      root: isAllSelected ? classes.selectedAll : \"\",\n                    }}\n                    style={{ paddingBlock: 0 }}\n                  >\n                    <ListItemIcon>\n                      <Checkbox\n                        style={{ paddingBlock: 0 }}\n                        size=\"small\"\n                        color=\"primary\"\n                        classes={{ indeterminate: classes.indeterminateColor }}\n                        checked={isAllSelected}\n                        indeterminate={\n                          selectedSite.length > 0 &&\n                          selectedSite.length <\n                            JSON.parse(localStorage.getItem(\"siteNamesCaps\"))\n                              .length\n                        }\n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      // classes={{ primary: classes.selectAllText }}\n                      classes={{ primary: classes.listItemText }}\n                      primary=\"Select All\"\n                      style={{ paddingTop: \".05rem\" }}\n                    />\n                  </MenuItem>\n                  {JSON.parse(localStorage.getItem(\"siteNamesCaps\")).map(\n                    (element) => {\n                      return (\n                        <MenuItem\n                          key={element}\n                          value={element}\n                          style={{ paddingBlock: 0 }}\n                        >\n                          <ListItemIcon>\n                            <Checkbox\n                              style={{ paddingBlock: 0 }}\n                              checked={selectedSite.indexOf(element) > -1}\n                              size=\"small\"\n                              color=\"primary\"\n                            />\n                          </ListItemIcon>\n                          <ListItemText\n                            classes={{ primary: classes.listItemText }}\n                            primary={element}\n                            style={{ paddingTop: \".05rem\" }}\n                          />\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                {/* <FormControl className={classes.formControlStyle} style={{marginRight: '1rem'}}>\n                <InputLabel id='site-select-label'>Site</InputLabel>\n                <Select\n                  labelId='site-select-label'\n                  id='site-select'\n                  value={selectedSite}\n                  onChange={handleSiteChange}\n                  style={{fontSize: '.8rem'}}\n                >\n                  {JSON.parse(localStorage.getItem(\"siteNamesCaps\")).map(element => (\n                      <MenuItem key={element} value={element}>{element}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl> */}\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"from-date-picker-inline\"\n                  label=\"From\"\n                  value={fromDate}\n                  onChange={handleFromDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-labelte\": \"from date\",\n                  }}\n                  style={{ marginRight: \"1rem\" }}\n                  className={classes.textField}\n                  InputProps={{\n                    style: {\n                      fontSize: \".8rem\",\n                    },\n                  }}\n                />\n\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"to-date-picker-inline\"\n                  label=\"To\"\n                  value={toDate}\n                  onChange={handleToDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"to date\",\n                  }}\n                  className={classes.textField}\n                  InputProps={{\n                    style: {\n                      fontSize: \".8rem\",\n                    },\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n              {/* <FormControl component=\"fieldset\" style={{marginLeft: '1rem'}}>\n                    <FormLabel component=\"legend\" style={{fontSize: '.8rem'}}>Time Period</FormLabel>\n                    <RadioGroup value={timePeriod} onChange={handleTimePeriodChange} row aria-label=\"time-period\" name=\"time-period-row-radio-buttons-group\">\n                        <FormControlLabel value='24' control={<Radio color='primary' size='small' />} label=\"24 hrs\" />\n                        <FormControlLabel  value='14' control={<Radio color='primary' size='small' />} label=\"06:00 - 20:00\" />\n                    </RadioGroup>\n                </FormControl> */}\n            </Grid>\n            <Grid item>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={handleViewBtnClick}\n                disabled={disabledViewBtn}\n              >\n                {disabledViewBtn ? \"Loading\" : \"View\"}\n              </Button>\n            </Grid>\n            <Grid item style={{ marginLeft: \"1rem\" }}>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={downloadReport}\n                disabled={disabledDownload}\n              >\n                {disabledDownload ? \"Downloading\" : \"Download\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        {/* <Grid item style={{marginRight: '1rem'}}>\n              <FormControl className={classes.formControlStyle}>\n                <InputLabel id='sort-select-label'>Sort</InputLabel>\n                <Select\n                  labelId='sort-select-label'\n                  id='sort-select'\n                  value={sort}\n                  onChange={handleSortChange}\n                  style={{fontSize: '.8rem'}}\n                >\n                  <MenuItem value={'desc'}>\n                    <span>Desc&ensp;</span>\n                  </MenuItem>\n                  <MenuItem value={'asc'}>\n                    <span>Asc&ensp;</span>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid> */}\n\n        {/* <Grid item>\n          <Grid container alignItems='center'>\n            <Grid item style={{ marginRight: '2rem' }}>\n              <Grid container>\n                <Grid item>\n                  {status === 0 ? (\n                    // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                    //   Offline\n                    // </span>\n                    <Typography variant='h6' style={{ color: '#f44336' }}>\n                      Offline\n                    </Typography>\n                  ) : (\n                    // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                    //   Online\n                    // </span>\n                    <Typography variant='h6' style={{ color: '#4caf50' }}>\n                      Online\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item style={{ margin: '0 1rem' }}></Grid>\n                <Grid item>\n                  {timestamp === undefined ? (\n                    <CircularProgress\n                      size='1.25rem'\n                      // style={{ marginRight: '.5rem' }}\n                    />\n                  ) : (\n                    <Typography variant='h6'>\n                      {getFormattedDateAndTimeString(timestamp)}\n                    </Typography>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: 'hidden' }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format='dd/MM/yyyy hh:mm a'\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item>\n              <IconButton onClick={() => setOpenDateTimePicker(true)}>\n                <EventIcon color='action' fontSize='large' />\n              </IconButton>\n            </Grid>\n            <Grid item style={{ paddingRight: '0rem', marginRight: '1rem' }}>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color='primary' fontSize='large' />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n      </Grid>\n\n      <Grid container style={{ marginTop: \".25rem\" }}>\n        {barChartDataOG.map((element) => (\n          <PeakPowerChartCard\n            siteName={element.site}\n            barChartDataParent={element.inverters}\n            isSingleDay={isSingleDay}\n          />\n        ))}\n      </Grid>\n\n      <div style={{ marginBlock: \"1.5rem\" }}></div>\n      {/* {selectedSite && <CustomDiagram />} */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={4000}\n        onClose={handleSnackbarClose}\n        anchorOrigin={{ horizontal: \"left\", vertical: \"bottom\" }}\n      >\n        <Alert\n          onClose={handleSnackbarClose}\n          severity={snackbar.severity}\n          sx={{ width: \"100%\" }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"1.5rem\" }}></div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Checkbox, ListItemIcon, ListItemText } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  // styles\n}));\n\nexport default function MultiDropdown({\n  label,\n  items = [],\n  handleChange,\n  selectedItems = [],\n}) {\n  const classes = useStyles();\n\n  const getNames = (selectedItems) => {\n    if (selectedItems.length === 0) {\n      return [\"All\"];\n    }\n    return selectedItems.map((element) => element.name);\n  };\n\n  const isAllSelected =\n    items.length > 0 && selectedItems.length === items.length;\n\n  const isChecked = (items, name) => {\n    let isChecked = false;\n    items.forEach((element) => {\n      if (element.name === name) {\n        isChecked = true;\n      }\n    });\n    return isChecked;\n  };\n\n  return (\n    <FormControl style={{ maxWidth: \"200px\" }}>\n      <InputLabel id={`${label}-select-label`}>{label}</InputLabel>\n      <Select\n        style={{ fontSize: \".8rem\" }}\n        labelId={`${label}-select-label`}\n        id={`${label}-select`}\n        value={getNames(selectedItems)}\n        onChange={handleChange}\n        multiple\n        renderValue={(data) => data.join(\", \")}\n        MenuProps={{\n          classes: { paper: classes.menuPaper },\n          getContentAnchorEl: () => null,\n        }}\n      >\n        <MenuItem\n          value=\"All\"\n          classes={{\n            root: isAllSelected ? classes.selectedAll : \"\",\n          }}\n          style={{ paddingBlock: 0 }}\n        >\n          <ListItemIcon>\n            <Checkbox\n              style={{ paddingBlock: 0 }}\n              size=\"small\"\n              color=\"primary\"\n              classes={{ indeterminate: classes.indeterminateColor }}\n              checked={isAllSelected || items.length === 0}\n              indeterminate={\n                selectedItems.length > 0 && selectedItems.length < items.length\n              }\n            />\n          </ListItemIcon>\n          <ListItemText\n            // classes={{ primary: classes.selectAllText }}\n            classes={{ primary: classes.listItemText }}\n            primary=\"Select All\"\n            style={{ paddingTop: \".05rem\" }}\n          />\n        </MenuItem>\n        {items.map((element) => {\n          return (\n            <MenuItem\n              key={element.name}\n              value={element.name}\n              style={{ paddingBlock: 0 }}\n            >\n              <ListItemIcon>\n                <Checkbox\n                  style={{ paddingBlock: 0 }}\n                  checked={isChecked(selectedItems, element.name)}\n                  size=\"small\"\n                  color=\"primary\"\n                />\n              </ListItemIcon>\n              <ListItemText\n                classes={{ primary: classes.listItemText }}\n                primary={element.name}\n                style={{ paddingTop: \".05rem\" }}\n              />\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Cell,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  LabelList,\n  Legend,\n  Brush,\n} from \"recharts\";\n\nconst renderLegend = (props) => {\n  const { payload } = props;\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"5px\", paddingLeft: \"70px\" }}>\n      {payload.map((entry, index) => {\n        return (\n          <span key={`item-${index}`} style={{ color: \"#48C9B0\" }}>\n            &#9679;&ensp;Rank\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nconst getCustomTime = (value) => {\n  let date = new Date(value * 1000);\n  // return String(date.getHours()).padStart(2, 0) + \":\" + String(date.getMinutes()).padStart(2, 0);\n  return date.toLocaleDateString();\n};\n\nexport default function PRRankingChartSingle({\n  chartData,\n  enableScroll,\n  multiDay,\n}) {\n  const getDataForScroll = () => {\n    let cells = [];\n\n    // console.log(chartData);\n\n    if (chartData && chartData.length > 0) {\n      let fillIndex = chartData.length > 13 ? 13 : chartData.length - 1;\n      // console.log(fillIndex)\n      for (let i = brushStartIndex; i <= brushStartIndex + fillIndex; i++) {\n        cells.push(<Cell key={`cell-${i}`} fill={chartData[i].color} />);\n      }\n    }\n\n    return cells;\n  };\n\n  // console.log(chartData);\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload) {\n      if (multiDay === 1) {\n        return (\n          <div>\n            {/* <span>{`Rank: ${payload[0].payload.rank}\n            , Time: ${new Date(payload[0].payload.Timestamp * 1000).toLocaleTimeString()}`}</span> */}\n            <span>\n              {`Inverter: ${payload[0].payload.inverter}`}&ensp;\n              {`Rank: ${payload[0].payload.Rank}`}&ensp;\n              {`Count: ${payload[0].payload.rankOneCount}`}\n            </span>\n          </div>\n        );\n      } else {\n        return (\n          <div>\n            {/* <span>{`Rank: ${payload[0].payload.rank}\n            , Time: ${new Date(payload[0].payload.Timestamp * 1000).toLocaleTimeString()}`}</span> */}\n            <span>\n              {`Inverter: ${payload[0].payload.inverter}`}&ensp;\n              {`Rank: ${payload[0].payload.Rank}`}&ensp;\n              {payload[0].payload.value !== -1\n                ? `Calculated PR: ${payload[0].payload.value}`\n                : \"\"}\n              &ensp;{`Actual PR: ${payload[0].payload.actualPr}`}&ensp;\n              {payload[0].payload.timestamp !== \"-1\"\n                ? `Time: ${getCustomTime(payload[0].payload.timestamp)}`\n                : \"\"}\n            </span>\n          </div>\n        );\n      }\n    }\n\n    return null;\n  };\n\n  const toDecimal = (value, index) => {\n    return value / 1000;\n  };\n\n  const [brushStartIndex, setBrushStartIndex] = useState(0);\n\n  useEffect(() => {\n    if (enableScroll === false) {\n      setBrushStartIndex(0);\n    }\n  }, [enableScroll]);\n\n  return enableScroll === true ? (\n    <ResponsiveContainer style={{ height: \"100%\" }}>\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          // left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"inverter\" fontSize={10} interval={0} stroke=\"black\" />\n        <YAxis domain={[0, (data) => Math.ceil(data)]} />\n        <Tooltip content={<CustomTooltip />} />\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n\n        <Brush\n          endIndex={13}\n          onChange={(obj) => setBrushStartIndex(obj.startIndex)}\n          dataKey=\"Rank\"\n          height={18}\n          stroke=\"#A6ACAF\"\n          tickFormatter={() => \"\"}\n        />\n        <Legend\n          wrapperStyle={{\n            paddingTop: \"10px\",\n          }}\n          // formatter={(value, entry, index) => value === 'plantPr' ? 'Actual PR' : 'Budget'}\n          content={renderLegend}\n          align=\"left\"\n        />\n\n        <Bar isAnimationActive={false} dataKey=\"Rank\">\n          <LabelList\n            dataKey=\"Rank\"\n            position=\"center\"\n            fill=\"#fff\"\n            // angle='270'\n            // formatter={(value) => getCustomTime(value)}\n          />\n          {getDataForScroll()}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  ) : (\n    <ResponsiveContainer>\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 0,\n          bottom: 5,\n        }}\n        barCategoryGap={1.25}\n        barGap={1}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey=\"inverter\"\n          angle={270}\n          tickMargin={32}\n          fontSize={10}\n          interval={0}\n          stroke=\"black\"\n        />\n        <YAxis domain={[0, (data) => Math.ceil(data)]} />\n        <Tooltip content={<CustomTooltip />} />\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n        {/* <Tooltip /> */}\n        <Legend\n          wrapperStyle={{\n            paddingTop: \"45px\",\n          }}\n          // formatter={(value, entry, index) => value === 'plantPr' ? 'Actual PR' : 'Budget'}\n          content={renderLegend}\n        />\n        <Bar isAnimationActive={false} dataKey=\"Rank\">\n          <LabelList\n            dataKey=\"Rank\"\n            position=\"center\"\n            fill=\"#000\"\n            // angle='270'\n            fontSize={10}\n            // formatter={(value) => getCustomTime(value)}\n          />\n          {chartData.map((datum, index) => {\n            //   if (Number(datum.Percentage) >= Number(datum.prBudget)) {\n            //     return <Cell key={`cell-${index}`} fill='#48C9B0' />;\n            //   } else {\n            //     return <Cell key={`cell-${index}`} fill='#EC7063' />;\n            //   }\n            return <Cell key={`cell-${index}`} fill={datum.color} />;\n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n","import { Card, Grid, Switch, Select, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport React, { useState, useEffect } from 'react'\nimport PeakPowerChart from './PRRankingChart';\nimport PeakPowerChartSingle from './PRRankingChartSingle';\nimport PRRankingChart from './PRRankingChart';\nimport PRRankingChartSingle from './PRRankingChartSingle';\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n      flexGrow: 1,\n    },\n    textField: {\n      width: 120,\n    },\n    menuPaper: {\n      maxHeight: 400,\n    },\n    formControlStyle: {\n      \n    },\n    listItemText: {\n      fontSize: '.9rem'\n    }\n  }));\n\n  export default function PRRankingChartCard({isSingleDay, chartData, siteName, groupName, multiDay}) {\n    const classes = useStyles();\n\n    const [barChartData, setBarChartData] = useState();\n\n    const applyColors = (data) => {\n      let highestRankIndex = [];\n      let highestRank = null;\n      data.forEach((element, index) => {\n      if (index === 0) {\n          highestRank = Number(element.rank);\n      }\n      if (Number(element.rank) <= highestRank) {\n          highestRank = Number(element.rank)\n          highestRankIndex[index] = index;\n      }\n      })\n\n      // console.log(highestRankIndex);\n\n      let lowestRankIndex = [];\n      let lowestRank = null;\n      data.forEach((element, index) => {\n      if (index === 0) {\n          lowestRank = Number(element.rank);\n      }\n      if (Number(element.rank) > lowestRank) {\n          lowestRank = Number(element.rank)\n      }\n      })\n\n      data.forEach((element, index) => {\n          if (Number(element.rank) === lowestRank) {\n              lowestRankIndex[index] = index\n          }\n      })\n\n\n      // console.log(lowestRankIndex)\n\n\n      let dataWithColors = data.map((element, index) => {\n          if (index === highestRankIndex[index]) {\n            return { ...element, color: '#48C9B0'}\n          } else if (index === lowestRankIndex[index]) {\n            return { ...element, color: '#E74C3C'}\n          } else {\n            return { ...element, color: '#5DADE2'}\n          }\n        })\n    \n        return dataWithColors;\n  }\n\n    useEffect(() => {\n        if (chartData) {\n            setBarChartData(applyColors(chartData.inverters))\n            // setBarChartData(chartData);\n        }\n    }, [chartData])\n\n    const [enableBarChartScroll, setEnableBarChartScroll] = useState(true);\n\n    const [sort, setSort] = useState('asc');\n\n    const handleSortChange = (event) => {\n        let value = event.target.value;\n        sortElements(value);\n        setSort(value);\n      }\n\n      const sortElements = (value) => {\n        switch (value) {\n          case 'desc':\n            setBarChartData(prevState => \n              prevState.sort((a, b) => parseFloat(b.Rank) - parseFloat(a.Rank)));\n            break;\n          case 'asc':\n            setBarChartData(prevState => \n              prevState.sort((a, b) => parseFloat(a.Rank) - parseFloat(b.Rank)));\n            break;\n          default:\n            setBarChartData(prevState => \n              prevState.sort((a, b) => parseFloat(b.Rank) - parseFloat(a.Rank)));\n        }\n      }\n\n    return (\n        <Card\n        elevation={4}\n        style={{\n          width: '100%',\n          height: '410px',\n          marginTop: '1rem',\n          paddingTop: '.5rem',\n          paddingBottom: '3.5rem',\n        }}\n      >\n        <Grid\n          container\n          justify='space-between'\n          alignItems='center'\n          style={{ paddingInline: '2rem', marginBottom: '.5rem' }}\n        >\n            <Grid item>\n                <Typography color='textSecondary' variant='h6'>{siteName}&ensp;{groupName}</Typography>\n            </Grid>\n          \n          <Grid item>\n              <Grid container alignItems='center'  >\n                  <Grid item style={{marginRight: '1rem'}}>\n                  <span>Scroll:</span>\n            <Switch\n              checked={enableBarChartScroll}\n              onChange={() =>\n                setEnableBarChartScroll((prevState) => !prevState)\n              }\n              color='primary'\n              name='scrollSwitch'\n            \n            />\n                  </Grid>\n              \n          <Grid item>\n              <Grid container alignItems='center' spacing={1}>\n                  <Grid item>\n                  <span>Sort: </span>\n                  </Grid>\n                  <Grid item>\n                  <FormControl className={classes.formControlStyle}>\n                {/* <InputLabel id='sort-select-label'>Sort</InputLabel> */}\n                \n                <Select\n                  labelId='sort-select-label'\n                  id='sort-select'\n                  value={sort}\n                  onChange={handleSortChange}\n                  style={{fontSize: '1rem'}}\n                >\n                  <MenuItem value={'desc'}>\n                    <span>Desc&ensp;</span>\n                  </MenuItem>\n                  <MenuItem value={'asc'}>\n                    <span>Asc&ensp;</span>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n                  </Grid>\n              </Grid>\n          \n          \n          </Grid>\n          </Grid>\n          </Grid>\n          \n        </Grid>\n        {barChartData && <PRRankingChartSingle\n        chartData={barChartData}\n        enableScroll={enableBarChartScroll}\n        siteName={siteName}\n        multiDay={multiDay}\n      />}\n        \n      </Card>\n    )\n}","import React, { useState, useEffect } from \"react\";\n// import \"./SCB.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport {\n  Card,\n  Grid,\n  Typography,\n  Button,\n  OutlinedInput,\n  ListItemIcon,\n  Checkbox,\n  ListItemText,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n} from \"@material-ui/core\";\n\nimport axios from \"axios\";\nimport { ML_URL, SERVER_URL } from \"../../../constants/constants\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MultiDropdown from \"../../UI/MultiDropdown\";\n\nimport { siteNamesCaps } from \"../../../constants/SiteNamesY\";\nimport PRRankingChartCard from \"./PRRankingChartCard\";\nimport { AppState } from \"../../../AppContext\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  textField: {\n    width: 120,\n  },\n  menuPaper: {\n    maxHeight: 400,\n  },\n  formControlStyle: {},\n  listItemText: {\n    fontSize: \".9rem\",\n  },\n}));\n\nexport default function PRRanking({ handleSessionExpire }) {\n  const classes = useStyles();\n\n  const { setEnabledLinearProgress } = AppState();\n\n  const userToken = localStorage.getItem(\"userToken\");\n\n  const [selectedSite, setSelectedSite] = useState([\"Bhadla L2\"]);\n\n  const isAllSelected =\n    JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length > 0 &&\n    selectedSite.length ===\n      JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length;\n\n  const [parameter, setParameter] = useState(\"pr\");\n\n  const [sort, setSort] = useState(\"asc\");\n\n  const [filter, setFilter] = useState(\"none\");\n\n  const [enableBarChartScroll, setEnableBarChartScroll] = useState(true);\n\n  const [barChartDataOG, setBarChartDataOG] = useState([]);\n  const [barChartData, setBarChartData] = useState([]);\n\n  const [timePeriod, setTimePeriod] = useState(\"14\");\n\n  const formatChartData = (data) => {\n    let formattedData = [];\n    data.forEach((element) => {\n      if (element.inverters) {\n        let inverters = element.inverters;\n        let nestedData = [];\n        inverters.forEach((innerEl) => {\n          if (innerEl.inverters) {\n            let nestedInverters = innerEl.inverters;\n\n            nestedInverters.forEach((value) => {\n              nestedData.push(value);\n            });\n          }\n        });\n        formattedData.push(nestedData);\n      }\n    });\n\n    return formattedData;\n  };\n\n  const handleSiteChange = (event) => {\n    const value = event.target.value;\n\n    if (value[value.length - 1] === \"All\") {\n      setSelectedSite(\n        selectedSite.length ===\n          JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length\n          ? []\n          : JSON.parse(localStorage.getItem(\"siteNamesCaps\"))\n      );\n      return;\n    }\n\n    setSelectedSite(value);\n\n    // fetchPerformance(fromDate.getTime(), toDate.getTime(), event.target.value);\n  };\n\n  const handleTimePeriodChange = (event) => {\n    setTimePeriod(event.target.value);\n  };\n\n  // const applyColors = (data) => {\n  //   let highestRankIndex = 0;\n  //   let highestRank = null;\n  //   data.forEach((element, index) => {\n  //     if (index === 0) {\n  //       highestRank = element.Rank;\n  //     }\n  //     if (element.Rank < highestRank) {\n  //       highestRank = element.Rank\n  //       highestRankIndex = index\n  //     }\n  //   })\n\n  //   let lowestRankIndex = 0;\n  //   let lowestRank = null;\n  //   data.forEach((element, index) => {\n  //     if (index === 0) {\n  //       lowestRank = element.Rank;\n  //     }\n  //     if (element.Rank > lowestRank) {\n  //       lowestRank = element.Rank\n  //       lowestRankIndex = index\n  //     }\n  //   })\n\n  //   let dataWithColors = data.map((element, index) => {\n  //     if (index === highestRankIndex) {\n  //       return { ...element, color: '#48C9B0'}\n  //     } else if (index === lowestRankIndex) {\n  //       return { ...element, color: '#E74C3C'}\n  //     } else {\n  //       return { ...element, color: '#5DADE2'}\n  //     }\n  //   })\n\n  //   return dataWithColors;\n  // }\n\n  const [isSingleDay, setIsSingleDay] = useState(true);\n\n  const [groups, setGroups] = useState([]);\n  const [selectedGroups, setSelectedGroups] = useState([]);\n\n  const isAllGroupsSelected =\n    groups.length > 0 && selectedGroups.length === groups.length;\n\n  const handleGroupsChange = (event) => {\n    const value = event.target.value;\n\n    // console.log(value);\n\n    if (value[value.length - 1] === \"All\") {\n      setSelectedGroups(selectedGroups.length === groups.length ? [] : groups);\n      return;\n    }\n\n    setSelectedGroups(value);\n\n    setBarChartData((prevState) => {\n      return barChartDataOG.filter((element, index) => {\n        let matched = false;\n        value.forEach((innerEl) => {\n          if (innerEl === element.group) {\n            matched = true;\n          }\n        });\n        return matched;\n      });\n    });\n\n    // fetchPerformance(fromDate.getTime(), toDate.getTime(), event.target.value);\n  };\n\n  const [multiDay, setMultiDay] = useState(0);\n\n  const fetchPerformance = (fromDate, toDate) => {\n    setEnabledLinearProgress(true);\n    // console.log('site ranking', fromDate.toLocaleString(), toDate.toLocaleString(), today.toLocaleString());\n\n    setDisabledViewBtn(true);\n\n    let fromDateTime = fromDate.getTime();\n    let toDateTime = toDate.getTime();\n\n    let day = toDate.getDate() - fromDate.getDate();\n    setIsSingleDay((prevState) => day === 1);\n\n    // console.log(selectedSite);\n\n    axios\n      .post(\n        SERVER_URL + \"/prranking\",\n        {\n          startTime: fromDateTime,\n          endTime: toDateTime,\n          site: selectedSite,\n        },\n        {\n          headers: { jwtToken: localStorage.getItem(\"userToken\") },\n        }\n      )\n      .then((response) => {\n        // console.log(\"pr ranking\", response.data);\n\n        setMultiDay(response.data[0].multiDay);\n        setBarChartDataOG(response.data);\n\n        // if (sort === 'desc') {\n        //   setBarChartData(dataWithColors.sort((a, b) => {\n        //     return parseFloat(b.Rank) - parseFloat(a.Rank);\n        //   }));\n        // } else {\n        //   setBarChartData(dataWithColors.sort((a, b) => {\n        //     return parseFloat(a.Rank) - parseFloat(b.Rank);\n        //   }));\n        // }\n        setBarChartData(response.data);\n        let values = response.data.map((element) => element.group);\n        let uniqueValues = [...new Set(values)];\n        let groups = uniqueValues.map((element) => ({ name: element }));\n        setGroups(uniqueValues);\n        setSelectedGroups(uniqueValues);\n        setDisabledViewBtn(false);\n        setEnabledLinearProgress(false);\n      })\n      .catch(() => {\n        setDisabledViewBtn(false);\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  const handleParameterChange = (event) => {\n    setParameter(event.target.value);\n    // fetchPerformance(fromDate.getTime(), toDate.getTime(), selectedSite);\n  };\n\n  const sortElements = (value) => {\n    switch (value) {\n      case \"desc\":\n        setBarChartData((prevState) =>\n          prevState.sort((a, b) => parseFloat(b.Rank) - parseFloat(a.Rank))\n        );\n        break;\n      case \"asc\":\n        setBarChartData((prevState) =>\n          prevState.sort((a, b) => parseFloat(a.Rank) - parseFloat(b.Rank))\n        );\n        break;\n      default:\n        setBarChartData((prevState) =>\n          prevState.sort((a, b) => parseFloat(b.Rank) - parseFloat(a.Rank))\n        );\n    }\n  };\n\n  const handleSortChange = (event) => {\n    let value = event.target.value;\n    sortElements(value);\n    setSort(value);\n  };\n\n  const handleFilterChange = (event) => {\n    let value = event.target.value;\n\n    switch (value) {\n      case \"low\":\n        // console.log('low')\n        setBarChartData((prevState) => {\n          return barChartDataOG.filter(\n            (element) => Number(element.plantPr) < Number(element.prBudget)\n          );\n        });\n        break;\n      case \"high\":\n        // console.log(\"high\");\n        setBarChartData((prevState) => {\n          return barChartDataOG.filter(\n            (element) => Number(element.plantPr) >= Number(element.prBudget)\n          );\n        });\n        break;\n      default:\n        fetchPerformance(fromDate, toDate);\n    }\n\n    sortElements(value);\n\n    setFilter(value);\n  };\n\n  /**\n   * Functions related to time component\n   */\n\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const getMinDateForPicker = () => {\n    let startTime = new Date();\n    if (selectedSite === \"gadarpur\") {\n      // Aug 19, 2021 6:00:00 PM\n      startTime.setTime(1629396000000);\n    }\n\n    return startTime;\n  };\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleTimeReset = () => {\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getFromDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(0, 1, 0, 0);\n    return newDate;\n  };\n\n  const getToDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(23, 59, 59, 999);\n    return newDate;\n  };\n\n  const [fromDate, setFromDate] = useState(() => {\n    let date = new Date();\n    return getFromDate(date);\n  });\n\n  const [toDate, setToDate] = useState(() => {\n    let date = new Date();\n    return getToDate(date);\n  });\n\n  const handleFromDateChange = (date) => {\n    setFromDate(getFromDate(date));\n    // fetchPerformance(date.getTime(), toDate.getTime(), selectedSite);\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(getToDate(date));\n    // fetchPerformance(fromDate.getTime(), date.getTime(), selectedSite);\n  };\n\n  /**\n   * END of functions related to time component\n   */\n\n  // Status and time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, selectedSite) => {\n    // console.log(\"getStatusAndTime function called\", selectedSite);\n    axios\n      .get(SERVER_URL + \"/\" + selectedSite + \"/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        if (error.response.status === 401) {\n          // handleSessionExpire();\n        }\n      });\n  };\n\n  useEffect(() => {\n    // fetchPerformance(fromDate, toDate, selectedSite);\n  }, []);\n\n  const calculateDifference = (value1, value2) => {\n    let value1Num = Number(value1);\n    let value2Num = Number(value2);\n\n    let difference = value2Num - value1Num;\n\n    return Math.abs(\n      Number(difference)\n        .toFixed(2)\n        .replace(/[.,]00$/, \"\")\n    );\n  };\n\n  const handleViewBtnClick = () => {\n    fetchPerformance(fromDate, toDate, selectedSite);\n  };\n\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    severity: \"success\",\n    message: \"Downloaded successfully!\",\n  });\n\n  const handleSnackbarClose = () => {\n    setSnackbar((prevState) => {\n      return { ...prevState, open: false };\n    });\n  };\n\n  const [disabledViewBtn, setDisabledViewBtn] = useState(false);\n  const [disabledDownload, setDisabledDownload] = useState(false);\n\n  const downloadReport = () => {\n    setEnabledLinearProgress(true);\n\n    setDisabledDownload(true);\n\n    axios\n      .post(\n        SERVER_URL + \"/prranking/report\",\n        {\n          startTime: fromDate.getTime(),\n          endTime: toDate.getTime(),\n          site: selectedSite,\n        },\n        {\n          headers: {\n            jwtToken: localStorage.getItem(\"userToken\"),\n            responseType: \"blob\",\n          },\n        }\n      )\n      .then((response) => {\n        const downloadUrl = window.URL.createObjectURL(\n          new Blob([response.data])\n        );\n        const link = document.createElement(\"a\");\n        link.href = downloadUrl;\n\n        let filename = `PR_Ranking_${fromDate.getDate()}_${\n          fromDate.getMonth() + 1\n        }_${fromDate.getFullYear()}-${toDate.getDate()}_${\n          toDate.getMonth() + 1\n        }_${toDate.getFullYear()}.csv`;\n        link.setAttribute(\"download\", filename);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        // setSnackbar(prevState => {return {...prevState, open: true, message: 'Downloaded successfully!'}})\n        setDisabledDownload(false);\n        setEnabledLinearProgress(false);\n      })\n      .catch((error) => {\n        setSnackbar((prevState) => {\n          return {\n            ...prevState,\n            open: true,\n            severity: \"error\",\n            message: \"Download failed!\",\n          };\n        });\n        setDisabledDownload(false);\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  return (\n    <div style={{ marginTop: \".5rem\", width: \"90vw\" }}>\n      <Grid\n        container\n        alignItems=\"center\"\n        justify=\"space-between\"\n        style={{ paddingRight: \"1rem\" }}\n      >\n        <Grid item>\n          <Grid container alignItems=\"flex-end\">\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <FormControl\n                className={classes.formControlStyle}\n                style={{\n                  minWidth: \"120px\",\n                  maxWidth: \"200px\",\n                  marginRight: \"1rem\",\n                }}\n              >\n                <InputLabel id=\"site-select-label\">Sites</InputLabel>\n                <Select\n                  style={{ fontSize: \".8rem\" }}\n                  labelId=\"site-select-label\"\n                  id=\"site-select\"\n                  value={selectedSite}\n                  onChange={handleSiteChange}\n                  multiple\n                  renderValue={(data) => data.join(\", \")}\n                  MenuProps={{\n                    classes: { paper: classes.menuPaper },\n                    getContentAnchorEl: () => null,\n                  }}\n                >\n                  <MenuItem\n                    value=\"All\"\n                    classes={{\n                      root: isAllSelected ? classes.selectedAll : \"\",\n                    }}\n                    style={{ paddingBlock: 0 }}\n                  >\n                    <ListItemIcon>\n                      <Checkbox\n                        style={{ paddingBlock: 0 }}\n                        size=\"small\"\n                        color=\"primary\"\n                        classes={{ indeterminate: classes.indeterminateColor }}\n                        checked={isAllSelected}\n                        indeterminate={\n                          selectedSite.length > 0 &&\n                          selectedSite.length <\n                            JSON.parse(localStorage.getItem(\"siteNamesCaps\"))\n                              .length\n                        }\n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      // classes={{ primary: classes.selectAllText }}\n                      classes={{ primary: classes.listItemText }}\n                      primary=\"Select All\"\n                      style={{ paddingTop: \".05rem\" }}\n                    />\n                  </MenuItem>\n                  {JSON.parse(localStorage.getItem(\"siteNamesCaps\")).map(\n                    (element) => {\n                      return (\n                        <MenuItem\n                          key={element}\n                          value={element}\n                          style={{ paddingBlock: 0 }}\n                        >\n                          <ListItemIcon>\n                            <Checkbox\n                              style={{ paddingBlock: 0 }}\n                              checked={selectedSite.indexOf(element) > -1}\n                              size=\"small\"\n                              color=\"primary\"\n                            />\n                          </ListItemIcon>\n                          <ListItemText\n                            classes={{ primary: classes.listItemText }}\n                            primary={element}\n                            style={{ paddingTop: \".05rem\" }}\n                          />\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                {/* <FormControl className={classes.formControlStyle} style={{marginRight: '1rem'}}>\n                <InputLabel id='site-select-label'>Site</InputLabel>\n                <Select\n                  labelId='site-select-label'\n                  id='site-select'\n                  value={selectedSite}\n                  onChange={handleSiteChange}\n                  style={{fontSize: '.8rem'}}\n                >\n                  {JSON.parse(localStorage.getItem(\"siteNamesCaps\")).map(element => (\n                      <MenuItem key={element} value={element}>{element}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl> */}\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"from-date-picker-inline\"\n                  label=\"From\"\n                  value={fromDate}\n                  onChange={handleFromDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-labelte\": \"from date\",\n                  }}\n                  style={{ marginRight: \"1rem\" }}\n                  className={classes.textField}\n                  InputProps={{\n                    style: {\n                      fontSize: \".8rem\",\n                    },\n                  }}\n                />\n\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"to-date-picker-inline\"\n                  label=\"To\"\n                  value={toDate}\n                  onChange={handleToDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"to date\",\n                  }}\n                  className={classes.textField}\n                  InputProps={{\n                    style: {\n                      fontSize: \".8rem\",\n                    },\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n              {/* <FormControl component=\"fieldset\" style={{marginLeft: '1rem'}}>\n                    <FormLabel component=\"legend\" style={{fontSize: '.8rem'}}>Time Period</FormLabel>\n                    <RadioGroup value={timePeriod} onChange={handleTimePeriodChange} row aria-label=\"time-period\" name=\"time-period-row-radio-buttons-group\">\n                        <FormControlLabel value='24' control={<Radio color='primary' size='small' />} label=\"24 hrs\" />\n                        <FormControlLabel  value='14' control={<Radio color='primary' size='small' />} label=\"06:00 - 20:00\" />\n                    </RadioGroup>\n                </FormControl> */}\n            </Grid>\n            <Grid item>\n              <Button\n                size=\"small\"\n                color={\"primary\"}\n                variant=\"outlined\"\n                onClick={handleViewBtnClick}\n                disabled={disabledViewBtn}\n              >\n                {disabledViewBtn ? \"Fetching\" : \"View\"}\n              </Button>\n            </Grid>\n            <Grid item style={{ marginLeft: \"1rem\" }}>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={downloadReport}\n                disabled={disabledDownload}\n              >\n                {disabledDownload ? \"Downloading\" : \"Download\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          {/* <MultiDropdown label={'Groups'} items={groups} selectedItems={selectedGroups} handleChange={handleGroupsChange}/> */}\n          <FormControl\n            className={classes.formControlStyle}\n            style={{\n              minWidth: \"120px\",\n              maxWidth: \"200px\",\n              marginRight: \"1rem\",\n            }}\n          >\n            <InputLabel id=\"group-select-label\">Groups</InputLabel>\n            <Select\n              style={{ fontSize: \".8rem\" }}\n              labelId=\"group-select-label\"\n              id=\"group-select\"\n              value={selectedGroups}\n              onChange={handleGroupsChange}\n              multiple\n              renderValue={(data) => data.join(\", \")}\n              MenuProps={{\n                classes: { paper: classes.menuPaper },\n                getContentAnchorEl: () => null,\n              }}\n            >\n              <MenuItem\n                value=\"All\"\n                classes={{\n                  root: isAllGroupsSelected ? classes.selectedAll : \"\",\n                }}\n                style={{ paddingBlock: 0 }}\n              >\n                <ListItemIcon>\n                  <Checkbox\n                    style={{ paddingBlock: 0 }}\n                    size=\"small\"\n                    color=\"primary\"\n                    classes={{ indeterminate: classes.indeterminateColor }}\n                    checked={isAllGroupsSelected}\n                    indeterminate={\n                      selectedGroups.length > 0 &&\n                      selectedGroups.length < groups.length\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText\n                  // classes={{ primary: classes.selectAllText }}\n                  classes={{ primary: classes.listItemText }}\n                  primary=\"Select All\"\n                  style={{ paddingTop: \".05rem\" }}\n                />\n              </MenuItem>\n              {groups.map((element) => {\n                return (\n                  <MenuItem\n                    key={element}\n                    value={element}\n                    style={{ paddingBlock: 0 }}\n                  >\n                    <ListItemIcon>\n                      <Checkbox\n                        style={{ paddingBlock: 0 }}\n                        checked={selectedGroups.indexOf(element) > -1}\n                        size=\"small\"\n                        color=\"primary\"\n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      classes={{ primary: classes.listItemText }}\n                      primary={element}\n                      style={{ paddingTop: \".05rem\" }}\n                    />\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        {/* <Grid item style={{marginRight: '1rem'}}>\n              <FormControl className={classes.formControlStyle}>\n                <InputLabel id='sort-select-label'>Sort</InputLabel>\n                <Select\n                  labelId='sort-select-label'\n                  id='sort-select'\n                  value={sort}\n                  onChange={handleSortChange}\n                  style={{fontSize: '.8rem'}}\n                >\n                  <MenuItem value={'desc'}>\n                    <span>Desc&ensp;</span>\n                  </MenuItem>\n                  <MenuItem value={'asc'}>\n                    <span>Asc&ensp;</span>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid> */}\n\n        {/* <Grid item>\n          <Grid container alignItems='center'>\n            <Grid item style={{ marginRight: '2rem' }}>\n              <Grid container>\n                <Grid item>\n                  {status === 0 ? (\n                    // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                    //   Offline\n                    // </span>\n                    <Typography variant='h6' style={{ color: '#f44336' }}>\n                      Offline\n                    </Typography>\n                  ) : (\n                    // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                    //   Online\n                    // </span>\n                    <Typography variant='h6' style={{ color: '#4caf50' }}>\n                      Online\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item style={{ margin: '0 1rem' }}></Grid>\n                <Grid item>\n                  {timestamp === undefined ? (\n                    <CircularProgress\n                      size='1.25rem'\n                      // style={{ marginRight: '.5rem' }}\n                    />\n                  ) : (\n                    <Typography variant='h6'>\n                      {getFormattedDateAndTimeString(timestamp)}\n                    </Typography>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: 'hidden' }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format='dd/MM/yyyy hh:mm a'\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item>\n              <IconButton onClick={() => setOpenDateTimePicker(true)}>\n                <EventIcon color='action' fontSize='large' />\n              </IconButton>\n            </Grid>\n            <Grid item style={{ paddingRight: '0rem', marginRight: '1rem' }}>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color='primary' fontSize='large' />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n      </Grid>\n\n      <Grid container style={{ marginTop: \".25rem\" }}>\n        {barChartData.map((element) => (\n          <PRRankingChartCard\n            isSingleDay={isSingleDay}\n            multiDay={multiDay}\n            chartData={element}\n            siteName={element.site}\n            groupName={element.group}\n          />\n        ))}\n      </Grid>\n\n      <div style={{ marginBlock: \"1.5rem\" }}></div>\n      {/* {selectedSite && <CustomDiagram />} */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={4000}\n        onClose={handleSnackbarClose}\n        anchorOrigin={{ horizontal: \"left\", vertical: \"bottom\" }}\n      >\n        <Alert\n          onClose={handleSnackbarClose}\n          severity={snackbar.severity}\n          sx={{ width: \"100%\" }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"1.5rem\" }}></div>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Grid,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n  IconButton,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst rowsPerPage = 10;\n\nexport default function LossTable({ rows = [], setRows }) {\n  const [page, setPage] = useState(1);\n  const [pageCount, setPageCount] = useState(1);\n\n  useEffect(() => {\n    if (rows.length > 0) {\n      let count = Math.ceil(rows.length / rowsPerPage);\n      setPageCount(count);\n    }\n  }, [rows]);\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  const [tableAsc, setTableAsc] = useState(true);\n\n  const toggleTableSort = (event, propertyName) => {\n    let sortedRows = [];\n    if (tableAsc) {\n      sortedRows = rows.sort((a, b) =>\n        a[propertyName] !== b[propertyName]\n          ? a[propertyName] < b[propertyName]\n            ? -1\n            : 1\n          : 0\n      );\n    } else {\n      sortedRows = rows.sort((a, b) =>\n        a[propertyName] !== b[propertyName]\n          ? a[propertyName] < b[propertyName]\n            ? 1\n            : -1\n          : 0\n      );\n    }\n    setRows(sortedRows);\n    setTableAsc((prevState) => !prevState);\n  };\n\n  const getTime = (timestamp) => {\n    let date = new Date(timestamp * 1000);\n    return `${String(date.getDate()).padStart(2, 0)}/${String(\n      date.getMonth() + 1\n    ).padStart(2, 0)} ${String(date.getHours()).padStart(2, 0)}:${String(\n      date.getMinutes()\n    ).padStart(2, 0)}`;\n  };\n\n  return (\n    <Grid container style={{ maxWidth: \"90vw\", marginTop: \"1rem\" }}>\n      <TableContainer component={Paper}>\n        <Table\n          aria-label=\"simple table\"\n          size=\"small\"\n          style={{ overflowX: \"auto\" }}\n        >\n          <TableHead>\n            <TableRow style={{ backgroundColor: \"#ffffbf\" }}>\n              <TableCell\n                align=\"left\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"Site\")}\n              >\n                Time\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"budgetRev\")}\n              >\n                Site\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"budgetRev\")}\n              >\n                Budget Rev\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"actualRev\")}\n              >\n                Actual Rev\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"GhiCorrRevenue\")}\n              >\n                GHI Core Revenue\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"AbsoluteLoss\")}\n              >\n                Absolute Loss\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"GHIImpact\")}\n              >\n                GHI Impact\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"PALossorGain\")}\n              >\n                PA Loss/Gain\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"GALossorGain\")}\n              >\n                GA Loss/Gain\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"TempLossorGainGHI\")}\n              >\n                Temp. Loss/Gain\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"AuxConsumption\")}\n              >\n                Aux Consumption\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"TotalLoss\")}\n              >\n                Total Loss\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"RemainingLoss\")}\n              >\n                Remaining Loss\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"finalEfficiency\")}\n              >\n                Final Efficiency\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.length === 0 && (\n              <TableRow>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  No records found.\n                </TableCell>\n              </TableRow>\n            )}\n            {rows.length > 0 &&\n              rows\n                // .slice((page - 1) * rowsPerPage, page * rowsPerPage)\n                .map((row, index) => (\n                  <TableRow key={index}>\n                    <TableCell align=\"left\" style={{ whiteSpace: \"nowrap\" }}>\n                      {getTime(row.Time)}\n                    </TableCell>\n                    <TableCell align=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n                      {row.Site}\n                    </TableCell>\n                    <TableCell align=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n                      {row.budgetRev}\n                    </TableCell>\n                    <TableCell align=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n                      {row.actualRev}\n                    </TableCell>\n                    <TableCell align=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n                      {row.GhiCorrRevenue}\n                    </TableCell>\n                    <TableCell align=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n                      {row.AbsoluteLoss}\n                    </TableCell>\n                    <TableCell align=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n                      {row.GHIImpact}\n                    </TableCell>\n                    <TableCell align=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n                      {row.PALossorGain}\n                    </TableCell>\n                    <TableCell align=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n                      {row.GALossorGain}\n                    </TableCell>\n                    <TableCell align=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n                      {row.TempLossorGainGHI}\n                    </TableCell>\n                    <TableCell align=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n                      {row.AuxConsumption}\n                    </TableCell>\n                    <TableCell align=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n                      {row.TotalLoss}\n                    </TableCell>\n                    <TableCell align=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n                      {row.RemainingLoss}\n                    </TableCell>\n                    <TableCell align=\"center\" style={{ whiteSpace: \"nowrap\" }}>\n                      {row.finalDataEfficiency}\n                    </TableCell>\n                  </TableRow>\n                ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nexport default function LossChart({ data, alignY = { leftY: 1, rightY: 1 } }) {\n  console.log(\"Biaxial line data\", data);\n\n  const getLinesForOpacity = () => {\n    const objArray = Object.entries(data[0]);\n    let obj = {};\n    objArray.forEach((element) => {\n      obj = { ...obj, [element[0]]: 1 };\n    });\n    return obj;\n  };\n\n  const CustomizedDot = (props) => {\n    const { cx, cy, stroke, payload, value, customIndex } = props;\n\n    // console.log(\"customIndex\", customIndex);\n\n    switch (customIndex) {\n      case 1:\n        return (\n          <rect\n            x={cx - 2.5}\n            y={cy - 2.5}\n            width=\"5\"\n            height=\"5\"\n            stroke={stroke}\n            fill=\"#fff\"\n          />\n        );\n      case 2:\n        return (\n          <polygon\n            points={String(\n              `${cx},${cy - 2.5} ${cx + 2.5},${cy + 2.5} ${cx - 2.5},${\n                cy + 2.5\n              }`\n            )}\n            stroke={stroke}\n            fill=\"#fff\"\n          />\n        );\n      default:\n        return <circle cx={cx} cy={cy} r=\"3\" stroke={stroke} fill=\"#fff\" />;\n    }\n  };\n\n  const [opacity, setOpacity] = useState(getLinesForOpacity());\n\n  const selectLine = (dataKey) => {\n    setOpacity((prevState) => {\n      return { ...prevState, [dataKey]: prevState[dataKey] === 0 ? 1 : 0 };\n    });\n  };\n\n  const renderLegend = ({ payload }) => {\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\" }}>\n        {payload.map(({ dataKey, color }) => {\n          return (\n            <strong\n              key={dataKey}\n              style={{\n                fontSize: \"1rem\",\n                color: color,\n                cursor: \"pointer\",\n                opacity: opacity[dataKey] === 0 ? 0.5 : 1,\n              }}\n              onClick={() => selectLine(dataKey)}\n            >\n              {String(dataKey).toUpperCase()}\n            </strong>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const getLineColor = (isLeftY, index) => {\n    // left Y colors\n    const leftYColors = [\"#2196f3\", \"#3f51b5\", \"#00bcd4\", \"#673ab7\"];\n    // right Y colors\n    const rightYColors = [\"#4caf50\", \"#ff9800\", \"#009688\", \"#cddc39\"];\n\n    if (isLeftY) {\n      return leftYColors[index];\n    }\n\n    return rightYColors[index];\n  };\n\n  const getLeftYItems = () => {\n    let objArray = Object.entries(data[0]);\n    // console.log(\"objArrayLeft\", objArray);\n    let lines = [];\n    let colorIndex = 0;\n    for (let i = 1; i <= alignY.leftY; i++) {\n      lines.push(\n        <Line\n          name={objArray[i][0]}\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey={objArray[i][0]}\n          stroke={getLineColor(true, colorIndex)}\n          strokeWidth={2}\n          strokeOpacity={opacity[objArray[i][0]]}\n          // activeDot={{ fill: getLineColor(true, colorIndex) }}\n          // dot={false}\n          dot={<CustomizedDot customIndex={colorIndex} />}\n        />\n      );\n      colorIndex += 1;\n    }\n    return lines;\n  };\n\n  const getRightYItems = () => {\n    let objArray = Object.entries(data[0]);\n    // console.log(\"objArrayRight\", objArray);\n    let lines = [];\n    let colorIndex = 0;\n    for (let i = alignY.leftY + 1; i <= alignY.leftY + alignY.rightY; i++) {\n      // console.log(\"right\", alignY, i);\n      if (objArray[i] !== undefined) {\n        lines.push(\n          <Line\n            name={objArray[i][0]}\n            yAxisId=\"right\"\n            type=\"monotone\"\n            dataKey={objArray[i][0]}\n            stroke={getLineColor(false, colorIndex)}\n            strokeWidth={2}\n            strokeOpacity={opacity[objArray[i][0]]}\n            // activeDot={{ fill: getLineColor(false, colorIndex) }}\n            // dot={false}\n            dot={<CustomizedDot customIndex={colorIndex} />}\n          />\n        );\n        colorIndex += 1;\n      }\n    }\n    return lines;\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"90%\">\n      <LineChart\n        data={data}\n        margin={{\n          left: 20,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"timestamp\" />\n        <YAxis\n          yAxisId=\"left\"\n          domain={[0, (dataMax) => Math.round(dataMax * 1.1)]}\n        />\n        <YAxis\n          yAxisId=\"right\"\n          orientation=\"right\"\n          domain={[0, (dataMax) => Math.round(dataMax * 1.1)]}\n        />\n        <Tooltip />\n        <Legend content={renderLegend} />\n        {getLeftYItems().map((element) => element)}\n        {getRightYItems().map((element) => element)}\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport MultiDropdownSingle from \"../components/UI/MultiDropdownSingle\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport { Grid, Button, Card } from \"@material-ui/core\";\nimport LossTable from \"../components/LossAnalytics/LossTable\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport { AppState } from \"../AppContext\";\nimport LossChart from \"../components/LossAnalytics/LossChart\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nconst parameters1 = [\n  { name: \"Revenue\", value: \"revenue\" },\n  { name: \"Energy\", value: \"energy\" },\n  { name: \"Aux Data\", value: \"auxdata\" },\n  { name: \"CUF\", value: \"cuf\" },\n  { name: \"GHI\", value: \"ghi\" },\n  { name: \"GTI\", value: \"gti\" },\n  { name: \"PA\", value: \"pa\" },\n  { name: \"GA\", value: \"ga\" },\n  { name: \"Mod Temp\", value: \"modtemp\" },\n];\n\nconst parameters2 = [\n  { name: \"None\", value: \"none\" },\n  { name: \"Revenue\", value: \"revenue\" },\n  { name: \"Energy\", value: \"energy\" },\n  { name: \"Aux Data\", value: \"auxdata\" },\n  { name: \"CUF\", value: \"cuf\" },\n  { name: \"GHI\", value: \"ghi\" },\n  { name: \"GTI\", value: \"gti\" },\n  { name: \"PA\", value: \"pa\" },\n  { name: \"GA\", value: \"ga\" },\n  { name: \"Mod Temp\", value: \"modtemp\" },\n];\n\nexport default function SimpleTabs() {\n  const classes = useStyles();\n  //   const [value, setValue] = React.useState(0);\n\n  const jwtToken = localStorage.getItem(\"userToken\");\n\n  const { setEnabledLinearProgress, setSnackbar } = AppState();\n\n  const [rows, setRows] = useState([]);\n\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n\n  // if not from server\n  const getSites = (sites = siteNamesAndBlocks) => {\n    return sites.map((site) => site.name);\n  };\n\n  const fetchSitesOptions = async () => {\n    try {\n      const response = await axios.post(\n        SERVER_URL + \"/lossanalysis/losssitesDropdown\",\n        { email: localStorage.getItem(\"userEmail\") }\n      );\n      const data = response.data;\n      // console.log(response);\n      setSiteOptions(data);\n    } catch (error) {\n      setSiteOptions([\"Balanagar\"]);\n    }\n  };\n\n  const [siteOptions, setSiteOptions] = useState([\"Balanagar\"]);\n  const [selectedSites, setSelectedSites] = useState([\"Balanagar\"]);\n  const [selectedSitesForChart, setSelectedSitesForChart] = useState([\n    \"Balanagar\",\n  ]);\n\n  const handleSiteChange = (event) => {\n    let value = event.target.value;\n    if (value[value.length - 1] === \"all\") {\n      setSelectedSites(\n        selectedSites.length === siteOptions.length ? [] : siteOptions\n      );\n      return;\n    }\n    setSelectedSites(value);\n  };\n\n  const handleSiteChangeForChart = (event) => {\n    let value = event.target.value;\n    if (value[value.length - 1] === \"all\") {\n      setSelectedSitesForChart(\n        selectedSitesForChart.length === siteOptions.length ? [] : siteOptions\n      );\n      return;\n    }\n    setSelectedSitesForChart(value);\n  };\n\n  const getInitialFromDate = () => {\n    const date = new Date();\n    date.setDate(date.getDate() - 1);\n    date.setHours(0, 1, 0, 0);\n    return date;\n  };\n\n  const getInitialToDate = () => {\n    const date = new Date();\n    date.setDate(date.getDate() - 1);\n    date.setHours(23, 59, 59, 0);\n    return date;\n  };\n\n  const [fromDate, setFromDate] = useState(getInitialFromDate());\n  const [toDate, setToDate] = useState(getInitialToDate());\n\n  const [chartFromDate, setChartFromDate] = useState(getInitialFromDate());\n  const [chartToDate, setChartToDate] = useState(getInitialToDate());\n\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(date);\n  };\n\n  const handleChartFromDateChange = (date) => {\n    setChartFromDate(date);\n  };\n\n  const handleChartToDateChange = (date) => {\n    setChartToDate(date);\n  };\n\n  const [frequency, setFrequency] = useState(\"daily\");\n\n  const handleFrequencyChange = (event) => {\n    let value = event.target.value;\n    setFrequency(value);\n  };\n\n  //   const handleChange = (event, newValue) => {\n  //     setValue(newValue);\n  //   };\n\n  const [disabledTableViewBtn, setDisabledTableViewBtn] = useState(false);\n  const [disabledCSVBtn, setDisabledCSVBtn] = useState(false);\n  const [disabledChartViewBtn, setDisabledChartViewBtn] = useState(false);\n\n  const [charts, setCharts] = useState([]);\n  const [chartYAlign, setChartYAlign] = useState({});\n\n  const fetchRows = async () => {\n    setDisabledTableViewBtn(true);\n    setEnabledLinearProgress(true);\n    // console.log(fromDate, toDate);\n    try {\n      const response = await axios.post(\n        SERVER_URL + \"/lossanalysis\",\n        {\n          sites: selectedSites,\n          startTime: fromDate.getTime(),\n          endTime: toDate.getTime(),\n          frequency: frequency,\n        },\n        {\n          jwtToken: jwtToken,\n        }\n      );\n      const data = response.data;\n      // console.log(response);\n      setRows(data);\n      setEnabledLinearProgress(false);\n      setDisabledTableViewBtn(false);\n    } catch (error) {\n      setRows([]);\n      setEnabledLinearProgress(false);\n      setDisabledTableViewBtn(false);\n    }\n  };\n\n  const [parameter1, setParameter1] = useState(\"pa\");\n  const [parameter2, setParameter2] = useState(\"none\");\n\n  const handleParameter1Change = (event) => {\n    const value = event.target.value;\n    if (value === parameter2) {\n      return;\n    }\n    setParameter1(value);\n  };\n\n  const handleParameter2Change = (event) => {\n    const value = event.target.value;\n    if (value === parameter1) {\n      return;\n    }\n    setParameter2(value);\n  };\n\n  const fetchCSV = async () => {\n    setDisabledCSVBtn(true);\n    setEnabledLinearProgress(true);\n    try {\n      const response = await axios.post(\n        SERVER_URL + \"/lossanalysis/csv\",\n        {\n          sites: selectedSites,\n          startTime: fromDate.getTime(),\n          endTime: toDate.getTime(),\n          frequency: frequency,\n        },\n        {\n          jwtToken: jwtToken,\n          responseType: \"blob\",\n        }\n      );\n      // console.log(\"csvxxx\", response);\n      const downloadUrl = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = downloadUrl;\n      let filename = `${fromDate.getDate()}_${\n        fromDate.getMonth() + 1\n      } to ${toDate.getDate()}_${toDate.getMonth() + 1}.csv`;\n      link.setAttribute(\"download\", filename);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      setEnabledLinearProgress(false);\n      setDisabledCSVBtn(false);\n    } catch (error) {\n      setSnackbar((prevState) => ({\n        ...prevState,\n        open: true,\n        severity: \"error\",\n        message: \"No data found.\",\n      }));\n      setEnabledLinearProgress(false);\n      setDisabledCSVBtn(false);\n    }\n  };\n\n  const fetchChartData = async () => {\n    // const fetchedData = {\n    //   charts: [\n    //     {\n    //       site: \"Balanagar\",\n    //       data: [\n    //         {\n    //           timestamp: new Date().toLocaleTimeString(),\n    //           a: 100,\n    //           b: 200,\n    //           c: 150,\n    //         },\n    //       ],\n    //     },\n    //     {\n    //       site: \"Bazpur\",\n    //       data: [\n    //         {\n    //           timestamp: new Date().toLocaleTimeString(),\n    //           a: 120,\n    //           b: 180,\n    //           c: 130,\n    //         },\n    //       ],\n    //     },\n    //   ],\n    //   align: {\n    //     leftY: 2,\n    //     rightY: 1,\n    //   },\n    // };\n\n    setDisabledChartViewBtn(true);\n    setEnabledLinearProgress(true);\n\n    try {\n      // console.log(\n      //   selectedSitesForChart,\n      //   chartFromDate.getTime(),\n      //   chartToDate.getTime(),\n      //   parameter1,\n      //   parameter2\n      // );\n      const response = await axios.post(\n        SERVER_URL + \"/lossanalysis/linegraph\",\n        {\n          sites: selectedSitesForChart,\n          startTime: chartFromDate.getTime(),\n          endTime: chartToDate.getTime(),\n          parameter1: parameter1,\n          parameter2: parameter2,\n        },\n        {\n          jwtToken: jwtToken,\n        }\n      );\n      const data = response.data;\n      console.log(data);\n      const newCharts = data.charts;\n      setCharts(newCharts);\n      const align = data.align;\n      // console.log(align);\n      setChartYAlign(align);\n      setEnabledLinearProgress(false);\n      setDisabledChartViewBtn(false);\n    } catch (error) {\n      setCharts([]);\n      setEnabledLinearProgress(false);\n      setDisabledChartViewBtn(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchSitesOptions();\n    // Todo: run after sites have been fetched\n    // fetchRows();\n    // fetchChartData();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      {/* <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Item One\" {...a11yProps(0)} />\n          <Tab label=\"Item Two\" {...a11yProps(1)} />\n          <Tab label=\"Item Three\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        Item One\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        Item Two\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Item Three\n      </TabPanel> */}\n      <Grid container alignItems=\"flex-end\">\n        <Grid item>\n          <MultiDropdownSingle\n            label=\"Sites\"\n            items={siteOptions}\n            selectedItems={selectedSites}\n            handleChange={handleSiteChange}\n          />\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container>\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd/MM/yyyy\"\n                id=\"from-date-picker-inline\"\n                label=\"From\"\n                value={fromDate}\n                onChange={handleFromDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"from date\",\n                }}\n                size=\"small\"\n                InputProps={{\n                  style: {\n                    fontSize: \".8rem\",\n                  },\n                }}\n                style={{ width: 120 }}\n              />\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd/MM/yyyy\"\n                id=\"to-date-picker-inline\"\n                label=\"To\"\n                value={toDate}\n                onChange={handleToDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"to date\",\n                }}\n                size=\"small\"\n                InputProps={{\n                  style: {\n                    fontSize: \".8rem\",\n                  },\n                }}\n                style={{ width: 120, marginLeft: \"1rem\" }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <FormControl>\n            <InputLabel id=\"frequency-simple-select-label\">\n              Frequency\n            </InputLabel>\n            <Select\n              labelId=\"frequency-simple-select-label\"\n              id=\"frequency-simple-select\"\n              value={frequency}\n              onChange={handleFrequencyChange}\n              style={{ fontSize: \".8rem\" }}\n            >\n              <MenuItem value={\"daily\"}>Daily</MenuItem>\n              <MenuItem value={\"mtd\"}>MTD</MenuItem>\n              <MenuItem value={\"ytd\"}>YTD</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={fetchRows}\n            disabled={disabledTableViewBtn}\n          >\n            {disabledTableViewBtn ? \"Loading\" : \"View\"}\n          </Button>\n        </Grid>\n        <Grid item style={{ marginLeft: \".75rem\" }}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={fetchCSV}\n            disabled={disabledCSVBtn}\n          >\n            {disabledCSVBtn ? \"Downloading\" : \"CSV\"}\n          </Button>\n        </Grid>\n      </Grid>\n      <LossTable rows={rows} setRows={setRows} />\n      <Grid container alignItems=\"flex-end\" style={{ marginTop: \"2rem\" }}>\n        <Grid item>\n          <MultiDropdownSingle\n            label=\"Sites\"\n            items={siteOptions}\n            selectedItems={selectedSitesForChart}\n            handleChange={handleSiteChangeForChart}\n          />\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container>\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd/MM/yyyy\"\n                id=\"from-date-picker-inline\"\n                label=\"From\"\n                value={chartFromDate}\n                onChange={handleChartFromDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"from date\",\n                }}\n                size=\"small\"\n                InputProps={{\n                  style: {\n                    fontSize: \".8rem\",\n                  },\n                }}\n                style={{ width: 120 }}\n              />\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd/MM/yyyy\"\n                id=\"to-date-picker-inline\"\n                label=\"To\"\n                value={chartToDate}\n                onChange={handleChartToDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"to date\",\n                }}\n                size=\"small\"\n                InputProps={{\n                  style: {\n                    fontSize: \".8rem\",\n                  },\n                }}\n                style={{ width: 120, marginLeft: \"1rem\" }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <FormControl>\n            <InputLabel id=\"parameter1-select-label\">Y1</InputLabel>\n            <Select\n              labelId=\"parameter1-select-label\"\n              id=\"parameter-select\"\n              value={parameter1}\n              onChange={handleParameter1Change}\n              style={{ fontSize: \".8rem\" }}\n            >\n              {parameters1.map((element) => (\n                <MenuItem value={element.value}>{element.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <FormControl>\n            <InputLabel id=\"parameter2-select-label\">Y2</InputLabel>\n            <Select\n              labelId=\"parameter2-select-label\"\n              id=\"parameter2-select\"\n              value={parameter2}\n              onChange={handleParameter2Change}\n              style={{ fontSize: \".8rem\" }}\n            >\n              {parameters2.map((element) => (\n                <MenuItem value={element.value}>{element.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={fetchChartData}\n            disabled={disabledChartViewBtn}\n          >\n            {disabledChartViewBtn ? \"Loading\" : \"View\"}\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        style={{\n          marginBottom: \"1rem\",\n        }}\n      >\n        {charts.map((chart, index) => (\n          <Grid container key={index}>\n            <Card\n              style={{\n                width: \"100%\",\n                height: \"420px\",\n                marginTop: \"1rem\",\n                paddingTop: \".75rem\",\n                paddingInline: \".5rem\",\n              }}\n            >\n              <Typography\n                style={{ marginLeft: \"1rem\", marginBottom: \".75rem\" }}\n              >\n                {chart.site}\n              </Typography>\n              <LossChart data={chart.data} alignY={chartYAlign} />\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Grid,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n  IconButton,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst rowsPerPage = 10;\n\nexport default function HighTempTable({ rows = [], setRows }) {\n  const [page, setPage] = useState(1);\n  const [pageCount, setPageCount] = useState(1);\n\n  useEffect(() => {\n    if (rows.length > 0) {\n      let count = Math.ceil(rows.length / rowsPerPage);\n      setPageCount(count);\n    }\n  }, [rows]);\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  const [tableAsc, setTableAsc] = useState(true);\n\n  const toggleTableSort = (event, propertyName) => {\n    let sortedRows = [];\n    if (tableAsc) {\n      sortedRows = rows.sort((a, b) =>\n        a[propertyName] !== b[propertyName]\n          ? a[propertyName] < b[propertyName]\n            ? -1\n            : 1\n          : 0\n      );\n    } else {\n      sortedRows = rows.sort((a, b) =>\n        a[propertyName] !== b[propertyName]\n          ? a[propertyName] < b[propertyName]\n            ? 1\n            : -1\n          : 0\n      );\n    }\n    setRows(sortedRows);\n    setTableAsc((prevState) => !prevState);\n  };\n\n  const getTime = (timestamp) => {\n    let date = new Date(timestamp * 1000);\n    return `${String(date.getDate()).padStart(2, 0)}/${String(\n      date.getMonth() + 1\n    ).padStart(2, 0)} ${String(date.getHours()).padStart(2, 0)}:${String(\n      date.getMinutes()\n    ).padStart(2, 0)}`;\n  };\n\n  const getRowTextColor = (row) => {\n    if (row.percentageDifference > 5) {\n      return \"red\";\n    }\n    return \"black\";\n  };\n\n  return (\n    <Grid container style={{ maxWidth: \"90vw\", marginTop: \"1rem\" }}>\n      <TableContainer component={Paper}>\n        <Table\n          aria-label=\"simple table\"\n          size=\"small\"\n          style={{ overflowX: \"auto\" }}\n        >\n          <TableHead>\n            <TableRow style={{ backgroundColor: \"#ffffbf\" }}>\n              <TableCell\n                align=\"left\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"time\")}\n              >\n                Time\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"site\")}\n              >\n                Site\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"blockName\")}\n              >\n                Block\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"inverterName\")}\n              >\n                Inverter\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) =>\n                  toggleTableSort(event, \"percentageDifference\")\n                }\n              >\n                Percentage Difference\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"ambienttemp\")}\n              >\n                Ambient Temp\n              </TableCell>\n              <TableCell\n                align=\"center\"\n                style={{\n                  whiteSpace: \"nowrap\",\n                  cursor: \"pointer\",\n                  color: \"#000\",\n                }}\n                onClick={(event) => toggleTableSort(event, \"cabTemp\")}\n              >\n                Cabinet Temp\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.length === 0 && (\n              <TableRow>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  No records found.\n                </TableCell>\n              </TableRow>\n            )}\n            {rows.length > 0 &&\n              rows\n                .slice((page - 1) * rowsPerPage, page * rowsPerPage)\n                .map((row, index) => (\n                  <TableRow key={index}>\n                    <TableCell\n                      align=\"left\"\n                      style={{\n                        whiteSpace: \"nowrap\",\n                        color: getRowTextColor(row),\n                      }}\n                    >\n                      {getTime(row.time)}\n                    </TableCell>\n                    <TableCell\n                      align=\"center\"\n                      style={{\n                        whiteSpace: \"nowrap\",\n                        color: getRowTextColor(row),\n                      }}\n                    >\n                      {row.site}\n                    </TableCell>\n                    <TableCell\n                      align=\"center\"\n                      style={{\n                        whiteSpace: \"nowrap\",\n                        color: getRowTextColor(row),\n                      }}\n                    >\n                      {row.blockName}\n                    </TableCell>\n                    <TableCell\n                      align=\"center\"\n                      style={{\n                        whiteSpace: \"nowrap\",\n                        color: getRowTextColor(row),\n                      }}\n                    >\n                      {row.inverterName}\n                    </TableCell>\n                    <TableCell\n                      align=\"center\"\n                      style={{\n                        whiteSpace: \"nowrap\",\n                        color: getRowTextColor(row),\n                      }}\n                    >\n                      {row.percentageDifference}\n                    </TableCell>\n                    <TableCell\n                      align=\"center\"\n                      style={{\n                        whiteSpace: \"nowrap\",\n                        color: getRowTextColor(row),\n                      }}\n                    >\n                      {row.ambTemp}\n                    </TableCell>\n                    <TableCell\n                      align=\"center\"\n                      style={{\n                        whiteSpace: \"nowrap\",\n                        color: getRowTextColor(row),\n                      }}\n                    >\n                      {row.cabtemp}\n                    </TableCell>\n                  </TableRow>\n                ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Grid\n        container\n        style={{\n          marginTop: \".5rem\",\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Pagination\n          count={pageCount}\n          page={page}\n          onChange={handlePageChange}\n          size=\"small\"\n        />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport { Grid, Button, Card } from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport { SERVER_URL } from \"../../../constants/constants\";\nimport { AppState } from \"../../../AppContext\";\nimport MultiDropdownSingle from \"../../UI/MultiDropdownSingle\";\nimport HighTempTable from \"./HighTempTable\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nconst parameters1 = [\n  { name: \"Revenue\", value: \"revenue\" },\n  { name: \"Energy\", value: \"energy\" },\n  { name: \"Aux Data\", value: \"auxdata\" },\n  { name: \"CUF\", value: \"cuf\" },\n  { name: \"GHI\", value: \"ghi\" },\n  { name: \"GTI\", value: \"gti\" },\n  { name: \"PA\", value: \"pa\" },\n  { name: \"GA\", value: \"ga\" },\n  { name: \"Mod Temp\", value: \"modtemp\" },\n];\n\nconst parameters2 = [\n  { name: \"None\", value: \"none\" },\n  { name: \"Revenue\", value: \"revenue\" },\n  { name: \"Energy\", value: \"energy\" },\n  { name: \"Aux Data\", value: \"auxdata\" },\n  { name: \"CUF\", value: \"cuf\" },\n  { name: \"GHI\", value: \"ghi\" },\n  { name: \"GTI\", value: \"gti\" },\n  { name: \"PA\", value: \"pa\" },\n  { name: \"GA\", value: \"ga\" },\n  { name: \"Mod Temp\", value: \"modtemp\" },\n];\n\nexport default function HighTemp() {\n  const classes = useStyles();\n  //   const [value, setValue] = React.useState(0);\n\n  const jwtToken = localStorage.getItem(\"userToken\");\n\n  const { setEnabledLinearProgress, setSnackbar } = AppState();\n\n  const [rows, setRows] = useState([]);\n\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n\n  // if not from server\n  const getSites = (sites = siteNamesAndBlocks) => {\n    return sites.map((site) => site.name);\n  };\n\n  //   const fetchSitesOptions = async () => {\n  //     try {\n  //       const response = await axios.post(\n  //         SERVER_URL + \"/lossanalysis/losssitesDropdown\",\n  //         { email: localStorage.getItem(\"userEmail\") }\n  //       );\n  //       const data = response.data;\n  //       setSiteOptions(data);\n  //     } catch (error) {\n  //       setSiteOptions([\"Balanagar\"]);\n  //     }\n  //   };\n\n  const [siteOptions, setSiteOptions] = useState(getSites());\n\n  const [selectedSites, setSelectedSites] = useState([\"Bidar\"]);\n\n  const handleSiteChange = (event) => {\n    let value = event.target.value;\n    if (value[value.length - 1] === \"all\") {\n      setSelectedSites(\n        selectedSites.length === siteOptions.length ? [] : siteOptions\n      );\n      return;\n    }\n    setSelectedSites(value);\n  };\n\n  const getInitialFromDate = () => {\n    const date = new Date();\n    date.setDate(date.getDate() - 1);\n    date.setHours(10, 0, 0, 0);\n    return date;\n  };\n\n  const getInitialToDate = () => {\n    const date = new Date();\n    date.setDate(date.getDate() - 1);\n    date.setHours(15, 0, 0, 0);\n    return date;\n  };\n\n  const [fromDate, setFromDate] = useState(getInitialFromDate());\n  const [toDate, setToDate] = useState(getInitialToDate());\n\n  const [chartFromDate, setChartFromDate] = useState(getInitialFromDate());\n  const [chartToDate, setChartToDate] = useState(getInitialToDate());\n\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(date);\n  };\n\n  const [disabledTableViewBtn, setDisabledTableViewBtn] = useState(false);\n  const [disabledCSVBtn, setDisabledCSVBtn] = useState(false);\n\n  const fetchRows = async () => {\n    setDisabledTableViewBtn(true);\n    setEnabledLinearProgress(true);\n    // console.log(fromDate, toDate);\n    try {\n      const response = await axios.post(\n        SERVER_URL + \"/dashboard/temppercentagediff\",\n        {\n          sites: selectedSites,\n          startTime: fromDate.getTime(),\n          endTime: toDate.getTime(),\n        },\n\n        {\n          headers: {\n            jwtToken: jwtToken,\n          },\n        }\n      );\n      // console.log(response.data, \"oooo\");\n      const data = response.data.sort((a, b) =>\n        a.time > b.time ? -1 : a.time < b.time ? 1 : 0\n      );\n      // console.log(\"pp\", data);\n      setRows(data);\n      setEnabledLinearProgress(false);\n      setDisabledTableViewBtn(false);\n    } catch (error) {\n      setRows([]);\n      setEnabledLinearProgress(false);\n      setDisabledTableViewBtn(false);\n    }\n  };\n\n  const fetchCSV = async () => {\n    setDisabledCSVBtn(true);\n    setEnabledLinearProgress(true);\n    try {\n      const response = await axios.post(\n        SERVER_URL + \"/dashboard/temppercentagediff/csv\",\n        {\n          sites: selectedSites,\n          startTime: fromDate.getTime(),\n          endTime: toDate.getTime(),\n        },\n\n        {\n          headers: {\n            jwtToken: jwtToken,\n            responseType: \"blob\",\n          },\n        }\n      );\n      const downloadUrl = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = downloadUrl;\n      let filename = `${fromDate.getDate()}_${\n        fromDate.getMonth() + 1\n      } to ${toDate.getDate()}_${toDate.getMonth() + 1}.csv`;\n      link.setAttribute(\"download\", filename);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      setEnabledLinearProgress(false);\n      setDisabledCSVBtn(false);\n    } catch (error) {\n      setSnackbar((prevState) => ({\n        ...prevState,\n        open: true,\n        severity: \"error\",\n        message: \"No data found.\",\n      }));\n      setEnabledLinearProgress(false);\n      setDisabledCSVBtn(false);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container alignItems=\"flex-end\">\n        <Grid item>\n          <MultiDropdownSingle\n            label=\"Sites\"\n            items={siteOptions}\n            selectedItems={selectedSites}\n            handleChange={handleSiteChange}\n          />\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container>\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd/MM/yyyy\"\n                id=\"from-date-picker-inline\"\n                label=\"From\"\n                value={fromDate}\n                onChange={handleFromDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"from date\",\n                }}\n                size=\"small\"\n                InputProps={{\n                  style: {\n                    fontSize: \".8rem\",\n                  },\n                }}\n                style={{ width: 120 }}\n              />\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd/MM/yyyy\"\n                id=\"to-date-picker-inline\"\n                label=\"To\"\n                value={toDate}\n                onChange={handleToDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"to date\",\n                }}\n                size=\"small\"\n                InputProps={{\n                  style: {\n                    fontSize: \".8rem\",\n                  },\n                }}\n                style={{ width: 120, marginLeft: \"1rem\" }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={fetchRows}\n            disabled={disabledTableViewBtn}\n          >\n            {disabledTableViewBtn ? \"Loading\" : \"View\"}\n          </Button>\n        </Grid>\n        <Grid item style={{ marginLeft: \".75rem\" }}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={fetchCSV}\n            disabled={disabledCSVBtn}\n          >\n            {disabledCSVBtn ? \"Downloading\" : \"CSV\"}\n          </Button>\n        </Grid>\n      </Grid>\n      <HighTempTable rows={rows} setRows={setRows} />\n    </div>\n  );\n}\n","import \"date-fns\";\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nexport default function MaterialUIPickers({\n  fromDate,\n  setFromDate,\n  toDate,\n  setToDate,\n}) {\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(date);\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        disableToolbar\n        variant=\"inline\"\n        format=\"MM/dd/yyyy\"\n        margin=\"normal\"\n        id=\"date-picker-inline\"\n        label=\"Start Date\"\n        value={fromDate}\n        onChange={handleFromDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n        InputProps={{\n          style: {\n            fontSize: \".8rem\",\n          },\n        }}\n        style={{ width: 140, padding: 0, margin: 0 }}\n      />\n      <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"End Date\"\n        format=\"MM/dd/yyyy\"\n        value={toDate}\n        onChange={handleToDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n        InputProps={{\n          style: {\n            fontSize: \".8rem\",\n          },\n        }}\n        style={{ width: 140, marginBlock: 0, marginLeft: \"1rem\", padding: 0 }}\n      />\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./TableSensor.css\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ImageList from \"@material-ui/core/ImageList\";\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\nimport ImageListItemBar from \"@material-ui/core/ImageListItemBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport { Divider, Grid } from \"@material-ui/core\";\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  imageList: {\n    flexWrap: \"nowrap\",\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: \"translateZ(0)\",\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\n  },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const itemData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\nconst getCustomDate = (timestampStr) => {\n  const date = new Date(Number(timestampStr));\n  const string =\n    date.getDate() +\n    \"/\" +\n    date.getMonth() +\n    1 +\n    \", \" +\n    date.getHours() +\n    \":\" +\n    date.getMinutes();\n  return string;\n};\n\nexport default function SingleLineImageList({\n  itemData = [],\n  serverUrl,\n  handleImageClick,\n}) {\n  const classes = useStyles();\n\n  const scrollValue = 200;\n\n  const onPrev = () => {\n    document.getElementById(\"imagesContainer\").scrollLeft -= scrollValue;\n  };\n\n  const onNext = () => {\n    document.getElementById(\"imagesContainer\").scrollLeft += scrollValue;\n  };\n\n  return (\n    // <div className={classes.root}>\n    //   <ImageList className={classes.imageList} cols={2.5}>\n    //     {itemData.map((item, index) => (\n    //       <ImageListItem\n    //         key={item.timestamp}\n    //         style={{\n    //           marginLeft: index > 0 && item.title === \"Morning\" ? \"1rem\" : 0,\n    //         }}\n    //       >\n    //         <img src={serverUrl + item.imgUrl} alt={item.title} width={200} />\n    //         <ImageListItemBar\n    //           title={\n    //             <span>\n    //               {item.title}&emsp;\n    //               {new Date(Number(item.timestamp)).toLocaleString()}\n    //             </span>\n    //           }\n    //           subtitle={\n    //             <span>\n    //               Parmeters: {item.parameter}&ensp;LDR 1: {item.ldr1}&ensp;LDR\n    //               2: {item.ldr2}&ensp;LDR 3: {item.ldr3}&ensp;LDR 4: {item.ldr4}\n    //             </span>\n    //           }\n    //         />\n    //       </ImageListItem>\n    //     ))}\n    //   </ImageList>\n    // </div>\n    <div>\n      <div\n        style={{\n          width: \"1200px\",\n          display: itemData.length > 0 ? \"flex\" : \"none\",\n          justifyContent: \"space-between\",\n          paddingRight: \"1rem\",\n        }}\n      >\n        <KeyboardArrowLeftIcon\n          color=\"primary\"\n          style={{ cursor: \"pointer\" }}\n          size=\"small\"\n          onClick={onPrev}\n        />\n        <KeyboardArrowRightIcon\n          color=\"primary\"\n          style={{ cursor: \"pointer\" }}\n          size=\"small\"\n          onClick={onNext}\n        />\n      </div>\n      <div\n        style={{\n          width: \"1200px\",\n          overflowX: \"hidden\",\n          whiteSpace: \"nowrap\",\n          display: itemData.length > 0 ? \"block\" : \"none\",\n          marginTop: \".5rem\",\n        }}\n        id=\"imagesContainer\"\n      >\n        {itemData.map((item, index) => (\n          <div\n            style={{\n              display: \"inline-block\",\n              marginLeft: index > 0 && item.title === \"Morning\" ? \"1rem\" : \"0\",\n              marginRight: item.title === \"Morning\" ? \".25rem\" : \"\",\n            }}\n          >\n            <small style={{ fontSize: \".8rem\" }}>\n              Paremeter: {item.parameter}\n            </small>\n            <br />\n            <small style={{ fontSize: \".8rem\" }}>\n              LDR 1: {item.ldr1}&ensp;LDR 2: {item.ldr2}\n            </small>\n            <br />\n            <small style={{ fontSize: \".8rem\" }}>\n              LDR 3: {item.ldr3}&ensp;LDR 4: {item.ldr4}\n            </small>\n            <br />\n            <div className=\"image-container\">\n              <div className=\"bottom-centered\">\n                <small style={{ fontSize: \".8rem\" }}>{item.title}</small>\n                <small style={{ fontSize: \".8rem\", marginLeft: \"1rem\" }}>\n                  {getCustomDate(item.timestamp)}\n                </small>\n              </div>\n              <img\n                src={serverUrl + item.imgUrl}\n                alt={item.title}\n                width={190}\n                style={{ cursor: \"pointer\" }}\n                onClick={() => {\n                  handleImageClick(\n                    serverUrl + item.imgUrl,\n                    item.title + \" \" + getCustomDate(item.timestamp)\n                  );\n                }}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./TableSensor.css\";\nimport axios from \"axios\";\nimport { Grid } from \"@material-ui/core\";\n\nconst getCustomDate = (timestampStr) => {\n  const date = new Date(Number(timestampStr));\n  // const string =\n  //   date.getDate() +\n  //   \"/\" +\n  //   date.getMonth() +\n  //   1 +\n  //   \", \" +\n  //   date.getHours() +\n  //   \":\" +\n  //   date.getMinutes();\n  const string = date.getDate() + \"/\" + date.getMonth() + 1;\n  return string;\n};\n\nexport default function Ideal({ data, serverUrl, handleImageClick }) {\n  return (\n    <Grid container justifyContent=\"center\">\n      {data.map((datum, index) => (\n        <Grid item style={{ marginLeft: index === 1 ? \".25rem\" : 0 }}>\n          <div>\n            <small style={{ fontSize: \".8rem\" }}>\n              {\" \"}\n              Parameter: {datum.parameters}\n            </small>\n            <br />\n            <small style={{ fontSize: \".8rem\" }}>\n              LDR 1: {datum.ldr1}&ensp;LDR 2: {datum.ldr2}\n            </small>\n            <br />\n            <small style={{ fontSize: \".8rem\" }}>\n              LDR 3: {datum.ldr3}&ensp;LDR 4: {datum.ldr4}\n            </small>\n\n            <div className=\"image-container\">\n              <div className=\"bottom-centered\">\n                <small style={{ fontSize: \".8rem\" }}>{datum.title}</small>\n                <small style={{ fontSize: \".8rem\", marginLeft: \".5rem\" }}>\n                  {getCustomDate(datum.timestamp)}\n                </small>\n              </div>\n              <img\n                src={serverUrl + datum.filename}\n                alt={datum.title}\n                width={190}\n                style={{ cursor: \"pointer\" }}\n                onClick={() => {\n                  handleImageClick(\n                    serverUrl + datum.filename,\n                    datum.title + \" \" + getCustomDate(datum.timestamp)\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","import { Button, Grid, Modal } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MultiDropdownSingle from \"../../UI/MultiDropdownSingle\";\nimport Dates from \"./Dates\";\nimport Gallary from \"./Gallary\";\nimport Ideal from \"./Ideal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Https } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  //   formControl: {\n  //     margin: theme.spacing(1),\n  //     minWidth: 120,\n  //   },\n  //   selectEmpty: {\n  //     marginTop: theme.spacing(2),\n  //   },\n}));\n\nfunction TableSensor() {\n  const classes = useStyles();\n\n  const serverUrl = \"https://apps.acme.in:3002\";\n\n  const [openImageModal, setOpenImageModal] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(\"\");\n  const [selectedImageInfo, setSelectedImageInfo] = useState(\"\");\n\n  const [fromDate, setFromDate] = useState(new Date(1656633660000));\n  const [toDate, setToDate] = useState(new Date());\n\n  const [tableId, setTableId] = React.useState(1);\n\n  const handleTableIdChange = (event) => {\n    setTableId(event.target.value);\n  };\n\n  const [sensorId, setSensorId] = React.useState(1);\n\n  const handleSensorIdChange = (event) => {\n    setSensorId(event.target.value);\n  };\n\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n\n  // if not from server\n  const getSites = (sites = siteNamesAndBlocks) => {\n    return sites.map((site) => site.name);\n  };\n\n  const [siteOptions, setSiteOptions] = useState(getSites());\n  const [selectedSites, setSelectedSites] = useState([\"Balanagar\"]);\n\n  const [data, setData] = useState([]);\n  const [images, setImages] = useState([]);\n\n  const handleSiteChange = (event) => {\n    let value = event.target.value;\n    if (value[value.length - 1] === \"all\") {\n      setSelectedSites(\n        selectedSites.length === siteOptions.length ? [] : siteOptions\n      );\n      return;\n    }\n    setSelectedSites(value);\n  };\n\n  const getIdealImages = async () => {\n    try {\n      const response = await axios.post(serverUrl + \"/getimageideal\", {\n        sitename: \"balanagar\",\n        startTime: fromDate.getTime(),\n        endTime: toDate.getTime(),\n      });\n      // console.log(\"getIdealImages\", response.data);\n      setData(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getImages = async () => {\n    // const serverUrl = \"https://apps.acme.in:3002\";\n    // const serverUrl = \"https://10.10.0.38:3002\";\n    try {\n      const response = await axios.post(serverUrl + \"/getimagesarray\", {\n        sitename: \"balanagar\",\n        startTime: fromDate.getTime(),\n        endTime: toDate.getTime(),\n      });\n      // console.log(\"getImages\", response.data);\n      setImages(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleView = () => {\n    getIdealImages();\n    getImages();\n  };\n\n  const handleImageClick = (url, info) => {\n    // console.log(url, info);\n    setOpenImageModal(true);\n    setSelectedImage(url);\n    setSelectedImageInfo(info);\n  };\n\n  const handleImageModalClose = () => {\n    setOpenImageModal(false);\n  };\n\n  return (\n    <div>\n      <Grid container alignItems=\"flex-end\">\n        <Grid item>\n          <MultiDropdownSingle\n            label=\"Sites\"\n            items={siteOptions}\n            selectedItems={selectedSites}\n            handleChange={handleSiteChange}\n          />\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <FormControl style={{ width: 80 }}>\n            <InputLabel id=\"table-id-select-label\">Table Id</InputLabel>\n            <Select\n              labelId=\"table-id-select-label\"\n              id=\"table-id-select\"\n              value={tableId}\n              onChange={handleTableIdChange}\n              style={{ fontSize: \".8rem\" }}\n            >\n              <MenuItem value={1}>1</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <FormControl style={{ width: 80 }}>\n            <InputLabel id=\"sensor-id-select-label\">Sensor Id</InputLabel>\n            <Select\n              labelId=\"sensor-id-select-label\"\n              id=\"sensor-id-select\"\n              value={sensorId}\n              onChange={handleSensorIdChange}\n              style={{ fontSize: \".8rem\" }}\n            >\n              <MenuItem value={1}>1</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <Dates\n            fromDate={fromDate}\n            setFromDate={setFromDate}\n            toDate={toDate}\n            setToDate={setToDate}\n          />\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <Button variant=\"outlined\" onClick={handleView}>\n            View\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container style={{ marginTop: \"1rem\" }}>\n        <Ideal\n          data={data}\n          serverUrl={serverUrl}\n          handleImageClick={handleImageClick}\n        />\n      </Grid>\n      <Grid container style={{ marginTop: \"1.5rem\" }}>\n        <Gallary\n          itemData={images}\n          serverUrl={serverUrl}\n          handleImageClick={handleImageClick}\n        />\n      </Grid>\n      <Modal\n        open={openImageModal}\n        onClose={handleImageModalClose}\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        {selectedImage && (\n          <div>\n            <div style={{ color: \"#fff\" }}>{selectedImageInfo}</div>\n            <img src={selectedImage} alt={selectedImageInfo} width={800} />\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n}\n\nexport default TableSensor;\n","export const tempSitesBlocksInverters = [\n  { name: \"Balanagar\", blocks: [{ name: \"B01\", inverters: [{ name: 1 }] }] },\n];\n\nexport const siteNamesCaps = JSON.parse(localStorage.getItem(\"siteNamesCaps\"));\nexport const siteNamesAndBlocks = JSON.parse(\n  localStorage.getItem(\"siteNamesAndBlocks\")\n);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nexport default function InvertersTable({ tableDataObj }) {\n  const { columns, data } = tableDataObj;\n\n  const rowsConst = 10;\n\n  const [page, setPage] = useState(0);\n\n  const [pageCount, setPageCount] = useState(0);\n\n  const [paginatedData, setPaginatedData] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      // console.log(data);\n      setPage(() => (data.length > 0 ? 1 : 0));\n      setPageCount(() =>\n        data.length > 0 ? Math.ceil(data.length / rowsConst) : 0\n      );\n      setPaginatedData(() => (data.length > 0 ? data.slice(0, rowsConst) : []));\n    }\n  }, [data]);\n\n  const handlePageChange = (event, value) => {\n    let paginatedData = data.slice(rowsConst * (value - 1), rowsConst * value);\n    setPaginatedData(paginatedData);\n    setPage(value);\n  };\n\n  return (\n    <Grid container>\n      <TableContainer component={Paper} style={{ maxWidth: \"89vw\" }}>\n        <Table size=\"small\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow style={{ backgroundColor: \"#ffffbf\" }}>\n              {columns.map((column) => (\n                <TableCell style={{ color: \"#000\" }}>{column}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedData.map((row, index) => {\n              return (\n                <TableRow\n                  key={index}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  {row.map((el, innerIdx) => {\n                    if (innerIdx === 0) {\n                      return (\n                        <TableCell component=\"th\" scope=\"row\">\n                          {new Date(Number(el) * 1000).toLocaleString()}\n                        </TableCell>\n                      );\n                    } else {\n                      return <TableCell>{el}</TableCell>;\n                    }\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Grid\n        container\n        justify=\"flex-end\"\n        style={{ marginTop: \".25rem\", paddingRight: \"1rem\" }}\n      >\n        <Grid item>\n          <Pagination\n            count={pageCount}\n            page={page}\n            onChange={handlePageChange}\n            shape=\"rounded\"\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import \"date-fns\";\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nexport default function MaterialUIPickers({\n  fromDate,\n  setFromDate,\n  toDate,\n  setToDate,\n  disable,\n}) {\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(date);\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      {/* <KeyboardDatePicker\n        disableToolbar\n        variant=\"inline\"\n        format=\"MM/dd/yyyy\"\n        margin=\"normal\"\n        id=\"date-picker-inline\"\n        label=\"Start Date\"\n        value={fromDate}\n        onChange={handleFromDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n        InputProps={{\n          style: {\n            fontSize: \".8rem\",\n          },\n        }}\n        style={{ width: 140, padding: 0, margin: 0 }}\n      /> */}\n      <KeyboardDatePicker\n        disabled={disable}\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"Start Date\"\n        format=\"MM/dd/yyyy\"\n        value={fromDate}\n        onChange={handleFromDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n        InputProps={{\n          style: {\n            fontSize: \".8rem\",\n          },\n        }}\n        style={{ width: 140, marginBlock: 0, marginLeft: \"1rem\", padding: 0 }}\n      />\n      <KeyboardDatePicker\n        disabled={disable}\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"End Date\"\n        format=\"MM/dd/yyyy\"\n        value={toDate}\n        onChange={handleToDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n        InputProps={{\n          style: {\n            fontSize: \".8rem\",\n          },\n        }}\n        style={{ width: 140, marginBlock: 0, marginLeft: \"1rem\", padding: 0 }}\n      />\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    minWidth: 100,\n  },\n  selectEmpty: {},\n}));\n\nexport default function CustomDropdown({\n  label,\n  items,\n  handleChange,\n  selectedItem,\n}) {\n  const classes = useStyles();\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"simple-select-label\">{label}</InputLabel>\n      <Select\n        labelId=\"simple-select-label\"\n        id=\"simple-select\"\n        value={selectedItem}\n        onChange={handleChange}\n        style={{ fontSize: \".8rem\" }}\n      >\n        {items.map((item) => (\n          <MenuItem value={item}>{item}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import \"date-fns\";\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nexport default function CustomSingleDate({ date, setDate }) {\n  const handleDateChange = (date) => {\n    setDate(date);\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        disableToolbar\n        variant=\"inline\"\n        format=\"MM/dd/yyyy\"\n        margin=\"normal\"\n        id=\"date-picker-inline\"\n        label=\"Date\"\n        value={date}\n        onChange={handleDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n        InputProps={{\n          style: {\n            fontSize: \".8rem\",\n          },\n        }}\n        style={{ width: 140, padding: 0, margin: 0 }}\n      />\n    </MuiPickersUtilsProvider>\n  );\n}\n","import {\n  Button,\n  Card,\n  Grid,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { tempSitesBlocksInverters } from \"../../../constants/SiteNames\";\nimport MultiDropdownSingle from \"../../UI/MultiDropdownSingle\";\nimport { SERVER_URL } from \"../../../constants/constants\";\nimport InvertersTable from \"./InvertersTable\";\nimport Dates from \"./Dates\";\nimport { AppState } from \"../../../AppContext\";\nimport CustomDropdown from \"../../UI/CustomDropdown\";\nimport CustomSingleDate from \"../../UI/CustomSingleDate\";\n\nexport default function InvPerformance({\n  updateInverter,\n  refreshInverterTable,\n}) {\n  const { enabledLinearProgress, setEnabledLinearProgress } = AppState();\n  const [disabledViewBtn, setDisabledViewBtn] = useState(false);\n  const [disabledTableViewBtn, setDisabledTableViewBtn] = useState(false);\n\n  // const [fromDate, setFromDate] = useState(new Date(1657500309000));\n  const [fromDate, setFromDate] = useState(() => {\n    const date = new Date();\n    date.setDate(date.getDate() - 4);\n    date.setHours(0, 0, 1, 0);\n    return date;\n  });\n  const [toDate, setToDate] = useState(() => {\n    const date = new Date();\n    date.setHours(23, 59, 59, 0);\n    return date;\n  });\n\n  const [data, setData] = useState([]);\n  // const [max, setMax] = useState(0);\n\n  // if multiple sites, all blocks; if single site and multiple blocks, all inverters\n  const [sitesBlocksInverters, setSitesBlocksInverters] = useState(\n    tempSitesBlocksInverters\n  );\n  const [selectedSites, setSelectedSites] = useState(\n    sitesBlocksInverters[0].name\n  );\n\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n\n  const getSites = (sites = siteNamesAndBlocks) => {\n    return sites.map((site) => site.name);\n  };\n\n  const [siteOptions, setSiteOptions] = useState(getSites());\n\n  const [selectedBlocks, setSelectedBlocks] = useState(\n    sitesBlocksInverters[0].blocks.map((block) => block.name)\n  );\n  const [selectedInverters, setSelectedInverters] = useState([\n    sitesBlocksInverters[0].blocks[0].inverters[0],\n  ]);\n  const [tableData, setTableData] = useState(null);\n  // const [tableDataCopy, setTableDataCopy] = useState([]);\n\n  const [searchField, setSearchField] = useState(\"\");\n\n  const handleSearchFieldChange = (event) => {\n    let value = event.target.value;\n    setSearchField(value);\n  };\n\n  const fetchDropdownValues = () => {\n    // console.log(\"fetch drop down values\");\n    // console.log(\"Hitting: \", SERVER_URL + \"/manageinverters/inverters\");\n    axios.post(SERVER_URL + \"/manageinverters/inverters\").then((response) => {\n      // console.log(\"======>\", response.data);\n      let sites = response.data.sort((a, b) =>\n        a.name > b.name ? 1 : b.name > a.name ? -1 : 0\n      );\n      // console.log(\"fetched sites\", sites);\n      setSitesBlocksInverters(sites);\n      setSelectedSites(sites[0].name);\n      setSelectedBlocks(sites[0].blocks.map((block) => block.name));\n      setSelectedSiteForTable(sites[0].name);\n      setSelectedBlocksForTable(sites[0].blocks.map((block) => block.name));\n      // setSelectedInverters([sites[18].blocks[0].inverters[0]]);\n    });\n  };\n\n  useEffect(() => {\n    fetchDropdownValues();\n  }, []);\n\n  const [selectedSiteForTable, setSelectedSiteForTable] = useState(\"Balanagar\");\n\n  const [selectedBlocksForTable, setSelectedBlocksForTable] = useState(\n    sitesBlocksInverters[0].blocks.map((block) => block.name)\n  );\n\n  const [tableDate, setTableDate] = useState(() => {\n    const date = new Date();\n    date.setDate(date.getDate() - 2);\n    date.setHours(0, 0, 1, 0);\n    return date;\n  });\n\n  const getEndTimeForTable = (time) => {\n    const date = new Date(time);\n    date.setHours(23, 59, 59, 0);\n    return date.getTime();\n  };\n\n  const handleTableSiteChange = (event) => {\n    let value = event.target.value;\n    setSelectedSiteForTable(value);\n\n    setSelectedBlocksForTable(\n      sitesBlocksInverters\n        .find((site) => site.name === value)\n        .blocks.map((block) => block.name)\n    );\n  };\n\n  const handleTableBlocksChange = (event) => {\n    let value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setSelectedBlocksForTable(\n        selectedBlocksForTable.length ===\n          sitesBlocksInverters.find(\n            (site) => site.name === selectedSiteForTable\n          ).blocks.length\n          ? []\n          : sitesBlocksInverters\n              .find((site) => site.name === selectedSiteForTable)\n              .blocks.map((block) => block.name)\n      );\n      return;\n    }\n\n    setSelectedBlocksForTable(value);\n  };\n\n  const handleSitesChange = (event) => {\n    let value = event.target.value;\n\n    // if (value[value.length - 1] === \"all\") {\n    //   setSelectedSites(\n    //     selectedSites.length === sitesBlocksInverters.length\n    //       ? []\n    //       : sitesBlocksInverters.map((site) => site.name)\n    //   );\n    //   return;\n    // }\n\n    setSelectedSites(value);\n\n    // if (value.length > 1) {\n    //   setSelectedBlocks([\"All\"]);\n    // } else {\n    //   setSelectedBlocks(\n    //     sitesBlocksInverters\n    //       .find((site) => site.name === value[0])\n    //       .blocks.map((block) => block.name)\n    //   );\n    // }\n\n    setSelectedBlocks(\n      sitesBlocksInverters\n        .find((site) => site.name === value)\n        .blocks.map((block) => block.name)\n    );\n  };\n\n  const handleBlocksChange = (event) => {\n    let value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setSelectedBlocks(\n        selectedBlocks.length ===\n          sitesBlocksInverters.find((site) => site.name === selectedSites)\n            .blocks.length\n          ? []\n          : sitesBlocksInverters\n              .find((site) => site.name === selectedSites)\n              .blocks.map((block) => block.name)\n      );\n      return;\n    }\n\n    setSelectedBlocks(value);\n  };\n\n  const handleInvertersChange = (event) => {\n    let value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setSelectedInverters(\n        selectedInverters.length ===\n          sitesBlocksInverters[0].blocks[0].inverters.length\n          ? []\n          : sitesBlocksInverters[0].blocks[0].inverters\n      );\n      return;\n    }\n\n    setSelectedInverters(value.map((element) => ({ name: element })));\n  };\n\n  const getEndTime = (timestamp) => {\n    const date = new Date(timestamp);\n    date.setHours(23, 59, 0, 0);\n    return date.getTime();\n  };\n\n  const handleView = () => {\n    // console.log(\n    //   \"handleView\",\n    //   selectedSites,\n    //   selectedBlocks,\n    //   fromDate.getTime(),\n    //   toDate.getTime()\n    // );\n\n    setEnabledLinearProgress(true);\n    setDisabledViewBtn(true);\n    // get cards data\n    axios\n      .post(SERVER_URL + \"/invPerformance\", {\n        sites: [selectedSites],\n\n        blocks:\n          selectedSites.length > 1\n            ? [\"all\"]\n            : selectedBlocks.map((element) => element.name),\n        // inverters:\n        //   selectedBlocks.length > 1\n        //     ? [\"all\"]\n        //     : selectedInverters,\n        startTime: fromDate.getTime(),\n        endTime: toDate.getTime(),\n      })\n      .then((response) => {\n        // console.log(\"invPerformance\", response.data);\n        setEnabledLinearProgress(false);\n        setDisabledViewBtn(false);\n        const data = response.data;\n\n        // setMax(max);\n        setData(data);\n      })\n      .catch((err) => {\n        setEnabledLinearProgress(false);\n        setDisabledViewBtn(false);\n        console.log(\"invPerformance\", err);\n      });\n  };\n\n  const handleTableView = () => {\n    // console.log(\n    //   selectedSiteForTable,\n    //   selectedBlocksForTable,\n    //   tableDate,\n    //   new Date(getEndTimeForTable(tableDate.getTime())).toLocaleString()\n    // );\n\n    setEnabledLinearProgress(true);\n    setDisabledTableViewBtn(true);\n\n    // get table data\n    axios\n      .post(SERVER_URL + \"/invPerformance/invdetails\", {\n        sites: [selectedSiteForTable],\n        blocks: selectedBlocksForTable,\n        startTime: tableDate.getTime(),\n        endTime: getEndTimeForTable(tableDate.getTime()),\n      })\n      .then((response) => {\n        // console.log(\"invPerformanceTable\", response.data);\n        const data = response.data;\n        setTableData(data);\n        setEnabledLinearProgress(false);\n        setDisabledTableViewBtn(false);\n      })\n      .catch((err) => {\n        console.log(\"invPerformanceTable\", err);\n        setEnabledLinearProgress(false);\n        setDisabledTableViewBtn(false);\n      });\n  };\n\n  const setAndGetAll = (dropdown) => {\n    // if (dropdown === 'inverters') {\n    //     setSelectedInverters([])\n    // } else {\n    //     setSelectedBlocks([]);\n    // }\n\n    return [{ name: \"All\" }];\n  };\n\n  // console.log(\"Allsite\", sitesBlocksInverters);\n  // console.log(\"site\", selectedSites);\n  // console.log(\"block\", selectedBlocks);\n\n  const getColor = (row, max) => {\n    const num = Number(row.value);\n\n    // blue\n    let color = \"#1976d2\";\n\n    // red\n    if (num < (max * 97) / 100) {\n      color = \"#d32f2f\";\n    }\n\n    // green\n    if (num === max) {\n      color = \"#4caf50\";\n    }\n\n    return color;\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        justify=\"space-between\"\n        style={{ paddingRight: \"2rem\" }}\n        alignItems=\"flex-end\"\n      >\n        <Grid item>\n          <Grid container spacing={2} alignItems=\"flex-end\">\n            <Grid item>\n              <CustomDropdown\n                label={\"Site\"}\n                // items={sitesBlocksInverters.map((site) => site.name)}\n                items={siteOptions}\n                handleChange={handleSitesChange}\n                selectedItem={selectedSites}\n              />\n              {/* <MultiDropdownSingle\n                label={\"Site\"}\n                items={sitesBlocksInverters.map((site) => site.name)}\n                handleChange={handleSitesChange}\n                selectedItems={selectedSites}\n              /> */}\n            </Grid>\n            <Grid item>\n              <MultiDropdownSingle\n                label={\"Block\"}\n                items={\n                  sitesBlocksInverters.find(\n                    (site) => site.name === selectedSites\n                  )\n                    ? sitesBlocksInverters\n                        .find((site) => site.name === selectedSites)\n                        .blocks.map((block) => block.name)\n                    : []\n                }\n                handleChange={handleBlocksChange}\n                selectedItems={selectedBlocks}\n              />\n            </Grid>\n            {/* <Grid item>\n              <MultiDropdownSingle\n                label={\"Inverter\"}\n                items={\n                  selectedSites.length > 1 || selectedBlocks.length > 1\n                    ? []\n                    : selectedSites[0].blocks[0].inverters\n                }\n                handleChange={handleInvertersChange}\n                selectedItems={\n                  selectedSites.length > 1 || selectedBlocks.length > 1\n                    ? setAndGetAll(\"inverters\")\n                    : selectedInverters\n                }\n              />\n            </Grid> */}\n            <Grid item>\n              <Dates\n                fromDate={fromDate}\n                setFromDate={setFromDate}\n                toDate={toDate}\n                setToDate={setToDate}\n              />\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                color=\"primary\"\n                onClick={handleView}\n                // disabled={enabledLinearProgress}\n                disabled={disabledViewBtn}\n              >\n                {/* {enabledLinearProgress ? \"Loading\" : \"View\"} */}\n                {disabledViewBtn ? \"Loading\" : \"View\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid container style={{ paddingRight: \"1rem\" }}>\n        {data.map((day) => {\n          let max = 0;\n          day.data.forEach((el) => {\n            if (Number(el.value) > max) {\n              max = Number(el.value);\n            }\n          });\n          return (\n            <Grid container style={{ marginTop: \"1rem\" }} key={day.timestamp}>\n              <Grid item style={{ marginRight: \"1rem\" }}>\n                <Grid item>\n                  <small style={{ fontSize: \".8rem\" }}>{day.site}</small>\n                  <br />\n                  <small style={{ fontSize: \".8rem\" }}>\n                    {new Date(day.timestamp * 1000).toLocaleDateString()}\n                  </small>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={1}>\n                  {day.data.map((datum, index) => {\n                    return (\n                      <Grid item key={index}>\n                        <Tooltip\n                          title={\n                            <span>\n                              <span>{datum.techName}</span>\n                              <br />\n                              <span>{datum.techMob}</span>\n                            </span>\n                          }\n                          placement=\"top\"\n                        >\n                          <Card\n                            style={{\n                              width: 90,\n                              padding: \".25rem\",\n                              borderBottom: \"3px solid \" + getColor(datum, max),\n\n                              // color: \"#fff\",\n                            }}\n                          >\n                            <Grid container>\n                              <Grid item xs={12}>\n                                <small style={{ fontSize: \".75rem\" }}>\n                                  Block: {datum.name}\n                                </small>\n                              </Grid>\n                              <Grid item xs={12}>\n                                <small style={{ fontSize: \".75rem\" }}>\n                                  Value: <strong>{datum.value}</strong>\n                                </small>\n                              </Grid>\n                            </Grid>\n                          </Card>\n                        </Tooltip>\n                      </Grid>\n                    );\n                  })}\n                </Grid>\n              </Grid>\n            </Grid>\n          );\n        })}\n      </Grid>\n\n      <Grid\n        container\n        style={{ marginTop: \"1rem\" }}\n        alignItems=\"flex-end\"\n        spacing={2}\n      >\n        <Grid item>\n          <CustomDropdown\n            label={\"Site\"}\n            // items={sitesBlocksInverters.map((site) => site.name)}\n            items={siteOptions}\n            handleChange={handleTableSiteChange}\n            selectedItem={selectedSiteForTable}\n          />\n        </Grid>\n        <Grid item>\n          <MultiDropdownSingle\n            label={\"Blocks\"}\n            items={\n              sitesBlocksInverters.find(\n                (site) => site.name === selectedSiteForTable\n              )\n                ? sitesBlocksInverters\n                    .find((site) => site.name === selectedSiteForTable)\n                    .blocks.map((block) => block.name)\n                : []\n            }\n            handleChange={handleTableBlocksChange}\n            selectedItems={selectedBlocksForTable}\n          />\n        </Grid>\n        <Grid item>\n          <CustomSingleDate date={tableDate} setDate={setTableDate} />\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            color=\"primary\"\n            onClick={handleTableView}\n            // disabled={enabledLinearProgress}\n            disabled={disabledTableViewBtn}\n          >\n            {disabledTableViewBtn ? \"Loading\" : \"View\"}\n          </Button>\n        </Grid>\n      </Grid>\n\n      {tableData && (\n        <Grid container style={{ marginTop: \"1rem\" }}>\n          <InvertersTable tableDataObj={tableData} />\n        </Grid>\n      )}\n    </>\n  );\n}\n","import { Snackbar } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport * as React from \"react\";\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport default function ScbSnackbar({ open, severity, message, handleToggle }) {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    handleToggle(false);\n  };\n\n  return (\n    <Snackbar\n      open={open}\n      // autoHideDuration={4000}\n      onClose={handleClose}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n    >\n      <Alert onClose={handleClose} severity={severity} sx={{ width: \"100%\" }}>\n        {message}\n      </Alert>\n    </Snackbar>\n  );\n}\n","import \"date-fns\";\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nexport default function MaterialUIPickers({\n  fromDate,\n  setFromDate,\n  toDate,\n  setToDate,\n}) {\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(date);\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      {/* <KeyboardDatePicker\n        disableToolbar\n        variant=\"inline\"\n        format=\"MM/dd/yyyy\"\n        margin=\"normal\"\n        id=\"date-picker-inline\"\n        label=\"Start Date\"\n        value={fromDate}\n        onChange={handleFromDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n        InputProps={{\n          style: {\n            fontSize: \".8rem\",\n          },\n        }}\n        style={{ width: 140, padding: 0, margin: 0 }}\n      /> */}\n      <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"Start Date\"\n        format=\"MM/dd/yyyy\"\n        value={fromDate}\n        onChange={handleFromDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n        InputProps={{\n          style: {\n            fontSize: \".8rem\",\n          },\n        }}\n        style={{ width: 140, marginBlock: 0, marginLeft: \"1rem\", padding: 0 }}\n      />\n      <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"End Date\"\n        format=\"MM/dd/yyyy\"\n        value={toDate}\n        onChange={handleToDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n        InputProps={{\n          style: {\n            fontSize: \".8rem\",\n          },\n        }}\n        style={{ width: 140, marginBlock: 0, marginLeft: \"1rem\", padding: 0 }}\n      />\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React from \"react\";\nimport { Grid, Button, Tooltip, Card, Typography } from \"@material-ui/core\";\n// import CustomDropdown from \"../../UI/CustomDropdown\";\nimport { tempSitesBlocksInverters } from \"../../../constants/SiteNames\";\nimport { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { AppState } from \"../../../AppContext\";\nimport ScbSnackbar from \"./ScbSnackbar\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport axios from \"axios\";\nimport { SERVER_URL } from \"../../../constants/constants\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport Dates from \"./Dates\";\nimport MultiDropdown from \"../../UI/MultiDropdown\";\nimport MultiDropdownSingle from \"../../UI/MultiDropdownSingle\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  indeterminateColor: {\n    color: \"blue\",\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 25,\n    },\n  },\n};\n\n// const tempSitesBlocksInverters = [\n//   {\n//     name: \"Badisidd\",\n//     blocks: [{ name: \"B01\", inverters: [{ name: \"I01\" }] }],\n//   },\n// ];\n\nconst invertervalue = [\"I01\", \"I02\", \"I03\", \"I04\"];\n// const names = [\n//   \"Oliver Hansen\",\n//   \"Van Henry\",\n//   \"April Tucker\",\n//   \"Ralph Hubbard\",\n//   \"Omar Alexander\",\n//   \"Carlos Abbott\",\n//   \"Miriam Wagner\",\n//   \"Bradley Wilkerson\",\n//   \"Virginia Andrews\",\n//   \"Kelly Snyder\",\n// ];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function ScbPerformance() {\n  const { enabledLinearProgress, setEnabledLinearProgress } = AppState();\n\n  const [disabledViewBtn, setDisabledViewBtn] = useState(false);\n\n  const classes = useStyles();\n\n  const theme = useTheme();\n  // const [personName, setPersonName] = React.useState([\"Oliver Hansen\"]);\n  const [checked, setChecked] = useState(false);\n\n  // const [fromDate, setFromDate] = useState(new Date(1657500309000));\n  const [fromDate, setFromDate] = useState(() => {\n    const date = new Date();\n    date.setDate(date.getDate() - 4);\n    date.setHours(0, 0, 1, 0);\n    return date;\n  });\n  const [toDate, setToDate] = useState(() => {\n    const date = new Date();\n    date.setHours(23, 59, 59, 0);\n    return date;\n  });\n\n  const handleCheck = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  // console.log(checked);\n\n  const [data, setData] = useState([]);\n  // const [siteError, setSiteError] = useState(\"\");\n\n  const [snackbarState, setSnackbarState] = useState({\n    open: false,\n    severity: \"info\",\n    message: \"snackbar\",\n  });\n\n  const handleToggle = (bool) => {\n    setSnackbarState((prevState) => ({ ...prevState, open: bool }));\n  };\n\n  const [allSiteInverter, setAllSiteInverter] = useState(\n    tempSitesBlocksInverters\n  );\n\n  const [selectedSite, setSelectedSite] = useState([allSiteInverter[0].name]);\n\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n\n  const getSites = (sites = siteNamesAndBlocks) => {\n    return sites.map((site) => site.name);\n  };\n\n  const [siteOptions, setSiteOptions] = useState(getSites());\n\n  const [selectedBlock, setSelectedBlock] = useState(\n    allSiteInverter[0].blocks.map((block) => block.name)\n  );\n\n  // const [selectedInverter, setSelectedInverter] = useState([\n  //   allSiteInverter[0].blocks[0].inverters[0],\n  // ]);\n  const [selectedInverter, setSelectedInverter] = useState([\"I01\"]);\n\n  const [selected, setSelected] = useState([]);\n\n  const fetchDropdownValues = () => {\n    // console.log(\"fetch drop down values\");\n    // console.log(\"Hitting: \", SERVER_URL + \"/manageinverters/inverters\");\n    axios.post(SERVER_URL + \"/manageinverters/inverters\").then((response) => {\n      // console.log(\"======>\", response.data);\n      let sites = response.data.sort((a, b) =>\n        a.name > b.name ? 1 : b.name > a.name ? -1 : 0\n      );\n      // console.log(\"fetched sites\", sites);\n\n      setAllSiteInverter(sites);\n      setSelectedSite(sites[0].name);\n      setSelectedBlock(sites[0].blocks[0].name);\n      // setSelectedInverter([sites[0].blocks[0].inverters[0]]);\n      // setSelectedSiteForTable(sites[18].name);\n      // setSelectedBlocksForTable(sites[18].blocks.map((block) => block.name));\n      // setSelectedInverters([sites[18].blocks[0].inverters[0]]);\n    });\n  };\n\n  // console.log(\"Allsites\", allSiteInverter);\n  // console.log(\"sites\", selectedSite);\n  // console.log(\"Block\", selectedBlock);\n  // console.log(\"Inverter\", selectedInverter);\n\n  useEffect(() => {\n    fetchDropdownValues();\n  }, []);\n\n  const isAllSelected = allSiteInverter.find(\n    (site) => site.name === selectedSite\n  )\n    ? allSiteInverter\n        .find((site) => site.name === selectedSite)\n        .blocks.map((block) => block.name)\n    : [].length > 0 &&\n      selectedInverter.length ===\n        allSiteInverter.find((site) => site.name === selectedSite)\n    ? allSiteInverter\n        .find((site) => site.name === selectedSite)\n        .blocks.map((block) => block.name)\n    : [].length;\n\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(date);\n  };\n\n  const handleSiteChange = (event) => {\n    let value = event.target.value;\n\n    // if (value[value.length - 1] === \"all\") {\n    //   setSelectedSites(\n    //     selectedSites.length === sitesBlocksInverters.length\n    //       ? []\n    //       : sitesBlocksInverters.map((site) => site.name)\n    //   );\n    //   return;\n    // }\n\n    setSelectedSite(value);\n\n    // if (value.length > 1) {\n    //   setSelectedBlocks([\"All\"]);\n    // } else {\n    //   setSelectedBlocks(\n    //     sitesBlocksInverters\n    //       .find((site) => site.name === value[0])\n    //       .blocks.map((block) => block.name)\n    //   );\n    // }\n\n    let blocks = allSiteInverter\n      .find((site) => site.name === value)\n      .blocks.map((block) => block.name);\n    let singleblock = blocks[0];\n    setSelectedBlock(singleblock);\n    // setSelectedBlock(\n    //   allSiteInverter\n    //     .find((site) => site.name === value)\n    //     .blocks.map((block) => block.name)\n    // );\n    // setSelectedInverter(\n    //   allSiteInverter\n    //     .find((site) => site.name === value)\n    //     .blocks.inverters.map((inv) => inv.name)\n    // );\n  };\n\n  // const [selected, setSelected] = useState([]);\n  // items = selectedItems, item = currennt selected item\n  const isChecked = (items, item) => {\n    let isChecked = false;\n    items.forEach((element) => {\n      if (element === item) {\n        isChecked = true;\n      }\n    });\n    return isChecked;\n  };\n\n  const handleBlockChange = (event) => {\n    let value = event.target.value;\n\n    // if (value[value.length - 1] === \"all\") {\n    //   setSelectedBlock(\n    //     selectedBlock.length ===\n    //       allSiteInverter.find((site) => site.name === selectedSite).blocks\n    //         .length\n    //       ? []\n    //       : allSiteInverter\n    //           .find((site) => site.name === selectedSite)\n    //           .blocks.map((block) => block.name)\n    //   );\n    //   return;\n    // }\n\n    setSelectedBlock(value);\n  };\n\n  const handleInverterChange = (event) => {\n    let value = event.target.value.sort();\n\n    if (value[value.length - 1] === \"all\") {\n      // console.log(\"abc\");\n      if (selectedInverter.length === 0) {\n        setSelectedInverter(getInverterOptions());\n      } else {\n        setSelectedInverter([]);\n      }\n\n      return;\n    }\n    setSelectedInverter(value);\n    // setSelectedInverter(value.map((element) => ({ name: element })));\n  };\n\n  const setAndGetAll = (dropdown) => {\n    // if (dropdown === 'inverters') {\n    //     setSelectedInverters([])\n    // } else {\n    //     setSelectedBlocks([]);\n    // }\n\n    return [{ name: \"All\" }];\n  };\n\n  const handleViews = () => {\n    // console.log(\n    // \"handleView\"\n    // selectedSite,\n    // selectedBlock,\n    // selectedInverter,\n    // fromDate.getTime(),\n    // toDate.getTime()\n    // );\n    // setSiteError(\"\");\n    setSnackbarState({ open: false });\n    setEnabledLinearProgress(true);\n    setDisabledViewBtn(true);\n\n    // get cards data\n    axios\n      .post(SERVER_URL + \"/scbPerformance/\", {\n        site: [selectedSite],\n        block: [selectedBlock],\n        // block: selectedSite.length > 1 ? [\"all\"] : selectedBlock,\n        inverter: selectedInverter,\n        // inverter:\n        //   selectedBlocks.length > 1\n        //     ? [\"all\"]\n        //     : selectedInverters,\n        startTime: fromDate.getTime(),\n        endTime: toDate.getTime(),\n      })\n      .then((response) => {\n        // console.log(\"scbPerformance\", response);\n        setEnabledLinearProgress(false);\n        setDisabledViewBtn(false);\n\n        // const data = response.data;\n        // setMax(max);\n        // setData(data);\n        if (response.status === 200) {\n          setData(response.data);\n        } else {\n          setSnackbarState({\n            open: true,\n            severity: \"info\",\n            message: `${response.data}`,\n          });\n        }\n      })\n      .catch((err) => {\n        setEnabledLinearProgress(false);\n        setDisabledViewBtn(false);\n        // console.log(\"error---->\", err);\n      });\n  };\n  // console.log(data);\n  // const filteredValue = data.value?.filter((x) => x.value == 0);\n\n  // console.log(filteredValue);\n\n  const getColor = (row, max) => {\n    // console.log(\"366\", row, max);\n    const num = Number(row.value);\n    // console.log(\"368\", num);\n    // blue\n    let color = \"#1976d2\";\n\n    // red\n    if (num < (max * 95) / 100) {\n      color = \"#d32f2f\";\n    }\n\n    // green\n    if (num === max) {\n      color = \"#4caf50\";\n    }\n\n    return color;\n  };\n\n  const getInverterOptions = () => {\n    let inverters = [];\n    try {\n      const site = allSiteInverter.find((site) => site.name === selectedSite);\n      const block = site[\"blocks\"].find(\n        (block) => block.name === selectedBlock\n      );\n      const foundInveters = block?.inverters.map((inv) => inv.name);\n      inverters = foundInveters.length > 0 ? foundInveters.sort() : [];\n    } catch (error) {\n      inverters = [];\n    }\n    return inverters;\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-start\"\n        style={{ marginTop: \"-1rem\" }}\n      >\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            {/* <InputLabel id=\"demo-mutiple-name-label\">Sites</InputLabel>\n          <Select\n            labelId=\"demo-mutiple-name-label\"\n            id=\"demo-mutiple-name\"\n            // multiple\n            value={selectedSite}\n            onChange={handleSiteChange}\n            // input={<Input />}\n            // MenuProps={MenuProps}\n          >\n            {selectedSite.map((name) => (\n              <MenuItem\n                key={name}\n                value={name}\n                style={getStyles(name, personName, theme)}\n              >\n                {name}\n              </MenuItem>\n            ))}\n          </Select> */}\n            <InputLabel id=\"simple-select-label\">Sites</InputLabel>\n            <Select\n              labelId=\"simple-select-label\"\n              id=\"simple-select\"\n              value={selectedSite}\n              onChange={handleSiteChange}\n              style={{ fontSize: \".8rem\" }}\n            >\n              {/* {allSiteInverter.map((site) => site.name)} */}\n              {siteOptions.map((item) => (\n                <MenuItem value={item}>{item}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item style={{ marginRight: \"0rem\" }}>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"simple-select-label\">Blocks</InputLabel>\n            <Select\n              labelId=\"simple-select-label\"\n              id=\"simple-select\"\n              value={selectedBlock}\n              onChange={handleBlockChange}\n              style={{ fontSize: \".8rem\", maxWidth: \"4rem\" }}\n            >\n              {/* {allSiteInverter.map((site) => site.name)} */}\n              {(allSiteInverter.find((site) => site.name === selectedSite)\n                ? allSiteInverter\n                    .find((site) => site.name === selectedSite)\n                    .blocks.map((block) => block.name)\n                : []\n              ).map((item) => (\n                <MenuItem value={item}>{item}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        {/* <Grid item>\n          <FormControl className={classes.formControl}>\n            <InputLabel id={`Inverters-select-label`}>Inverters</InputLabel>\n\n            <Select\n              labelId=\"simple-select-label\"\n              id=\"simple-select\"\n              value={selectedInverter}\n              onChange={handleInverterChange}\n              style={{ fontSize: \".8rem\" }}\n            >\n              {/* {allSiteInverter.map((site) => site.name)} \n              {invertervalue.map((item) => (\n                <MenuItem value={item}>{item}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid> */}\n        <Grid\n          item\n          style={{\n            marginLeft: \"-3.5rem\",\n            marginTop: \"0.5rem\",\n            marginRight: \"1.8rem\",\n          }}\n        >\n          {/* <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-mutiple-name-label\">Inverters</InputLabel>\n            <Select\n              labelId=\"demo-mutiple-name-label\"\n              id=\"demo-mutiple-name\"\n              multiple\n              value={selectedInverter}\n              onChange={handleInverterChange}\n              input={<Input />}\n              MenuProps={MenuProps}\n              style={{\n                maxWidth: \"6rem\",\n                fontSize: \"0.8rem\",\n                minWidth: \"3rem\",\n              }}\n            >\n              {invertervalue.map((name) => (\n                <MenuItem\n                  key={name}\n                  value={name}\n                  style={getStyles(name, personName, theme)}\n                >\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl> */}\n          <MultiDropdownSingle\n            label={\"Inverter\"}\n            items={getInverterOptions()}\n            handleChange={handleInverterChange}\n            selectedItems={selectedInverter}\n          />\n        </Grid>\n        {/* <Grid item>\n          <MultiDropdown\n            label={\"Inverter\"}\n            items={\n              selectedSite.length > 1 || selectedBlock.length > 1\n                ? []\n                : selectedSite[0].blocks[0].inverters\n            }\n            han\n            dleChange={handleInverterChange}\n            selectedItems={\n              selectedSite.length > 1 || selectedBlock.length > 1\n                ? setAndGetAll(\"inverters\")\n                : selectedInverter\n            }\n          />\n        </Grid> */}\n        <Grid\n          item\n          style={{\n            marginLeft: \"-2rem\",\n            marginRight: \"1rem\",\n            marginTop: \"0.5rem\",\n          }}\n        >\n          <Dates\n            fromDate={fromDate}\n            setFromDate={setFromDate}\n            toDate={toDate}\n            setToDate={setToDate}\n          />\n        </Grid>\n        {/* <Grid\n          item\n          style={{\n            marginLeft: \"-2rem\",\n            marginRight: \"1rem\",\n            marginTop: \"0.5rem\",\n          }}\n        >\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              margin=\"normal\"\n              id=\"date-picker-dialog\"\n              label=\"Start Date\"\n              format=\"MM/dd/yyyy\"\n              value={fromDate}\n              onChange={handleFromDateChange}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\",\n              }}\n              InputProps={{\n                style: {\n                  fontSize: \".8rem\",\n                },\n              }}\n              style={{\n                width: 140,\n                marginBlock: 0,\n                marginLeft: \"1rem\",\n                padding: 0,\n              }}\n            />\n            <KeyboardDatePicker\n              margin=\"normal\"\n              id=\"date-picker-dialog\"\n              label=\"End Date\"\n              format=\"MM/dd/yyyy\"\n              value={toDate}\n              onChange={handleToDateChange}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\",\n              }}\n              InputProps={{\n                style: {\n                  fontSize: \".8rem\",\n                },\n              }}\n              style={{\n                width: 140,\n                marginBlock: 0,\n                marginLeft: \"1rem\",\n                padding: 0,\n              }}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid> */}\n        <Grid item style={{ marginTop: \"1.3rem\" }}>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            color=\"primary\"\n            onClick={handleViews}\n            // disabled={enabledLinearProgress}\n            disabled={disabledViewBtn}\n          >\n            {disabledViewBtn ? \"Loading\" : \"View\"}\n          </Button>\n        </Grid>\n        <Grid\n          item\n          style={{\n            marginTop: \"1rem\",\n            // paddingRight: \"0rem\",\n            marginLeft: \"auto\",\n          }}\n        >\n          <Checkbox\n            // defaultChecked\n            size=\"small\"\n            onClick={handleCheck}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n          />\n          <small style={{ fontSize: \"12px\" }}>Hide 0 Values</small>\n        </Grid>\n\n        {/* <Grid container style={{ paddingRight: \"1rem\" }}>\n        {data.map((day) => {\n          let max = 0;\n          day.data.forEach((el) => {\n            if (Number(el.value) > max) {\n              max = Number(el.value);\n            }\n          });\n          return (\n            <Grid container style={{ marginTop: \"1rem\" }} key={day.timestamp}>\n              <Grid item style={{ marginRight: \"1rem\" }}>\n                <Grid item>\n                  <small style={{ fontSize: \".8rem\" }}>{day.site}</small>\n                  <br />\n                  <small style={{ fontSize: \".8rem\" }}>\n                    {new Date(day.timestamp * 1000).toLocaleDateString()}\n                  </small>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={1}>\n                  {day.data.map((datum, index) => {\n                    return (\n                      <Grid item key={index}>\n                        <Tooltip\n                          title={\n                            <span>\n                              <span>{datum.techName}</span>\n                              <br />\n                              <span>{datum.techMob}</span>\n                            </span>\n                          }\n                          placement=\"top\"\n                        >\n                        <Card\n                          style={{\n                            width: 90,\n                            padding: \".25rem\",\n                            borderBottom: \"3px solid \" + getColor(datum, max),\n\n                            color: \"#fff\",\n                          }}\n                        >\n                          <Grid container>\n                            <Grid item xs={12}>\n                              <small style={{ fontSize: \".75rem\" }}>\n                                Block: {datum.name}\n                                SC:\n                              </small>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <small style={{ fontSize: \".75rem\" }}>\n                                  Value: <strong>{datum.value}</strong>\n                                </small>\n                              </Grid>\n                          </Grid>\n                        </Card>\n                        </Tooltip>\n                      </Grid>\n                    );\n                  })}\n                </Grid>\n              </Grid>\n            </Grid>\n          );\n        })}\n      </Grid> */}\n      </Grid>\n      <Grid container>\n        <Grid item>\n          {snackbarState.open === true ? (\n            <ScbSnackbar\n              open={snackbarState.open}\n              severity={snackbarState.severity}\n              message={snackbarState.message}\n              handleToggle={handleToggle}\n            />\n          ) : (\n            data.map((day) => {\n              let max = 0;\n              day.data.forEach((el) => {\n                if (Number(el.value) > max) {\n                  max = Number(el.value);\n                }\n              });\n              return (\n                <Grid\n                  container\n                  style={{ marginTop: \"1rem\" }}\n                  key={day.timestamp}\n                >\n                  <Grid item style={{ marginRight: \"1rem\" }}>\n                    <Grid item>\n                      <small style={{ fontSize: \".8rem\" }}>\n                        {`${day.site} - ${day.inverter} `}\n                      </small>\n                      {/* <br /> */}\n                      <small style={{ fontSize: \".8rem\" }}>\n                        {new Date(day.timestamp * 1000).toLocaleDateString()}\n                      </small>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Grid container spacing={1}>\n                      {day.data\n                        .filter((element) => {\n                          if (element.value !== 0 && checked === true) {\n                            //element.value !== 0 && !checked\n                            return true;\n                          } else if (checked === false) {\n                            //checked === true\n                            return true;\n                          }\n                        })\n                        .map((datum, index) => {\n                          return (\n                            <Grid item key={index}>\n                              <Card\n                                style={{\n                                  width: 90,\n                                  padding: \".25rem\",\n                                  borderBottom:\n                                    \"3px solid \" + getColor(datum, max),\n\n                                  // color: \"#fff\",\n                                }}\n                              >\n                                <Grid container>\n                                  <Grid item xs={12}>\n                                    <small style={{ fontSize: \".75rem\" }}>\n                                      INV SCB: {datum.name}\n                                    </small>\n                                  </Grid>\n                                  <Grid item xs={12}>\n                                    <small style={{ fontSize: \".75rem\" }}>\n                                      Value: <strong>{datum.value}</strong>\n                                    </small>\n                                  </Grid>\n                                </Grid>\n                              </Card>\n                            </Grid>\n                          );\n                        })}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              );\n            })\n          )}\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import \"date-fns\";\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nexport default function MaterialUIPickers({\n  fromDate,\n  setFromDate,\n  toDate,\n  setToDate,\n}) {\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(date);\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      {/* <KeyboardDatePicker\n        disableToolbar\n        variant=\"inline\"\n        format=\"MM/dd/yyyy\"\n        margin=\"normal\"\n        id=\"date-picker-inline\"\n        label=\"Start Date\"\n        value={fromDate}\n        onChange={handleFromDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n        InputProps={{\n          style: {\n            fontSize: \".8rem\",\n          },\n        }}\n        style={{ width: 140, padding: 0, margin: 0 }}\n      /> */}\n      <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"Start Date\"\n        format=\"MM/dd/yyyy\"\n        value={fromDate}\n        onChange={handleFromDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n        InputProps={{\n          style: {\n            fontSize: \".8rem\",\n          },\n        }}\n        style={{ width: 120, marginBlock: 0, marginLeft: \"1rem\", padding: 0 }}\n      />\n      <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"End Date\"\n        format=\"MM/dd/yyyy\"\n        value={toDate}\n        onChange={handleToDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n        InputProps={{\n          style: {\n            fontSize: \".8rem\",\n          },\n        }}\n        style={{ width: 120, marginBlock: 0, marginLeft: \"1rem\", padding: 0 }}\n      />\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    minWidth: 60,\n    // width: \"40px\",\n  },\n  selectEmpty: {},\n}));\n\nexport default function SingleDropdown({\n  label,\n  items,\n  handleChange,\n  selectedItem,\n}) {\n  const classes = useStyles();\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"simple-select-label\">{label}</InputLabel>\n      <Select\n        labelId=\"simple-select-label\"\n        id=\"simple-select\"\n        value={selectedItem}\n        onChange={handleChange}\n        style={{ fontSize: \".8rem\" }}\n      >\n        {items.map((item) => (\n          <MenuItem value={item}>{item}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Checkbox, ListItemIcon, ListItemText } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  // styles\n}));\n\nexport default function MultiDropdown({\n  label,\n  items = [],\n  selectedItems = [],\n  handleChange,\n}) {\n  const classes = useStyles();\n\n  const isAllSelected =\n    items.length > 0 && selectedItems.length === items.length;\n\n  // items = selectedItems, item = currennt selected item\n  const isChecked = (items, item) => {\n    let isChecked = false;\n    items.forEach((element) => {\n      if (element === item) {\n        isChecked = true;\n      }\n    });\n    return isChecked;\n  };\n\n  return (\n    <FormControl style={{ maxWidth: \"100px\" }}>\n      <InputLabel id={`${label}-select-label`}>{label}</InputLabel>\n      <Select\n        style={{ fontSize: \".8rem\" }}\n        labelId={`${label}-select-label`}\n        id={`${label}-select`}\n        value={selectedItems}\n        onChange={handleChange}\n        multiple\n        renderValue={(data) => data.join(\", \")}\n        MenuProps={{\n          classes: { paper: classes.menuPaper },\n          getContentAnchorEl: () => null,\n        }}\n      >\n        <MenuItem\n          value=\"all\"\n          classes={{\n            root: isAllSelected ? classes.selectedAll : \"\",\n          }}\n          style={{ paddingBlock: 0 }}\n        >\n          <ListItemIcon>\n            <Checkbox\n              style={{ paddingBlock: 0 }}\n              size=\"small\"\n              color=\"primary\"\n              classes={{ indeterminate: classes.indeterminateColor }}\n              checked={isAllSelected || items.length === 0}\n              indeterminate={\n                selectedItems.length > 0 && selectedItems.length < items.length\n              }\n            />\n          </ListItemIcon>\n          <ListItemText\n            // classes={{ primary: classes.selectAllText }}\n            classes={{ primary: classes.listItemText }}\n            primary=\"Select All\"\n            style={{ paddingTop: \".05rem\" }}\n          />\n        </MenuItem>\n        {items.map((element, index) => {\n          return (\n            <MenuItem key={index} value={element} style={{ paddingBlock: 0 }}>\n              <ListItemIcon>\n                <Checkbox\n                  style={{ paddingBlock: 0 }}\n                  checked={isChecked(selectedItems, element)}\n                  size=\"small\"\n                  color=\"primary\"\n                />\n              </ListItemIcon>\n              <ListItemText\n                classes={{ primary: classes.listItemText }}\n                primary={element}\n                style={{ paddingTop: \".05rem\" }}\n              />\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n}\n","// import \"./styles.css\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport autoprefixer from \"autoprefixer\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\n// export default function TrendlineBiaxialLineChart({ data }) {\n//   console.log(\"Bixel data \", data);\n//   return (\n//     <ResponsiveContainer width=\"100%\" height=\"100%\">\n//       <LineChart\n//         width={500}\n//         height={450}\n//         // data={data}\n//         // margin={{\n//         //   top: 20,\n//         //   right: 30,\n//         //   left: 20,\n//         //   bottom: 5,\n//         // }}\n//       >\n//         <CartesianGrid strokeDasharray=\"3 3\" />\n//         {/* <XAxis\n//           dataKey=\"timestamp\"\n//           type=\"timestamp\"\n//           allowDuplicatedCategory={false}\n//         /> */}\n//         {/* <YAxis yAxisId=\"left\" /> */}\n\n//         {/* {data.map((v) => (\n//           <YAxis dataKey={Object.keys(v)} />\n//         ))} */}\n//         <XAxis\n//           dataKey=\"category\"\n//           type=\"category\"\n//           allowDuplicatedCategory={false}\n//         />\n//         <YAxis dataKey=\"value\" />\n//         {/* <YAxis dataKey=\"values\" /> */}\n//         {/* <YAxis yAxisId=\"right\" orientation=\"right\" /> */}\n//         <Tooltip />\n//         <Legend />\n//         {/* <Line\n//         yAxisId=\"left\"\n//         type=\"monotone\"\n//         dataKey=\"Wind Dir Instant\"\n//         stroke=\"#8884d8\"\n//         activeDot={{ r: 8 }}\n//       /> */}\n//         {data.map((s) => (\n//           <Line dataKey=\"value\" data={s.data} name={s.name} key={s.name} />\n//         ))}\n//       </LineChart>\n//     </ResponsiveContainer>\n//   );\n// }\n\nexport default function TrendlineBiaxialLineChart({\n  data,\n  alignY = { leftY: 1, rightY: 1 },\n}) {\n  // console.log(\"Bixel Data\", data);\n\n  const getLinesForOpacity = () => {\n    const objArray = Object.entries(data);\n    let obj = {};\n    objArray.forEach((element) => {\n      obj = { ...obj, [element[0]]: 1 };\n    });\n    return obj;\n  };\n\n  const CustomizedDot = (props) => {\n    const { cx, cy, stroke, payload, value, customIndex } = props;\n\n    // console.log(payload);\n    // console.log(\"customIndex\", customIndex);\n\n    switch (customIndex) {\n      case 1:\n        return (\n          <rect\n            x={cx - 2.5}\n            y={cy - 2.5}\n            width=\"5\"\n            height=\"5\"\n            stroke={stroke}\n            fill=\"#fff\"\n          />\n        );\n      case 2:\n        return (\n          <polygon\n            points={String(\n              `${cx},${cy - 2.5} ${cx + 2.5},${cy + 2.5} ${cx - 2.5},${\n                cy + 2.5\n              }`\n            )}\n            stroke={stroke}\n            fill=\"#fff\"\n          />\n        );\n      default:\n        return <circle cx={cx} cy={cy} r=\"3\" stroke={stroke} fill=\"#fff\" />;\n    }\n  };\n\n  const [opacity, setOpacity] = useState(getLinesForOpacity());\n\n  const selectLine = (dataKey) => {\n    setOpacity((prevState) => {\n      return { ...prevState, [dataKey]: prevState[dataKey] === 0 ? 1 : 0 };\n    });\n  };\n\n  const renderLegend = ({ payload }) => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          gap: \"5px\",\n        }}\n      >\n        {payload.map(({ dataKey, color }) => {\n          return (\n            <strong\n              key={dataKey}\n              style={{\n                fontSize: \"0.8rem\",\n                color: color,\n                cursor: \"pointer\",\n                opacity: opacity[dataKey] === 0 ? 0.5 : 1,\n              }}\n              onClick={() => selectLine(dataKey)}\n            >\n              {String(dataKey).toUpperCase()}\n            </strong>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const renderTooltip = ({ payload }) => {\n    // let pay = [\n    //   {\n    //     chartType: undefined,\n    //     color: \"#2196f3\",\n    //     dataKey: \"Humidity_Instant_y1\",\n    //     fill: \"#fff\",\n    //     formatter: undefined,\n    //     name: \"Humidity_Instant_y1\",\n    //     payload: {\n    //       Humidity_Instant_y1: 74,\n    //       Humidity_Instant_y2: 74,\n    //       timestamp: \"24/10 21:7\",\n    //     },\n    //     points: [],\n    //     stroke: \"#2196f3\",\n    //     strokeOpacity: undefined,\n    //     strokeWidth: 2,\n    //     type: undefined,\n    //     unit: undefined,\n    //     value: 74,\n    //   },\n    // ];\n    // pay.push(payload[0]);\n    // console.log(\"157\", pay);\n    return (\n      <Paper\n        style={{\n          backgroundColor: \"white\",\n          maxHeight: \"20rem\",\n          maxWidth: \"1000rem\",\n          minWidth: \"10rem\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          flexWrap: \"wrap\",\n          fontSize: \"0.6rem\",\n        }}\n      >\n        <div>{payload[0]?.payload?.timestamp}</div>\n        {payload.map(({ dataKey, value, color }) => {\n          return (\n            <div\n              style={{\n                marginRight: \"0.2rem\",\n                // gap: \"1rem\",\n                color: color,\n                backgroundColor: \"white\",\n              }}\n            >{`${String(dataKey).toUpperCase()}: ${value}`}</div>\n          );\n        })}\n      </Paper>\n    );\n  };\n\n  const getLineColor = (isLeftY, index) => {\n    // left Y colors -blue-shadeblue-cyan-purple-reddish-\n    const leftYColors = [\n      \"#3B71CA\",\n      \"#DC4C64\",\n      \"#14A44D\",\n      \"#E4A11B\",\n      \"#54B4D3\",\n      \"#CC004C\",\n      \"#6460AA\",\n      \"#0DB14B\",\n      \"#0089D0\",\n      \"#81BF97\",\n      \"#4FA9D2\",\n      \"#DF6756\",\n      \"#4A154B\",\n      \"#E3B34C\",\n      \"#CE375C\",\n      \"#ED642B\",\n      \"#F26C7D\",\n      \"#3F8F8B\",\n      \"#225675\",\n      \"#6460AA\",\n      \"#8FD974\",\n      \"#83D1C4\",\n      \"#4DAAA7\",\n      \"#F26764\",\n      \"#54AFBC\",\n      \"#F9B117\",\n      \"#5BB462\",\n      \"#072F54\",\n      \"#D5DF37\",\n      \"#58B1CE\",\n      \"#76C065\",\n      \"#19C0FF\",\n      \"#7894FF\",\n    ];\n    // right Y colors -green-lightorange-tealblue-lightgreen\n    const rightYColors = [\n      \"#4caf50\",\n      \"#ff9800\",\n      \"#009688\",\n      \"#cddc39\",\n      \"#0d86bf\",\n      \"#a432d1\",\n      \"#ce466f\",\n      \"#bf010e\",\n      \"#a52812\",\n      \"#edca4e\",\n      \"#FF4F2D\",\n      \"#FF8B74\",\n      \"#CFB08D\",\n      \"#1C4481\",\n      \"#60688D\",\n      \"#5B8BA1\",\n      \"#F28D18\",\n      \"#1DCDFE\",\n      \"#21D0B2\",\n      \"#2F455C\",\n      \"#265B94\",\n      \"#EE9142\",\n      \"#007D98\",\n      \"#F5B4A7\",\n      \"#FFCD2E\",\n      \"#5630FF\",\n      \"#191035\",\n    ];\n\n    if (isLeftY) {\n      return leftYColors[index];\n    }\n\n    return rightYColors[index];\n  };\n\n  const getLeftYItems = () => {\n    let objArray = Object.entries(data[0]);\n    // console.log(\"objArrayLeft\", objArray);\n    let lines = [];\n    let colorIndex = 0;\n    for (let i = 1; i <= alignY.leftY; i++) {\n      if (objArray[i] !== undefined) {\n        lines.push(\n          <Line\n            name={objArray[i][0]}\n            yAxisId=\"left\"\n            type=\"monotone\"\n            dataKey={objArray[i][0]}\n            stroke={getLineColor(true, colorIndex)}\n            strokeWidth={2}\n            strokeOpacity={opacity[objArray[i][0]]}\n            // activeDot={{ fill: getLineColor(true, colorIndex) }}\n            dot={false}\n            // dot={<CustomizedDot customIndex={colorIndex} />}\n          />\n        );\n        colorIndex += 1;\n      }\n    }\n    return lines;\n  };\n\n  const getRightYItems = () => {\n    let objArray = Object.entries(data[0]);\n    // console.log(\"objArrayRight\", objArray);\n    let lines = [];\n    let colorIndex = 0;\n    for (let i = alignY.leftY + 1; i <= alignY.leftY + alignY.rightY; i++) {\n      // for (let i = 1; i <= alignY.rightY; i++) {\n      // console.log(\"right\", alignY, i);\n      if (objArray[i] !== undefined) {\n        lines.push(\n          <Line\n            name={objArray[i][0]}\n            yAxisId=\"right\"\n            type=\"monotone\"\n            dataKey={objArray[i][0]}\n            stroke={getLineColor(false, colorIndex)}\n            strokeWidth={1}\n            strokeOpacity={opacity[objArray[i][0]]}\n            // activeDot={{ fill: getLineColor(false, colorIndex) }}\n            dot={false}\n            // dot={<CustomizedDot customIndex={colorIndex} />}\n          />\n        );\n        colorIndex += 1;\n      }\n    }\n    return lines;\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"98%\">\n      <LineChart\n        data={data}\n        style={{ marginTop: \"0.5rem\" }}\n        // margin={\n        //   {\n        //     // left: -2,\n        //     // right: -60,\n        //   }\n        // }\n\n        padding={\n          {\n            // left: 50,\n            // right: 20,\n          }\n        }\n        margin={\n          {\n            // right: 150,\n          }\n        }\n      >\n        {/* <CartesianGrid /> */}\n        <XAxis dataKey=\"timestamp\" angle={-7} tick={{ fontSize: 12 }} />\n\n        <YAxis\n          yAxisId=\"left\"\n          orientation=\"left\"\n          // domain={[0, (dataMax) => Math.round(dataMax * 1.1)]}\n          // domain={[\"auto\", \"auto\"]}\n          // allowDataOverflow={true}\n        />\n        <YAxis\n          yAxisId=\"right\"\n          orientation=\"right\"\n          // domain={[0, (dataMax) => Math.round(dataMax * 1.1)]}\n        />\n\n        {/* <Tooltip\n          wrapperStyle={{\n            display: \"grid\",\n            // gridAutoColumns: \"50px\",\n            gridTemplateColumns: \"auto\",\n            // backgroundColor: \"blue\",\n            // minHeight: \"300px\",\n            // width: \"500px\",\n            // display: \"flex\",\n            // flexDirection: \"row\",\n            // flexWrap: \"wrap\",\n            // fontSize: \"10px\",\n          }}\n        /> */}\n\n        <Tooltip content={renderTooltip} />\n\n        <Legend content={renderLegend} />\n        {getLeftYItems().map((element) => element)}\n        {getRightYItems().map((element) => element)}\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n","import React from \"react\";\nimport CustomDropdown from \"../../UI/CustomDropdown\";\nimport { Grid, Button, Typography, Card } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Dates from \"./Dates\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { AppState } from \"../../../AppContext\";\n\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { tempSitesBlocksInverters } from \"../../../constants/SiteNames\";\n\nimport { SERVER_URL } from \"../../../constants/constants\";\nimport MultiDropdownSingle from \"../../UI/MultiDropdownSingle\";\nimport { el } from \"date-fns/locale\";\nimport SingleDropdown from \"./SingleDropdown\";\nimport MultiDropdown from \"./MultiDropdown\";\nimport TrendlineBiaxialLineChart from \"./TrendlineBiaxialLineChart\";\n// import { SERVER_URL } from \"../constants/constants\";\n\nconst y1CategoryParameters = [\n  {\n    category: \"WMS\",\n    parameters: [\n      \"Humidity Instant\",\n      \"Wind Speed Instant\",\n      \"Wind Dir Instant\",\n      \"Rain\",\n      \"GHI Instant\",\n      \"GHI Instant2\",\n      \"GTI Instant\",\n      \"GTI Instant2\",\n      \"Mod. Temp Instant\",\n      \"Mod. Temp Instant2\",\n      \"Mod. Temp 2 Instant\",\n      \"Amb. Temp Instant\",\n    ],\n  },\n  {\n    category: \"Plant\",\n    parameters: [\n      \"PA Instant\",\n      \"GA Instant\",\n      \"Plant PR Instant\",\n      \"Day Generation Cumulative (KWH)\",\n      \"Power Generation Instant (MW)\",\n      \"Peak Power\",\n      \"Revenue\",\n    ],\n  },\n  {\n    category: \"Inverter\",\n    parameters: [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n    ],\n  },\n  {\n    category: \"Inv Scb\",\n    parameters: [\n      \"S1\",\n      \"S2\",\n      \"S3\",\n      \"S4\",\n      \"S5\",\n      \"S6\",\n      \"S7\",\n      \"S8\",\n      \"S9\",\n      \"S10\",\n      \"S11\",\n      \"S12\",\n      \"S12\",\n      \"S13\",\n      \"S14\",\n      \"S15\",\n      \"S16\",\n      \"S17\",\n      \"S18\",\n      \"S19\",\n      \"S20\",\n      \"S21\",\n      \"S22\",\n      \"S23\",\n      \"S24\",\n      \"S25\",\n      \"S26\",\n      \"S27\",\n      \"S28\",\n      \"S29\",\n      \"S30\",\n      \"S31\",\n      \"S32\",\n    ],\n  },\n  {\n    category: \"Inv Slots\",\n    parameters: [\n      \"S1 L1 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 PF\",\n      \"S1 DC Power\",\n      \"S1 IGBT Temp\",\n      \"S1 CAB Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 CAB Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 CAB Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 IGBT Temp\",\n      \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n    ],\n  },\n  {\n    category: \"Calculated\",\n    parameters: [\"Inv Efficiency\", \"Calculated PR\"],\n  },\n];\n\nconst series = [\n  {\n    name: \"Series 1\",\n    data: [\n      { category: \"A\", value: Math.random() },\n      { category: \"B\", value: Math.random() },\n      { category: \"C\", value: Math.random() },\n    ],\n  },\n  {\n    name: \"Series 2\",\n    data: [\n      { category: \"B\", value: Math.random() },\n      { category: \"C\", value: Math.random() },\n      { category: \"D\", value: Math.random() },\n    ],\n  },\n  {\n    name: \"Series 3\",\n    data: [\n      { category: \"C\", value: Math.random() },\n      { category: \"D\", value: Math.random() },\n      { category: \"E\", value: Math.random() },\n    ],\n  },\n];\n\nexport default function TrendLine() {\n  const { setEnabledLinearProgress, setSnackbar } = AppState();\n  const [disabledCSVBtn, setDisabledCSVBtn] = useState(false);\n\n  const [fromDate, setFromDate] = useState(() => {\n    const date = new Date();\n    date.setDate(date.getDate() - 1);\n    date.setHours(0, 0, 1, 0);\n    return date;\n  });\n  const [toDate, setToDate] = useState(() => {\n    const date = new Date();\n    date.setDate(date.getDate() - 1);\n    date.setHours(23, 59, 59, 0);\n    return date;\n  });\n\n  const [frequency, setFrequency] = useState(\"daily\");\n\n  const handleFrequencyChange = (event) => {\n    let value = event.target.value;\n    setFrequency(value);\n  };\n\n  const gety1parameters = () => {\n    // let valuey1 = y1CategoryParameters.filter(\n    //   (val) => val.category === y1Category.join()\n    // );\n    let newArray = [];\n    y1Category.map((ele) => {\n      let v = y1CategoryParameters\n        .find((site) => site.category === ele)\n        .parameters.map((el) => el);\n\n      v.map((value) => newArray.push(value));\n    });\n    // let selectedparam = newArray.map((element) => element);\n    // return setY1ParameterOptions(newArray);\n    // console.log(newArray, \"173\");\n    // let y1 = newArray.map((el) => el.parameters[0]);\n    return newArray;\n  };\n\n  const selectedY1Category = () => {\n    let catvalue = y1CategoryParameters.map((val) => val.category);\n    let value = [catvalue[0]];\n    return value;\n    // return catvalue;\n  };\n\n  const gety2parameters = () => {\n    // let valuey1 = y1CategoryParameters.filter(\n    //   (val) => val.category === y2Category\n    // );\n    // let y1 = valuey1.map((el) => el.parameters[0]);\n    // return y1;\n    let newArray = [];\n    y2Category.map((ele) => {\n      let v = y1CategoryParameters\n        .find((site) => site.category === ele)\n        .parameters.map((el) => el);\n\n      v.map((value) => newArray.push(value));\n    });\n    // let selectedparam = newArray.map((element) => element);\n    // return setY1ParameterOptions(newArray);\n    // console.log(newArray, \"173\");\n    // let y1 = newArray.map((el) => el.parameters[0]);\n    return newArray;\n  };\n\n  const selectedY2Category = () => {\n    let catvalue = y1CategoryParameters.map((val) => val.category);\n    let value = [catvalue[0]];\n    return value;\n  };\n\n  const [y1Category, setY1Category] = useState(selectedY1Category());\n\n  const [y1Parameter, setY1Parameter] = useState(gety1parameters());\n  const [y1ParameterOptions, setY1ParameterOptions] = useState(\n    gety1parameters()\n  );\n\n  const [y2Category, setY2Category] = useState(selectedY2Category());\n\n  const [y2Parameter, setY2Parameter] = useState(gety2parameters());\n  const [y2ParameterOptions, setY2ParameterOptions] = useState(\n    gety2parameters()\n  );\n  // const [parameter2, setParameter2] = useState(\"none\");\n  // console.log(\"y1cat,y1param\", y1Category, y1Category.length, y1Parameter);\n  let newParam = [];\n  const handleY1items = () => {\n    // let newArray = [];\n    y1Category.map((ele) => {\n      let v = y1CategoryParameters\n        .find((site) => site.category === ele)\n        .parameters.map((el) => el);\n\n      v.map((value) => newParam.push(value));\n      // return newArray;\n    });\n  };\n  const handleMultipleY1Category = () => {\n    // gety1parameters();\n    let newY1Array = [];\n    // setY1ParameterOptions();\n    y1Category.map((ele) => {\n      let v = y1CategoryParameters\n        .find((site) => site.category === ele)\n        .parameters.map((el) => el);\n\n      v.map((value) => newY1Array.push(value));\n    });\n    // setY1ParameterOptions(newArray);\n    return setY1ParameterOptions(newY1Array), newY1Array;\n  };\n\n  const handleMultipleY2Category = () => {\n    // gety1parameters();\n    let newY2Array = [];\n    // setY1ParameterOptions();\n    y2Category.map((ele) => {\n      let v = y1CategoryParameters\n        .find((site) => site.category === ele)\n        .parameters.map((el) => el);\n\n      v.map((value) => newY2Array.push(value));\n    });\n    // setY1ParameterOptions(newArray);\n    return setY2ParameterOptions(newY2Array), newY2Array;\n  };\n\n  const handleY1CategoryChange = (event) => {\n    // console.log(\"handleY1Category func\");\n    let value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setY1Category(\n        y1Category.length ===\n          y1CategoryParameters.map((site) => site.category).length\n          ? []\n          : y1CategoryParameters.map((block) => block.category)\n      );\n      return;\n    }\n\n    // setY1Category(value);\n\n    setY1Category(value);\n    // console.log(\n    //   \"y1cat,y1param\",\n    //   \"00000\",\n    //   y1Category,\n    //   y1Category.length,\n    //   y1Parameter\n    // );\n    // setY1Parameter([\n    //   y1CategoryParameters\n    //     .find((site) => site.category === value)\n    //     .parameters.map((block) => block)\n    //     .splice(0, 1)[0],\n    // ]);\n  };\n  useEffect(() => {\n    setY1Parameter(\n      // y1Category.length !== 1 && value[value.length - 1] === \"all\"\n      //   ? [\"All\"]\n      // y1Category.length > 1\n      //   ? handleMultipleY1Category\n      //   : y1CategoryParameters\n      //       .find((site) => site.category === y1Category.join())\n      //       ?.parameters.map((block) => block)\n      handleMultipleY1Category()\n    );\n  }, [y1Category]);\n\n  const handleY1ParameterChange = (event) => {\n    let value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setY1Parameter(\n        y1Parameter.length === y1ParameterOptions.length ? [] : gety1parameters\n        // : y1Category.length > 1\n        // ? [\"All\"]\n        // y1Category.length > 1\n        // ? handleMultipleY1Category\n        // : handleMultipleY1Category\n        // : y1CategoryParameters\n        //     .find((site) => site.category === y1Category.join())\n        //     ?.parameters?.map((block) => block)\n      );\n      return;\n    }\n\n    setY1Parameter(value);\n    // console.log(\"handleY1param\", y1Parameter);\n  };\n\n  const handleY2CategoryChange = (event) => {\n    // let value = event.target.value;\n\n    // setY2Category(value);\n\n    // setY2Parameter([\n    //   y1CategoryParameters\n    //     .find((site) => site.category === value)\n    //     .parameters.map((block) => block)\n    //     .splice(0, 1)[0],\n    // ]);\n    let value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setY2Category(\n        y2Category.length ===\n          y1CategoryParameters.map((site) => site.category).length\n          ? []\n          : y1CategoryParameters.map((block) => block.category)\n      );\n      return;\n    }\n\n    // setY1Category(value);\n\n    setY2Category(value);\n  };\n  useEffect(() => {\n    setY2Parameter(handleMultipleY2Category());\n  }, [y2Category]);\n\n  const handleY2ParameterChange = (event) => {\n    // let value = event.target.value;\n\n    // if (value[value.length - 1] === \"all\") {\n    //   setY2Parameter(\n    //     y2Parameter.length ===\n    //       y1CategoryParameters.find((site) => site.category === y2Category)\n    //         .parameters.length\n    //       ? []\n    //       : y1CategoryParameters\n    //           .find((site) => site.category === y2Category)\n    //           .parameters.map((block) => block)\n    //   );\n    //   return;\n    let value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setY2Parameter(\n        y2Parameter.length === y2ParameterOptions.length ? [] : gety2parameters\n      );\n      return;\n    }\n\n    setY2Parameter(value);\n  };\n\n  // const handleParameter1Change = (event) => {\n  //   const value = event.target.value;\n  //   if (value === parameter2) {\n  //     return;\n  //   }\n  //   setParameter1(value);\n  // };\n\n  // const handleParameter2Change = (event) => {\n  //   const value = event.target.value;\n  //   // if (value === parameter1) {\n  //   //   return;\n  //   // }\n  //   setParameter2(value);\n  // };\n  // if multiple sites, all blocks; if single site and multiple blocks, all inverters\n  const [sitesBlocksInverters, setSitesBlocksInverters] = useState(\n    tempSitesBlocksInverters\n  );\n  const [selectedSites, setSelectedSites] = useState(\n    sitesBlocksInverters[0].name\n  );\n\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n\n  const getSites = (sites = siteNamesAndBlocks) => {\n    return sites.map((site) => site.name);\n  };\n\n  const [siteOptions, setSiteOptions] = useState(getSites());\n  const [selectedBlocks, setSelectedBlocks] = useState(\n    sitesBlocksInverters[0].blocks.map((block) => block.name)\n  );\n\n  const [selectedInverters, setSelectedInverters] = useState([\"I01\"]);\n\n  const fetchDropdownValues = () => {\n    // console.log(\"fetch drop down values\");\n    // console.log(\"Hitting: \", SERVER_URL + \"/manageinverters/inverters\");\n    axios.post(SERVER_URL + \"/manageinverters/inverters\").then((response) => {\n      // console.log(\"======>\", response.data);\n      let sites = response.data.sort((a, b) =>\n        a.name > b.name ? 1 : b.name > a.name ? -1 : 0\n      );\n      // console.log(\"fetched sites\", sites);\n      setSitesBlocksInverters(sites);\n      setSelectedSites(sites[1].name);\n      setSelectedBlocks(sites[1].blocks[0].name);\n      // setSelectedBlocks(sites[19].blocks.map((block) => block.name));\n      // setSelectedSiteForTable(sites[19].name);\n      // setSelectedBlocksForTable(sites[19].blocks.map((block) => block.name));\n      // setSelectedInverters([sites[18].blocks[0].inverters[0]]);\n    });\n  };\n\n  useEffect(() => {\n    fetchDropdownValues();\n  }, []);\n\n  const handleSitesChange = (event) => {\n    let value = event.target.value;\n\n    // if (value[value.length - 1] === \"all\") {\n    //   setSelectedSites(\n    //     selectedSites.length === sitesBlocksInverters.length\n    //       ? []\n    //       : sitesBlocksInverters.map((site) => site.name)\n    //   );\n    //   return;\n    // }\n\n    setSelectedSites(value);\n\n    // if (value.length > 1) {\n    //   setSelectedBlocks([\"All\"]);\n    // } else {\n    //   setSelectedBlocks(\n    //     sitesBlocksInverters\n    //       .find((site) => site.name === value[0])\n    //       .blocks.map((block) => block.name)\n    //   );\n    // }\n\n    // setSelectedBlocks(\n    //   sitesBlocksInverters\n    //     .find((site) => site.name === value)\n    //     .blocks.map((block) => block.name)\n    // );\n    let blocks = sitesBlocksInverters\n      .find((site) => site.name === value)\n      .blocks.map((block) => block.name);\n    let singleblock = blocks[0];\n    setSelectedBlocks(singleblock);\n  };\n\n  const handleBlocksChange = (event) => {\n    let value = event.target.value;\n\n    // if (value[value.length - 1] === \"all\") {\n    //   setSelectedBlocks(\n    //     selectedBlocks.length ===\n    //       sitesBlocksInverters.find((site) => site.name === selectedSites)\n    //         .blocks.length\n    //       ? []\n    //       : sitesBlocksInverters\n    //           .find((site) => site.name === selectedSites)\n    //           .blocks.map((block) => block.name)\n    //   );\n    //   return;\n    // }\n\n    setSelectedBlocks(value);\n  };\n\n  const handleInvertersChange = (event) => {\n    let value = event.target.value.sort();\n\n    if (value[value.length - 1] === \"all\") {\n      // console.log(\"abc\");\n\n      if (selectedInverters.length === 0) {\n        setSelectedInverters(getInverterOptions());\n      } else {\n        setSelectedInverters([]);\n      }\n\n      return;\n    }\n    setSelectedInverters(value);\n    // setSelectedInverter(value.map((element) => ({ name: element })));\n  };\n  const getInverterOptions = () => {\n    let inverters = [];\n    try {\n      const site = sitesBlocksInverters.find(\n        (site) => site.name === selectedSites\n      );\n      const block = site[\"blocks\"].find(\n        (block) => block.name === selectedBlocks\n      );\n      const foundInveters = block?.inverters.map((inv) => inv.name);\n      inverters = foundInveters.length > 0 ? foundInveters.sort() : [];\n    } catch (error) {\n      inverters = [];\n    }\n    return inverters;\n  };\n\n  // irradiance / generation data\n  const [disabledViewBtn, setDisabledViewBtn] = useState(false);\n\n  const [charts, setCharts] = useState([]);\n  const [chartYAlign, setChartYAlign] = useState({});\n\n  // Function related to BiaxialLineChart\n  const getTrendlineData = (startTime, endTime, beginTime) => {\n    // console.log(\n    //   \"Trend line\",\n    //   selectedSites,\n    //   selectedBlocks,\n    //   fromDate.getTime(),\n    //   toDate.getTime(),\n    //   frequency,\n    //   y1Category,\n    //   y1Parameter,\n    //   y2Category,\n    //   y2Parameter\n    // );\n    setEnabledLinearProgress(true);\n\n    setDisabledViewBtn(true);\n\n    axios\n      .post(SERVER_URL + \"/trendline/graph\", {\n        // jwtToken: userToken,\n        site: selectedSites,\n        block: selectedBlocks,\n        inverters: selectedInverters,\n\n        startTime: fromDate.getTime(),\n        endTime: toDate.getTime(),\n        frequency: frequency,\n        y1Category: y1Category,\n        y1Parameter: y1Parameter,\n        y2Category: y2Category,\n        y2Parameter: y2Parameter,\n        // beginTime: beginTime,\n        // enablePacket: getEnablePacket(),\n        // clientPacketTime: timestamp,\n        // isNext: getIsNext(),\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        const data = response.data;\n        // console.log(data);\n        const newCharts = data.charts;\n        setCharts(newCharts);\n        const align = data.align;\n        // console.log(align);\n        setChartYAlign(align);\n        setEnabledLinearProgress(false);\n\n        setDisabledViewBtn(false);\n      })\n      .catch((error) => {\n        // console.log(error);\n        setEnabledLinearProgress(false);\n\n        setDisabledViewBtn(false);\n      });\n  };\n\n  const fetchCSV = async () => {\n    // console.log(\"hitt csv-->\");\n    let jwtToken = localStorage.getItem(\"userToken\");\n    setDisabledCSVBtn(true);\n    setEnabledLinearProgress(true);\n    try {\n      const response = await axios.post(\n        SERVER_URL + \"/trendline/graph/csv\",\n        {\n          email: localStorage.getItem(\"userEmail\"),\n          site: selectedSites,\n          block: selectedBlocks,\n          inverters: selectedInverters,\n          startTime: fromDate.getTime(),\n          endTime: toDate.getTime(),\n          frequency: frequency,\n          y1Category: y1Category,\n          y1Parameter: y1Parameter,\n          y2Category: y2Category,\n          y2Parameter: y2Parameter,\n          // sites: selectedSites,\n          // startTime: fromDate.getTime(),\n          // endTime: toDate.getTime(),\n          // frequency: frequency,\n        }\n        // {\n        //   cancelToken: source.token,\n        //   headers: { jwtToken: jwtToken },\n        // }\n      );\n      console.log(response.data);\n      const downloadUrl = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = downloadUrl;\n      let filename = `${fromDate.getDate()}_${\n        fromDate.getMonth() + 1\n      } to ${toDate.getDate()}_${toDate.getMonth() + 1}.csv`;\n      link.setAttribute(\"download\", filename);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      setEnabledLinearProgress(false);\n      setDisabledCSVBtn(false);\n    } catch (error) {\n      // console.log(error);\n      setSnackbar((prevState) => ({\n        ...prevState,\n        open: true,\n        severity: \"error\",\n        message: \"No data found.\",\n      }));\n      setEnabledLinearProgress(false);\n      setDisabledCSVBtn(false);\n    }\n  };\n\n  const setAndGetAll = (dropdown) => {\n    // if (dropdown === 'inverters') {\n    //     setSelectedInverters([])\n    // } else {\n    //     setSelectedBlocks([]);\n    // }\n\n    return [\"All\"];\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          <SingleDropdown\n            label={\"Site\"}\n            // items={sitesBlocksInverters.map((site) => site.name)}\n            items={siteOptions}\n            handleChange={handleSitesChange}\n            selectedItem={selectedSites}\n          />\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <SingleDropdown\n            label={\"Block\"}\n            items={\n              sitesBlocksInverters.find((site) => site.name === selectedSites)\n                ? sitesBlocksInverters\n                    .find((site) => site.name === selectedSites)\n                    .blocks.map((block) => block.name)\n                : []\n            }\n            handleChange={handleBlocksChange}\n            selectedItem={selectedBlocks}\n          />\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <MultiDropdown\n            label={\"Inverter\"}\n            items={getInverterOptions()}\n            handleChange={handleInvertersChange}\n            selectedItems={selectedInverters}\n          />\n        </Grid>\n        <Grid item>\n          <Dates\n            fromDate={fromDate}\n            setFromDate={setFromDate}\n            toDate={toDate}\n            setToDate={setToDate}\n          />\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <FormControl>\n            <InputLabel id=\"frequency-simple-select-label\">\n              Frequency\n            </InputLabel>\n            <Select\n              labelId=\"frequency-simple-select-label\"\n              id=\"frequency-simple-select\"\n              value={frequency}\n              onChange={handleFrequencyChange}\n              style={{ fontSize: \".8rem\" }}\n            >\n              <MenuItem value={\"daily\"}>Daily</MenuItem>\n              <MenuItem value={\"mtd\"}>MTD</MenuItem>\n              <MenuItem value={\"ytd\"}>YTD</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <MultiDropdown\n            label={\"Y1 Cat\"}\n            // items={sitesBlocksInverters.map((site) => site.name)}\n            items={y1CategoryParameters.map((ele) => ele.category)}\n            handleChange={handleY1CategoryChange}\n            selectedItems={y1Category}\n          />\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <MultiDropdown\n            label={\"Y1 Param\"}\n            items={y1ParameterOptions}\n            // items={newParam}\n            handleChange={handleY1ParameterChange}\n            selectedItems={y1Parameter}\n          />\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <MultiDropdown\n            label={\"Y2 Cat\"}\n            // items={sitesBlocksInverters.map((site) => site.name)}\n            items={y1CategoryParameters.map((ele) => ele.category)}\n            handleChange={handleY2CategoryChange}\n            selectedItems={y2Category}\n          />\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\" }}>\n          <MultiDropdown\n            label={\"Y2 Param\"}\n            // items={\n            //   y1CategoryParameters.find((cat) => cat.category === y2Category)\n            //     ? y1CategoryParameters\n            //         .find((cat) => cat.category === y2Category)\n            //         .parameters.map((param) => param)\n            //     : []\n            // }\n            items={y2ParameterOptions}\n            handleChange={handleY2ParameterChange}\n            selectedItems={y2Parameter}\n          />\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\", marginTop: \"0.8rem\" }}>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            style={{\n              // paddingInline: \"1.5rem\",\n              // marginTop: \"-0.6rem\",\n              fontSize: \"14px\",\n              height: \"2rem\",\n            }}\n            color=\"primary\"\n            onClick={getTrendlineData}\n            disabled={disabledViewBtn}\n          >\n            {/* View */}\n            {disabledViewBtn ? \"Loading\" : \"View\"}\n          </Button>\n        </Grid>\n        <Grid item style={{ marginLeft: \"1rem\", marginTop: \"0.8rem\" }}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            style={{\n              // paddingInline: \"1.5rem\",\n              // marginTop: \"-0.6rem\",\n              fontSize: \"14px\",\n              height: \"2rem\",\n            }}\n            onClick={fetchCSV}\n            disabled={disabledCSVBtn}\n          >\n            {disabledCSVBtn ? \"Downloading\" : \"CSV\"}\n          </Button>\n        </Grid>\n        {/* <Grid item style={{ marginLeft: \"1rem\" }}>\n          <FormControl>\n            <InputLabel id=\"parameter1-select-label\">Y1</InputLabel>\n            <Select\n              labelId=\"parameter1-select-label\"\n              id=\"parameter-select\"\n              value={parameter1}\n              onChange={handleParameter1Change}\n              style={{ fontSize: \".8rem\" }}\n            >\n              {parameters1.map((element) => (\n                <MenuItem value={element.value}>{element.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid> */}\n        {/* <Grid item style={{ marginLeft: \"1rem\" }}>\n          <FormControl>\n            <InputLabel id=\"parameter2-select-label\">Y2</InputLabel>\n            <Select\n              labelId=\"parameter2-select-label\"\n              id=\"parameter2-select\"\n              value={parameter2}\n              onChange={handleParameter2Change}\n              style={{ fontSize: \".8rem\" }}\n            >\n              {parameters2.map((element) => (\n                <MenuItem value={element.value}>{element.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid> */}\n      </Grid>\n      {/* <Grid container>\n        <TrendlineBiaxialLineChart\n          // data={[0, 0, 0, 0]}\n          data={irradianceGenerationData}\n          // interval={12}\n          // leftAxisY={[0, 1500]}\n          // rightAxisY={[0, 30]}\n        />\n      </Grid> */}\n      {/* {irradianceGenerationData.map((chart, index) =>\n        console.log(\"chart\", chart)\n      )} */}\n      {/* <TrendlineBiaxialLineChart data={irradianceGenerationData} /> */}\n      {/* <TrendlineBiaxialLineChart data={series} /> */}\n      {charts.map((chart, index) => (\n        <Grid container key={index}>\n          <Card\n            style={{\n              width: \"100%\",\n              height: \"410px\",\n              marginTop: \"1rem\",\n              // paddingBottom: \"3rem\",\n\n              marginLeft: \"-1rem\",\n              // paddingTop: \".5rem\",\n              paddingInline: \".5rem\",\n            }}\n          >\n            {/* <Grid container>\n              <Typography\n                style={{ marginLeft: \"1rem\", marginBottom: \".75rem\" }}\n              >\n                {chart.site}\n              </Typography>\n            </Grid> */}\n\n            <TrendlineBiaxialLineChart data={chart.data} alignY={chartYAlign} />\n          </Card>\n        </Grid>\n      ))}\n    </>\n  );\n}\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport SiteRanking from \"../components/Performance/SiteRanking\";\nimport InvertersWakeUp from \"../components/Performance/Inverters/InvertersWakeUp\";\nimport PeakPower from \"../components/Performance/PeakPower/PeakPower\";\nimport PRRanking from \"../components/Performance/PRRanking/PRRanking\";\nimport LossAnalytics from \"./LossAnalytics\";\nimport HighTemp from \"../components/Performance/HighTemp/HighTemp\";\nimport TableSensor from \"../components/Performance/TableSensor/TableSensor\";\nimport InvPerformance from \"../components/Performance/InvPerformance/InvPerformance\";\nimport ScbPerformance from \"../components/Performance/ScbPerformance/ScbPerformance\";\nimport TrendLine from \"../components/Performance/TrendLine/TrendLine\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  tabs: {\n    \"& .MuiTabs-indicator\": {\n      backgroundColor: \"#148F77\",\n      // height: 3,\n    },\n    \"& .MuiTab-root.Mui-selected\": {\n      color: \"#148F77\",\n    },\n  },\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ paddingTop: 1 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scb-tab-${index}`,\n    \"aria-controls\": `scb-tabpanel-${index}`,\n  };\n}\n\nexport default function Analytics({ handleSessionExpire }) {\n  const [value, setValue] = React.useState(0);\n  const classes = useStyles();\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box style={{ width: 1200 }}>\n      <Tabs\n        style={{ color: \"#000000\", marginLeft: \"-1rem\" }}\n        className={classes.tabs}\n        value={value}\n        onChange={handleChange}\n        aria-label=\"analytics tabs\"\n        // indicatorColor=\"primary\"\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n      >\n        <Tab label=\"Actual PR\" {...a11yProps(0)} />\n        <Tab label=\"Inverters - Wake Up\" {...a11yProps(1)} />\n        <Tab label=\"Peak Power\" {...a11yProps(2)} />\n        <Tab label=\"Calculated PR\" {...a11yProps(3)} />\n        <Tab label=\"Loss Analytics\" {...a11yProps(4)} />\n        <Tab label=\"CAB / AMB\" {...a11yProps(5)} />\n\n        <Tab label=\"Inv / Kw Gen\" {...a11yProps(6)} />\n        <Tab label=\"INV SCB\" {...a11yProps(7)} />\n        <Tab label=\"Trend Line\" {...a11yProps(8)} />\n        <Tab label=\"Table Sensor\" {...a11yProps(9)} />\n      </Tabs>\n\n      <TabPanel value={value} index={0} style={{ paddingTop: \"0.5rem\" }}>\n        <SiteRanking handleSessionExpire={handleSessionExpire} />\n      </TabPanel>\n      <TabPanel value={value} index={1} style={{ paddingTop: \"0.5rem\" }}>\n        <InvertersWakeUp handleSessionExpire={handleSessionExpire} />\n      </TabPanel>\n      <TabPanel value={value} index={2} style={{ paddingTop: \"0.5rem\" }}>\n        <PeakPower />\n      </TabPanel>\n      <TabPanel value={value} index={3} style={{ paddingTop: \"0.5rem\" }}>\n        <PRRanking />\n      </TabPanel>\n      <TabPanel value={value} index={4} style={{ paddingTop: \"0.5rem\" }}>\n        <LossAnalytics />\n      </TabPanel>\n      <TabPanel value={value} index={5} style={{ paddingTop: \"0.5rem\" }}>\n        <HighTemp />\n      </TabPanel>\n\n      <TabPanel value={value} index={6} style={{ paddingTop: \"0.5rem\" }}>\n        <InvPerformance />\n      </TabPanel>\n      <TabPanel value={value} index={7} style={{ paddingTop: \"0.5rem\" }}>\n        <ScbPerformance />\n      </TabPanel>\n      <TabPanel value={value} index={8} style={{ paddingTop: \"0.5rem\" }}>\n        <TrendLine />\n      </TabPanel>\n      <TabPanel value={value} index={9} style={{ paddingTop: \"0.5rem\" }}>\n        <TableSensor />\n      </TabPanel>\n    </Box>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    // console.log(block);\n\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            {/* )} */}\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            {/* )} */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Chittuguppa/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Chittuguppa({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/chittuguppa/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Oct 22, 2021 12:00:00 PM\n    const startTime = new Date(1634904000000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/chittuguppa/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/chittuguppa/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/chittuguppa/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/chittuguppa/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/chittuguppa/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 CAB Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 CAB Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 CAB Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = () => {\n    // console.log(\"getInverterValues function called\", blockTableId);\n\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    axios\n      .get(\n        serverUrl + \"/chittuguppa/grid/B\" + String(blockTableId).padStart(2, 0),\n        {\n          headers: {\n            jwtToken: userToken,\n            startTime: date.getTime(),\n            endTime: mainTime,\n            beginTime: beginTime,\n            enablePacket: getEnablePacket(),\n            clientPacketTime: timestamp,\n            isNext: getIsNext(),\n          },\n        }\n      )\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    let tableInterval = setInterval(getInverterValues, 60000);\n\n    return () => {\n      clearInterval(tableInterval);\n    };\n  });\n\n  useEffect(() => {\n    // console.log(blockTableId);\n    getInverterValues();\n  }, [blockTableId]);\n\n  const handleBlockChange = (event) => {\n    // console.log(event.target.value);\n    setBlockTableId((prevState) => {\n      return Number(event.target.value);\n    });\n  };\n\n  // Function to call above functions to get data related to chittuguppa site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    // console.log(blockTableId);\n    // getInverterValues();\n  };\n\n  // useEffect to fetch data related to chittuguppa site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to chittuguppa site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Chittuguppa</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">40 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={60} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select\n                  defaultValue={1}\n                  value={blockTableId}\n                  onChange={handleBlockChange}\n                >\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                  <MenuItem value={8}>B08</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    // console.log(block);\n\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            {/* )} */}\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            {/* )} */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Farhatabad/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Farhatabad({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/farhatabad/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Oct 25, 2021 12:00:00 PM\n    const startTime = new Date(1635163200000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/farhatabad/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/farhatabad/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/farhatabad/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/farhatabad/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/farhatabad/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 CAB Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 CAB Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 CAB Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = () => {\n    // console.log(\"getInverterValues function called\", blockTableId);\n\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    axios\n      .get(\n        serverUrl + \"/farhatabad/grid/B\" + String(blockTableId).padStart(2, 0),\n        {\n          headers: {\n            jwtToken: userToken,\n            startTime: date.getTime(),\n            endTime: mainTime,\n            beginTime: beginTime,\n            enablePacket: getEnablePacket(),\n            clientPacketTime: timestamp,\n            isNext: getIsNext(),\n          },\n        }\n      )\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    let tableInterval = setInterval(getInverterValues, 60000);\n\n    return () => {\n      clearInterval(tableInterval);\n    };\n  });\n\n  useEffect(() => {\n    // console.log(blockTableId);\n    getInverterValues();\n  }, [blockTableId]);\n\n  const handleBlockChange = (event) => {\n    // console.log(event.target.value);\n    setBlockTableId((prevState) => {\n      return Number(event.target.value);\n    });\n  };\n\n  // Function to call above functions to get data related to farhatabad site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    // console.log(blockTableId);\n    // getInverterValues();\n  };\n\n  // useEffect to fetch data related to farhatabad site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to farhatabad site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Farhatabad</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">40 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={60} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 50]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select\n                  defaultValue={1}\n                  value={blockTableId}\n                  onChange={handleBlockChange}\n                >\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                  <MenuItem value={8}>B08</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    // console.log(block);\n\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            {/* )} */}\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            {/* )} */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Godhur/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Godhur({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/godhur/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Oct 27, 2021 12:00:00 PM\n    const startTime = new Date(1635336000000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/godhur/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/godhur/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/godhur/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/godhur/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/godhur/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 CAB Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 CAB Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 CAB Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = () => {\n    // console.log(\"getInverterValues function called\", blockTableId);\n\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    axios\n      .get(serverUrl + \"/godhur/grid/B\" + String(blockTableId).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: date.getTime(),\n          endTime: mainTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    let tableInterval = setInterval(getInverterValues, 60000);\n\n    return () => {\n      clearInterval(tableInterval);\n    };\n  });\n\n  useEffect(() => {\n    // console.log(blockTableId);\n    getInverterValues();\n  }, [blockTableId]);\n\n  const handleBlockChange = (event) => {\n    // console.log(event.target.value);\n    setBlockTableId((prevState) => {\n      return Number(event.target.value);\n    });\n  };\n\n  // Function to call above functions to get data related to godhur site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    // console.log(blockTableId);\n    // getInverterValues();\n  };\n\n  // useEffect to fetch data related to godhur site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to godhur site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">Godhur</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <Typography variant=\"h6\">10 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={15} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1000]}\n          rightAxisY={[0, 15]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select\n                  defaultValue={1}\n                  value={blockTableId}\n                  onChange={handleBlockChange}\n                >\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv3))\n          ? \"-\"\n          : Number(value.inv3) === -111\n          ? \"X\"\n          : Number(value.inv3).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n      {/* {block !== 10 && ( */}\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv4))\n          ? \"-\"\n          : Number(value.inv4) === -111\n          ? \"X\"\n          : Number(value.inv4).toFixed(2)}\n      </StyledTableCell>\n      {/* )} */}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    // console.log(block);\n\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 3</strong>\n            </StyledTableCell>\n            {/* )} */}\n            {/* {block !== 10 && ( */}\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 4</strong>\n            </StyledTableCell>\n            {/* )} */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Manthani/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Manthani({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/manthani/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Oct 29, 2021 12:00:00 PM\n    const startTime = new Date(1635508800000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/manthani/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/manthani/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/manthani/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/manthani/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/manthani/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 CAB Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 CAB Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 CAB Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = () => {\n    // console.log(\"getInverterValues function called\", blockTableId);\n\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    axios\n      .get(\n        serverUrl + \"/manthani/grid/B\" + String(blockTableId).padStart(2, 0),\n        {\n          headers: {\n            jwtToken: userToken,\n            startTime: date.getTime(),\n            endTime: mainTime,\n            beginTime: beginTime,\n            enablePacket: getEnablePacket(),\n            clientPacketTime: timestamp,\n            isNext: getIsNext(),\n          },\n        }\n      )\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    let tableInterval = setInterval(getInverterValues, 60000);\n\n    return () => {\n      clearInterval(tableInterval);\n    };\n  });\n\n  useEffect(() => {\n    // console.log(blockTableId);\n    getInverterValues();\n  }, [blockTableId]);\n\n  const handleBlockChange = (event) => {\n    // console.log(event.target.value);\n    setBlockTableId((prevState) => {\n      return Number(event.target.value);\n    });\n  };\n\n  // Function to call above functions to get data related to manthani site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    // console.log(blockTableId);\n    // getInverterValues();\n  };\n\n  // useEffect to fetch data related to manthani site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to manthani site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item> */}\n        {/* <span style={{ fontSize: \"1.25rem\" }}>manthani</span> */}\n        {/* <Typography variant=\"h6\">Manthani</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              <span style={{ fontSize: \"1.25rem\" }}>40 MW</span> */}\n        {/* <Typography variant=\"h6\">10 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid>\n */}\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={15} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1000]}\n          rightAxisY={[0, 15]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select\n                  defaultValue={1}\n                  value={blockTableId}\n                  onChange={handleBlockChange}\n                >\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {block !== \"mcr\" && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv3))\n              ? \"-\"\n              : Number(value.inv3) === -111\n              ? \"X\"\n              : Number(value.inv3).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n      {block !== \"mcr\" && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv4))\n              ? \"-\"\n              : Number(value.inv4) === -111\n              ? \"X\"\n              : Number(value.inv4).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      {block !== \"mcr\" && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </StyledTableCell>\n      )}\n      {block !== \"mcr\" && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            {block !== \"mcr\" && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 3</strong>\n              </StyledTableCell>\n            )}\n            {block !== \"mcr\" && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 4</strong>\n              </StyledTableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/BankaM/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function BankaM({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/bankam/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Oct 30, 2021 12:00:00 PM\n    const startTime = new Date(1635595200000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/bankam/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/bankam/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/bankam/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/bankam/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/bankam/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n      let inv6Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n        if (arrayFromObject[heading.length * 5 + i][1]) {\n          inv6Value = arrayFromObject[heading.length * 5 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n        inv6: inv6Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n\n    if (!block) {\n      localStorage.setItem(\"siteInverterTableBlock\", 1);\n      block = localStorage.getItem(\"siteInverterTableBlock\");\n    }\n\n    let route = serverUrl;\n    if (block === \"mcr\") {\n      route += \"/bankam/grid/mcr\";\n    } else {\n      route += \"/bankam/grid/B\" + String(block).padStart(2, 0);\n    }\n    axios\n      .get(route, {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    localStorage.setItem(\"siteInverterTableBlock\", event.target.value);\n\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to bankam site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(\n      localStorage.getItem(\"siteInverterTableBlock\"),\n      startTime,\n      newEndTime,\n      beginTime\n    );\n  };\n\n  // useEffect to fetch data related to bankam site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to bankam site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n      localStorage.setItem(\"siteInverterTableBlock\", 1);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item> */}\n        {/* <span style={{ fontSize: \"1.25rem\" }}>bankam</span> */}\n        {/* <Typography variant=\"h6\">Banka M</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item> */}\n        {/* <span style={{ fontSize: \"1.25rem\" }}>40 MW</span> */}\n        {/* <Typography variant=\"h6\">10 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={10} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1000]}\n          rightAxisY={[0, 10]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={\"mcr\"}>MCR</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {block !== 5 && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv3))\n              ? \"-\"\n              : Number(value.inv3) === -111\n              ? \"X\"\n              : Number(value.inv3).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n      {block !== 5 && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv4))\n              ? \"-\"\n              : Number(value.inv4) === -111\n              ? \"X\"\n              : Number(value.inv4).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      {block !== 5 && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </StyledTableCell>\n      )}\n      {block !== 5 && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  // console.log(block);\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            {block !== 5 && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 3</strong>\n              </StyledTableCell>\n            )}\n            {block !== 5 && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 4</strong>\n              </StyledTableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/BankaN/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function BankaN({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(3);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/bankan/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Oct 30, 2021 12:00:00 PM\n    const startTime = new Date(1635595200000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/bankan/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/bankan/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/bankan/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/bankan/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/bankan/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n      let inv6Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n        if (arrayFromObject[heading.length * 5 + i][1]) {\n          inv6Value = arrayFromObject[heading.length * 5 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n        inv6: inv6Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n\n    if (!block) {\n      localStorage.setItem(\"siteInverterTableBlock\", 1);\n      block = localStorage.getItem(\"siteInverterTableBlock\");\n    }\n\n    let route = serverUrl;\n    if (block === \"mcr\") {\n      route += \"/bankan/grid/mcr\";\n    } else {\n      route += \"/bankan/grid/B\" + String(block).padStart(2, 0);\n    }\n    axios\n      .get(route, {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    localStorage.setItem(\"siteInverterTableBlock\", event.target.value);\n\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to bankam site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(\n      localStorage.getItem(\"siteInverterTableBlock\"),\n      startTime,\n      newEndTime,\n      beginTime\n    );\n  };\n\n  // useEffect to fetch data related to bankan site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to bankan site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n      localStorage.setItem(\"siteInverterTableBlock\", 1);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item> */}\n        {/* <span style={{ fontSize: \"1.25rem\" }}>bankam</span> */}\n        {/* <Typography variant=\"h6\">Banka N</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item> */}\n        {/* <span style={{ fontSize: \"1.25rem\" }}>40 MW</span> */}\n        {/* <Typography variant=\"h6\">15 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={20} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1000]}\n          rightAxisY={[0, 15]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  {/* <MenuItem value={\"mcr\"}>MCR</MenuItem> */}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, block }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv1))\n            ? \"-\"\n            : Number(value.inv1) === -111\n            ? \"X\"\n            : Number(value.inv1).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      <StyledTableCell\n        align=\"center\"\n        style={{ backgroundColor: rowBackgroundColor }}\n      >\n        <span>\n          {isNaN(Number(value.inv2))\n            ? \"-\"\n            : Number(value.inv2) === -111\n            ? \"X\"\n            : Number(value.inv2).toFixed(2)}\n        </span>\n      </StyledTableCell>\n      {block !== 8 && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv3))\n              ? \"-\"\n              : Number(value.inv3) === -111\n              ? \"X\"\n              : Number(value.inv3).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n      {block !== 8 && (\n        <StyledTableCell\n          align=\"center\"\n          style={{ backgroundColor: rowBackgroundColor }}\n        >\n          <span>\n            {isNaN(Number(value.inv4))\n              ? \"-\"\n              : Number(value.inv4) === -111\n              ? \"X\"\n              : Number(value.inv4).toFixed(2)}\n          </span>\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, block }) => {\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{ paddingTop: \".6rem\", paddingBottom: \".6rem\" }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv1))\n          ? \"-\"\n          : Number(value.inv1) === -111\n          ? \"X\"\n          : Number(value.inv1).toFixed(2)}\n      </StyledTableCell>\n      <StyledTableCell align=\"center\">\n        {isNaN(Number(value.inv2))\n          ? \"-\"\n          : Number(value.inv2) === -111\n          ? \"X\"\n          : Number(value.inv2).toFixed(2)}\n      </StyledTableCell>\n      {block !== 8 && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv3))\n            ? \"-\"\n            : Number(value.inv3) === -111\n            ? \"X\"\n            : Number(value.inv3).toFixed(2)}\n        </StyledTableCell>\n      )}\n      {block !== 8 && (\n        <StyledTableCell align=\"center\">\n          {isNaN(Number(value.inv4))\n            ? \"-\"\n            : Number(value.inv4) === -111\n            ? \"X\"\n            : Number(value.inv4).toFixed(2)}\n        </StyledTableCell>\n      )}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  // console.log(block);\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={6}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n              block={block}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            block={block}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} block={block} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 1</strong>\n            </StyledTableCell>\n            <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell>\n            {block !== 8 && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 3</strong>\n              </StyledTableCell>\n            )}\n            {block !== 8 && (\n              <StyledTableCell\n                align=\"center\"\n                // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n              >\n                <strong>Inv 4</strong>\n              </StyledTableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/BiaxialLineChart\";\nimport BlockTable from \"../components/Maddur/BlockTable\";\nimport CustomCards from \"../components/CustomCards\";\nimport PowerGenerationGauge from \"../components/PowerGenerationGauge\";\nimport Wind from \"../components/Wind\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { AppState } from \"../../src/AppContext\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Maddur({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti: \"0.00\",\n      ghi: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\"getStatusAndTime function called\");\n    axios\n      .get(serverUrl + \"/maddur/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Nov 12, 2021 12:00:00 PM\n    const startTime = new Date(1636718400000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/maddur/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/maddur/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/maddur/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        const ambientTempStr = response.data.ambientTemp;\n        const moduleTempStr = response.data.moduleTemp;\n        const humidityStr = response.data.humidity;\n        // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        setModuleTemp(Number(moduleTempStr).toFixed(1));\n        setHumidity(Number(humidityStr).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/maddur/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.direction;\n        const windSpeedStr = response.data.speed;\n        const rainStr = response.data.rain;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(response.data.rain).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/maddur/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 Cab Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 Cab Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 Cab Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 Cab Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    for (let i = 0; i < heading.length; i++) {\n      let inv1Value = NaN;\n      let inv2Value = NaN;\n      let inv3Value = NaN;\n      let inv4Value = NaN;\n      let inv5Value = NaN;\n      let inv6Value = NaN;\n\n      try {\n        if (arrayFromObject[i][1]) {\n          inv1Value = arrayFromObject[i][1];\n        }\n        if (arrayFromObject[heading.length + i][1]) {\n          inv2Value = arrayFromObject[heading.length + i][1];\n        }\n        if (arrayFromObject[heading.length * 2 + i][1]) {\n          inv3Value = arrayFromObject[heading.length * 2 + i][1];\n        }\n        if (arrayFromObject[heading.length * 3 + i][1]) {\n          inv4Value = arrayFromObject[heading.length * 3 + i][1];\n        }\n        if (arrayFromObject[heading.length * 4 + i][1]) {\n          inv5Value = arrayFromObject[heading.length * 4 + i][1];\n        }\n        if (arrayFromObject[heading.length * 5 + i][1]) {\n          inv6Value = arrayFromObject[heading.length * 5 + i][1];\n        }\n      } catch (error) {}\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        inv1: inv1Value,\n        inv2: inv2Value,\n        inv3: inv3Value,\n        inv4: inv4Value,\n        inv5: inv5Value,\n        inv6: inv6Value,\n      });\n    }\n\n    // console.log(arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    let route = serverUrl;\n    if (block === \"mcr\") {\n      route += \"/maddur/grid/mcr\";\n    } else {\n      route += \"/maddur/grid/B\" + String(block).padStart(2, 0);\n    }\n    axios\n      .get(route, {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block \", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to maddur site\n  const getSiteData = (endTime) => {\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to maddur site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to maddur site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item> */}\n        {/* <span style={{ fontSize: \"1.25rem\" }}>maddur</span> */}\n        {/* <Typography variant=\"h6\">Maddur</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item> */}\n        {/* <span style={{ fontSize: \"1.25rem\" }}>40 MW</span> */}\n        {/* <Typography variant=\"h6\">30 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"2rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 5.59}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi}\n        gti={cardsValues.gti}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        spacing={6}\n        style={{ marginTop: \"1rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={45} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n          />\n        </Grid>\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 40]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  <MenuItem value={1}>B01</MenuItem>\n                  <MenuItem value={2}>B02</MenuItem>\n                  <MenuItem value={3}>B03</MenuItem>\n                  <MenuItem value={4}>B04</MenuItem>\n                  <MenuItem value={5}>B05</MenuItem>\n                  <MenuItem value={6}>B06</MenuItem>\n                  <MenuItem value={7}>B07</MenuItem>\n                  <MenuItem value={8}>B08</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport { Checkbox, Grid, ListItemText } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CheckBox } from \"@material-ui/icons\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { SERVER_URL } from \"../../constants/constants\";\nimport { siteNamesAndBlocks } from \"../../constants/SiteNamesY\";\nimport { AppState } from \"../../AppContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst BlockMenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 130,\n    },\n  },\n};\n\nexport default function QuickCSV({ handleSessionExpire }) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const history = useHistory();\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  // const userId = localStorage.getItem('userId');\n\n  const { setEnabledLinearProgress } = AppState();\n\n  const [frequency, setFrequency] = useState(\"full\");\n\n  const handleFrequency = (event) => {\n    let value = event.target.value;\n    setFrequency(value);\n  };\n\n  // useEffect to check if user is logged in\n  useEffect(() => {\n    // console.log(\"useEffect for authorization\");\n\n    if (!userToken || userToken === \"\") {\n      history.push(\"/login\");\n    }\n\n    return () => {\n      setEnabledLinearProgress(false);\n    };\n  }, []);\n\n  // Selected site states\n  const [selectedSite, setSelectedSite] = useState(\"Balanagar\");\n\n  const getBlockNames = (siteName = selectedSite) => {\n    if (siteName === \"Banka N\") {\n      return [3, 4, 5, 6];\n    }\n\n    if (siteName === \"Banka M\") {\n      return [1, 2, \"MCR\"];\n    }\n\n    let element = JSON.parse(localStorage.getItem(\"siteNamesAndBlocks\")).find(\n      (site) => {\n        return site.name === siteName;\n      }\n    );\n\n    return Array.from({ length: element.blocks[0] }, (v, i) => i + 1);\n  };\n\n  const [selectedBlock, setSelectedBlock] = useState(getBlockNames());\n  const [isSiteSelected, setIsSiteSelected] = useState(true);\n\n  const [displayDownloadExcelAlert, setDisplayDownloadExcelAlert] =\n    useState(false);\n  const [noDataFound, setNoDataFound] = useState(false);\n  const [disabledDownloadExcelButton, setDisabledDownloadExcelButton] =\n    useState(false);\n\n  // From and To dates states for Excel\n  const [excelFromDate, setExcelFromDate] = useState(() => {\n    let prevDay = new Date();\n    prevDay.setDate(new Date().getDate() - 1);\n    prevDay.setHours(0, 0, 0, 0);\n    return prevDay.getTime();\n  });\n\n  const [excelToDate, setExcelToDate] = useState(() => {\n    let day = new Date();\n    day.setHours(23, 59, 59, 999);\n    return day.getTime();\n  });\n\n  const handleExcelFromDate = (date) => {\n    let fromDate = new Date(date);\n    let fromDateTime = fromDate.getTime();\n    // console.log(\"From date by picker\", fromDate);\n    setExcelFromDate(fromDateTime);\n  };\n\n  const handleExcelToDate = (date) => {\n    let toDate = new Date(date);\n    toDate.setHours(23, 59, 59, 999);\n    let toDateTime = toDate.getTime();\n    // console.log(\"To date by picker\", toDate);\n    setExcelToDate(toDateTime);\n  };\n\n  const handleSiteChange = (event) => {\n    setIsSiteSelected(true);\n    setSelectedSite(event.target.value);\n    // getBlockNames(event.target.value);\n    setSelectedBlock(getBlockNames(event.target.value));\n  };\n\n  // const handleBlockChange = (event) => {\n  //   setSelectedBlock(event.target.value);\n  // };\n\n  const handleBlockChange = (event) => {\n    const value = event.target.value;\n    if (value[value.length - 1] === \"all\") {\n      setSelectedBlock(\n        selectedBlock.length === getBlockNames().length ? [] : getBlockNames()\n      );\n      return;\n    }\n    setSelectedBlock(value);\n  };\n\n  const handleDownloadExcelButtonClick = () => {\n    if (selectedSite === \"none\") {\n      try {\n        setIsSiteSelected(false);\n      } finally {\n        return;\n      }\n    }\n\n    // Reset alerts\n    try {\n      setIsSiteSelected(true);\n      setDisabledDownloadExcelButton(true);\n      setDisplayDownloadExcelAlert(false);\n      setNoDataFound(false);\n    } finally {\n      let isDifferenceNegative = compareExcelDates(excelFromDate, excelToDate);\n\n      if (isDifferenceNegative) {\n        setDisplayDownloadExcelAlert(isDifferenceNegative);\n        setDisabledDownloadExcelButton(false);\n      } else {\n        getCSV();\n      }\n    }\n  };\n\n  const getCSV = () => {\n    // let blockNames = selectedBlock === 'all' ? getAllBlockNames() : selectedBlock !== 'mcr' ? ['B' + String(selectedBlock).padStart(2, 0)] : [selectedBlock];\n\n    setEnabledLinearProgress(true);\n\n    let blockNames = [];\n\n    selectedBlock.forEach((element) => {\n      if (element !== \"MCR\") {\n        blockNames.push(\"B\" + String(element).padStart(2, 0));\n      } else {\n        blockNames.push(element);\n      }\n    });\n\n    axios\n      .post(\n        SERVER_URL + \"/dumpcsv\",\n        {\n          site: selectedSite,\n          fromDate: new Date(excelFromDate).getTime(),\n          toDate: new Date(excelToDate).getTime(),\n          block: blockNames,\n          frequency: frequency,\n        },\n        {\n          headers: {\n            jwtToken: userToken,\n            responseType: \"blob\",\n          },\n        }\n      )\n      .then((response) => {\n        setEnabledLinearProgress(false);\n        const downloadUrl = window.URL.createObjectURL(\n          new Blob([response.data])\n        );\n        const link = document.createElement(\"a\");\n        link.href = downloadUrl;\n        let fromDate = new Date(excelFromDate);\n        let toDate = new Date(excelToDate);\n        let filename = `${selectedSite}_${selectedBlock}_${fromDate.getDate()}_${\n          fromDate.getMonth() + 1\n        }_${fromDate.getFullYear()}_${toDate.getDate()}_${\n          toDate.getMonth() + 1\n        }_${toDate.getFullYear()}.csv`;\n        link.setAttribute(\"download\", filename);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        setDisabledDownloadExcelButton(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        setEnabledLinearProgress(false);\n        setNoDataFound(true);\n        setDisabledDownloadExcelButton(false);\n      });\n  };\n\n  const compareExcelDates = (from, to) => {\n    let fromDate = new Date(from).getTime();\n    let toDate = new Date(to).getTime();\n\n    let differenceInTime = toDate - fromDate;\n\n    // console.log(differenceInTime);\n\n    if (differenceInTime >= 0) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const getSiteNames = () => {\n    let siteNames = localStorage.getItem(\"siteNames\");\n    // console.log(\"siteNames\", siteNames);\n    if (siteNames !== null) {\n      let siteNamesArray = siteNames.split(\",\");\n      // console.log(siteNamesArray);\n      return siteNamesArray;\n    }\n  };\n\n  const getAllBlockNames = (siteName = selectedSite) => {\n    let element = JSON.parse(localStorage.getItem(\"siteNamesAndBlocks\")).find(\n      (site) => {\n        return site.name === siteName;\n      }\n    );\n\n    let blockNumbers = Array.from(\n      { length: element.blocks[0] },\n      (v, i) => i + 1\n    );\n\n    let blockNames = [];\n\n    blockNumbers.forEach((element) => {\n      blockNames.push(\"B\" + String(element).padStart(2, 0));\n    });\n\n    return blockNames;\n  };\n\n  return (\n    <div style={{ paddingTop: \".5rem\" }}>\n      <Grid container alignItems=\"center\">\n        <Grid item style={{ marginRight: \"1rem\" }}>\n          <FormControl\n            style={{\n              width: \"120px\",\n              textAlign: \"left\",\n            }}\n          >\n            <InputLabel id=\"site-select-helper-label\">Site</InputLabel>\n            <Select\n              labelId=\"site-select-helper-label\"\n              id=\"site-select-helper\"\n              value={selectedSite}\n              onChange={handleSiteChange}\n            >\n              {/* <MenuItem value='none'>\n                <em style={{ color: '#9e9e9e' }}>None</em>\n              </MenuItem> */}\n              {JSON.parse(localStorage.getItem(\"siteNamesAndBlocks\")).map(\n                (site) => (\n                  <MenuItem key={site.name} value={site.name}>\n                    {site.name}\n                  </MenuItem>\n                )\n              )}\n            </Select>\n            {!isSiteSelected && (\n              <FormHelperText>\n                <span style={{ color: \"red\" }}>Select a site</span>\n              </FormHelperText>\n            )}\n          </FormControl>\n        </Grid>\n        <Grid item style={{ marginRight: \"1rem\" }}>\n          <FormControl\n            style={{\n              maxWidth: \"110px\",\n              // textAlign: 'left',\n            }}\n          >\n            {/* <InputLabel id='site-select-helper-label'>Block</InputLabel>\n            <Select\n              labelId='site-select-helper-label'\n              id='site-select-helper'\n              value={selectedBlock}\n              onChange={handleBlockChange}\n            >\n              {<MenuItem value={'all'} key={1}>All</MenuItem>}\n              {getBlockNames().map((element, index) => {\n                return (\n                  <MenuItem key={index + 2} value={element}>{element}</MenuItem>\n                )\n              })}\n            </Select> */}\n            <InputLabel id=\"block-multiple-checkbox-label\">Block</InputLabel>\n            <Select\n              labelId=\"block-multiple-checkbox-label\"\n              id=\"block-multiple-checkbox\"\n              multiple\n              value={selectedBlock}\n              onChange={handleBlockChange}\n              // input={<OutlinedInput label=\"Tag\" />}\n              renderValue={(selected) => selected.join(\", \")}\n              // MenuProps={BlockMenuProps}\n              MenuProps={{\n                classes: { paper: classes.menuPaper },\n                getContentAnchorEl: () => null,\n              }}\n            >\n              <MenuItem key={\"all\"} value={\"all\"} style={{ paddingBlock: 0 }}>\n                <Checkbox\n                  size=\"small\"\n                  color=\"primary\"\n                  checked={\n                    getBlockNames().length > 0 &&\n                    selectedBlock.length === getBlockNames().length\n                  }\n                  indeterminate={\n                    selectedBlock.length > 0 &&\n                    selectedBlock.length < getBlockNames().length\n                  }\n                />\n                <ListItemText primary={\"All\"} />\n              </MenuItem>\n\n              {getBlockNames().map((name) => (\n                <MenuItem key={name} value={name} style={{ paddingBlock: 0 }}>\n                  <Checkbox\n                    size=\"small\"\n                    color=\"primary\"\n                    checked={selectedBlock.indexOf(name) > -1}\n                  />\n                  <ListItemText primary={name} />\n                </MenuItem>\n              ))}\n            </Select>\n            {!isSiteSelected && (\n              <FormHelperText>\n                <span style={{ color: \"red\" }}>Select a site</span>\n              </FormHelperText>\n            )}\n          </FormControl>\n        </Grid>\n        <Grid item style={{ marginRight: \"1rem\" }}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              style={{ width: \"140px\", marginRight: \"1rem\" }}\n              disableToolbar\n              variant=\"inline\"\n              format=\"dd/MM/yyyy\"\n              // margin='normal'\n              id=\"from-date-picker-inline\"\n              label=\"From\"\n              value={excelFromDate}\n              onChange={handleExcelFromDate}\n              autoOk={true}\n            />\n            <KeyboardDatePicker\n              style={{ width: \"140px\" }}\n              disableToolbar\n              variant=\"inline\"\n              format=\"dd/MM/yyyy\"\n              // margin='normal'\n              id=\"to-date-picker-inline\"\n              label=\"To\"\n              value={excelToDate}\n              onChange={handleExcelToDate}\n              autoOk={true}\n            />\n          </MuiPickersUtilsProvider>\n          <FormControl style={{ marginLeft: \"1rem\", maxWidth: \"110px\" }}>\n            <InputLabel id=\"frequency-checkbox-label\">Frequency</InputLabel>\n            <Select\n              labelId=\"frequency-checkbox-label\"\n              id=\"frequency-checkbox\"\n              value={frequency}\n              onChange={handleFrequency}\n            >\n              <MenuItem key={\"full\"} value={\"full\"}>\n                Full\n              </MenuItem>\n              <MenuItem key={\"hourly\"} value={\"hourly\"}>\n                HR Avg\n              </MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={handleDownloadExcelButtonClick}\n            disabled={disabledDownloadExcelButton}\n            style={{ marginTop: \".75rem\" }}\n          >\n            Download\n          </Button>\n        </Grid>\n      </Grid>\n\n      {displayDownloadExcelAlert && (\n        <div\n          style={{\n            marginTop: \"1rem\",\n          }}\n        >\n          <span style={{ color: \"#ff9800\", fontSize: \"1rem\" }}>\n            Select larger 'To' date.\n          </span>\n        </div>\n      )}\n      {noDataFound && (\n        <div\n          style={{\n            marginTop: \"1rem\",\n          }}\n        >\n          <span style={{ color: \"#ff9800\", fontSize: \"1rem\" }}>\n            No data found!\n            <br />\n            Try selecting different dates.\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport SiteRanking from \"../components/Performance/SiteRanking\";\nimport CustomCSV from \"./CustomCSV\";\nimport QuickCSV from \"../components/CSV/QuickCSV\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  tabs: {\n    \"& .MuiTabs-indicator\": {\n      backgroundColor: \"#148F77\",\n      // height: 3,\n    },\n    \"& .MuiTab-root.Mui-selected\": {\n      color: \"#148F77\",\n    },\n  },\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scb-tab-${index}`,\n    \"aria-controls\": `scb-tabpanel-${index}`,\n  };\n}\n\nexport default function CSV({ handleSessionExpire }) {\n  const [value, setValue] = React.useState(0);\n  const classes = useStyles();\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box>\n      <Tabs\n        style={{ color: \"#000000\" }}\n        className={classes.tabs}\n        value={value}\n        onChange={handleChange}\n        aria-label=\"analytics tabs\"\n        // indicatorColor=\"primary\"\n      >\n        <Tab label=\"Custom\" {...a11yProps(0)} />\n        <Tab label=\"Quick\" {...a11yProps(1)} />\n      </Tabs>\n\n      <TabPanel value={value} index={0}>\n        <CustomCSV handleSessionExpire={handleSessionExpire} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <QuickCSV handleSessionExpire={handleSessionExpire} />\n      </TabPanel>\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Cell,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n  LabelList,\n  Legend,\n  Brush,\n} from \"recharts\";\n\nimport \"./DataAvailabilityBarChart.css\";\n\nconst renderLegend = (props) => {\n  const { payload } = props;\n\n  return (\n    <div style={{ paddingBottom: \"3.25rem\" }}>\n      {payload.map((entry, index) => {\n        return (\n          <span key={`item-${index}`} style={{ color: \"#575757\" }}>\n            %\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default function DataAvailabilityBarChart({ chartData, enableScroll }) {\n  // console.log(chartData);\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload) {\n      return (\n        <div>\n          <span>{`${payload[0].payload.siteName}: ${payload[0].payload.Percentage}%`}</span>\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  const toDecimal = (value, index) => {\n    return value / 1000;\n  };\n\n  const [brushStartIndex, setBrushStartIndex] = useState(0);\n\n  useEffect(() => {\n    if (enableScroll === false) {\n      setBrushStartIndex(0);\n    }\n  }, [enableScroll]);\n\n  const getDataForScroll = () => {\n    let cells = [];\n\n    if (chartData && chartData.length > 0) {\n      for (let i = brushStartIndex; i < brushStartIndex + 14; i++) {\n        cells.push(<Cell key={`cell-${i}`} fill={chartData[i].color} />);\n      }\n    }\n\n    return cells;\n  };\n\n  return enableScroll === true ? (\n    <ResponsiveContainer style={{ height: \"100%\" }}>\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          // left: 20,\n          bottom: 10,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"siteName\" fontSize={10} interval={0} stroke=\"black\" />\n        <YAxis domain={[0, (data) => 100]} />\n        <Tooltip content={<CustomTooltip />} />\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n\n        <Brush\n          endIndex={13}\n          onChange={(obj) => setBrushStartIndex(obj.startIndex)}\n          dataKey=\"site\"\n          height={18}\n          stroke=\"#A6ACAF\"\n          tickFormatter={() => \"\"}\n        />\n        <Legend\n          wrapperStyle={{\n            paddingLeft: \"10px\",\n          }}\n          // formatter={(value, entry, index) => value === 'plantPr' ? 'Actual PR' : 'Budget'}\n          verticalAlign=\"middle\"\n          // align='left'\n          // layout=\"vertical\"\n          content={renderLegend}\n        />\n\n        <Bar isAnimationActive={false} dataKey=\"Percentage\">\n          <LabelList\n            dataKey=\"Percentage\"\n            position=\"center\"\n            fill=\"#fff\"\n            angle=\"270\"\n          />\n          {/* {chartData.map((datum, index) => {\n              if (Number(datum.Percentage) < 95) {\n                return <Cell key={`cell-${index}`}  fill='#EC7063' />;\n              } else {\n                return <Cell key={`cell-${index}`}  fill='#48C9B0' />;\n              }      \n                    \n              // return <Cell key={index} fill={datum.color} />;\n          })} */}\n          {getDataForScroll()}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  ) : (\n    <ResponsiveContainer>\n      <BarChart\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 0,\n          bottom: 50,\n        }}\n        barCategoryGap={1.25}\n        barGap={1}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey=\"siteName\"\n          angle={270}\n          tickMargin={32}\n          fontSize={10}\n          interval={0}\n          stroke=\"black\"\n        />\n        <YAxis domain={[0, (data) => 100]} />\n        <Tooltip content={<CustomTooltip />} />\n        {/* <ReferenceLine y={0} stroke=\"#000\" /> */}\n        {/* <Tooltip /> */}\n        <Legend\n          wrapperStyle={{\n            paddingLeft: \"10px\",\n          }}\n          // formatter={(value, entry, index) => value === 'plantPr' ? 'Actual PR' : 'Budget'}\n          verticalAlign=\"middle\"\n          // align='left'\n          // layout=\"vertical\"\n          content={renderLegend}\n        />\n        <Bar isAnimationActive={false} dataKey=\"Percentage\">\n          <LabelList\n            dataKey=\"Percentage\"\n            position=\"center\"\n            fill=\"#000\"\n            angle=\"270\"\n            fontSize={8}\n          />\n          {chartData.map((datum, index) => {\n            //   if (Number(datum.Percentage) >= Number(datum.prBudget)) {\n            //     return <Cell key={`cell-${index}`} fill='#48C9B0' />;\n            //   } else {\n            //     return <Cell key={`cell-${index}`} fill='#EC7063' />;\n            //   }\n\n            return <Cell key={`cell-${index}`} fill={datum.color} />;\n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n// import \"./SCB.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport {\n  Card,\n  Grid,\n  Typography,\n  Button,\n  OutlinedInput,\n  ListItemIcon,\n  Checkbox,\n  ListItemText,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n} from \"@material-ui/core\";\n\nimport axios from \"axios\";\nimport { ML_URL, SERVER_URL } from \"../../constants/constants\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { AppState } from \"../../AppContext\";\n\nimport DataAvailabilityBarChart from \"./DataAvailabilityBarChart\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  textField: {\n    width: 120,\n  },\n  menuPaper: {\n    maxHeight: 400,\n  },\n  formControlStyle: {},\n  listItemText: {\n    fontSize: \".9rem\",\n  },\n}));\n\nexport default function DataAvailability({ handleSessionExpire }) {\n  const { setEnabledLinearProgress } = AppState();\n\n  const [disabledViewBtn, setDisabledViewBtn] = useState(false);\n\n  const classes = useStyles();\n\n  const userToken = localStorage.getItem(\"userToken\");\n\n  const [parameter, setParameter] = useState(\"pr\");\n\n  const [sort, setSort] = useState(\"asc\");\n\n  const [filter, setFilter] = useState(\"none\");\n\n  const [enableBarChartScroll, setEnableBarChartScroll] = useState(true);\n\n  const [barChartDataOG, setBarChartDataOG] = useState([]);\n  const [barChartData, setBarChartData] = useState([]);\n\n  const [timePeriod, setTimePeriod] = useState(\"14\");\n\n  const handleTimePeriodChange = (event) => {\n    setTimePeriod(event.target.value);\n  };\n\n  const fetchPerformance = (fromDate, toDate) => {\n    let today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    // console.log('site ranking', fromDate.toLocaleString(), toDate.toLocaleString(), today.toLocaleString());\n\n    let fromDateTime = fromDate.getTime();\n    let toDateTime = toDate.getTime();\n\n    if (timePeriod === \"14\") {\n      let newFromDate = new Date(fromDate.getTime());\n      newFromDate.setHours(6, 0, 0, 0);\n      fromDateTime = newFromDate.getTime();\n\n      let newToDate = new Date(toDate.getTime());\n      newToDate.setHours(20, 0, 0, 0);\n      toDateTime = newToDate.getTime();\n    } else {\n      let newToDate = new Date();\n      newToDate.setDate(toDate.getDate());\n      toDateTime = newToDate.getTime();\n    }\n    setEnabledLinearProgress(true);\n    setDisabledViewBtn(true);\n    // console.log(new Date(toDateTime).toLocaleTimeString());\n\n    axios\n      .post(\n        SERVER_URL + \"/dataavail\",\n        {\n          fromDate: fromDateTime,\n          endDate: toDateTime,\n          timePeriod: Number(timePeriod),\n        },\n        {\n          headers: { jwtToken: localStorage.getItem(\"userToken\") },\n        }\n      )\n      .then((response) => {\n        // console.log(\"data availability\", response);\n\n        let sortedByName = response.data.sort((a, b) => {\n          return a.siteName < b.siteName ? -1 : 1;\n        });\n\n        let dataWithColors = sortedByName.map((element) => {\n          return {\n            ...element,\n            color: Number(element.Percentage) < 95 ? \"#EC7063\" : \"#48C9B0\",\n          };\n        });\n\n        setBarChartDataOG(dataWithColors);\n\n        setBarChartData(dataWithColors);\n        setEnabledLinearProgress(false);\n        setDisabledViewBtn(false);\n        // if (sort === 'desc') {\n        //   setBarChartData(response.data.sort((a, b) => {\n        //     return parseFloat(b.Percentage) - parseFloat(a.Percentage);\n        //   }));\n        // } else {\n        //   setBarChartData(response.data.sort((a, b) => {\n        //     return parseFloat(a.Percentage) - parseFloat(b.Percentage);\n        //   }));\n        // }\n      })\n      .catch((error) => {\n        // console.log(error);\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n        setEnabledLinearProgress(false);\n        setDisabledViewBtn(false);\n      });\n  };\n\n  const handleParameterChange = (event) => {\n    setParameter(event.target.value);\n    // fetchPerformance(fromDate.getTime(), toDate.getTime(), selectedSite);\n  };\n\n  const sortElements = (value) => {\n    switch (value) {\n      case \"desc\":\n        setBarChartData((prevState) =>\n          prevState.sort(\n            (a, b) => parseFloat(b.Percentage) - parseFloat(a.Percentage)\n          )\n        );\n        break;\n      case \"asc\":\n        setBarChartData((prevState) =>\n          prevState.sort(\n            (a, b) => parseFloat(a.Percentage) - parseFloat(b.Percentage)\n          )\n        );\n        break;\n      default:\n        setBarChartData((prevState) =>\n          prevState.sort(\n            (a, b) => parseFloat(b.Percentage) - parseFloat(a.Percentage)\n          )\n        );\n    }\n  };\n\n  const handleSortChange = (event) => {\n    let value = event.target.value;\n    sortElements(value);\n    setSort(value);\n  };\n\n  const handleFilterChange = (event) => {\n    let value = event.target.value;\n\n    switch (value) {\n      case \"low\":\n        // console.log('low')\n        setBarChartData((prevState) => {\n          return barChartDataOG.filter(\n            (element) => Number(element.plantPr) < Number(element.prBudget)\n          );\n        });\n        break;\n      case \"high\":\n        // console.log(\"high\");\n        setBarChartData((prevState) => {\n          return barChartDataOG.filter(\n            (element) => Number(element.plantPr) >= Number(element.prBudget)\n          );\n        });\n        break;\n      default:\n        fetchPerformance(fromDate, toDate);\n    }\n\n    sortElements(value);\n\n    setFilter(value);\n  };\n\n  /**\n   * Functions related to time component\n   */\n\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleTimeReset = () => {\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getFromDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(0, 1, 0, 0);\n    return newDate;\n  };\n\n  const getToDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(23, 59, 59, 999);\n    return newDate;\n  };\n\n  const [fromDate, setFromDate] = useState(() => {\n    let date = new Date();\n    return getFromDate(date);\n  });\n\n  const [toDate, setToDate] = useState(() => {\n    let date = new Date();\n    return getToDate(date);\n  });\n\n  const handleFromDateChange = (date) => {\n    setFromDate(getFromDate(date));\n    // fetchPerformance(date.getTime(), toDate.getTime(), selectedSite);\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(getToDate(date));\n    // fetchPerformance(fromDate.getTime(), date.getTime(), selectedSite);\n  };\n\n  /**\n   * END of functions related to time component\n   */\n\n  // Status and time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  useEffect(() => {\n    fetchPerformance(fromDate, toDate);\n  }, []);\n\n  const calculateDifference = (value1, value2) => {\n    let value1Num = Number(value1);\n    let value2Num = Number(value2);\n\n    let difference = value2Num - value1Num;\n\n    return Math.abs(\n      Number(difference)\n        .toFixed(2)\n        .replace(/[.,]00$/, \"\")\n    );\n  };\n\n  const handleViewBtnClick = () => {\n    fetchPerformance(fromDate, toDate);\n  };\n\n  return (\n    <div style={{ marginTop: \".5rem\", width: \"90vw\" }}>\n      <Grid container alignItems=\"center\" justify=\"space-between\">\n        <Grid item>\n          <Grid container alignItems=\"flex-end\">\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"from-date-picker-inline\"\n                  label=\"From\"\n                  value={fromDate}\n                  onChange={handleFromDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-labelte\": \"from date\",\n                  }}\n                  style={{ marginRight: \"1rem\" }}\n                  className={classes.textField}\n                  InputProps={{\n                    style: {\n                      fontSize: \".8rem\",\n                    },\n                  }}\n                />\n\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"to-date-picker-inline\"\n                  label=\"To\"\n                  value={toDate}\n                  onChange={handleToDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"to date\",\n                  }}\n                  className={classes.textField}\n                  InputProps={{\n                    style: {\n                      fontSize: \".8rem\",\n                    },\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n              {/* <FormControl component=\"fieldset\" style={{marginLeft: '1rem'}}>\n                    <FormLabel component=\"legend\" style={{fontSize: '.8rem'}}>Time Period</FormLabel>\n                    <RadioGroup value={timePeriod} onChange={handleTimePeriodChange} row aria-label=\"time-period\" name=\"time-period-row-radio-buttons-group\">\n                        <FormControlLabel value='24' control={<Radio color='primary' size='small' />} label=\"24 hrs\" />\n                        <FormControlLabel  value='14' control={<Radio color='primary' size='small' />} label=\"06:00 - 20:00\" />\n                    </RadioGroup>\n                </FormControl> */}\n              <FormControl\n                className={classes.formControlStyle}\n                style={{ marginLeft: \"1rem\" }}\n              >\n                <InputLabel id=\"time-select-label\">Time</InputLabel>\n                <Select\n                  labelId=\"time-select-label\"\n                  id=\"time-select\"\n                  value={timePeriod}\n                  onChange={handleTimePeriodChange}\n                  style={{ fontSize: \".8rem\" }}\n                >\n                  <MenuItem value={\"14\"}>\n                    <span>06:00 - 20:00&ensp;</span>\n                  </MenuItem>\n                  <MenuItem value={\"24\"}>\n                    <span>24 hrs&ensp;</span>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={handleViewBtnClick}\n                disabled={disabledViewBtn}\n              >\n                {disabledViewBtn ? \"Loading\" : \"View\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item style={{ marginRight: \"1rem\" }}>\n          <FormControl className={classes.formControlStyle}>\n            <InputLabel id=\"sort-select-label\">Sort</InputLabel>\n            <Select\n              labelId=\"sort-select-label\"\n              id=\"sort-select\"\n              value={sort}\n              onChange={handleSortChange}\n              style={{ fontSize: \".8rem\" }}\n            >\n              <MenuItem value={\"desc\"}>\n                <span>Desc&ensp;</span>\n              </MenuItem>\n              <MenuItem value={\"asc\"}>\n                <span>Asc&ensp;</span>\n              </MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n\n        {/* <Grid item>\n          <Grid container alignItems='center'>\n            <Grid item style={{ marginRight: '2rem' }}>\n              <Grid container>\n                <Grid item>\n                  {status === 0 ? (\n                    // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                    //   Offline\n                    // </span>\n                    <Typography variant='h6' style={{ color: '#f44336' }}>\n                      Offline\n                    </Typography>\n                  ) : (\n                    // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                    //   Online\n                    // </span>\n                    <Typography variant='h6' style={{ color: '#4caf50' }}>\n                      Online\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item style={{ margin: '0 1rem' }}></Grid>\n                <Grid item>\n                  {timestamp === undefined ? (\n                    <CircularProgress\n                      size='1.25rem'\n                      // style={{ marginRight: '.5rem' }}\n                    />\n                  ) : (\n                    <Typography variant='h6'>\n                      {getFormattedDateAndTimeString(timestamp)}\n                    </Typography>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: 'hidden' }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format='dd/MM/yyyy hh:mm a'\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item>\n              <IconButton onClick={() => setOpenDateTimePicker(true)}>\n                <EventIcon color='action' fontSize='large' />\n              </IconButton>\n            </Grid>\n            <Grid item style={{ paddingRight: '0rem', marginRight: '1rem' }}>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color='primary' fontSize='large' />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n      </Grid>\n\n      <Grid container style={{ marginTop: \".25rem\" }}>\n        <Card\n          elevation={6}\n          style={{\n            width: \"100%\",\n            height: \"410px\",\n            marginTop: \"1rem\",\n            paddingTop: \".5rem\",\n            paddingBottom: \"3.5rem\",\n          }}\n        >\n          <Grid\n            container\n            justify=\"flex-end\"\n            alignItems=\"center\"\n            style={{ paddingInline: \"2rem\", marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <span>Scroll:</span>\n              <Switch\n                checked={enableBarChartScroll}\n                onChange={() =>\n                  setEnableBarChartScroll((prevState) => !prevState)\n                }\n                color=\"primary\"\n                name=\"scrollSwitch\"\n              />\n            </Grid>\n          </Grid>\n          <DataAvailabilityBarChart\n            chartData={barChartData}\n            enableScroll={enableBarChartScroll}\n          />\n        </Card>\n      </Grid>\n\n      <div style={{ marginBlock: \"1.5rem\" }}></div>\n      {/* {selectedSite && <CustomDiagram />} */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"1.5rem\" }}></div>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport axios from \"axios\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { useHistory } from \"react-router-dom\";\n// import Footer from \"../components/Footer\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { SERVER_URL } from \"../../../constants/constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"column\",\n    // alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  alertStyle: {\n    marginTop: theme.spacing(2),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nexport default function NewUser() {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const textRef = useRef(null);\n  const footerRef = useRef(null);\n\n  const userToken = localStorage.getItem(\"userToken\");\n\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassowrd, setConfirmPassword] = useState(\"\");\n  const [passwordMatch, setPasswordMatch] = useState(false);\n  const [alertPasswordMatch, setAlertPasswordMatch] = useState(false);\n  const [signupError, setSignupError] = useState(false);\n  const [userExist, setUserExist] = useState(false);\n  const [openBackdrop, setOpenBackdrop] = useState(false);\n\n  const [footerPosition, setFooterPosition] = useState(\"absolute\");\n  const [footerBottomPosition, setFooterBottomPosition] = useState(\"0\");\n\n  useEffect(() => {\n    if (userToken && userToken !== \"\") {\n      history.push(\"/\");\n    }\n  }, [userToken, history]);\n\n  useLayoutEffect(() => {\n    window.onresize = () => {\n      if (\n        textRef.current.getBoundingClientRect().bottom >\n        footerRef.current.offsetTop\n      ) {\n        setFooterPosition(\"relative\");\n        setFooterBottomPosition(\"auto\");\n      }\n\n      if (\n        window.innerHeight > footerRef.current.getBoundingClientRect().bottom\n      ) {\n        setFooterPosition(\"absolute\");\n        setFooterBottomPosition(\"0\");\n      }\n    };\n\n    return () => {\n      window.onresize = null;\n    };\n  }, []);\n\n  const replaceWithLogin = (e) => {\n    e.preventDefault();\n    history.replace(\"/login\");\n  };\n\n  const submitHandler = (e) => {\n    // console.log(\"function hitt user\", firstname, lastname, email, password);\n    e.preventDefault();\n    setAlertPasswordMatch(false);\n    setUserExist(false);\n    if (password !== confirmPassowrd) {\n      setAlertPasswordMatch(true);\n      return;\n    }\n    setOpenBackdrop(true);\n\n    axios\n      .post(SERVER_URL + \"/api/users\", {\n        firstname: firstname,\n        lastname: lastname,\n        email: email,\n        password: password,\n      })\n      .then((response) => {\n        // console.log(response.data);\n        // localStorage.setItem(\"userToken\", response.data.jwtToken);\n        // localStorage.setItem(\n        //   \"username\",\n        //   response.data.userDetails.firstname +\n        //     \" \" +\n        //     response.data.userDetails.lastname\n        // );\n        // localStorage.setItem(\"userId\", response.data.userDetails.id);\n        setSignupError(false);\n        setOpenBackdrop(false);\n        alert(\n          `User: ${firstname} ${lastname} with email: ${email} created successfully!`\n        );\n        // history.replace(\"/\");\n      })\n      .catch((error) => {\n        // console.log(error.response.status);\n        // console.log(error.response.data);\n        if (error.response && error.response.status === 401) {\n          setUserExist(true);\n          setSignupError(true);\n        }\n        setSignupError(true);\n        setOpenBackdrop(false);\n      });\n  };\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        {/* <CssBaseline /> */}\n        <div className={classes.paper}>\n          {/* <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar> */}\n\n          {alertPasswordMatch && (\n            <Alert severity=\"warning\" className={classes.alertStyle}>\n              Passwords do not match.\n            </Alert>\n          )}\n          {userExist && (\n            <Alert severity=\"error\" className={classes.alertStyle}>\n              User already exists.\n            </Alert>\n          )}\n          {/* <Alert severity='error' className={classes.alertStyle}>\n            Wrong email or password is entered.\n          </Alert> */}\n          <form className={classes.form} onSubmit={submitHandler}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  value={firstname}\n                  onChange={(e) => setFirstname(e.target.value)}\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"lname\"\n                  value={lastname}\n                  onChange={(e) => setLastname(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  autoComplete=\"current-password\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"confirmPassword\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  value={confirmPassowrd}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  autoComplete=\"confirm-password\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled={localStorage.getItem(\"username\") !== \"Veer Pratap\"}\n            >\n              CREATE USER\n            </Button>\n          </form>\n        </div>\n      </Container>\n      <Backdrop className={classes.backdrop} open={openBackdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n}\n","// export const locations = JSON.parse(localStorage.getItem(\"siteNamesCaps\"));\n\n// export const locations = (sites = siteNamesAndBlocks) => {\n//   return sites.map((site) => site.name);\n// };\n// export const locations = [siteNamesAndBlocks];\n\nexport const locations = [\n  \"Badisidd\",\n  \"Balangir\",\n  \"Balanagar\",\n  \"Banka M\",\n  \"Banka N\",\n  \"Bazpur\",\n  \"Bhadla L2\",\n  \"Bhadla L3\",\n  \"Bhongir\",\n  \"Bidar\",\n  \"Bikaner\",\n  \"Byagwat\",\n  \"Chattisgarh\",\n  \"Chittorgarh\",\n  \"Chittuguppa\",\n  \"Farhatabad\",\n  \"Gadarpur\",\n  \"Godhur\",\n  \"Gulelgudda\",\n  \"Hindupur\",\n  \"Hukkeri\",\n  \"Jhandekalan\",\n  \"Jhunir\",\n  \"Khambhat\",\n  \"Kherakhurd\",\n  \"Khilchipur\",\n  \"Kittur\",\n  \"Kosigi\",\n  \"Kudligi\",\n  \"Maddur\",\n  \"Mahoba\",\n  \"Mankhera\",\n  \"Manthani\",\n  \"Mothkur\",\n  \"Nangla\",\n  \"Padmajiwadi\",\n  \"Pattikonda\",\n  \"Rayachoti\",\n  \"Sadashivpet\",\n  \"Sandur\",\n  \"Santhipuram\",\n  \"Sidlaghatta\",\n  // \"Sircilla\",\n  \"Yemmiganur\",\n];\n\nexport const menu = [\n  \"admin\",\n  \"sites\",\n  \"inverterEfficiency\",\n  \"ml\",\n  \"scb\",\n  \"analytics\",\n  \"performance\",\n  \"csv\",\n  \"alerts\",\n];\n\nexport const notifications = [\"SMS\", \"Email\", \"Push\"];\n\nexport const alerts = [\"Network down\", \"Services down\"];\n\nexport const profiles = [\n  \"National Head\",\n  \"Zonal Head\",\n  \"Cluster Head\",\n  \"Plant Head\",\n  \"Engineer\",\n];\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport {\n  Box,\n  Button,\n  Checkbox,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport { SERVER_URL } from \"../../../../constants/constants\";\nimport { locations, menu } from \"../../../../constants/UserAccess/options\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { withStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  menuPaper: {\n    maxHeight: 400,\n  },\n}));\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 14,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nfunction ManageUser() {\n  const classes = useStyles();\n\n  const [users, setUsers] = useState([]);\n\n  const [user, setUser] = React.useState({\n    email: localStorage.getItem(\"userEmail\"),\n  });\n  const [role, setRole] = React.useState(\"user\");\n\n  const [newPassword, setNewPassword] = useState(\"\");\n\n  const [selectedLocations, setSelectedLocations] = useState([...locations]);\n\n  const areAllLocationsSelected =\n    locations.length > 0 && selectedLocations.length === locations.length;\n\n  const [selectedMenu, setSelectedMenu] = useState([...menu]);\n\n  const areAllMenuSelected =\n    menu.length > 0 && selectedMenu.length === menu.length;\n\n  const handleLocationsChange = (event) => {\n    const value = event.target.value;\n\n    if (value[value.length - 1] === \"All\") {\n      setSelectedLocations(\n        selectedLocations.length === locations.length ? [] : locations\n      );\n      return;\n    }\n\n    setSelectedLocations(value);\n  };\n\n  const handleMenuChange = (event) => {\n    const value = event.target.value;\n\n    if (value[value.length - 1] === \"All\") {\n      setSelectedMenu(selectedMenu.length === menu.length ? [] : menu);\n      return;\n    }\n\n    setSelectedMenu(value);\n  };\n\n  const handleUserChange = (email) => {\n    let user = users.find((element) => element.email === email);\n    setUser(user);\n    setRole(user.role);\n  };\n\n  const handleRoleChange = (event) => {\n    setRole(event.target.value);\n  };\n\n  const handleNewPasswordChange = (event) => {\n    setNewPassword(event.target.value);\n  };\n\n  const handleUserFirstNameChange = (event) => {\n    setUser((prevState) => {\n      return { ...prevState, firstname: event.target.value };\n    });\n  };\n\n  const handleUserLastNameChange = (event) => {\n    setUser((prevState) => {\n      return { ...prevState, lastname: event.target.value };\n    });\n  };\n\n  const getUsers = () => {\n    // Todo: Make it more secure by using token.\n    axios\n      .post(\n        SERVER_URL + \"/api/roles\",\n        { email: localStorage.getItem(\"userEmail\") },\n        { headers: { jwtToken: localStorage.getItem(\"userToken\") } }\n      )\n      .then((response) => {\n        // console.log(response.data);\n        setUsers(response.data);\n        let currentUser = response.data.find(\n          (element) => element.email === localStorage.getItem(\"userEmail\")\n        );\n        setUser(currentUser);\n        setRole(currentUser.role);\n        setSelectedLocations(currentUser.locations);\n        setSelectedMenu(currentUser.menu);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const [disabledUpdateBtn, setDisabledUpdateBtn] = useState(false);\n\n  const handleUserUpdate = () => {\n    // console.log(role);\n    setDisabledUpdateBtn(true);\n    axios\n      .post(\n        SERVER_URL + \"/user/manage\",\n        {\n          email: user.email,\n          role: role,\n          locations: selectedLocations,\n          menu: selectedMenu,\n        },\n        { headers: { jwtToken: localStorage.getItem(\"userToken\") } }\n      )\n      .then((response) => {\n        // console.log(response.data);\n        window.alert(\n          `User: ${user.firstname} ${user.lastname} with email: ${user.email} updated successfully!`\n        );\n        setDisabledUpdateBtn(false);\n      })\n      .catch(() => {\n        window.alert(`Update failed! Try again.`);\n        setDisabledUpdateBtn(false);\n      });\n  };\n\n  const handleUserDelete = () => {\n    setDisabledUpdateBtn(true);\n    axios\n      .post(\n        SERVER_URL + \"/user/delete\",\n        { email: user.email },\n        { headers: { jwtToken: localStorage.getItem(\"userToken\") } }\n      )\n      .then((response) => {\n        window.alert(\n          `User: ${user.firstname} ${user.lastname} with email: ${user.email} deleted successfully!`\n        );\n        getUsers();\n        setDisabledUpdateBtn(false);\n      })\n      .catch(() => {\n        window.alert(`Update failed! Try again.`);\n        setDisabledUpdateBtn(false);\n      });\n  };\n\n  return (\n    <div style={{ marginTop: \".5rem\" }}>\n      <Grid\n        container\n        spacing={2}\n        justify=\"space-between\"\n        style={{ paddingRight: \"2rem\" }}\n      >\n        <Grid item>\n          <TextField\n            required\n            id=\"first-name\"\n            label=\"First name\"\n            defaultValue=\"Loading\"\n            value={user.firstname}\n            onChange={handleUserFirstNameChange}\n            style={{ maxWidth: \"8rem\" }}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            required\n            id=\"last-name\"\n            label=\"Last name\"\n            defaultValue=\"Loading\"\n            value={user.lastname}\n            onChange={handleUserLastNameChange}\n            style={{ maxWidth: \"8rem\" }}\n          />\n        </Grid>\n\n        <Grid item>\n          <TextField\n            fullWidth\n            required\n            id=\"email\"\n            label=\"Email\"\n            defaultValue=\"loading\"\n            value={user.email}\n            disabled\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            required\n            id=\"password\"\n            label=\"New Password\"\n            type=\"password\"\n            placeholder=\"Enter here\"\n            onChange={handleNewPasswordChange}\n            style={{ maxWidth: \"8.5rem\" }}\n          />\n        </Grid>\n        <Grid item>\n          <FormControl>\n            <InputLabel id=\"role-simple-select-label\">Select Role</InputLabel>\n            <Select\n              labelId=\"role-simple-select-label\"\n              id=\"role-simple-select\"\n              value={role}\n              label=\"Select Role\"\n              onChange={handleRoleChange}\n            >\n              <MenuItem value={\"user\"}>User&emsp;</MenuItem>\n              <MenuItem value={\"admin\"}>Admin&emsp;</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl style={{ maxWidth: \"8.5rem\" }}>\n            <InputLabel id=\"locations-simple-select-label\">\n              Locations\n            </InputLabel>\n            <Select\n              labelId=\"locations-simple-select-label\"\n              id=\"locations-simple-select\"\n              value={selectedLocations}\n              label=\"Select Locations\"\n              onChange={handleLocationsChange}\n              multiple\n              renderValue={(data) => data.join(\", \")}\n            >\n              <MenuItem\n                value=\"All\"\n                classes={{\n                  root: areAllLocationsSelected\n                    ? classes.areAllLocationsSelected\n                    : \"\",\n                }}\n                style={{ paddingBlock: 0 }}\n              >\n                <ListItemIcon>\n                  <Checkbox\n                    style={{ paddingBlock: 0 }}\n                    size=\"small\"\n                    color=\"primary\"\n                    classes={{ indeterminate: classes.indeterminateColor }}\n                    checked={areAllLocationsSelected}\n                    indeterminate={\n                      selectedLocations.length > 0 &&\n                      selectedLocations.length < locations.length\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText\n                  // classes={{ primary: classes.selectAllText }}\n                  classes={{ primary: classes.listItemText }}\n                  primary=\"Select All\"\n                  style={{ paddingTop: \".05rem\" }}\n                />\n              </MenuItem>\n              {locations.map((element) => {\n                return (\n                  <MenuItem\n                    key={element}\n                    value={element}\n                    style={{ paddingBlock: 0 }}\n                  >\n                    <ListItemIcon>\n                      <Checkbox\n                        style={{ paddingBlock: 0 }}\n                        checked={selectedLocations.indexOf(element) > -1}\n                        // checked={user.locations && user.locations.indexOf(element) > -1}\n                        size=\"small\"\n                        color=\"primary\"\n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      classes={{ primary: classes.listItemText }}\n                      primary={element}\n                      style={{ paddingTop: \".05rem\" }}\n                    />\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl style={{ maxWidth: \"8.5rem\" }}>\n            <InputLabel id=\"menu-simple-select-label\">Menu</InputLabel>\n            <Select\n              labelId=\"menu-simple-select-label\"\n              id=\"menu-simple-select\"\n              value={selectedMenu}\n              label=\"Select Menu\"\n              onChange={handleMenuChange}\n              multiple\n              renderValue={(data) => data.join(\", \")}\n            >\n              <MenuItem\n                value=\"All\"\n                classes={{\n                  root: areAllMenuSelected ? classes.areAllMenuSelected : \"\",\n                }}\n                style={{ paddingBlock: 0 }}\n              >\n                <ListItemIcon>\n                  <Checkbox\n                    style={{ paddingBlock: 0 }}\n                    size=\"small\"\n                    color=\"primary\"\n                    classes={{ indeterminate: classes.indeterminateColor }}\n                    checked={areAllMenuSelected}\n                    indeterminate={\n                      selectedMenu.length > 0 &&\n                      selectedMenu.length < menu.length\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText\n                  // classes={{ primary: classes.selectAllText }}\n                  classes={{ primary: classes.listItemText }}\n                  primary=\"Select All\"\n                  style={{ paddingTop: \".05rem\" }}\n                />\n              </MenuItem>\n              {menu.map((element) => {\n                return (\n                  <MenuItem\n                    key={element}\n                    value={element}\n                    style={{ paddingBlock: 0 }}\n                  >\n                    <ListItemIcon>\n                      <Checkbox\n                        style={{ paddingBlock: 0 }}\n                        checked={selectedMenu.indexOf(element) > -1}\n                        // checked={user.menu && user.menu.indexOf(element) > -1}\n                        size=\"small\"\n                        color=\"primary\"\n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      classes={{ primary: classes.listItemText }}\n                      primary={element}\n                      style={{ paddingTop: \".05rem\" }}\n                    />\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n          {/* <FormControl fullWidth>\n                            <InputLabel id=\"role-simple-select-label\">Menu</InputLabel>\n                            <Select\n                            labelId=\"role-simple-select-label\"\n                            id=\"role-simple-select\"\n                            value={role}\n                            label=\"Select Role\"\n                            onChange={handleRoleChange}\n                            >\n                            \n                            <MenuItem value={'user'}>User&emsp;</MenuItem>\n                            <MenuItem value={'admin'}>Admin&emsp;</MenuItem>\n                            </Select>\n                        </FormControl> */}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        spacing={3}\n        style={{ marginTop: \".75rem\", paddingRight: \"2rem\" }}\n        justify=\"flex-end\"\n      >\n        <Grid item>\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleUserUpdate}>\n            Update\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button variant=\"outlined\" color=\"error\" onClick={handleUserDelete}>\n            Delete\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container style={{ marginTop: \"1.5rem\" }}>\n        <Grid item xs={12} style={{ paddingRight: \"1rem\" }}>\n          {/* <FormControl style={{maxWidth: '17rem'}}>\n                    <InputLabel id=\"user-simple-select-label\">Select User</InputLabel>\n                    <Select\n                    labelId=\"user-simple-select-label\"\n                    id=\"user-simple-select\"\n                    value={user.email}\n                    label=\"Select User\"\n                    onChange={handleUserChange}\n                    >\n                    {users.map((element) => {\n                        return (\n                            <MenuItem value={element.email}>{element.firstname}&nbsp;\n                            {element.lastname}, {element.email}</MenuItem>\n                        )\n                    })}\n                    </Select>\n                </FormControl> */}\n\n          <TableContainer component={Paper} style={{ maxHeight: 300 }}>\n            <Table stickyHeader size=\"small\" aria-label=\"simple table\">\n              <TableHead>\n                <TableRow style={{ backgroundColor: \"#ffffbf\" }}>\n                  {/* <TableCell>Name</TableCell> */}\n                  <StyledTableCell>Sr. No.</StyledTableCell>\n                  <StyledTableCell>Test Email</StyledTableCell>\n                  <StyledTableCell>Name</StyledTableCell>\n                  <StyledTableCell>User Type</StyledTableCell>\n                  <StyledTableCell>Sites</StyledTableCell>\n                  <StyledTableCell>Edit</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users.map((row, index) => (\n                  <TableRow\n                    key={index}\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                    style={{\n                      backgroundColor:\n                        row.email === user.email ? \"lightblue\" : \"white\",\n                    }}\n                  >\n                    {/* <TableCell component=\"th\" scope=\"row\">\n            {row.firstname}&nbsp;{row.lastname}\n          </TableCell> */}\n                    <TableCell>\n                      <Grid container>{index + 1}</Grid>\n                    </TableCell>\n                    <TableCell>\n                      <Grid container>{row.email}</Grid>\n                    </TableCell>\n                    <TableCell>\n                      {row.firstname}&nbsp;{row.lastname}\n                    </TableCell>\n                    <TableCell>{row.role}</TableCell>\n                    <TableCell>{row.locations.length}</TableCell>\n                    <TableCell>\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => handleUserChange(row.email)}\n                      >\n                        <EditIcon fontSize=\"small\" />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default ManageUser;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport {\n  Box,\n  Button,\n  Checkbox,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  Paper,\n  Select,\n  Snackbar,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport { SERVER_URL } from \"../../../constants/constants\";\nimport {\n  locations,\n  menu,\n  notifications,\n  alerts,\n  profiles,\n} from \"../../../constants/UserAccess/options\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { withStyles } from \"@material-ui/styles\";\n// import Pagination from \"@material-ui/lab/Pagination\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n// import PropTypes from \"prop-types\";\n// import TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\n// import KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\n// import KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\n// import FirstPageIcon from \"@material-ui/icons/FirstPage\";\n// import LastPageIcon from \"@material-ui/icons/LastPage\";\n\nimport { AppState } from \"../../../AppContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  menuPaper: {\n    maxHeight: 400,\n  },\n  deleteButton: {\n    // to make a red delete button\n    borderColor: theme.palette.error.main,\n    // background: theme.palette.error.main,\n    color: theme.palette.error.main,\n  },\n  table: {\n    minWidth: 500,\n  },\n  paginationicon: {\n    \"& .MuiIconButton-root.Mui-disabled\": {\n      color: \"#9BD3DD\",\n    },\n  },\n\n  // tablePaginationCaption: {\n  //   fontSize: \"13px\",\n  //   color: \"red\",\n  // },\n  // tablePaginationSelectIcon: {\n  //   color: \"green\",\n  // },\n  // tablePaginationSelect: {\n  //   fontSize: \"13px\",\n  //   color: \"blue\",\n  // },\n  tablePaginationActions: {\n    color: \"#19ABFF\",\n    // fill: \"red\",\n    // \"&:after\": { color: \"green\" },\n    // \"&:before\": {\n    //   color: \"green\",\n    // },\n  },\n\n  // selectDropdown: {\n  // fontSize: \"1px\",\n  // color: \"green\",\n  // backgroundColor: \"blue\",\n  // },\n  menuItem: {\n    fontSize: \"12px\",\n    // backgroundColor: \"red\",\n    // \"&:before\": {\n    //   borderColor: \"white\",\n    //   borderRadius: 5,\n    //   content: \"''\",\n    // },\n    // \"&:after\": {\n    //   borderColor: \"rgba(255, 255, 255, 0.7)\",\n    //   borderRadius: 5,\n    // },\n    // \"&:not(.Mui-disabled):hover::before\": {\n    //   borderColor: \"white\",\n    //   borderRadius: 5,\n    // },\n    \"&:focus\": {\n      backgroundColor: \"lightblue\",\n    },\n    // \"&:hover\": {\n    // backgroundColor: \"red\",\n    // color: \"yellow\",\n    // },\n  },\n}));\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\n// function TablePaginationActions(props) {\n//   // const classes = useStyles();\n//   const theme = useTheme();\n//   const { count, page, rowsPerPage, onChangePage } = props;\n\n//   const handleFirstPageButtonClick = (event) => {\n//     onChangePage(event, 0);\n//   };\n\n//   const handleBackButtonClick = (event) => {\n//     onChangePage(event, page - 1);\n//   };\n\n//   const handleNextButtonClick = (event) => {\n//     onChangePage(event, page + 1);\n//   };\n\n//   const handleLastPageButtonClick = (event) => {\n//     onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n//   };\n\n//   return (\n//     <div className={classes.root}>\n//       <IconButton\n//         onClick={handleFirstPageButtonClick}\n//         disabled={page === 0}\n//         aria-label=\"first page\"\n//       >\n//         {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n//       </IconButton>\n//       <IconButton\n//         onClick={handleBackButtonClick}\n//         disabled={page === 0}\n//         aria-label=\"previous page\"\n//       >\n//         {theme.direction === \"rtl\" ? (\n//           <KeyboardArrowRight />\n//         ) : (\n//           <KeyboardArrowLeft />\n//         )}\n//       </IconButton>\n//       <IconButton\n//         onClick={handleNextButtonClick}\n//         disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n//         aria-label=\"next page\"\n//       >\n//         {theme.direction === \"rtl\" ? (\n//           <KeyboardArrowLeft />\n//         ) : (\n//           <KeyboardArrowRight />\n//         )}\n//       </IconButton>\n//       <IconButton\n//         onClick={handleLastPageButtonClick}\n//         disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n//         aria-label=\"last page\"\n//       >\n//         {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n//       </IconButton>\n//     </div>\n//   );\n// }\n\n// TablePaginationActions.propTypes = {\n//   count: PropTypes.number.isRequired,\n//   onChangePage: PropTypes.func.isRequired,\n//   page: PropTypes.number.isRequired,\n//   rowsPerPage: PropTypes.number.isRequired,\n// };\n\n// function createData(name, calories, fat) {\n//   return { name, calories, fat };\n// }\n\n// const rows = [\n//   createData(\"Cupcake\", 305, 3.7),\n//   createData(\"Donut\", 452, 25.0),\n//   createData(\"Eclair\", 262, 16.0),\n//   createData(\"Frozen yoghurt\", 159, 6.0),\n//   createData(\"Gingerbread\", 356, 16.0),\n//   createData(\"Honeycomb\", 408, 3.2),\n//   createData(\"Ice cream sandwich\", 237, 9.0),\n//   createData(\"Jelly Bean\", 375, 0.0),\n//   createData(\"KitKat\", 518, 26.0),\n//   createData(\"Lollipop\", 392, 0.2),\n//   createData(\"Marshmallow\", 318, 0),\n//   createData(\"Nougat\", 360, 19.0),\n//   createData(\"Oreo\", 437, 18.0),\n// ].sort((a, b) => (a.calories < b.calories ? -1 : 1));\n\n// const useStyles2 = makeStyles({\n//   table: {\n//     minWidth: 500,\n//   },\n//   selectDropdown: { color: \"#fff\", backgroundColor: \"#1b1f38\" },\n//   menuItem: {\n//     \"&:hover\": {\n//       backgroundColor: \"#3b3f58\",\n//     },\n//   },\n// });\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n\n    color: theme.palette.common.black,\n    fontSize: \"13px\",\n  },\n  body: {\n    fontSize: \"12px\",\n  },\n}))(TableCell);\n\nfunction ManageUser() {\n  const { setEnabledLinearProgress } = AppState();\n  const [show, setShow] = useState(false);\n\n  // const [disabledViewBtn, setDisabledViewBtn] = useState(false);\n\n  const classes = useStyles();\n  // const classes = useStyles2();\n  const [users, setUsers] = useState([]);\n  const [paginatedData, setPaginatedData] = useState([]);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, paginatedData.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // const [users, setUsers] = useState([]);\n\n  const [user, setUser] = React.useState({\n    email: localStorage.getItem(\"userEmail\"),\n  });\n\n  // const [user, setUser] = useState({});\n\n  const [role, setRole] = React.useState(\"user\");\n\n  const [selectedProfile, setSelectedProfile] = React.useState(\"Engineer\");\n  const [selectedNotifications, setSelectedNotifications] = useState(\n    notifications.slice()\n  );\n  const [selectedAlerts, setSelectedAlerts] = useState(alerts.slice());\n\n  const [userStatus, setUserStatus] = React.useState(\"active\");\n\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    severity: \"warning\",\n    message: \"All the fields are mendatory!\",\n  });\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackbar((prevState) => {\n      return { ...prevState, open: false };\n    });\n  };\n\n  const handleUserStatusChange = (event, user) => {\n    let value = event.target.checked;\n    let userStatus = value ? \"active\" : \"inactive\";\n    handleUserStatusUpdate(user.email, userStatus);\n  };\n\n  const [email, setEmail] = useState(\"\");\n\n  const [newPassword, setNewPassword] = useState(\"\");\n\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n\n  const getSites = (sites = siteNamesAndBlocks) => {\n    return sites.map((site) => site.name);\n  };\n\n  const [siteOptions, setSiteOptions] = useState(getSites());\n  const [selectedLocations, setSelectedLocations] = useState(\n    siteOptions.slice()\n  );\n  // const [selectedLocations, setSelectedLocations] = useState(locations.slice());\n\n  // const areAllLocationsSelected =\n  //   getSites.length > 0 && selectedLocations.length === getSites.length;\n\n  const areAllLocationsSelected =\n    JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length > 0 &&\n    selectedLocations.length ===\n      JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length;\n\n  const isAllNotificationsSelected =\n    notifications.length > 0 &&\n    selectedNotifications.length === notifications.length;\n\n  const isAllAlertsSelected =\n    alerts.length > 0 && selectedAlerts.length === alerts.length;\n\n  const [selectedMenu, setSelectedMenu] = useState([...menu]);\n\n  const areAllMenuSelected =\n    menu.length > 0 && selectedMenu.length === menu.length;\n\n  // const [page, setPage] = useState(0);\n\n  // const [pageCount, setPageCount] = useState(0);\n\n  // const [paginatedData, setPaginatedData] = useState([]);\n\n  useEffect(() => {\n    if (users) {\n      // setPage(() => (users.length > 0 ? 1 : 0));\n      // setPageCount(() => (users.length > 0 ? Math.ceil(users.length / 30) : 0));\n      // setPaginatedData(() => (users.length > 0 ? users.slice(0, 30) : []));\n      setPaginatedData(users);\n    }\n  }, [users]);\n\n  // const handlePageChange = (event, value) => {\n  //   let paginatedData = users.slice(7 * (value - 1), 7 * value);\n  //   setPaginatedData(paginatedData);\n  //   setPage(value);\n  // };\n\n  const handleLocationsChange = (event) => {\n    const value = event.target.value;\n\n    if (value[value.length - 1] === \"All\") {\n      // console.log(\"inside all\");\n      setSelectedLocations(\n        selectedLocations.length === siteOptions.length ? [] : siteOptions\n      );\n      return;\n    }\n\n    setSelectedLocations(value);\n  };\n\n  const handleMenuChange = (event) => {\n    const value = event.target.value;\n\n    if (value[value.length - 1] === \"All\") {\n      setSelectedMenu(selectedMenu.length === menu.length ? [] : menu);\n      return;\n    }\n\n    setSelectedMenu(value);\n  };\n\n  const handleUserChange = (email) => {\n    // console.log(email);\n    setShow(true);\n    let clickedUser = users.find((element) => element.email === email);\n    // console.log(clickedUser);\n    setPreviousEmail(clickedUser?.email);\n    // console.log(clickedUser.email);\n    setUser(clickedUser);\n    setRole(clickedUser?.role);\n    // console.log(clickedUser.role);\n    setSelectedProfile(clickedUser?.employeerole);\n    // console.log(clickedUser.employeerole);\n    setUserStatus(String(clickedUser?.status).toLowerCase());\n    // console.log(clickedUser.status);\n    setSelectedLocations(clickedUser?.locations);\n    // console.log(clickedUser.locations);\n    setSelectedMenu(clickedUser?.menu);\n    // console.log(clickedUser.menu);\n    // setSelectedNotifications(clickedUser?.notificationtype);\n    // console.log(clickedUser.notificationtype);\n    // setSelectedAlerts(clickedUser?.alerttype);\n    // console.log(clickedUser.alerttype);\n  };\n\n  const handleRoleChange = (event) => {\n    setRole(event.target.value);\n  };\n\n  // console.log(selectedLocations);\n\n  const handleProfileChange = (event) => {\n    setSelectedProfile(event.target.value);\n  };\n\n  const handleNotificationsChange = (event) => {\n    setSelectedNotifications(event.target.value);\n  };\n\n  const handleAlertsChange = (event) => {\n    setSelectedAlerts(event.target.value);\n  };\n\n  const [previousEmail, setPreviousEmail] = useState();\n\n  const handleEmailChange = (event, key) => {\n    // let value = event.target.value;\n    setEmail(event.target.value);\n    // console.log(event.target.value);\n    // setUser((prevState) => ({ ...prevState, [key]: value }));\n    setUser((prevState) => {\n      return { ...prevState, email: event.target.value };\n    });\n  };\n\n  // const handleAllFields = (event, key) => {\n  //   let value = event.target.value;\n  //   // setEmail(event.target.value);\n  //   // console.log(event.target.value);\n  //   setUser((prevState) => ({ ...prevState, [key]: value }));\n  //   // setUser((prevState) => {\n  //   //   return { ...prevState, email: event.target.value };\n  //   if (value[value.length - 1] === \"All\") {\n  //     // console.log(\"inside all\");\n  //     setSelectedLocations(\n  //       selectedLocations.length === locations.length ? [] : locations\n  //     );\n  //     return;\n  //   }\n  //   // });\n  // };\n\n  // console.log(user);\n\n  const handleNewPasswordChange = (event) => {\n    setNewPassword(event.target.value);\n  };\n\n  const handleUserFirstNameChange = (event, key) => {\n    let value = event.target.value;\n    setUser((prevState) => ({ ...prevState, [key]: value }));\n    // setUser((prevState) => {\n    //   return { ...prevState, firstname: event.target.value };\n    // });\n  };\n\n  const handleUserLastNameChange = (event) => {\n    setUser((prevState) => {\n      return { ...prevState, lastname: event.target.value };\n    });\n  };\n\n  const getUsers = () => {\n    setEnabledLinearProgress(true);\n    setShow(false);\n    // Todo: Make it more secure by using token.\n    axios\n      .post(\n        SERVER_URL + \"/api/roles\",\n        { email: localStorage.getItem(\"userEmail\") },\n        { headers: { jwtToken: localStorage.getItem(\"userToken\") } }\n      )\n      .then((response) => {\n        // console.log(\"Users\", response.data);\n        let sortedUser = sortValues(response.data, sortBy.header, sortBy.order);\n        setUsers(sortedUser);\n        // setUsers(response.data);\n        let currentUser = response.data.find(\n          (element) => element.email === localStorage.getItem(\"userEmail\")\n        );\n        setShow(false);\n        setUser(currentUser);\n        setRole(currentUser.role);\n        setSelectedLocations(currentUser.locations);\n        setSelectedMenu(currentUser.menu);\n        //again empty state\n        setUser((prevState) => {\n          let object = {};\n          Object.keys(prevState).forEach((key) => {\n            object = { ...object, [key]: \"\" };\n          });\n          return object;\n        });\n        setNewPassword(\"\");\n        setEmail(\"\");\n        setEnabledLinearProgress(false);\n      })\n      .catch(() => {\n        setShow(false);\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const [disabledCreateBtn, setDisabledCreateBtn] = useState(false);\n  const [disabledUpdateBtn, setDisabledUpdateBtn] = useState(false);\n\n  const handleUserUpdate = () => {\n    // console.log(selectedProfile, user.firstname);\n    setDisabledUpdateBtn(true);\n    setShow(false);\n    // console.log(userStatus);\n\n    if (\n      !user ||\n      user.firstname === \"\" ||\n      user.lastname === \"\" ||\n      user.email === \"\"\n    ) {\n      setSnackbar((prevState) => {\n        return {\n          ...prevState,\n          open: true,\n          message: \"All the fields are mendatory except password!\",\n        };\n      });\n      setDisabledUpdateBtn(false);\n      return;\n    }\n\n    // console.log(user.email, previousEmail);\n    // console.log(\n    // \"update Api\",\n    // user.firstname\n    // user.lastname,\n    // user.email,\n    // newPassword,\n    // role,\n    // selectedLocations,\n    // selectedMenu,\n    // userStatus\n    // );\n    // console.log(\n    // \"338\",\n    // previousEmail\n    // selectedProfile,\n    // selectedNotifications,\n    // selectedAlerts\n    // );\n    axios\n      .post(\n        SERVER_URL + \"/user/manage\",\n        {\n          firstname: user.firstname,\n          lastname: user.lastname,\n          email: user.email,\n          password: newPassword,\n          role: role,\n          locations: selectedLocations,\n          menu: selectedMenu,\n          status: userStatus,\n          previousEmail: previousEmail,\n          employeerole: selectedProfile,\n          notificationtype: selectedNotifications,\n          alerttype: selectedAlerts,\n        },\n        { headers: { jwtToken: localStorage.getItem(\"userToken\") } }\n      )\n      .then((response) => {\n        // console.log(\"394\", response);\n        setSnackbar((prevState) => {\n          return {\n            ...prevState,\n            open: true,\n            message: `User: ${user.firstname} ${user.lastname} with email: ${user.email} updated successfully!`,\n            severity: \"success\",\n          };\n        });\n        setUser((prevState) => {\n          let object = {};\n          Object.keys(prevState).forEach((key) => {\n            object = { ...object, [key]: \"\" };\n          });\n          return object;\n        });\n        // setUser(\"\");\n        setShow(false);\n        setDisabledUpdateBtn(false);\n        getUsers();\n      })\n      .catch(() => {\n        setSnackbar((prevState) => {\n          return {\n            ...prevState,\n            open: true,\n            message: `Update failed! Try again.`,\n            severity: \"error\",\n          };\n        });\n        setShow(false);\n        setDisabledUpdateBtn(false);\n      });\n  };\n  const [sortBy, setSortBy] = useState({ header: \"email\", order: \"asc\" });\n\n  const [headersOrder, setHeadersOrder] = useState({\n    email: \"asc\",\n    name: \"desc\",\n    role: \"desc\",\n    locations: \"desc\",\n    timestamp: \"desc\",\n  });\n\n  const handleOrderChange = (event, header, id) => {\n    // console.log(event, header);\n    setHeadersOrder((prevState) => {\n      const headerOrder = prevState[header] === \"asc\" ? \"desc\" : \"asc\";\n      const headerOrderRev = headerOrder === \"asc\" ? \"desc\" : \"asc\";\n      const newHeadersOrder = {\n        email: headerOrderRev,\n        name: headerOrderRev,\n        role: headerOrderRev,\n        locations: headerOrderRev,\n        timestamp: headerOrderRev,\n      };\n      newHeadersOrder[header] = headerOrder;\n      sortValues(paginatedData, header, headerOrder);\n      setSortBy({ header: header, order: headerOrder });\n      let headerId = document.getElementById(id);\n      let headers = document.querySelectorAll(\".header\");\n      if (headers) {\n        headers.forEach((element) => {\n          element.style.color = \"black\";\n        });\n      }\n      if (headerId && headerOrder === \"asc\") {\n        headerId.style.color = \"#1A5276\";\n      } else {\n        headerId.style.color = \"green\";\n      }\n      return newHeadersOrder;\n    });\n  };\n\n  const sortValues = (data, header, order) => {\n    let sortedSitesArray = [];\n    if (order === \"asc\") {\n      sortedSitesArray = data.sort((a, b) => {\n        if (header !== \"email\") {\n          return Number(a[header]) > Number(b[header])\n            ? 1\n            : Number(b[header]) > Number(a[header])\n            ? -1\n            : 0;\n        } else {\n          return a[header] > b[header] ? 1 : b[header] > a[header] ? -1 : 0;\n        }\n      });\n    } else {\n      sortedSitesArray = data.sort((a, b) => {\n        if (header !== \"email\") {\n          return Number(a[header]) < Number(b[header])\n            ? 1\n            : Number(b[header]) < Number(a[header])\n            ? -1\n            : 0;\n        } else {\n          return a[header] < b[header] ? 1 : b[header] < a[header] ? -1 : 0;\n        }\n      });\n    }\n\n    return sortedSitesArray;\n  };\n\n  const handleUserStatusUpdate = (email, status) => {\n    axios\n      .post(\n        SERVER_URL + \"/user/manage/status\",\n        {\n          email: email,\n          status: status,\n        },\n        { headers: { jwtToken: localStorage.getItem(\"userToken\") } }\n      )\n      .then((response) => {\n        setSnackbar((prevState) => {\n          return {\n            ...prevState,\n            open: true,\n            message: `User with email: ${email} status updated successfully!`,\n            severity: \"success\",\n          };\n        });\n\n        getUsers();\n      })\n      .catch(() => {\n        setSnackbar((prevState) => {\n          return {\n            ...prevState,\n            open: true,\n            message: `Status update failed! Try again.`,\n            severity: \"error\",\n          };\n        });\n      });\n  };\n\n  const handleUserCreate = () => {\n    setDisabledCreateBtn(true);\n\n    if (\n      !user ||\n      user.firstname === \"\" ||\n      user.lastname === \"\" ||\n      user.email === \"\" ||\n      newPassword === \"\"\n    ) {\n      setSnackbar((prevState) => {\n        return { ...prevState, open: true };\n      });\n      setDisabledCreateBtn(false);\n      return;\n    }\n    // console.log(user.firstname);\n    // console.log(user.lastname);\n    // console.log(user.selectedProfile, \"479\");\n    axios\n      .post(\n        SERVER_URL + \"/user/manage/create\",\n        {\n          firstname: user.firstname,\n          lastname: user.lastname,\n          email: user.email,\n          password: newPassword,\n          role: role,\n          locations: selectedLocations,\n          menu: selectedMenu,\n          status: \"active\",\n          previousEmail: previousEmail,\n          employeerole: selectedProfile,\n          notificationtype: selectedNotifications,\n          alerttype: selectedAlerts,\n        },\n        { headers: { jwtToken: localStorage.getItem(\"userToken\") } }\n      )\n      .then((response) => {\n        // console.log(response);\n        setSnackbar((prevState) => {\n          return {\n            ...prevState,\n            open: true,\n            message: `User: ${user.firstname} ${user.lastname} with email: ${user.email} created successfully!`,\n            severity: \"success\",\n          };\n        });\n        // setUser((prevState) => {\n        //   let object = {};\n        //   Object.keys(prevState).forEach((key) => {\n        //     object = { ...object, [key]: \"\" };\n        //   });\n        //   return object;\n        // });\n        // setNewPassword(\"\");\n        // setEmail(\"\");\n        // setUser(\"\");\n\n        setDisabledCreateBtn(false);\n        getUsers();\n      })\n      .catch(() => {\n        setSnackbar((prevState) => {\n          return {\n            ...prevState,\n            open: true,\n            message: `Insert failed! Try again.`,\n            severity: \"error\",\n          };\n        });\n        setDisabledCreateBtn(false);\n      });\n  };\n\n  const handleUserDelete = (user) => {\n    setDisabledUpdateBtn(true);\n\n    if (window.confirm(`Delete user: ${user.email}, are you sure?`)) {\n      axios\n        .post(\n          SERVER_URL + \"/user/delete\",\n          { email: user.email },\n          { headers: { jwtToken: localStorage.getItem(\"userToken\") } }\n        )\n        .then((response) => {\n          setSnackbar((prevState) => {\n            return {\n              ...prevState,\n              open: true,\n              message: `User: ${user.firstname} ${user.lastname} with email: ${user.email} deleted successfully!`,\n              severity: \"success\",\n            };\n          });\n          setUser(\"\");\n          getUsers();\n          setDisabledUpdateBtn(false);\n        })\n        .catch(() => {\n          setSnackbar((prevState) => {\n            return {\n              ...prevState,\n              open: true,\n              message: `Delete failed!`,\n              severity: \"error\",\n            };\n          });\n          setDisabledUpdateBtn(false);\n        });\n    } else {\n      setDisabledUpdateBtn(false);\n    }\n  };\n\n  // const clearFields = () => {\n  //   setUser(\"\");\n  //   setNewPassword(\"\");\n  // };\n\n  // useEffect(() => {\n  //   clearFields();\n  // });\n\n  const [searchField, setSearchField] = useState(\"\");\n\n  const handleSearchFieldChange = (event) => {\n    setSearchField(event.target.value);\n  };\n\n  const handleSearch = () => {\n    if (searchField === \"\") {\n      if (users) {\n        setPage(() => (users.length > 0 ? 0 : 0));\n        // setPageCount(() =>\n        //   users.length > 0 ? Math.ceil(users.length / 5) : 0\n        // );\n        // setPaginatedData(() => (users.length > 0 ? users.slice(0, 5) : []));\n        setPaginatedData(users);\n        return;\n      }\n    }\n\n    let searchedData = paginatedData.filter((element) => {\n      let firstname = String(element.firstname).toLowerCase().trim();\n      let searchInput = String(searchField).toLowerCase().trim();\n      return String(firstname).includes(searchInput);\n    });\n    setPaginatedData(searchedData);\n    setPage(() => (searchedData.length > 0 ? 0 : 0));\n    // setPageCount(() =>\n    //   searchedData.length > 0 ? Math.ceil(searchedData.length / 1) : 0\n    // );\n  };\n\n  return (\n    <div style={{ marginTop: \"0rem\" }}>\n      <Grid\n        // container\n        spacing={2}\n        // justify=\"space-between\"\n        // style={{ paddingRight: \"2rem\" }}\n        // alignItems=\"flex-end\"\n        container\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        alignItems=\"baseline\"\n      >\n        <Grid item>\n          <TextField\n            required\n            id=\"first-name\"\n            // label='First name'\n            placeholder=\"First name\"\n            inputProps={{ style: { fontSize: 13 } }}\n            value={user && user.firstname}\n            // value={user.firstname}\n            // onChange={handleUserFirstNameChange}\n            onChange={(event) => handleUserFirstNameChange(event, \"firstname\")}\n            style={{\n              maxWidth: \"5rem\",\n              marginTop: \"1rem\",\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            required\n            id=\"last-name\"\n            // label='Last name'\n            placeholder=\"Last name\"\n            inputProps={{ style: { fontSize: 13 } }}\n            value={user && user.lastname}\n            // value={user.lastname}\n            onChange={handleUserLastNameChange}\n            // onChange={(event) => handleAllFields(event, \"lastname\")}\n            style={{ maxWidth: \"5rem\", marginTop: \"1rem\" }}\n          />\n        </Grid>\n\n        <Grid item>\n          <TextField\n            fullWidth\n            required\n            id=\"email\"\n            // label='Email'\n            placeholder=\"Email\"\n            inputProps={{ style: { fontSize: 13 } }}\n            value={user && user.email}\n            // value={user.email}\n            onChange={handleEmailChange}\n            // onChange={(event) => handleAllFields(event, \"email\")}\n            style={{ maxWidth: \"10rem\", marginTop: \"1rem\" }}\n            // disabled={user}\n          />\n        </Grid>\n\n        <Grid item>\n          <TextField\n            // required\n            id=\"password\"\n            // label=\"Password\"\n            placeholder=\"Password\"\n            value={newPassword}\n            type=\"password\"\n            inputProps={{ style: { fontSize: 13 } }}\n            onChange={handleNewPasswordChange}\n            // onChange={(event) => handleNewPasswordChange(event, \"password\")}\n            style={{ maxWidth: \"5rem\", marginTop: \"1rem\" }}\n          />\n        </Grid>\n\n        <Grid item>\n          <FormControl style={{ maxWidth: \"12rem\" }}>\n            <InputLabel\n              id=\"locations-simple-select-label\"\n              style={{ fontSize: 13 }}\n            >\n              Locations\n            </InputLabel>\n            <Select\n              labelId=\"locations-simple-select-label\"\n              id=\"locations-simple-select\"\n              value={selectedLocations}\n              style={{ fontSize: 13, maxWidth: \"15rem\" }}\n              label=\"Select Locations\"\n              onChange={handleLocationsChange}\n              // onChange={(event) => handleAllFields(event, \"location\")}\n              multiple\n              renderValue={(data) => data.join(\", \")}\n            >\n              <MenuItem\n                value=\"All\"\n                classes={{\n                  root: areAllLocationsSelected\n                    ? classes.areAllLocationsSelected\n                    : \"\",\n                }}\n                style={{ paddingBlock: 0 }}\n              >\n                <ListItemIcon>\n                  <Checkbox\n                    style={{ paddingBlock: 0 }}\n                    size=\"small\"\n                    color=\"primary\"\n                    classes={{ indeterminate: classes.indeterminateColor }}\n                    checked={areAllLocationsSelected}\n                    indeterminate={\n                      selectedLocations.length > 0 &&\n                      selectedLocations.length <\n                        JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText\n                  // classes={{ primary: classes.selectAllText }}\n                  classes={{ primary: classes.listItemText }}\n                  primary=\"Select All\"\n                  style={{ paddingTop: \".05rem\" }}\n                />\n              </MenuItem>\n              {siteOptions.map((element) => {\n                return (\n                  <MenuItem\n                    key={element}\n                    value={element}\n                    style={{ paddingBlock: 0 }}\n                  >\n                    <ListItemIcon>\n                      <Checkbox\n                        style={{ paddingBlock: 0 }}\n                        checked={selectedLocations.indexOf(element) > -1}\n                        // checked={user.locations && user.locations.indexOf(element) > -1}\n                        size=\"small\"\n                        color=\"primary\"\n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      classes={{ primary: classes.listItemText }}\n                      primary={element}\n                      style={{ paddingTop: \".05rem\" }}\n                    />\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl style={{ maxWidth: \"8rem\" }}>\n            <InputLabel id=\"menu-simple-select-label\" style={{ fontSize: 13 }}>\n              Menu\n            </InputLabel>\n            <Select\n              labelId=\"menu-simple-select-label\"\n              id=\"menu-simple-select\"\n              value={selectedMenu}\n              label=\"Select Menu\"\n              onChange={handleMenuChange}\n              // onChange={(event) => handleAllFields(event, \"menu\")}\n              style={{ fontSize: 13 }}\n              multiple\n              renderValue={(data) => data.join(\", \")}\n            >\n              <MenuItem\n                value=\"All\"\n                classes={{\n                  root: areAllMenuSelected ? classes.areAllMenuSelected : \"\",\n                }}\n                style={{ paddingBlock: 0 }}\n              >\n                <ListItemIcon>\n                  <Checkbox\n                    style={{ paddingBlock: 0 }}\n                    size=\"small\"\n                    color=\"primary\"\n                    classes={{ indeterminate: classes.indeterminateColor }}\n                    checked={areAllMenuSelected}\n                    indeterminate={\n                      selectedMenu.length > 0 &&\n                      selectedMenu.length < menu.length\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText\n                  // classes={{ primary: classes.selectAllText }}\n                  classes={{ primary: classes.listItemText }}\n                  primary=\"Select All\"\n                  style={{ paddingTop: \".05rem\" }}\n                />\n              </MenuItem>\n              {menu.map((element) => {\n                return (\n                  <MenuItem\n                    key={element}\n                    value={element}\n                    style={{ paddingBlock: 0 }}\n                  >\n                    <ListItemIcon>\n                      <Checkbox\n                        style={{ paddingBlock: 0 }}\n                        checked={selectedMenu.indexOf(element) > -1}\n                        // checked={user.menu && user.menu.indexOf(element) > -1}\n                        size=\"small\"\n                        color=\"primary\"\n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      classes={{ primary: classes.listItemText }}\n                      primary={element}\n                      style={{ paddingTop: \".05rem\" }}\n                    />\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n          {/* <FormControl fullWidth>\n                            <InputLabel id=\"role-simple-select-label\">Menu</InputLabel>\n                            <Select\n                            labelId=\"role-simple-select-label\"\n                            id=\"role-simple-select\"\n                            value={role}\n                            label=\"Select Role\"\n                            onChange={handleRoleChange}\n                            >\n                            \n                            <MenuItem value={'user'}>User&emsp;</MenuItem>\n                            <MenuItem value={'admin'}>Admin&emsp;</MenuItem>\n                            </Select>\n                        </FormControl> */}\n        </Grid>\n        <Grid item>\n          <FormControl>\n            <InputLabel\n              id=\"profile-simple-select-label\"\n              style={{ fontSize: 13 }}\n            >\n              Profile\n            </InputLabel>\n            <Select\n              labelId=\"profile-simple-select-label\"\n              style={{ fontSize: 13 }}\n              id=\"profile-simple-select\"\n              value={selectedProfile}\n              label=\"Select Profile\"\n              onChange={handleProfileChange}\n              // onChange={(event) => handleAllFields(event, \"profile\")}\n            >\n              <MenuItem value={\"National Head\"}>National Head&emsp;</MenuItem>\n              <MenuItem value={\"Zonal Head\"}>Zonal Head&emsp;</MenuItem>\n              <MenuItem value={\"Cluster Head\"}>Cluster Head&emsp;</MenuItem>\n              <MenuItem value={\"Plant Head\"}>Plant Head&emsp;</MenuItem>\n              <MenuItem value={\"Engineer\"}>Engineer&emsp;</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl>\n            <InputLabel id=\"role-simple-select-label\" style={{ fontSize: 13 }}>\n              Role\n            </InputLabel>\n            <Select\n              labelId=\"role-simple-select-label\"\n              id=\"role-simple-select\"\n              value={role}\n              label=\"Select Role\"\n              style={{ fontSize: 13 }}\n              onChange={handleRoleChange}\n              // onChange={(event) => handleAllFields(event, \"role\")}\n            >\n              <MenuItem value={\"user\"}>User&emsp;</MenuItem>\n              <MenuItem value={\"admin\"}>Admin&emsp;</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl style={{ maxWidth: \"12rem\" }}>\n            <InputLabel\n              id=\"notifications-simple-select-label\"\n              style={{ fontSize: 13 }}\n            >\n              Notifications\n            </InputLabel>\n            <Select\n              labelId=\"notifications-simple-select-label\"\n              id=\"notifications-simple-select\"\n              value={selectedNotifications}\n              style={{ fontSize: 13 }}\n              label=\"Select Notifications\"\n              onChange={handleNotificationsChange}\n              // onChange={(event) => handleAllFields(event, \"notification\")}\n              multiple\n              renderValue={(data) => data.join(\", \")}\n            >\n              <MenuItem\n                value=\"All\"\n                classes={{\n                  root: isAllNotificationsSelected\n                    ? classes.isAllNotificationsSelected\n                    : \"\",\n                }}\n                style={{ paddingBlock: 0 }}\n              >\n                <ListItemIcon>\n                  <Checkbox\n                    style={{ paddingBlock: 0 }}\n                    size=\"small\"\n                    color=\"primary\"\n                    classes={{ indeterminate: classes.indeterminateColor }}\n                    checked={isAllNotificationsSelected}\n                    indeterminate={\n                      selectedNotifications.length > 0 &&\n                      selectedNotifications.length < notifications.length\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText\n                  // classes={{ primary: classes.selectAllText }}\n                  classes={{ primary: classes.listItemText }}\n                  primary=\"Select All\"\n                  style={{ paddingTop: \".05rem\" }}\n                />\n              </MenuItem>\n              {notifications.map((element) => {\n                return (\n                  <MenuItem\n                    key={element}\n                    value={element}\n                    style={{ paddingBlock: 0 }}\n                  >\n                    <ListItemIcon>\n                      <Checkbox\n                        style={{ paddingBlock: 0 }}\n                        checked={selectedNotifications.indexOf(element) > -1}\n                        // checked={user.locations && user.locations.indexOf(element) > -1}\n                        size=\"small\"\n                        color=\"primary\"\n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      classes={{ primary: classes.listItemText }}\n                      primary={element}\n                      style={{ paddingTop: \".05rem\" }}\n                    />\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        {/* <Grid item>\n        <FormControl>\n            <InputLabel id='status-simple-select-label'>Status</InputLabel>\n            <Select\n              labelId='status-simple-select-label'\n              id='status-simple-select'\n              value={userStatus}\n              label='Select Status'\n              onChange={handleUserStatusChange}\n            >\n              <MenuItem value={'active'}>Active&emsp;</MenuItem>\n              <MenuItem value={'inactive'}>Inactive&emsp;</MenuItem>\n            </Select>\n          </FormControl>\n          \n        </Grid> */}\n      </Grid>\n      <Grid\n        // container\n        // justify=\"space-between\"\n        // style={{\n        //   marginTop: \".75rem\",\n        //   marginBottom: \".5rem\",\n        //   paddingRight: \".5rem\",\n        // }}\n        // alignItems=\"flex-end\"\n        spacing={2}\n        container\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        {/* <Grid item> */}\n        {/* <Grid container spacing={2}> */}\n        <Grid item>\n          <FormControl style={{ maxWidth: \"12rem\" }}>\n            <InputLabel\n              id=\"alerts-simple-select-label\"\n              style={{ fontSize: 13 }}\n            >\n              Alerts\n            </InputLabel>\n            <Select\n              labelId=\"alerts-simple-select-label\"\n              id=\"alerts-simple-select\"\n              value={selectedAlerts}\n              style={{ fontSize: 13 }}\n              label=\"Select Alerts\"\n              onChange={handleAlertsChange}\n              // onChange={(event) => handleAllFields(event, \"alerts\")}\n              multiple\n              renderValue={(data) => data.join(\", \")}\n            >\n              <MenuItem\n                value=\"All\"\n                classes={{\n                  root: isAllAlertsSelected ? classes.isAllAlertsSelected : \"\",\n                }}\n                style={{ paddingBlock: 0 }}\n              >\n                <ListItemIcon>\n                  <Checkbox\n                    style={{ paddingBlock: 0 }}\n                    size=\"small\"\n                    color=\"primary\"\n                    classes={{ indeterminate: classes.indeterminateColor }}\n                    checked={isAllAlertsSelected}\n                    indeterminate={\n                      selectedAlerts.length > 0 &&\n                      selectedAlerts.length < alerts.length\n                    }\n                  />\n                </ListItemIcon>\n                <ListItemText\n                  // classes={{ primary: classes.selectAllText }}\n                  classes={{ primary: classes.listItemText }}\n                  primary=\"Select All\"\n                  style={{ paddingTop: \".05rem\" }}\n                />\n              </MenuItem>\n              {alerts.map((element) => {\n                return (\n                  <MenuItem\n                    key={element}\n                    value={element}\n                    style={{ paddingBlock: 0 }}\n                  >\n                    <ListItemIcon>\n                      <Checkbox\n                        style={{ paddingBlock: 0 }}\n                        checked={selectedAlerts.indexOf(element) > -1}\n                        // checked={user.locations && user.locations.indexOf(element) > -1}\n                        size=\"small\"\n                        color=\"primary\"\n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      classes={{ primary: classes.listItemText }}\n                      primary={element}\n                      style={{ paddingTop: \".05rem\" }}\n                    />\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n        {/* </Grid> */}\n        {/* </Grid> */}\n        {/* <Grid item> */}\n        {/* <Grid container alignItems=\"flex-end\" spacing={2}> */}\n\n        <Grid item>\n          {!show && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={handleUserCreate}\n              disabled={disabledCreateBtn}\n              style={{ fontSize: \"11px\", marginTop: \"1rem\" }}\n            >\n              Create\n            </Button>\n          )}\n        </Grid>\n\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={handleUserUpdate}\n            disabled={disabledUpdateBtn}\n            style={{ fontSize: \"11px\", marginTop: \"1rem\" }}\n          >\n            Update\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={getUsers}\n            // disabled={disabledUpdateBtn}\n            style={{ fontSize: \"11px\", marginTop: \"1rem\" }}\n          >\n            Clear\n          </Button>\n        </Grid>\n        <Grid item style={{ marginLeft: \"30rem\" }}>\n          <TextField\n            id=\"search\"\n            placeholder=\"Enter first name\"\n            inputProps={{ style: { fontSize: 13 } }}\n            value={searchField}\n            onChange={handleSearchFieldChange}\n            style={{ maxWidth: \"8rem\", marginTop: \"1rem\" }}\n          />\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={handleSearch}\n            style={{ fontSize: \"11px\", marginTop: \"1rem\" }}\n          >\n            Search\n          </Button>\n        </Grid>\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n\n      {/* <Grid container style={{ marginTop: \".25rem\" }}> */}\n\n      {/* <Grid item xs={12} style={{ paddingRight: \"1rem\" }}> */}\n      {/* <FormControl style={{maxWidth: '17rem'}}>\n                    <InputLabel id=\"user-simple-select-label\">Select User</InputLabel>\n                    <Select\n                    labelId=\"user-simple-select-label\"\n                    id=\"user-simple-select\"\n                    value={user.email}\n                    label=\"Select User\"\n                    onChange={handleUserChange}\n                    >\n                    {users.map((element) => {\n                        return (\n                            <MenuItem value={element.email}>{element.firstname}&nbsp;\n                            {element.lastname}, {element.email}</MenuItem>\n                        )\n                    })}\n                    </Select>\n                </FormControl> */}\n      <Grid container>\n        <TableContainer\n          component={Paper}\n          style={{ maxWidth: \"91vw\", marginTop: \"0.8rem\" }}\n        >\n          <Table stickyHeader size=\"small\" aria-label=\"simple table\">\n            <TableHead>\n              <TableRow style={{ backgroundColor: \"#ffffbf\" }}>\n                {/* <TableCell>Name</TableCell> */}\n                <StyledTableCell>Sr. No.</StyledTableCell>\n                <StyledTableCell>\n                  <span\n                    onClick={(event) =>\n                      handleOrderChange(event, \"email\", \"emailHeader\")\n                    }\n                    id=\"emailHeader\"\n                    className=\"header\"\n                  >\n                    Email\n                  </span>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <span\n                    onClick={(event) =>\n                      handleOrderChange(event, \"name\", \"nameHeader\")\n                    }\n                    id=\"nameHeader\"\n                    className=\"header\"\n                  >\n                    Name\n                  </span>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <span\n                    onClick={(event) =>\n                      handleOrderChange(event, \"role\", \"roleHeader\")\n                    }\n                    id=\"roleHeader\"\n                    className=\"header\"\n                  >\n                    User Type\n                  </span>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <span\n                    onClick={(event) =>\n                      handleOrderChange(event, \"locations\", \"locationsHeader\")\n                    }\n                    id=\"locationsHeader\"\n                    className=\"header\"\n                  >\n                    Sites\n                  </span>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <span\n                    onClick={(event) =>\n                      handleOrderChange(event, \"timestamp\", \"timestampHeader\")\n                    }\n                    id=\"timestampHeader\"\n                    className=\"header\"\n                  >\n                    Login Date/Time\n                  </span>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <span style={{ paddingLeft: \"2rem\" }}>Action</span>\n                </StyledTableCell>\n                <StyledTableCell>\n                  <span style={{ paddingLeft: \"2rem\" }}>Status</span>\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {/* {paginatedData.map((element, ind) => {\n                console.log(element, \"984\", ind);\n              })} */}\n              {/* {paginatedData.map((row, index) => ( */}\n              {(rowsPerPage > 0\n                ? paginatedData.slice(\n                    page * rowsPerPage,\n                    page * rowsPerPage + rowsPerPage\n                  )\n                : paginatedData\n              ).map((row, index) => (\n                <TableRow\n                  key={index}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                  style={{\n                    backgroundColor:\n                      user && row.email === user.email ? \"lightblue\" : \"white\",\n                  }}\n                >\n                  {/* <TableCell component=\"th\" scope=\"row\">\n            {row.firstname}&nbsp;{row.lastname}\n          </TableCell> */}\n                  <StyledTableCell style={{ color: \"#000\" }}>\n                    <Grid container>{page * 10 + index + 1}</Grid>\n                    {/* <Grid container>{page}</Grid> */}\n                  </StyledTableCell>\n                  <StyledTableCell style={{ color: \"#000\" }}>\n                    <Grid container>{row.email}</Grid>\n                  </StyledTableCell>\n                  <StyledTableCell style={{ color: \"#000\" }}>\n                    {row.firstname}&nbsp;{row.lastname}\n                  </StyledTableCell>\n                  <StyledTableCell style={{ color: \"#000\" }}>\n                    {String(row.role).charAt(0).toUpperCase()}\n                    {String(row.role).slice(1)}\n                  </StyledTableCell>\n                  {/* <TableCell><span style={{color: 'green'}}>{!row.status && 'Active'}{row.status && \n                    // String(row.status).charAt(0).toUpperCase()}{row.status && String(row.status).slice(1)\n                    }</span></TableCell> */}\n                  <StyledTableCell style={{ color: \"#000\" }}>\n                    {row.locations.length}\n                  </StyledTableCell>\n                  <StyledTableCell style={{ color: \"#000\" }}>\n                    {/* {row.timestamp} */}\n                    {row.timestamp === null\n                      ? `x`\n                      : new Date(Number(row.timestamp * 1000)).toLocaleString()}\n                  </StyledTableCell>\n                  <StyledTableCell style={{ color: \"#000\" }}>\n                    <Tooltip title=\"Enable/Disable\" placement=\"bottom\">\n                      <Switch\n                        key={index}\n                        checked={row.status === \"active\" ? true : false}\n                        onChange={(event) => handleUserStatusChange(event, row)}\n                        color=\"primary\"\n                        name=\"statusSwitch\"\n                        size=\"small\"\n                      />\n                    </Tooltip>\n                    <Tooltip title=\"Edit\" placement=\"bottom\">\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => handleUserChange(row.email)}\n                        style={{ paddingInline: \".5rem\" }}\n                      >\n                        <EditIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Delete\" placement=\"bottom\">\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => handleUserDelete(row)}\n                        color=\"secondary\"\n                      >\n                        <DeleteIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                  </StyledTableCell>\n                  <StyledTableCell style={{ color: \"#000\" }}>\n                    {row.action_by}\n                  </StyledTableCell>\n                  {/* <TableCell align='left' style={{paddingLeft: '1.5rem'}}>\n                      \n                    </TableCell> */}\n                </TableRow>\n              ))}\n            </TableBody>\n            {/* <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[10, 20, 30, { label: \"All\", value: -1 }]}\n                  colSpan={3}\n                  count={paginatedData.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { \"aria-label\": \"rows per page\" },\n                    MenuProps: { classes: { paper: classes.selectDropdown } },\n                  }}\n                  classes={{ menuItem: classes.menuItem }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  // ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter> */}\n          </Table>\n        </TableContainer>\n        <Grid\n          container\n          justify=\"flex-end\"\n          style={{ marginTop: \"0rem\", marginRight: \"0.5rem\" }}\n        >\n          <Grid item>\n            <div className={classes.paginationicon}>\n              <TablePagination\n                rowsPerPageOptions={[10, 20, 30, { label: \"All\", value: -1 }]}\n                colSpan={3}\n                count={paginatedData.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                // SelectProps={{\n                //   inputProps: { \"aria-label\": \"rows per page\" },\n                //   MenuProps: { classes: { paper: classes.selectDropdown } },\n                // }}\n                // classes={{ menuItem: classes.menuItem }}\n\n                classes={{\n                  menuItem: classes.menuItem,\n                  selectBack: classes.selectDropdown,\n                  sp: classes.tablePagination,\n                  caption: classes.tablePaginationCaption,\n                  selectIcon: classes.tablePaginationSelectIcon,\n                  select: classes.tablePaginationSelect,\n                  actions: classes.tablePaginationActions,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </div>\n          </Grid>\n        </Grid>\n        {/* <Grid\n          container\n          justify=\"flex-end\"\n          style={{ marginTop: \".25rem\", marginRight: \"2.4rem\" }}\n        >\n          <Grid item>\n            <Pagination\n              count={pageCount}\n              page={page}\n              onChange={handlePageChange}\n              shape=\"rounded\"\n            />\n          </Grid>\n        </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <Grid container style={{ marginTop: \"1rem\" }}>\n        {/* <Grid item>\n        <Button variant='outlined' onClick={clearFields}>\n            Clear Fields\n          </Button>\n        </Grid> */}\n\n        <Grid item xs=\"11\">\n          <Grid container justify=\"center\"></Grid>\n        </Grid>\n        <Grid item xs={1}>\n          <Grid\n            container\n            justify=\"flex-end\"\n            style={{ paddingRight: \"1rem\" }}\n          ></Grid>\n        </Grid>\n        {/* <Grid item >\n          <Button className={classes.deleteButton} variant='outlined' color='error' onClick={handleUserDelete} style={{outlineColor: 'red'}}>\n            Delete\n          </Button>\n        </Grid> */}\n      </Grid>\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={4000}\n        onClose={handleSnackbarClose}\n        anchorOrigin={{ horizontal: \"left\", vertical: \"bottom\" }}\n      >\n        <Alert\n          onClose={handleSnackbarClose}\n          severity={snackbar.severity}\n          sx={{ width: \"100%\" }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default ManageUser;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nexport default function InvertersTable({ data, updateInverter }) {\n  const rowsConst = 10;\n\n  const [page, setPage] = useState(0);\n\n  const [pageCount, setPageCount] = useState(0);\n\n  const [paginatedData, setPaginatedData] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      // console.log(data);\n      setPage(() => (data.length > 0 ? 1 : 0));\n      setPageCount(() =>\n        data.length > 0 ? Math.ceil(data.length / rowsConst) : 0\n      );\n      setPaginatedData(() => (data.length > 0 ? data.slice(0, rowsConst) : []));\n    }\n  }, [data]);\n\n  const handlePageChange = (event, value) => {\n    let paginatedData = data.slice(rowsConst * (value - 1), rowsConst * value);\n    setPaginatedData(paginatedData);\n    setPage(value);\n  };\n\n  const handleInverterUpdate = (row) => {\n    let userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n\n    if (\n      (userDetails.role === \"admin\" &&\n        (userDetails.email === \"sumit.datablare@gmail.com\" ||\n          userDetails.email === \"veerpratap@acme.in\" ||\n          userDetails.email === \"aman@datablare.com\")) ||\n      userDetails.email === \"acmeace@acme.in\"\n    ) {\n      // window.alert('The update feature is temporarily disabled.');\n      updateInverter(row);\n    } else {\n      window.alert(\"The update is not allowed.\");\n    }\n  };\n\n  return (\n    <Grid container>\n      <TableContainer component={Paper} style={{ maxWidth: \"89vw\" }}>\n        <Table size=\"small\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow style={{ backgroundColor: \"#ffffbf\" }}>\n              <TableCell style={{ zIndex: 101, color: \"#000\" }}>\n                Action\n              </TableCell>\n              <TableCell style={{ color: \"#000\" }}>Id</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Site</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Block</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Inverter</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Group</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Make</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Number</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Type</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Slots</TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                SCB Connected\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Strings Connected\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Module Make\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Module Rating\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                AC Capacity\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                DC Capacity\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                DA Ratio\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                DC overloading\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Peak 1\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Peak 2\n              </TableCell>\n\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Omega Id\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Tech Name\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Tech Mob\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Tech Email\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Clipping Threshold\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedData.map((row, index) => {\n              // console.log(row);\n\n              return (\n                <TableRow\n                  key={row.id}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell style={{ zIndex: 1 }}>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleInverterUpdate(row)}\n                      style={{ paddingInline: \".5rem\" }}\n                    >\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell>\n                  <TableCell>{row.sitename}</TableCell>\n                  <TableCell>{row.block}</TableCell>\n                  <TableCell>{row.inverter}</TableCell>\n                  <TableCell style={{ whiteSpace: \"nowrap\" }}>\n                    {row.inv_group}\n                  </TableCell>\n                  <TableCell>{row.inverter_make}</TableCell>\n                  <TableCell>{row.inverter_num}</TableCell>\n                  <TableCell style={{ whiteSpace: \"nowrap\" }}>\n                    {row.inverter_type}\n                  </TableCell>\n                  <TableCell>{row.slots}</TableCell>\n                  <TableCell>{row.scb_connected}</TableCell>\n                  <TableCell>{row.strings_connected}</TableCell>\n\n                  <TableCell style={{ whiteSpace: \"nowrap\" }}>\n                    {row.connected_module_make}\n                  </TableCell>\n                  <TableCell>{row.module_rating}</TableCell>\n                  <TableCell>{row.ac_capacity_kw}</TableCell>\n                  <TableCell>{row.dc_capacity_kw}</TableCell>\n                  <TableCell>{row.da_ratio}</TableCell>\n\n                  <TableCell>{row.dc_overloading}</TableCell>\n\n                  <TableCell>{row.peak1}</TableCell>\n                  <TableCell>{row.peak2}</TableCell>\n\n                  <TableCell>{row.omegaid}</TableCell>\n                  <TableCell>{row.techname}</TableCell>\n                  <TableCell>{row.techmob}</TableCell>\n                  <TableCell>{row.email}</TableCell>\n                  <TableCell>{row.clipping_threshold}</TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Grid container justifyContent=\"flex-end\" style={{ marginTop: \".25rem\" }}>\n        <Grid item>\n          <Pagination\n            count={pageCount}\n            page={page}\n            onChange={handlePageChange}\n            shape=\"rounded\"\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { Button, Grid, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { tempSitesBlocksInverters } from \"../../../constants/SiteNames\";\nimport MultiDropdown from \"../../UI/MultiDropdown\";\nimport { SERVER_URL } from \"../../../constants/constants\";\nimport InvertersTable from \"./InvertersTable\";\nimport { AppState } from \"../../../AppContext\";\nimport CustomDropdown from \"../../UI/CustomDropdown\";\nimport MultiDropdownSingle from \"../../UI/MultiDropdownSingle\";\n\nexport default function ManageInverters({\n  updateInverter,\n  refreshInverterTable,\n}) {\n  const { setEnabledLinearProgress } = AppState();\n\n  const [disabledViewBtn, setDisabledViewBtn] = useState(false);\n\n  // if multiple sites, all blocks; if single site and multiple blocks, all inverters\n  // const siteNamesAndBlocks = JSON.parse(\n  //   localStorage.getItem(\"siteNamesAndBlocks\")\n  // );\n\n  // const [sitesBlocksInverters, setSitesBlocksInverters] = useState(\n  //   tempSitesBlocksInverters\n  // );\n  // // const [selectedSites, setSelectedSites] = useState([sitesBlocksInverters[0]]);\n\n  // const [selectedSites, setSelectedSites] = useState(siteNamesAndBlocks);\n\n  // const [selectedBlocks, setSelectedBlocks] = useState([\n  //   sitesBlocksInverters[0].blocks[0],\n  // ]);\n  // const [selectedInverters, setSelectedInverters] = useState([\n  //   sitesBlocksInverters[0].blocks[0].inverters[0],\n  // ]);\n  const [sitesBlocksInverters, setSitesBlocksInverters] = useState(\n    tempSitesBlocksInverters\n  );\n  const [selectedSites, setSelectedSites] = useState(\n    sitesBlocksInverters[0].name\n  );\n\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n\n  const getSites = (sites = siteNamesAndBlocks) => {\n    return sites.map((site) => site.name);\n  };\n\n  const [siteOptions, setSiteOptions] = useState(getSites());\n\n  const [selectedBlocks, setSelectedBlocks] = useState(\n    sitesBlocksInverters[0].blocks.map((block) => block.name)\n  );\n\n  // const [selectedInverters, setSelectedInverters] = useState(\n  //   sitesBlocksInverters[0].blocks[0].inverters\n  // );\n  const [selectedInverters, setSelectedInverters] = useState([\"I01\"]);\n\n  const [tableData, setTableData] = useState([]);\n  const [tableDataCopy, setTableDataCopy] = useState([]);\n\n  const [searchField, setSearchField] = useState(\"\");\n\n  const handleSearchFieldChange = (event) => {\n    let value = event.target.value;\n    setSearchField(value);\n  };\n\n  const fetchDropdownValues = () => {\n    axios.post(SERVER_URL + \"/manageinverters/inverters\").then((response) => {\n      let sites = response.data.sort((a, b) =>\n        a.name > b.name ? 1 : b.name > a.name ? -1 : 0\n      );\n      // setSitesBlocksInverters(sites);\n      // setSelectedSites([sites[0]]);\n      // setSelectedBlocks([sites[0].blocks[0]]);\n      // setSelectedInverters([sites[0].blocks[0].inverters[0]]);\n      setSitesBlocksInverters(sites);\n      setSelectedSites(sites[0].name);\n      setSelectedBlocks(sites[0].blocks.map((block) => block.name));\n    });\n  };\n\n  useEffect(() => {\n    fetchDropdownValues();\n  }, []);\n\n  // const handleSitesChange = (event) => {\n  //   let value = event.target.value;\n\n  //   if (value[value.length - 1] === \"All\") {\n  //     setSelectedSites(\n  //       selectedSites.length === sitesBlocksInverters.length\n  //         ? []\n  //         : sitesBlocksInverters\n  //     );\n  //     return;\n  //   }\n\n  //   setSelectedSites((prevState) => {\n  //     let filteredValues = [];\n  //     sitesBlocksInverters.forEach((element) => {\n  //       value.forEach((innerEl) => {\n  //         if (element.name === innerEl) {\n  //           filteredValues.push(element);\n  //         }\n  //       });\n  //     });\n  //     return filteredValues;\n  //   });\n  // };\n  const handleSitesChange = (event) => {\n    let value = event.target.value;\n\n    setSelectedSites(value);\n\n    setSelectedBlocks(\n      sitesBlocksInverters\n        .find((site) => site.name === value)\n        .blocks.map((block) => block.name)\n    );\n  };\n\n  const handleBlocksChange = (event) => {\n    let value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setSelectedBlocks(\n        selectedBlocks.length ===\n          sitesBlocksInverters.find((site) => site.name === selectedSites)\n            .blocks.length\n          ? []\n          : sitesBlocksInverters\n              .find((site) => site.name === selectedSites)\n              .blocks.map((block) => block.name)\n      );\n      return;\n    }\n\n    setSelectedBlocks(value);\n  };\n  const handleInvertersChange = (event) => {\n    let value = event.target.value.sort();\n\n    if (value[value.length - 1] === \"all\") {\n      // console.log(\"abc\");\n\n      if (selectedInverters.length === 0) {\n        setSelectedInverters(getInverterOptions());\n      } else {\n        setSelectedInverters([]);\n      }\n\n      return;\n    }\n    setSelectedInverters(value);\n    // setSelectedInverter(value.map((element) => ({ name: element })));\n  };\n  const getInverterOptions = () => {\n    let inverters = [];\n    try {\n      const site = sitesBlocksInverters.find(\n        (site) => site.name === selectedSites\n      );\n      // console.log(\"261\", site);\n      let block = site[\"blocks\"].find(\n        (block) => block.name === selectedBlocks[0]\n      );\n\n      // console.log(\"265\", block);\n      const foundInveters =\n        selectedBlocks.length > 1\n          ? [\"All\"]\n          : block?.inverters.map((inv) => inv.name);\n\n      inverters = foundInveters.length > 0 ? foundInveters.sort() : [];\n      // console.log(\"268\", foundInveters, inverters);\n    } catch (error) {\n      inverters = [];\n    }\n    return inverters;\n  };\n\n  // const handleBlocksChange = (event) => {\n  //   let value = event.target.value;\n\n  //   if (value[value.length - 1] === \"All\") {\n  //     setSelectedBlocks(\n  //       selectedBlocks.length === sitesBlocksInverters[0].blocks.length\n  //         ? []\n  //         : sitesBlocksInverters[0].blocks\n  //     );\n  //     return;\n  //   }\n\n  //   setSelectedBlocks(value.map((element) => ({ name: element })));\n  // };\n\n  // const handleInvertersChange = (event) => {\n  //   let value = event.target.value;\n\n  //   if (value[value.length - 1] === \"All\") {\n  //     setSelectedInverters(\n  //       selectedInverters.length ===\n  //         sitesBlocksInverters[0].blocks[0].inverters.length\n  //         ? []\n  //         : sitesBlocksInverters[0].blocks[0].inverters\n  //     );\n  //     return;\n  //   }\n\n  //   setSelectedInverters(value.map((element) => ({ name: element })));\n  // };\n\n  const handleView = () => {\n    setEnabledLinearProgress(true);\n    setDisabledViewBtn(true);\n    axios\n      .post(SERVER_URL + \"/manageinverters/view\", {\n        sites: selectedSites,\n        blocks: selectedBlocks,\n        inverters: selectedBlocks.length > 1 ? [\"all\"] : selectedInverters,\n        //   sites: selectedSites.map((element) => element.name),\n        //   blocks:\n        //     selectedSites.length > 1\n        //       ? [\"all\"]\n        //       : selectedBlocks.map((element) => element.name),\n        //   inverters:\n        //     selectedBlocks.length > 1\n        //       ? [\"all\"]\n        //       : selectedInverters.map((element) => element.name),\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setTableData(response.data);\n        setTableDataCopy(response.data);\n        setDisabledViewBtn(false);\n        setEnabledLinearProgress(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setDisabledViewBtn(false);\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  // useEffect(() => {\n  //   handleView();\n  // }, [refreshInverterTable]);\n\n  const handleSearch = () => {\n    if (searchField === \"\") {\n      setTableData(tableDataCopy);\n      return;\n    }\n    let searchedInverter = tableData.filter(\n      (element) =>\n        String(element.inverter).toLowerCase() ===\n        String(searchField).toLowerCase()\n    );\n    setTableData(searchedInverter);\n  };\n\n  // const setAndGetAll = (dropdown) => {\n  //   // if (dropdown === 'inverters') {\n  //   //     setSelectedInverters([])\n  //   // } else {\n  //   //     setSelectedBlocks([]);\n  //   // }\n\n  //   return [{ name: \"All\" }];\n  // };\n  const setAndGetAll = (dropdown) => {\n    return [\"All\"];\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        style={{ paddingRight: \"2rem\" }}\n        alignItems=\"flex-end\"\n      >\n        <Grid item>\n          <Grid container spacing={2} alignItems=\"flex-end\">\n            <Grid item>\n              <CustomDropdown\n                label={\"Site\"}\n                // items={sitesBlocksInverters}\n                items={siteOptions}\n                handleChange={handleSitesChange}\n                selectedItem={selectedSites}\n              />\n            </Grid>\n            <Grid item>\n              <MultiDropdownSingle\n                // label={\"Block\"}\n                // items={selectedSites.length <= 0 ? [] : selectedSites[0].blocks}\n                // handleChange={handleBlocksChange}\n                // selectedItems={\n                //   selectedSites.length > 1\n                //     ? setAndGetAll(\"blocks\")\n                //     : selectedBlocks\n                // }\n                label={\"Block\"}\n                items={\n                  sitesBlocksInverters.find(\n                    (site) => site.name === selectedSites\n                  )\n                    ? sitesBlocksInverters\n                        .find((site) => site.name === selectedSites)\n                        .blocks.map((block) => block.name)\n                    : []\n                }\n                handleChange={handleBlocksChange}\n                selectedItems={selectedBlocks}\n              />\n            </Grid>\n            <Grid item>\n              <MultiDropdownSingle\n                // label={\"Inverter\"}\n                // items={\n                //   selectedSites.length <= 0 || selectedBlocks.length <= 0\n                //     ? []\n                //     : selectedSites[0].blocks[0].inverters\n                // }\n                // handleChange={handleInvertersChange}\n                // selectedItems={\n                //   selectedSites.length > 1 || selectedBlocks.length > 1\n                //     ? setAndGetAll(\"inverters\")\n                //     : selectedInverters\n                // }\n                label={\"Inverter\"}\n                items={getInverterOptions()}\n                handleChange={handleInvertersChange}\n                selectedItems={\n                  selectedBlocks.length > 1\n                    ? setAndGetAll(\"inverters\")\n                    : selectedInverters\n                }\n              />\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                color=\"primary\"\n                onClick={handleView}\n                disabled={disabledViewBtn}\n              >\n                {disabledViewBtn ? \"Loading\" : \"View\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"search\"\n            placeholder=\"Enter inverter\"\n            value={searchField}\n            onChange={handleSearchFieldChange}\n            style={{ maxWidth: \"8rem\", marginRight: \".5rem\" }}\n          />\n          <Button variant=\"outlined\" size=\"small\" onClick={handleSearch}>\n            Search\n          </Button>\n        </Grid>\n      </Grid>\n\n      <Grid container style={{ marginTop: \".5rem\", paddingRight: \"1rem\" }}>\n        <InvertersTable data={tableData} updateInverter={updateInverter} />\n      </Grid>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { blue } from \"@material-ui/core/colors\";\nimport Container from \"@material-ui/core/Container\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  Grid,\n  IconButton,\n} from \"@material-ui/core\";\n\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(0.5),\n      width: \"54ch\",\n    },\n  },\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: \"block\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(11),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  msg: {\n    fontSize: theme.typography.pxToRem(11),\n    fontWeight: theme.typography.fontWeightRegular,\n    color: \"#2196f3\",\n  },\n}));\n\nexport default function SimpleDialog({\n  handleClose,\n  open,\n  sendNotemsg,\n  getNotemsg,\n  notemsg,\n  showNotemsg,\n  setNotemsg,\n  setOpen,\n  setMsgid,\n  deleteNotemsg,\n  setAlertopen,\n  alertopen,\n}) {\n  const classes = useStyles();\n  //   const { onClose, selectedValue, open } = props;\n\n  // const [title, setTitle] = useState(\"\");\n  // const [notemsg, setNotemsg] = useState(\"\");\n\n  // const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n\n  // const [category, setCategory] = useState(\"todos\");\n  const [expandedId, setExpandedId] = useState(\"0\");\n\n  const handlealertClickOpen = (data) => {\n    // console.log(data);\n    setAlertopen(true);\n    setMsgid(data);\n  };\n\n  const handlealertClose = () => {\n    setAlertopen(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // setTitleError(false);\n    setDetailsError(false);\n\n    // if (title === \"\") {\n    //   setTitleError(true);\n    // }\n\n    if (notemsg === \"\") {\n      setDetailsError(true);\n    }\n\n    if (notemsg) {\n      //havent used a server bc i was developing this with react sandbox\n      sendNotemsg();\n      // setOpen(false);\n    }\n  };\n  const handleDetails = (event) => {\n    let value = event.target.value;\n    // console.log(value);\n    setNotemsg(value);\n  };\n\n  return (\n    <>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        open={open}\n      >\n        {/* <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle> */}\n        {/* <List>\n        {emails.map((email) => (\n          <ListItem\n            button\n            onClick={() => handleListItemClick(email)}\n            key={email}\n          >\n            <ListItemAvatar>\n              <Avatar className={classes.avatar}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n\n        <ListItem\n          autoFocus\n          button\n          onClick={() => handleListItemClick(\"addAccount\")}\n        >\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Add account\" />\n        </ListItem>\n      </List> */}\n        <Container style={{ width: \"30rem\" }}>\n          <Grid\n            container\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              // marginTop: \"0.5rem\",\n              // paddingRight: \"0.5rem\",\n            }}\n          >\n            <Grid item>\n              <Typography\n                variant=\"h6\"\n                color=\"primary\"\n                component=\"h2\"\n                gutterBottom\n              >\n                Create a new note\n              </Typography>\n            </Grid>\n            <Grid item style={{ paddingRight: \"0.5rem\" }}>\n              <CloseIcon\n                style={{ color: \"#EC7063\" }}\n                onClick={handleClose}\n                aria-label=\"close\"\n              />\n            </Grid>\n          </Grid>\n          <form\n            noValidate\n            className={classes.root}\n            autoComplete=\"off\"\n            onSubmit={handleSubmit}\n          >\n            {/* <TextField\n            onChange={(e) => setTitle(e.target.value)}\n            id=\"outlined-basic\"\n            label=\"Note Title\"\n            variant=\"outlined\"\n            color=\"primary\"\n            fullWidth\n            required\n            className={classes.field}\n            error={titleError}\n            InputLabelProps={{\n              margin: \"dense\",\n            }}\n          /> */}\n\n            <TextField\n              onChange={handleDetails}\n              label=\"Details\"\n              multiline\n              rows={4}\n              variant=\"outlined\"\n              color=\"primary\"\n              fullWidth\n              required\n              className={classes.field}\n              error={detailsError}\n              // InputLabelProps={{\n              //   style: { marginTop: \"-4px\" },\n              // }}\n              InputLabelProps={{\n                style: { marginTop: \"4px\" },\n              }}\n            />\n\n            {/* <FormControl className={classes.field} color=\"primary\">\n            <FormLabel>Note Category</FormLabel>\n            <RadioGroup\n              value={category}\n              onChange={(e) => setCategory(e.target.value)}\n            >\n              <FormControlLabel\n                value=\"money\"\n                control={<Radio color=\"primary\" />}\n                label=\"Money\"\n              />\n              <FormControlLabel\n                value=\"todos\"\n                control={<Radio color=\"primary\" />}\n                label=\"Todos\"\n              />\n              <FormControlLabel\n                value=\"reminders\"\n                control={<Radio color=\"primary\" />}\n                label=\"Reminders\"\n              />\n              <FormControlLabel\n                value=\"work\"\n                control={<Radio color=\"primary\" />}\n                label=\"Work\"\n              />\n            </RadioGroup>\n          </FormControl> */}\n\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              variant=\"contained\"\n              style={{ marginTop: \"-0.8rem\" }}\n              endIcon={<ArrowForwardIosIcon />}\n            >\n              Submit\n            </Button>\n          </form>\n          <Grid\n            container\n            style={{\n              marginTop: \"0.5rem\",\n              paddingLeft: \"0.4rem\",\n              // maxHeight: \"20rem\",\n            }}\n          >\n            {showNotemsg.map((data) => (\n              <Grid item>\n                <Accordion\n                  key={data.id}\n                  style={{ width: \"13rem\" }}\n                  expanded={expandedId === data.id}\n                >\n                  <AccordionSummary\n                    expandIcon={\n                      <ExpandMoreIcon\n                        color={expandedId === data.id ? \"primary\" : \"inherit\"}\n                        onClick={() =>\n                          setExpandedId((prev) =>\n                            prev === data.id ? \"0\" : data.id\n                          )\n                        }\n                      />\n                    }\n                    ariaControls={`${data.id}_panel1a-content`}\n                    id={`${data.id}_panel1a-id`}\n                  >\n                    <Typography className={classes.heading}>\n                      {new Date(Number(data.timestamp)).toLocaleString()}\n                    </Typography>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handlealertClickOpen(data)}\n                      style={{\n                        paddingInline: \".5rem\",\n                        paddingLeft: \"0.5rem\",\n                      }}\n                    >\n                      <DeleteRoundedIcon\n                        style={{ fontSize: \"1rem\" }}\n                        color=\"error\"\n                      />\n                    </IconButton>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Typography\n                      className={classes.msg}\n                      // style={{ fontSize: \"0.8rem\" }}\n                    >\n                      {data.notes}\n                    </Typography>\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n            ))}\n          </Grid>\n          <br />\n        </Container>\n      </Dialog>\n      <div>\n        <Dialog\n          open={alertopen}\n          onClose={handlealertClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          {/* <DialogTitle id=\"alert-dialog-title\">\n            {\"Use Google's location service?\"}\n          </DialogTitle> */}\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Are You Sure Want To Delete?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={deleteNotemsg} color=\"primary\" autoFocus>\n              Ok\n            </Button>\n            <Button onClick={handlealertClose} color=\"primary\">\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </>\n  );\n}\n\n// SimpleDialog.propTypes = {\n//   onClose: PropTypes.func.isRequired,\n//   open: PropTypes.bool.isRequired,\n//   selectedValue: PropTypes.string.isRequired,\n// };\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\nimport SimpleDialogDemo from \"./SimpleDialog\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nexport default function SitesTable({\n  data,\n  updateSite,\n  handleClickOpen,\n  sendNotemsg,\n}) {\n  const rowsConst = 10;\n\n  const [page, setPage] = useState(0);\n\n  const [pageCount, setPageCount] = useState(0);\n\n  const [paginatedData, setPaginatedData] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      // console.log(data);\n      setPage(() => (data.length > 0 ? 1 : 0));\n      setPageCount(() =>\n        data.length > 0 ? Math.ceil(data.length / rowsConst) : 0\n      );\n      setPaginatedData(() => (data.length > 0 ? data.slice(0, rowsConst) : []));\n    }\n  }, [data]);\n\n  const handlePageChange = (event, value) => {\n    let paginatedData = data.slice(rowsConst * (value - 1), rowsConst * value);\n    setPaginatedData(paginatedData);\n    setPage(value);\n  };\n\n  const handleInverterUpdate = (row) => {\n    let userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n\n    if (\n      userDetails.role === \"admin\" &&\n      (userDetails.email === \"sumit.datablare@gmail.com\" ||\n        userDetails.email === \"veerpratap@acme.in\" ||\n        userDetails.email === \"aman@datablare.com\" ||\n        userDetails.email === \"acmeace@acme.in\")\n    ) {\n      // window.alert('The update feature is temporarily disabled.');\n      updateSite(row);\n    } else {\n      window.alert(\"The update is not allowed.\");\n    }\n  };\n\n  return (\n    <Grid container>\n      <TableContainer component={Paper} style={{ maxWidth: \"91vw\" }}>\n        <Table size=\"small\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow style={{ backgroundColor: \"#ffffbf\" }}>\n              <TableCell style={{ zIndex: 101 }}>Action</TableCell>\n              <TableCell style={{ zIndex: 101 }}>Note</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Id</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Site</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Capacity</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Blocks</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Inverters</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Status</TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Billing Rates\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                DB Pool\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                System Id\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                System Ip\n              </TableCell>\n              <TableCell style={{ color: \"#000\" }}>National Head</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Zonal Head</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Plant Head</TableCell>\n              <TableCell style={{ color: \"#000\" }}>MobNo</TableCell>\n              <TableCell style={{ color: \"#000\" }}>HO Contact</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Addl. Contact</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Edited By</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedData.map((row, index) => {\n              return (\n                <TableRow\n                  key={row.id}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell style={{ zIndex: 1 }}>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleInverterUpdate(row)}\n                      style={{ paddingInline: \".5rem\" }}\n                    >\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                  </TableCell>\n                  <TableCell style={{ zIndex: 1 }}>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleClickOpen(row)}\n                      style={{ paddingInline: \".5rem\" }}\n                    >\n                      <NoteAddRoundedIcon fontSize=\"small\" />\n                    </IconButton>\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell>\n                  <TableCell>{row.sitename}</TableCell>\n                  <TableCell>{row.capacity}</TableCell>\n                  <TableCell>{row.totalblocks}</TableCell>\n                  <TableCell>{row.inverters}</TableCell>\n                  <TableCell>{row.status}</TableCell>\n                  <TableCell>{row.billingrates}</TableCell>\n                  <TableCell>{row.dbpool}</TableCell>\n                  <TableCell style={{ whiteSpace: \"nowrap\" }}>\n                    {row.systemid}\n                  </TableCell>\n                  <TableCell>{row.systemip}</TableCell>\n                  <TableCell>{row.nationalhead_email}</TableCell>\n                  <TableCell>{row.zonalhead_email}</TableCell>\n                  <TableCell>{row.siteincharge_email}</TableCell>\n                  <TableCell>\n                    {row.mob_no && row.mob_no.length > 0\n                      ? row.mob_no.join(\",\")\n                      : \"\"}\n                  </TableCell>\n                  <TableCell>{row.ho_coordinator}</TableCell>\n                  <TableCell>\n                    {row.emails && row.emails.length > 0\n                      ? row.emails.join(\",\")\n                      : \"\"}\n                  </TableCell>\n                  <TableCell>{row.editedby}</TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Grid\n        container\n        justify=\"flex-end\"\n        style={{ marginTop: \".25rem\", marginRight: \"1.2rem\" }}\n      >\n        <Grid item>\n          <Pagination\n            count={pageCount}\n            page={page}\n            onChange={handlePageChange}\n            shape=\"rounded\"\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { Snackbar } from '@material-ui/core';\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport * as React from 'react';\n\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport default function CustomSnackbar({open, severity, message, handleToggle}) {\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    handleToggle(false);\n  };\n\n  return (\n    \n      <Snackbar open={open} autoHideDuration={4000} onClose={handleClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}>\n        <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\n          {message}\n        </Alert>\n      </Snackbar>\n      \n  );\n}\n","import {\n  Button,\n  FormControl,\n  Grid,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { tempSitesBlocksInverters } from \"../../../constants/SiteNames\";\nimport MultiDropdown from \"../../UI/MultiDropdown\";\nimport { SERVER_URL } from \"../../../constants/constants\";\nimport InvertersTable from \"./SitesTable\";\nimport SitesTable from \"./SitesTable\";\nimport CustomSnackbar from \"../../UI/CustomSnackbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { AppState } from \"../../../AppContext\";\nimport SimpleDialog from \"./SimpleDialog\";\n\nexport default function ManageSites({ refreshSiteEditTable }) {\n  const { setEnabledLinearProgress } = AppState();\n\n  const [open, setOpen] = React.useState(false);\n  const [notesite, setNotesite] = useState({\n    id: 78,\n    sitename: \"Badisidd\",\n    systemid: \"badisidd-20220623-00044\",\n    dbpool: \"pool45\",\n    systemip: \"192.168.215.200\",\n  });\n  const [notemsg, setNotemsg] = useState(\"\");\n  const [showNotemsg, setShowNotemsg] = useState([]);\n\n  const [msgid, setMsgid] = useState();\n  const [alertopen, setAlertopen] = React.useState(false);\n\n  // const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  // if multiple sites, all blocks; if single site and multiple blocks, all inverters\n  const [tableData, setTableData] = useState([]);\n  const [tableDataCopy, setTableDataCopy] = useState([]);\n\n  const [searchField, setSearchField] = useState(\"\");\n\n  const emaileditedby = localStorage.getItem(\"userEmail\");\n\n  // const [editedbyEmail, setEditedbyEmail] = useState(\"\");\n\n  const [selectedSite, setSelectedSite] = useState({});\n  const [disabledUpdateBtn, setDisabledUpdateBtn] = useState(false);\n\n  const [snackbarState, setSnackbarState] = useState({\n    open: false,\n    severity: \"info\",\n    message: \"snackbar\",\n  });\n\n  const handleToggle = (bool) => {\n    setSnackbarState((prevState) => ({ ...prevState, open: bool }));\n  };\n\n  const handleSiteValuesChange = (event, key) => {\n    let value = event.target.value;\n    // console.log(\"value\", value);\n    if (key === \"emails\" || key === \"mob_no\") {\n      setSelectedSite((prevState) => ({\n        ...prevState,\n        [key]: String(value).split(\",\"),\n      }));\n    } else {\n      setSelectedSite((prevState) => ({ ...prevState, [key]: value }));\n    }\n  };\n  // console.log(\"SelectedSites -->\", selectedSite);\n  // const handleeditedbyEmail = (event, key) => {\n  //   let value = event.target.value;\n  //   setEditedbyEmail(value);\n  // };\n\n  const handleSearchFieldChange = (event) => {\n    let value = event.target.value;\n    setSearchField(value);\n  };\n  const handleClickOpen = (row) => {\n    // console.log(\"sites data\", row);\n    setNotesite(row);\n    setOpen(true);\n    getNotemsg();\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    // setSelectedValue(value);\n  };\n\n  //   const handleClose = () => {\n  //     onClose(selectedValue);\n  //   };\n\n  const handleView = () => {\n    setEnabledLinearProgress(true);\n    axios\n      .post(SERVER_URL + \"/sitemaster/sitedetail\", {\n        email: localStorage.getItem(\"userEmail\"),\n      })\n      .then((response) => {\n        // console.log(response.data);\n        let sortedData = response.data.sort((a, b) =>\n          a.sitename > b.sitename ? 1 : a.sitename < b.sitename ? -1 : 0\n        );\n        setTableData(sortedData);\n        setTableDataCopy(sortedData);\n        setSelectedSite((prevState) => {\n          let object = {};\n          Object.keys(prevState).forEach((key) => {\n            object = { ...object, [key]: \"\" };\n          });\n          return object;\n        });\n        setEnabledLinearProgress(false);\n        // setEditedbyEmail(\"\");\n      })\n      .catch((err) => {\n        // console.log(err);\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  useEffect(() => {\n    handleView();\n  }, [refreshSiteEditTable]);\n\n  const handleSearch = () => {\n    if (searchField === \"\") {\n      setTableData(tableDataCopy);\n      return;\n    }\n    let searchedSite = tableDataCopy.filter((element) =>\n      String(element.sitename)\n        .toLowerCase()\n        .includes(String(searchField).toLowerCase())\n    );\n    setTableData(searchedSite);\n  };\n\n  const updateSite = () => {\n    // console.log(\"update site\", selectedSite);\n    setEnabledLinearProgress(true);\n    axios\n      .post(\n        SERVER_URL + \"/sitemaster/edit\",\n        { ...selectedSite, email: localStorage.getItem(\"userEmail\") },\n        {\n          jwtToken: localStorage.getItem(\"userToken\"),\n        }\n      )\n      .then((response) => {\n        // console.log(\"inside then\", response);\n        setSnackbarState((prevState) => ({\n          ...prevState,\n          open: true,\n          severity: \"success\",\n          message: `Site: ${selectedSite.sitename} updated!`,\n        }));\n        setSelectedSite((prevState) => {\n          let object = {};\n          Object.keys(prevState).forEach((key) => {\n            object = { ...object, [key]: \"\" };\n          });\n          return object;\n        });\n        handleView();\n        setEnabledLinearProgress(false);\n      })\n      .catch((err) => {\n        setSnackbarState((prevState) => ({\n          ...prevState,\n          open: true,\n          severity: \"error\",\n          message: \"Update failed!\",\n        }));\n        handleView();\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  const handleEditClick = (row) => {\n    setSelectedSite(row);\n    // setEditedbyEmail(emaileditedby);\n  };\n\n  const sendNotemsg = () => {\n    // console.log(\"send Note msg hit\");\n    setEnabledLinearProgress(true);\n    axios\n      .post(SERVER_URL + \"/api/users/notes/insert\", {\n        site: notesite,\n        noteMsg: notemsg,\n      })\n      .then((response) => {\n        // console.log(\"inside then\", response);\n        getNotemsg();\n        // setSnackbarState((prevState) => ({\n        //   ...prevState,\n        //   open: true,\n        //   severity: \"success\",\n        //   message: `Site: ${selectedSite.sitename} updated!`,\n        // }));\n        // setSelectedSite((prevState) => {\n        //   let object = {};\n        //   Object.keys(prevState).forEach((key) => {\n        //     object = { ...object, [key]: \"\" };\n        //   });\n        //   return object;\n        // });\n        // handleView();\n        setEnabledLinearProgress(false);\n      })\n      .catch((err) => {\n        // setSnackbarState((prevState) => ({\n        //   ...prevState,\n        //   open: true,\n        //   severity: \"error\",\n        //   message: \"Update failed!\",\n        // }));\n        // handleView();\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  const getNotemsg = () => {\n    // console.log(\"Get Note msg hit\");\n    setEnabledLinearProgress(true);\n    axios\n      .post(SERVER_URL + \"/api/users/notes/get\", {\n        site: notesite,\n        // noteMsg: notemsg,\n      })\n      .then((response) => {\n        // console.log(\"inside then\", response.data);\n        const data = response.data;\n        setShowNotemsg(data);\n\n        // setSnackbarState((prevState) => ({\n        //   ...prevState,\n        //   open: true,\n        //   severity: \"success\",\n        //   message: `Site: ${selectedSite.sitename} updated!`,\n        // }));\n        // setSelectedSite((prevState) => {\n        //   let object = {};\n        //   Object.keys(prevState).forEach((key) => {\n        //     object = { ...object, [key]: \"\" };\n        //   });\n        //   return object;\n        // });\n        // handleView();\n        setEnabledLinearProgress(false);\n      })\n      .catch((err) => {\n        // setSnackbarState((prevState) => ({\n        //   ...prevState,\n        //   open: true,\n        //   severity: \"error\",\n        //   message: \"Update failed!\",\n        // }));\n        // handleView();\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  useEffect(() => {\n    getNotemsg();\n  }, [notesite]);\n\n  const deleteNotemsg = () => {\n    // console.log(\"Delete Note msg hit\");\n    setEnabledLinearProgress(true);\n    axios\n      .post(SERVER_URL + \"/api/users/notes/delete\", {\n        // site: notesite,\n        msgid: msgid,\n        // noteMsg: notemsg,\n      })\n      .then((response) => {\n        // console.log(\"inside then\", response.data);\n        const data = response.data;\n        getNotemsg();\n        setAlertopen(false);\n        // setShowNotemsg(data);\n\n        // setSnackbarState((prevState) => ({\n        //   ...prevState,\n        //   open: true,\n        //   severity: \"success\",\n        //   message: `Site: ${selectedSite.sitename} updated!`,\n        // }));\n        // setSelectedSite((prevState) => {\n        //   let object = {};\n        //   Object.keys(prevState).forEach((key) => {\n        //     object = { ...object, [key]: \"\" };\n        //   });\n        //   return object;\n        // });\n        // handleView();\n        setEnabledLinearProgress(false);\n      })\n      .catch((err) => {\n        // setSnackbarState((prevState) => ({\n        //   ...prevState,\n        //   open: true,\n        //   severity: \"error\",\n        //   message: \"Update failed!\",\n        // }));\n        // handleView();\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        justify=\"space-between\"\n        style={{ paddingRight: \"1.5rem\" }}\n      >\n        <Grid item>\n          <Grid container>\n            <Grid item>\n              <Tooltip title=\"Site name\" placement=\"bottom\">\n                <TextField\n                  id=\"site\"\n                  placeholder=\"Site name\"\n                  value={selectedSite.sitename}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  inputProps={{ style: { fontSize: 13 } }}\n                  onChange={(event) =>\n                    handleSiteValuesChange(event, \"sitename\")\n                  }\n                  style={{\n                    maxWidth: \"4rem\",\n                    marginRight: \".5rem\",\n                  }}\n                />\n              </Tooltip>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Capacity\" placement=\"bottom\">\n                <TextField\n                  id=\"capacity\"\n                  placeholder=\"Capacity\"\n                  inputProps={{ style: { fontSize: 13 } }}\n                  value={selectedSite.capacity}\n                  onChange={(event) =>\n                    handleSiteValuesChange(event, \"capacity\")\n                  }\n                  style={{ maxWidth: \"3.2rem\", marginRight: \".5rem\" }}\n                />\n              </Tooltip>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Billing Rate\" placement=\"bottom\">\n                <TextField\n                  id=\"billingrate\"\n                  placeholder=\"Billing Rate\"\n                  inputProps={{ style: { fontSize: 13 } }}\n                  value={selectedSite.billingrates}\n                  onChange={(event) =>\n                    handleSiteValuesChange(event, \"billingrates\")\n                  }\n                  style={{ maxWidth: \"4.2rem\", marginRight: \".5rem\" }}\n                />\n              </Tooltip>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"System IP\" placement=\"bottom\">\n                <TextField\n                  id=\"systemIP\"\n                  placeholder=\"System IP\"\n                  inputProps={{ style: { fontSize: 13 } }}\n                  value={selectedSite.systemip}\n                  onChange={(event) =>\n                    handleSiteValuesChange(event, \"systemip\")\n                  }\n                  style={{ maxWidth: \"6.2rem\", marginRight: \".5rem\" }}\n                />\n              </Tooltip>\n            </Grid>\n            <Grid item>\n              <FormControl>\n                <Select\n                  labelId=\"status-select-label\"\n                  id=\"status-select\"\n                  value={selectedSite.status}\n                  onChange={(event) => handleSiteValuesChange(event, \"status\")}\n                  defaultValue=\"Active\"\n                  style={{ fontSize: \"13px\", maxWidth: \"3.8rem\" }}\n                >\n                  <MenuItem value={\"Active\"}>Active</MenuItem>\n                  <MenuItem value={\"Inactive\"}>Inactive</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n\n            <Grid item>\n              <Tooltip title=\"National Head\" placement=\"bottom\">\n                <TextField\n                  id=\"nationalhead_email\"\n                  placeholder=\"National Head\"\n                  inputProps={{ style: { fontSize: 13 } }}\n                  value={selectedSite.nationalhead_email}\n                  onChange={(event) =>\n                    handleSiteValuesChange(event, \"nationalhead_email\")\n                  }\n                  style={{\n                    maxWidth: \"5.5rem\",\n                    marginRight: \".5rem\",\n                    marginLeft: \".5rem\",\n                  }}\n                />\n              </Tooltip>\n            </Grid>\n\n            <Grid item>\n              <Tooltip title=\"Zonal Head\" placement=\"bottom\">\n                <TextField\n                  id=\"zonalhead_email\"\n                  placeholder=\"Zonal Head\"\n                  inputProps={{ style: { fontSize: 13 } }}\n                  value={selectedSite.zonalhead_email}\n                  onChange={(event) =>\n                    handleSiteValuesChange(event, \"zonalhead_email\")\n                  }\n                  style={{\n                    maxWidth: \"5rem\",\n                    marginRight: \".5rem\",\n                  }}\n                />\n              </Tooltip>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Plant Head\" placement=\"bottom\">\n                <TextField\n                  id=\"siteincharge_email\"\n                  placeholder=\"Plant Head\"\n                  inputProps={{ style: { fontSize: 13 } }}\n                  value={selectedSite.siteincharge_email}\n                  onChange={(event) =>\n                    handleSiteValuesChange(event, \"siteincharge_email\")\n                  }\n                  style={{\n                    maxWidth: \"5rem\",\n                    marginRight: \".5rem\",\n                  }}\n                />\n              </Tooltip>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"MobNo\" placement=\"bottom\">\n                <TextField\n                  id=\"mob_no\"\n                  placeholder=\"MobNo\"\n                  inputProps={{ style: { fontSize: 13 } }}\n                  value={selectedSite.mob_no}\n                  onChange={(event) => handleSiteValuesChange(event, \"mob_no\")}\n                  style={{\n                    maxWidth: \"5rem\",\n                    marginRight: \".5rem\",\n                  }}\n                />\n              </Tooltip>\n            </Grid>\n\n            <Grid item>\n              <Tooltip title=\"HO Contacts\" placement=\"bottom\">\n                <TextField\n                  id=\"ho_Coordinator\"\n                  placeholder=\"HO Contacts\"\n                  inputProps={{ style: { fontSize: 13 } }}\n                  value={selectedSite.ho_coordinator}\n                  onChange={(event) =>\n                    handleSiteValuesChange(event, \"ho_coordinator\")\n                  }\n                  style={{\n                    maxWidth: \"5rem\",\n                    marginRight: \".5rem\",\n                  }}\n                />\n              </Tooltip>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Addl. Contact\" placement=\"bottom\">\n                <TextField\n                  id=\"add_contact\"\n                  placeholder=\"Addl. Contact\"\n                  inputProps={{ style: { fontSize: 13 } }}\n                  value={selectedSite.emails}\n                  onChange={(event) => handleSiteValuesChange(event, \"emails\")}\n                  style={{\n                    maxWidth: \"6rem\",\n                    // marginRight: \"0rem\",\n                  }}\n                />\n              </Tooltip>\n            </Grid>\n\n            {/* <Grid item>\n              <Tooltip title=\"Email\" placement=\"bottom\">\n                <TextField\n                  id=\"editedby\"\n                  placeholder=\"Email\"\n                  inputProps={{ style: { fontSize: 13 } }}\n                  // value={selectedSite.editedby}\n                  value={editedbyEmail}\n                  onChange={(event) =>\n                    handleSiteValuesChange(event, \"editedby\")\n                  }\n                  // onChange={handleeditedbyEmail}\n                  style={{\n                    maxWidth: \"5rem\",\n                    marginRight: \".4rem\",\n                    marginLeft: \".4rem\",\n                  }}\n                />\n              </Tooltip>\n            </Grid> */}\n\n            <Grid item style={{ marginLeft: \".5rem\" }}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={updateSite}\n                disable={disabledUpdateBtn}\n                style={{ fontSize: \"11px\" }}\n              >\n                {disabledUpdateBtn ? \"Updating\" : \"Update\"}\n              </Button>\n            </Grid>\n            <Grid item style={{ marginLeft: \"0.5rem\" }}>\n              <Tooltip title=\"Enter site\" placement=\"bottom\">\n                <TextField\n                  id=\"search\"\n                  placeholder=\"Enter site\"\n                  inputProps={{ style: { fontSize: 13 } }}\n                  value={searchField}\n                  onChange={handleSearchFieldChange}\n                  style={{ maxWidth: \"5rem\", marginRight: \"0.5rem\" }}\n                />\n              </Tooltip>\n              <Button\n                variant=\"outlined\"\n                style={{ fontSize: \"11px\", marginRight: \"0.5rem\" }}\n                size=\"small\"\n                onClick={handleSearch}\n              >\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        {/* <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"flex-end\"\n          alignItems=\"flex-end\"\n        >\n          <Grid item style={{ marginRight: \"7rem\", marginTop: \"0.5rem\" }}>\n            <Tooltip title=\"Enter site\" placement=\"bottom\">\n              <TextField\n                id=\"search\"\n                placeholder=\"Enter site\"\n                inputProps={{ style: { fontSize: 13 } }}\n                value={searchField}\n                onChange={handleSearchFieldChange}\n                style={{ maxWidth: \"6rem\", marginRight: \"1rem\" }}\n              />\n            </Tooltip>\n            <Button\n              variant=\"outlined\"\n              style={{ fontSize: \"11px\", marginRight: \"1rem\" }}\n              size=\"small\"\n              onClick={handleSearch}\n            >\n              Search\n            </Button>\n          </Grid>\n        </Grid> */}\n      </Grid>\n\n      <Grid container style={{ marginTop: \".5rem\", paddingRight: \"1rem\" }}>\n        <SitesTable\n          data={tableData}\n          updateSite={handleEditClick}\n          handleClickOpen={handleClickOpen}\n        />\n      </Grid>\n\n      <SimpleDialog\n        notemsg={notemsg}\n        showNotemsg={showNotemsg}\n        sendNotemsg={sendNotemsg}\n        getNotemsg={getNotemsg}\n        setNotemsg={setNotemsg}\n        open={open}\n        setOpen={setOpen}\n        handleClose={handleClose}\n        handleClickOpen={handleClickOpen}\n        setMsgid={setMsgid}\n        deleteNotemsg={deleteNotemsg}\n        setAlertopen={setAlertopen}\n        alertopen={alertopen}\n      />\n\n      <CustomSnackbar\n        open={snackbarState.open}\n        severity={snackbarState.severity}\n        message={snackbarState.message}\n        handleToggle={handleToggle}\n      />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nexport default function LogTable({ data, updateSite }) {\n  const rowsConst = 12;\n\n  const [page, setPage] = useState(0);\n\n  const [pageCount, setPageCount] = useState(0);\n\n  const [paginatedData, setPaginatedData] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      // console.log(data);\n      setPage(() => (data.length > 0 ? 1 : 0));\n      setPageCount(() =>\n        data.length > 0 ? Math.ceil(data.length / rowsConst) : 0\n      );\n      setPaginatedData(() => (data.length > 0 ? data.slice(0, rowsConst) : []));\n    }\n  }, [data]);\n\n  const handlePageChange = (event, value) => {\n    let paginatedData = data.slice(rowsConst * (value - 1), rowsConst * value);\n    setPaginatedData(paginatedData);\n    setPage(value);\n  };\n\n  const handleInverterUpdate = (row) => {\n    let userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n\n    if (\n      userDetails.role === \"admin\" &&\n      (userDetails.email === \"akasmishra@datablare.com\" ||\n        userDetails.email === \"veerpratap@acme.in\" ||\n        userDetails.email === \"aman@datablare.com\")\n    ) {\n      // window.alert('The update feature is temporarily disabled.');\n      updateSite(row);\n    } else {\n      window.alert(\"The update is not allowed.\");\n    }\n  };\n\n  const formatTime = (timestamp) => {\n    let date = new Date(timestamp);\n    return `${String(date.getDate()).padStart(2, 0)}/${String(\n      date.getMonth() + 1\n    ).padStart(2, 0)} ${String(date.getHours()).padStart(2, 0)}:${String(\n      date.getMinutes()\n    ).padStart(2, 0)}:${String(date.getHours()).padStart(2, 0)}`;\n  };\n\n  const getSiteName = (siteId) => {\n    let siteName = String(siteId).split(\"-\")[0];\n    siteName = siteName.charAt(0).toUpperCase() + siteName.slice(1);\n    return siteName;\n  };\n\n  return (\n    <Grid container>\n      <TableContainer component={Paper} style={{ maxWidth: \"89vw\" }}>\n        <Table size=\"small\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow style={{ backgroundColor: \"#ffffbf\" }}>\n              {/* <TableCell style={{ zIndex: 101 }}>Action</TableCell> */}\n              <TableCell style={{ color: \"#000\" }}>Site Id</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Error Type</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Error</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Insertion Time</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Remote Time</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedData.length === 0 && (\n              <TableRow\n                key={\"none\"}\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  No Records Found\n                </TableCell>\n              </TableRow>\n            )}\n            {paginatedData.length > 0 &&\n              paginatedData.map((row, index) => {\n                return (\n                  <TableRow\n                    key={index}\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                  >\n                    {/* <TableCell style={{ zIndex: 1 }}>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleInverterUpdate(row)}\n                      style={{ paddingInline: \".5rem\" }}\n                    >\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                  </TableCell> */}\n                    <TableCell component=\"th\" scope=\"row\">\n                      {getSiteName(row.site_id)}\n                    </TableCell>\n                    <TableCell>{row.error_type}</TableCell>\n                    <TableCell>{row.errors}</TableCell>\n                    <TableCell>\n                      {formatTime(Number(row.insertion_time))}\n                    </TableCell>\n                    <TableCell>{formatTime(row.remote_time * 1000)}</TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Grid container justify=\"flex-end\" style={{ marginTop: \".25rem\" }}>\n        <Grid item>\n          <Pagination\n            count={pageCount}\n            page={page}\n            onChange={handlePageChange}\n            shape=\"rounded\"\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Checkbox, ListItemIcon, ListItemText } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  // styles\n}));\n\nexport default function SitesDropdown({\n  label = \"Sites\",\n  items = JSON.parse(localStorage.getItem(\"siteNamesCaps\")),\n  handleChange,\n  selectedItems,\n}) {\n  const classes = useStyles();\n\n  // const handleSitesChange = (event) => {\n  //   const value = event.target.value;\n\n  //   if (value[value.length - 1] === \"All\") {\n  //     setSelectedSites(\n  //       selectedSites.length ===\n  //         JSON.parse(localStorage.getItem(\"siteNamesCaps\")).length\n  //         ? []\n  //         : JSON.parse(localStorage.getItem(\"siteNamesCaps\"))\n  //     );\n  //     return;\n  //   }\n\n  //   setSelectedSites(value);\n  // };\n\n  const isAllSelected =\n    items.length > 0 && selectedItems.length === items.length;\n\n  const isChecked = (items, name) => {\n    let isChecked = false;\n    items.forEach((element) => {\n      if (element === name) {\n        isChecked = true;\n      }\n    });\n    return isChecked;\n  };\n\n  return (\n    <FormControl style={{ maxWidth: \"200px\" }}>\n      <InputLabel id={`${label}-select-label`}>{label}</InputLabel>\n      <Select\n        style={{ fontSize: \".8rem\" }}\n        labelId={`${label}-select-label`}\n        id={`${label}-select`}\n        value={selectedItems}\n        onChange={handleChange}\n        multiple\n        renderValue={(data) => data.join(\", \")}\n        MenuProps={{\n          classes: { paper: classes.menuPaper },\n          getContentAnchorEl: () => null,\n        }}\n      >\n        <MenuItem\n          value=\"All\"\n          classes={{\n            root: isAllSelected ? classes.selectedAll : \"\",\n          }}\n          style={{ paddingBlock: 0 }}\n        >\n          <ListItemIcon>\n            <Checkbox\n              style={{ paddingBlock: 0 }}\n              size=\"small\"\n              color=\"primary\"\n              classes={{ indeterminate: classes.indeterminateColor }}\n              checked={isAllSelected || items.length === 0}\n              indeterminate={\n                selectedItems.length > 0 && selectedItems.length < items.length\n              }\n            />\n          </ListItemIcon>\n          <ListItemText\n            // classes={{ primary: classes.selectAllText }}\n            classes={{ primary: classes.listItemText }}\n            primary=\"Select All\"\n            style={{ paddingTop: \".05rem\" }}\n          />\n        </MenuItem>\n        {items.map((element) => {\n          return (\n            <MenuItem key={element} value={element} style={{ paddingBlock: 0 }}>\n              <ListItemIcon>\n                <Checkbox\n                  style={{ paddingBlock: 0 }}\n                  checked={isChecked(selectedItems, element)}\n                  size=\"small\"\n                  color=\"primary\"\n                />\n              </ListItemIcon>\n              <ListItemText\n                classes={{ primary: classes.listItemText }}\n                primary={element}\n                style={{ paddingTop: \".05rem\" }}\n              />\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  Button,\n  FormControl,\n  Grid,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { tempSitesBlocksInverters } from \"../../../constants/SiteNamesY\";\nimport MultiDropdown from \"../../UI/MultiDropdown\";\nimport { SERVER_URL } from \"../../../constants/constants\";\nimport InvertersTable from \"./LogTable\";\nimport SitesTable from \"./LogTable\";\nimport CustomSnackbar from \"../../UI/CustomSnackbar\";\nimport {\n  DatePicker,\n  TimePicker,\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SitesDropdown from \"../../UI/SitesDropdown\";\nimport { AppState } from \"../../../AppContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  textField: {\n    width: 120,\n  },\n  menuPaper: {\n    maxHeight: 400,\n  },\n  formControlStyle: {},\n  listItemText: {\n    fontSize: \".9rem\",\n  },\n}));\n\nexport default function Logs({ refreshSiteEditTable }) {\n  const classes = useStyles();\n  const { setEnabledLinearProgress } = AppState();\n\n  const [disabledViewBtn, setDisabledViewBtn] = useState(false);\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n\n  // if multiple sites, all blocks; if single site and multiple blocks, all inverters\n  const [tableData, setTableData] = useState([]);\n  const [tableDataCopy, setTableDataCopy] = useState([]);\n\n  const [searchField, setSearchField] = useState(\"\");\n\n  const [selectedSites, setSelectedSites] = useState(siteNamesAndBlocks);\n\n  const [disabledUpdateBtn, setDisabledUpdateBtn] = useState(false);\n\n  const [snackbarState, setSnackbarState] = useState({\n    open: false,\n    severity: \"info\",\n    message: \"snackbar\",\n  });\n\n  const getFromDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(0, 1, 0, 0);\n    return newDate;\n  };\n\n  const getToDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(23, 59, 59, 999);\n    return newDate;\n  };\n\n  const [fromDate, setFromDate] = useState(() => {\n    let date = new Date();\n    return getFromDate(date);\n  });\n\n  const [toDate, setToDate] = useState(() => {\n    let date = new Date();\n    return getToDate(date);\n  });\n\n  const handleFromDateChange = (date) => {\n    setFromDate(getFromDate(date));\n    // fetchPerformance(date.getTime(), toDate.getTime(), selectedSite);\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(getToDate(date));\n    // fetchPerformance(fromDate.getTime(), date.getTime(), selectedSite);\n  };\n\n  const getSiteObjects = (names) => {\n    return siteNamesAndBlocks.filter((element) => {\n      let found = false;\n      names.forEach((name) => {\n        if (element.name === name) {\n          found = true;\n        }\n      });\n      return found;\n    });\n  };\n  // console.log(\"114\", selectedSites, siteNamesAndBlocks);\n  const handleSitesChange = (event) => {\n    const value = event.target.value;\n    // console.log(\"value\", value);\n\n    if (value[value.length - 1] === \"All\") {\n      setSelectedSites(\n        selectedSites.length === siteNamesAndBlocks.length\n          ? [{}]\n          : siteNamesAndBlocks\n      );\n      return;\n    }\n\n    setSelectedSites(getSiteObjects(value));\n  };\n\n  const handleViewBtnClick = () => {\n    fetchLogs();\n  };\n\n  const handleToggle = (bool) => {\n    setSnackbarState((prevState) => ({ ...prevState, open: bool }));\n  };\n\n  const handleSearchFieldChange = (event) => {\n    let value = event.target.value;\n    setSearchField(value);\n  };\n\n  const getSiteIds = (sites) => {\n    return sites.map((element) => `'${element.id}'`);\n  };\n\n  const fetchLogs = () => {\n    // console.log(\n    //   \"date\",\n    //   selectedSites,\n    //   fromDate.toLocaleString(),\n    //   toDate.toLocaleString(),\n    //   getSiteIds(selectedSites)\n    // );\n    setEnabledLinearProgress(true);\n    setDisabledViewBtn(true);\n    axios\n      .post(SERVER_URL + \"/errorlogs/errorlog\", {\n        email: localStorage.getItem(\"userEmail\"),\n        sites: getSiteIds(selectedSites),\n        startTime: fromDate.getTime(),\n        endTime: toDate.getTime(),\n      })\n      .then((response) => {\n        // console.log(response.data);\n        let isArray = Array.isArray(response.data);\n        if (isArray) {\n          setTableData(response.data);\n          setTableDataCopy(response.data);\n        } else {\n          setTableData([]);\n          setTableDataCopy([]);\n        }\n        setEnabledLinearProgress(false);\n        setDisabledViewBtn(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setEnabledLinearProgress(false);\n        setDisabledViewBtn(false);\n      });\n  };\n\n  useEffect(() => {\n    fetchLogs();\n  }, []);\n\n  const handleSearch = () => {\n    if (searchField === \"\") {\n      setTableData(tableDataCopy);\n      return;\n    }\n    let ids = tableDataCopy.filter((element) =>\n      String(element.site_id)\n        .toLowerCase()\n        .includes(String(searchField).toLowerCase())\n    );\n    let errorType = tableDataCopy.filter((element) =>\n      String(element.error_type)\n        .toLowerCase()\n        .includes(String(searchField).toLowerCase())\n    );\n    setTableData([...ids, ...errorType]);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n        style={{ paddingRight: \"1.5rem\" }}\n      >\n        <Grid item>\n          <Grid container alignItems=\"flex-end\">\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <MultiDropdown\n                label=\"Sites\"\n                handleChange={handleSitesChange}\n                items={siteNamesAndBlocks}\n                selectedItems={selectedSites}\n              />\n            </Grid>\n            <Grid item style={{ marginRight: \"1rem\" }}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"from-date-picker-inline\"\n                  label=\"From\"\n                  value={fromDate}\n                  onChange={handleFromDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-labelte\": \"from date\",\n                  }}\n                  style={{ marginRight: \"1rem\" }}\n                  className={classes.textField}\n                  InputProps={{\n                    style: {\n                      fontSize: \".8rem\",\n                    },\n                  }}\n                />\n\n                <KeyboardDatePicker\n                  autoOk={true}\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  id=\"to-date-picker-inline\"\n                  label=\"To\"\n                  value={toDate}\n                  onChange={handleToDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"to date\",\n                  }}\n                  className={classes.textField}\n                  InputProps={{\n                    style: {\n                      fontSize: \".8rem\",\n                    },\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={handleViewBtnClick}\n              >\n                View\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"search\"\n            placeholder=\"Enter id or type\"\n            value={searchField}\n            onChange={handleSearchFieldChange}\n            style={{ maxWidth: \"8rem\", marginRight: \".5rem\" }}\n          />\n          <Button variant=\"outlined\" size=\"small\" onClick={handleSearch}>\n            Search\n          </Button>\n        </Grid>\n      </Grid>\n\n      <Grid container style={{ marginTop: \".5rem\", paddingRight: \"1rem\" }}>\n        <SitesTable data={tableData} />\n      </Grid>\n\n      <CustomSnackbar\n        open={snackbarState.open}\n        severity={snackbarState.severity}\n        message={snackbarState.message}\n        handleToggle={handleToggle}\n      />\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport ReactFlow, {\n  addEdge,\n  MiniMap,\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n} from \"react-flow-renderer\";\nimport {\n  nodes as initialNodes,\n  edges as initialEdges,\n} from \"./initial-elements\";\nimport MultiDropdown from \"../../UI/MultiDropdown\";\nimport MultiDropdownSingle from \"../../UI/MultiDropdownSingle\";\nimport axios from \"axios\";\nimport { SERVER_URL } from \"../../../constants/constants\";\n\nconst onInit = (reactFlowInstance) =>\n  console.log(\"flow loaded:\", reactFlowInstance);\n\nconst checkValue = (value) => {\n  if (value === -111) {\n    return \"N/A\";\n  } else {\n    return value;\n  }\n};\n\nconst getNumber = (value, digit) => {\n  const number = Number(value);\n  return number % 1 !== 0 ? number.toFixed(digit) : number;\n};\n\nconst getStrokeColor = (value) => {\n  // console.log(value);\n  if (value > 0) {\n    // console.log(\"green\");\n    return \"green\";\n  } else if (value <= 0) {\n    return \"red\";\n  } else {\n    return \"#000\";\n  }\n};\n\nconst OverviewFlow = () => {\n  const jwtToken = localStorage.getItem(\"userToken\");\n\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n  const siteNamesValue = JSON.parse(localStorage.getItem(\"siteNamesAndBlocks\"));\n\n  // const getSite = () => {\n  //   siteNamesAndBlocks.map((f, i) => {\n  //     if (i === 33) {\n  //       let val = f.name;\n  //       console.log(val);\n  //     }else if(i ===0)\n  //   });\n  // };\n  // console.log(getSite());\n\n  const [data, setData] = useState(null);\n\n  const getNodesAndEdges = () => {\n    let nodes = [];\n    let edges = [];\n\n    if (data) {\n      let verticalCount = 1;\n\n      const generation = {\n        id: \"generation\",\n        data: {\n          label: (\n            <>\n              Generation (in MWH)\n              <br />\n              Instant: {checkValue(getNumber(data.instantGeneration, 3))}\n              <br />\n              Total: {checkValue(getNumber(data.totalGeneration, 3))}\n            </>\n          ),\n        },\n        position: { x: 0, y: 0 },\n        targetPosition: \"bottom\",\n        style: { background: \"#03a9f4\", color: \"#fff\", borderColor: \"#03a9f4\" },\n      };\n\n      nodes.push(generation);\n\n      data.blocks.forEach((block) => {\n        let blockValues = block.values;\n        blockValues.forEach((inverter) => {\n          let inverterNodeId = block.block + inverter.inverter;\n          nodes.push({\n            id: inverterNodeId,\n            data: {\n              label: (\n                <>\n                  {block.block}, {inverter.inverter}\n                  <br />\n                  DC I: {checkValue(getNumber(inverter.DC_I, 0))}, DC V:{\" \"}\n                  {checkValue(getNumber(inverter.DC_V, 0))}\n                </>\n              ),\n            },\n            style: {\n              background: \"#4caf50\",\n              color: \"#fff\",\n              borderColor: \"#4caf50\",\n            },\n            position: {\n              x: Number(verticalCount * 200),\n              y: 150,\n            },\n            sourcePosition: \"top\",\n            targetPosition: \"bottom\",\n          });\n\n          let edgeId = `e1-${verticalCount}`;\n          edges.push({\n            id: edgeId,\n            source: inverterNodeId,\n            target: \"generation\",\n            animated: true,\n          });\n\n          let edgeCount = 1;\n          let stringYPos = 250;\n          let stringSum = 0;\n          inverter.inverter_strings.forEach((string, stringIndex) => {\n            let stringNodeId = block.block + inverter.inverter + stringIndex;\n            nodes.push({\n              id: stringNodeId,\n              data: {\n                label: (\n                  <>\n                    {string.name}\n                    <br />\n                    {checkValue(getNumber(string.value, 2))}\n                  </>\n                ),\n              },\n              style: { background: \"#ffeb3b\", borderColor: \"#ffeb3b\" },\n              position: {\n                x: Number(verticalCount * 200),\n                y: stringYPos,\n              },\n              sourcePosition: \"top\",\n            });\n\n            let edgeId = `e${verticalCount + 1}-${edgeCount}`;\n            stringSum += Number(string.value);\n            edges.push({\n              id: edgeId,\n              target: inverterNodeId,\n              source: stringNodeId,\n              animated: true,\n              style: {\n                stroke: getStrokeColor(stringSum),\n              },\n            });\n\n            stringYPos += 100;\n            edgeCount += 1;\n          });\n\n          verticalCount += 1;\n        });\n      });\n\n      nodes[0].position = { x: Number((verticalCount * 200) / 2), y: 0 };\n    }\n\n    return { nodes, edges };\n  };\n\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  const onConnect = (params) => setEdges((eds) => addEdge(params, eds));\n\n  const [selectedSite, setSelectedSite] = useState(\"Nangla\");\n\n  const getBlocks = (siteName = selectedSite) => {\n    let sites = siteNamesAndBlocks.find((val) => val.name === siteName)\n      ? siteNamesAndBlocks.filter((element) => element.name === siteName)\n      : [siteNamesAndBlocks.splice(0, 1)[0]];\n    // let sites = siteNamesAndBlocks.filter(\n    //   (element) => element.name === siteName\n    // );\n    // let sites = siteNamesAndBlocks.filter((element) =>\n    //   (element.name === siteName) !== \"Nangla\"\n    //     ? siteNamesAndBlocks.map((f, i) => {\n    //         if (i === 0) {\n    //           return f.name;\n    //         }\n    //       })\n    //     : siteName\n    // );\n\n    let numbers = Array.from({ length: sites[0].blocks[0] }, (_, i) => i + 1);\n    return numbers.map((element) => \"B\" + String(element).padStart(2, \"0\"));\n  };\n\n  const [blocks, setBlocks] = useState(getBlocks());\n  const [selectedBlocks, setSelectedBlocks] = useState(getBlocks());\n\n  const handleBlocksChange = (event) => {\n    let value = event.target.value;\n    if (value[value.length - 1] === \"all\") {\n      setSelectedBlocks(\n        selectedBlocks.length === blocks.length ? [] : getBlocks()\n      );\n      return;\n    }\n    setSelectedBlocks(value.map((element) => element));\n  };\n\n  const handleSiteChange = (event) => {\n    let value = event.target.value;\n    setSelectedSite(value);\n    setBlocks(getBlocks(value));\n    setSelectedBlocks(getBlocks(value));\n  };\n\n  const fetchData = async () => {\n    // console.log(selectedSite, selectedBlocks);\n    try {\n      const response = await axios.post(\n        SERVER_URL + \"/admin/sld/view\",\n        { site: selectedSite, block: selectedBlocks },\n        {\n          headers: {\n            jwtToken: jwtToken,\n          },\n        }\n      );\n      const data = response.data;\n      // console.log(data);\n      // console.log(response);\n      setData(data);\n    } catch (error) {\n      // console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const { nodes, edges } = getNodesAndEdges();\n    setNodes(nodes);\n    setEdges(edges);\n  }, [data]);\n\n  return (\n    <Grid container style={{ height: \"70vh\" }}>\n      <Grid\n        container\n        spacing={2}\n        alignItems=\"flex-end\"\n        style={{ marginBottom: \"1rem\" }}\n      >\n        <Grid item>\n          <FormControl>\n            <InputLabel id=\"site-select-label\">Site</InputLabel>\n            <Select\n              style={{ fontSize: \".8rem\" }}\n              labelId=\"site-select-label\"\n              id=\"site-select\"\n              value={selectedSite}\n              onChange={handleSiteChange}\n              // MenuProps={{\n              //   classes: { paper: classes.menuPaper },\n              //   getContentAnchorEl: () => null,\n              // }}\n            >\n              {siteNamesValue.map((site) => (\n                <MenuItem value={site.name}>{site.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <MultiDropdownSingle\n            label=\"Blocks\"\n            items={blocks}\n            selectedItems={selectedBlocks}\n            handleChange={handleBlocksChange}\n          />\n        </Grid>\n        <Grid item>\n          <Button variant=\"outlined\" size=\"small\" onClick={fetchData}>\n            View\n          </Button>\n        </Grid>\n      </Grid>\n\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onInit={onInit}\n        fitView\n        nodesConnectable={false}\n        nodesDraggable={false}\n        attributionPosition=\"top-right\"\n      >\n        <Controls showInteractive={false} />\n        <Background color=\"#aaa\" gap={16} />\n      </ReactFlow>\n    </Grid>\n  );\n};\n\nexport default OverviewFlow;\n","import React from \"react\";\nimport { MarkerType } from \"react-flow-renderer\";\n\nexport const nodes = [\n  {\n    id: \"instGen\",\n    data: {\n      label: (\n        <>\n          Generation (in MWH)\n          <br />\n          Instant: 2, Total: 30\n        </>\n      ),\n    },\n    position: { x: 0, y: 0 },\n  },\n  {\n    id: \"inv1\",\n    data: {\n      label: \"Inv 1\",\n    },\n    position: { x: 0, y: 100 },\n    sourcePosition: \"right\",\n  },\n  {\n    id: \"inv2\",\n    data: {\n      label: \"Inv 2\",\n    },\n    position: { x: 0, y: 200 },\n    sourcePosition: \"right\",\n  },\n  {\n    id: \"inv3\",\n    data: {\n      label: \"Inv 3\",\n    },\n    position: { x: 0, y: 300 },\n    sourcePosition: \"right\",\n  },\n  {\n    id: \"inv4\",\n    data: {\n      label: \"Inv 4\",\n    },\n    position: { x: 0, y: 400 },\n    sourcePosition: \"right\",\n  },\n  {\n    id: \"inv1Scb1\",\n    data: {\n      label: \"SCB Current 1\",\n    },\n    position: { x: 200, y: 100 },\n    targetPosition: \"left\",\n    sourcePosition: \"left\",\n  },\n  {\n    id: \"inv1Scb2\",\n    data: {\n      label: \"SCB Current 2\",\n    },\n    position: { x: 400, y: 100 },\n    targetPosition: \"left\",\n    sourcePosition: \"left\",\n  },\n  {\n    id: \"inv2Scb1\",\n    data: {\n      label: \"SCB Current 1\",\n    },\n    position: { x: 200, y: 200 },\n    targetPosition: \"left\",\n    sourcePosition: \"left\",\n  },\n];\n\nexport const edges = [\n  { id: \"e1-1\", source: \"instGen\", target: \"inv1\" },\n  { id: \"e1-2\", source: \"instGen\", target: \"inv2\" },\n  { id: \"e1-3\", source: \"instGen\", target: \"inv3\" },\n  { id: \"e1-3\", source: \"instGen\", target: \"inv4\" },\n  { id: \"e2-1\", source: \"inv1\", target: \"inv1Scb1\" },\n  { id: \"e2-2\", source: \"inv1\", target: \"inv1Scb2\" },\n  { id: \"e3-1\", source: \"inv2\", target: \"inv2Scb1\" },\n];\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Grid,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n  IconButton,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst rowsPerPage = 10;\n\nexport default function ConfigTable({ rows = [], handleRowSelect }) {\n  const [page, setPage] = useState(1);\n  const [pageCount, setPageCount] = useState(1);\n\n  useEffect(() => {\n    if (rows.length > 0) {\n      let count = Math.ceil(rows.length / rowsPerPage);\n      setPageCount(count);\n    }\n  }, [rows]);\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  return (\n    <Grid container style={{ maxWidth: \"90vw\" }}>\n      <TableContainer component={Paper}>\n        <Table\n          aria-label=\"simple table\"\n          size=\"small\"\n          style={{ overflowX: \"auto\" }}\n        >\n          <TableHead>\n            <TableRow style={{ backgroundColor: \"#ffffbf\" }}>\n              <TableCell\n                align=\"left\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                Actions\n              </TableCell>\n              <TableCell\n                align=\"left\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                System Name\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                CSV Name\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                Frequncy Day\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                Frequency Night\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                Frequency Time Range\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                Log CSV\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                None\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                OPC Host\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                OPC Interval\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                OPC Server\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                RB Host\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                RB Log queue\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                RB Password\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                RB Port\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                RB Queue\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                RB Username\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                Insertion Time\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n              >\n                Updation Time\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.length === 0 && (\n              <TableRow>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  No records found.\n                </TableCell>\n              </TableRow>\n            )}\n            {rows.length > 0 &&\n              rows.map((row, index) => (\n                <TableRow key={index}>\n                  <TableCell align=\"left\" style={{ whiteSpace: \"nowrap\" }}>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleRowSelect(row)}\n                    >\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                  </TableCell>\n                  <TableCell align=\"left\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.system_name}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.csv_filename_date}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.data_frequency_day}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.data_frequency_night}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.data_frequency_time_range}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.logfile_csv}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.none_value}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.opc_host}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.opc_reconnection_interval}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.opc_server}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.rabbit_host}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.rabbit_log_queue}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.rabbit_password}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.rabbit_port}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.rabbit_queue}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.rabbit_username}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {new Date(\n                      Number(row.insertion_timestamp) * 1000\n                    ).toLocaleString()}\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ whiteSpace: \"nowrap\" }}>\n                    {row.updation_timestamp\n                      ? new Date(\n                          Number(row.updation_timestamp) * 1000\n                        ).toLocaleString()\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Grid\n        container\n        style={{\n          marginTop: \".5rem\",\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Pagination\n          count={pageCount}\n          page={page}\n          onChange={handlePageChange}\n          size=\"small\"\n        />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { SERVER_URL } from \"../../../constants/constants\";\nimport {\n  Button,\n  Card,\n  Grid,\n  Modal,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport ConfigTable from \"./ConfigTable\";\nimport MultiDropdown from \"../../UI/MultiDropdown\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport { AppState } from \"../../../AppContext\";\nimport AlertsDropdown from \"../../UI/AlertsDropdown\";\nimport CustomDropdown from \"../../UI/CustomDropdown\";\nimport MultiDropdownSingle from \"../../UI/MultiDropdownSingle\";\n\nconst modalStyle = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n\nconst modalContentStyle = {\n  paddingTop: \"1rem\",\n  paddingInline: \"1rem\",\n  paddingBottom: \"1rem\",\n};\n\nexport default function RemoteConfig() {\n  let jwtToken = localStorage.getItem(\"userToken\");\n\n  const { setSnackbar } = AppState();\n\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n\n  const getSites = (sites = siteNamesAndBlocks) => {\n    return sites.map((site) => site.name);\n  };\n\n  const [selectedSites, setSelectedSites] = useState(getSites());\n\n  const [siteOptions, setSiteOptions] = useState(getSites());\n  const [tableRows, setTableRows] = useState([]);\n  const [selectedRow, setSelectedRow] = useState({});\n\n  const [openModal, setOpenModal] = useState(false);\n\n  const getSiteObjects = (names) => {\n    return siteNamesAndBlocks.filter((element) => {\n      let found = false;\n      names.forEach((name) => {\n        if (element.name === name) {\n          found = true;\n        }\n      });\n      return found;\n    });\n  };\n\n  const handleSitesChange = (event) => {\n    const value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setSelectedSites(\n        selectedSites.length === siteOptions.length ? [] : siteOptions\n      );\n      return;\n    }\n\n    setSelectedSites(value);\n  };\n\n  const fetchConfig = async () => {\n    try {\n      let response = await axios.post(\n        SERVER_URL + \"/opcConfig/yamlConfig\",\n        {},\n        { headers: { jwtToken: jwtToken } }\n      );\n      let data = response.data;\n      // console.log(data);\n      setTableRows(data);\n    } catch (error) {\n      // console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchConfig();\n  }, []);\n\n  const handleRowSelect = (row) => {\n    setSelectedRow(row);\n    setOpenModal(true);\n  };\n\n  const handleUpdate = async () => {\n    try {\n      let response = await axios.post(\n        SERVER_URL + \"/opcConfig/edityaml\",\n        { ...selectedRow },\n        { headers: { jwtToken: jwtToken } }\n      );\n      let data = response.data;\n      // console.log(data);\n      setSnackbar((prevState) => ({\n        ...prevState,\n        open: true,\n        severity: \"success\",\n        message: \"Updated successfully!\",\n      }));\n      setOpenModal(false);\n      fetchConfig();\n    } catch (error) {\n      // console.log(error);\n      setSnackbar((prevState) => ({\n        ...prevState,\n        open: true,\n        severity: \"error\",\n        message: \"Update failed!\",\n      }));\n      setOpenModal(false);\n    }\n  };\n\n  const handleRowValueChange = (key, event) => {\n    let value = event.target.value;\n    setSelectedRow((prevState) => ({ ...selectedRow, [key]: value }));\n  };\n\n  const handleCancelUpdate = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Grid container alignItems=\"flex-end\">\n          <MultiDropdownSingle\n            label=\"Sites\"\n            handleChange={handleSitesChange}\n            items={siteOptions}\n            selectedItems={selectedSites}\n          />\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            style={{ marginLeft: \"1rem\" }}\n          >\n            View\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <ConfigTable rows={tableRows} handleRowSelect={handleRowSelect} />\n      </Grid>\n      <Modal open={openModal} style={modalStyle}>\n        <Card style={modalContentStyle}>\n          <Typography variant=\"h6\">Edit: {selectedRow.system_name}</Typography>\n\n          <Grid container style={{ marginTop: \"1rem\" }}>\n            <TextField\n              label=\"CSV Name\"\n              value={selectedRow.csv_filename_date}\n              onChange={(event) => {\n                handleRowValueChange(\"csv_filename_date\", event);\n              }}\n            />\n            <TextField\n              label=\"Frequency Day\"\n              value={selectedRow.data_frequency_day}\n              onChange={(event) => {\n                handleRowValueChange(\"data_frequency_day\", event);\n              }}\n              style={{ marginLeft: \"1rem\" }}\n            />\n            <TextField\n              label=\"Frequency Night\"\n              value={selectedRow.data_frequency_night}\n              onChange={(event) => {\n                handleRowValueChange(\"data_frequency_night\", event);\n              }}\n              style={{ marginLeft: \"1rem\" }}\n            />\n          </Grid>\n\n          <Grid container style={{ marginTop: \"1rem\" }}>\n            <TextField\n              label=\"Frequency Range\"\n              value={selectedRow.data_frequency_time_range}\n              onChange={(event) => {\n                handleRowValueChange(\"data_frequency_time_range\", event);\n              }}\n            />\n            <TextField\n              label=\"Log CSV\"\n              value={selectedRow.logfile_csv}\n              onChange={(event) => {\n                handleRowValueChange(\"logfile_csv\", event);\n              }}\n              style={{ marginLeft: \"1rem\" }}\n            />\n            <TextField\n              label=\"None Value\"\n              value={selectedRow.none_value}\n              onChange={(event) => {\n                handleRowValueChange(\"none_value\", event);\n              }}\n              style={{ marginLeft: \"1rem\" }}\n            />\n          </Grid>\n\n          <Grid container style={{ marginTop: \"1rem\" }}>\n            <TextField\n              label=\"OPC Host\"\n              value={selectedRow.opc_host}\n              onChange={(event) => {\n                handleRowValueChange(\"opc_host\", event);\n              }}\n            />\n            <TextField\n              label=\"OPC Interval\"\n              value={selectedRow.opc_reconnection_interval}\n              onChange={(event) => {\n                handleRowValueChange(\"opc_reconnection_interval\", event);\n              }}\n              style={{ marginLeft: \"1rem\" }}\n            />\n            <TextField\n              label=\"OPC Server\"\n              value={selectedRow.opc_server}\n              onChange={(event) => {\n                handleRowValueChange(\"opc_server\", event);\n              }}\n              style={{ marginLeft: \"1rem\" }}\n            />\n          </Grid>\n\n          <Grid container style={{ marginTop: \"1rem\" }}>\n            <TextField\n              label=\"RB Host\"\n              value={selectedRow.rabbit_host}\n              onChange={(event) => {\n                handleRowValueChange(\"rabbit_host\", event);\n              }}\n            />\n            <TextField\n              label=\"RB Log Queue\"\n              value={selectedRow.rabbit_log_queue}\n              onChange={(event) => {\n                handleRowValueChange(\"rabbit_log_queue\", event);\n              }}\n              style={{ marginLeft: \"1rem\" }}\n            />\n            <TextField\n              label=\"RB Password\"\n              value={selectedRow.rabbit_password}\n              onChange={(event) => {\n                handleRowValueChange(\"rabbit_password\", event);\n              }}\n              style={{ marginLeft: \"1rem\" }}\n            />\n          </Grid>\n\n          <Grid container style={{ marginTop: \"1rem\" }}>\n            <TextField\n              label=\"RB Port\"\n              value={selectedRow.rabbit_port}\n              onChange={(event) => {\n                handleRowValueChange(\"rabbit_port\", event);\n              }}\n            />\n            <TextField\n              label=\"RB Queue\"\n              value={selectedRow.rabbit_queue}\n              onChange={(event) => {\n                handleRowValueChange(\"rabbit_queue\", event);\n              }}\n              style={{ marginLeft: \"1rem\" }}\n            />\n            <TextField\n              label=\"RB Username\"\n              value={selectedRow.rabbit_username}\n              onChange={(event) => {\n                handleRowValueChange(\"rabbit_username\", event);\n              }}\n              style={{ marginLeft: \"1rem\" }}\n            />\n          </Grid>\n\n          <Grid container style={{ marginTop: \"1rem\" }}>\n            <Typography>Tag List (Read Only)</Typography>\n            {/* <TextareaAutosize\n              label=\"Tag List\"\n              aria-label=\"Tag List\"\n              maxRows={4}\n              value={selectedRow.taglist}\n              style={{ width: \"100%\" }}\n            /> */}\n            <textarea\n              name=\"taglist\"\n              rows=\"4\"\n              value={selectedRow.taglist}\n              style={{ width: \"100%\" }}\n            />\n          </Grid>\n\n          <Grid\n            container\n            style={{\n              marginTop: \"1rem\",\n              display: \"flex\",\n              justifyContent: \"right\",\n            }}\n          >\n            <Button\n              variant=\"outlined\"\n              onClick={handleCancelUpdate}\n              size=\"small\"\n            >\n              Cancel\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              variant=\"outlined\"\n              style={{ marginLeft: \"1rem\" }}\n              onClick={handleUpdate}\n            >\n              Update\n            </Button>\n          </Grid>\n        </Card>\n      </Modal>\n    </Grid>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { SERVER_URL } from \"../../../constants/constants\";\nimport { gridColumnsTotalWidthSelector } from \"@material-ui/data-grid\";\nimport { Grid } from \"@material-ui/core\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\nimport \"./Replication.css\";\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    marginTop: \"1rem\",\n  },\n});\n\nexport default function Replication() {\n  const classes = useStyles();\n\n  const jwtToken = localStorage.getItem(\"jwtToken\");\n\n  const [rows, setRows] = useState([]);\n\n  const fetchReplicationStatus = async () => {\n    try {\n      let response = await axios.get(\n        SERVER_URL + \"/admin/postgresreplicationstatus\",\n        { headers: { jwtToken: jwtToken } }\n      );\n      let data = response.data;\n      // console.log(data.ip);\n      setRows([{ ...data, tag: \"Secondary\" }]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchReplicationStatus();\n  }, []);\n\n  const handleRefresh = () => {\n    fetchReplicationStatus();\n  };\n\n  return (\n    <Grid container alignItems=\"center\" justifyContent=\"center\">\n      <Grid item>\n        <Grid container direction=\"column\">\n          <Grid item style={{ textAlign: \"center\" }}>\n            Primary\n          </Grid>\n          <Grid item>\n            <img src=\"/static/images/server.png\" width=\"128\" height=\"128\" />\n          </Grid>\n          <Grid item style={{ textAlign: \"center\" }}>\n            10.10.0.38\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        {rows[0]?.status === \"Success\" ? (\n          <ArrowRightAltIcon\n            id=\"success-arrow\"\n            style={{\n              fontSize: \"128px\",\n            }}\n          />\n        ) : (\n          <ArrowRightAltIcon\n            style={{\n              fontSize: \"128px\",\n              color: \"red\",\n            }}\n          />\n        )}\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\">\n          <Grid item style={{ textAlign: \"center\" }}>\n            Secondary\n          </Grid>\n          <Grid item>\n            <img src=\"/static/images/server.png\" width=\"128\" height=\"128\" />\n          </Grid>\n          <Grid item style={{ textAlign: \"center\" }}>\n            {rows[0]?.ip ? rows[0].ip : \"10.10.0.102\"}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container justifyContent=\"center\">\n          <TableContainer component={Paper} className={classes.tableContainer}>\n            <Table\n              className={classes.table}\n              aria-label=\"simple table\"\n              size=\"small\"\n            >\n              <TableHead>\n                <TableRow style={{ backgroundColor: \"#ffffbf\" }}>\n                  <TableCell></TableCell>\n                  <TableCell align=\"center\" style={{ color: \"#000\" }}>\n                    IP\n                  </TableCell>\n\n                  <TableCell></TableCell>\n                  <TableCell align=\"center\" style={{ color: \"#000\" }}>\n                    IP\n                  </TableCell>\n                  <TableCell align=\"center\" style={{ color: \"#000\" }}>\n                    Status\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ color: \"#000\" }}>\n                    Last Update\n                  </TableCell>\n                  <TableCell align=\"right\" style={{ color: \"#000\" }}>\n                    Refresh\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row, index) => (\n                  <TableRow key={index}>\n                    <TableCell>\n                      <strong>Primary</strong>\n                    </TableCell>\n                    <TableCell align=\"center\">10.10.0.38</TableCell>\n\n                    <TableCell align=\"center\">\n                      <strong>{row.tag}</strong>\n                    </TableCell>\n                    <TableCell align=\"center\">{row.ip}</TableCell>\n                    <TableCell align=\"center\">\n                      {row.status === \"Success\" ? (\n                        <CheckCircleIcon\n                          fontSize=\"small\"\n                          style={{ color: \"green\" }}\n                        />\n                      ) : (\n                        <CancelIcon fontSize=\"small\" />\n                      )}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {new Date(row.timestamp * 1000).toLocaleString()}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton size=\"small\" onClick={handleRefresh}>\n                        <SyncIcon fontSize=\"small\" color=\"primary\" />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nexport default function InvertersScbTable({ data, updateInverterScb }) {\n  const rowsConst = 10;\n\n  const [page, setPage] = useState(0);\n\n  const [pageCount, setPageCount] = useState(0);\n\n  const [paginatedData, setPaginatedData] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      // console.log(data);\n      setPage(() => (data.length > 0 ? 1 : 0));\n      setPageCount(() =>\n        data.length > 0 ? Math.ceil(data.length / rowsConst) : 0\n      );\n      setPaginatedData(() => (data.length > 0 ? data.slice(0, rowsConst) : []));\n    }\n  }, [data]);\n\n  const handlePageChange = (event, value) => {\n    let paginatedData = data.slice(rowsConst * (value - 1), rowsConst * value);\n    setPaginatedData(paginatedData);\n    setPage(value);\n  };\n\n  const handleInverterUpdate = (row) => {\n    let userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n\n    if (\n      (userDetails.role === \"admin\" &&\n        (userDetails.email === \"akasmishra@datablare.com\" ||\n          userDetails.email === \"veerpratap@acme.in\" ||\n          userDetails.email === \"sumit.datablare@gmail.com\")) ||\n      userDetails.email === \"acmeace@acme.in\"\n    ) {\n      // window.alert('The update feature is temporarily disabled.');\n      updateInverterScb(row);\n    } else {\n      window.alert(\"The update is not allowed.\");\n    }\n  };\n\n  return (\n    <Grid container>\n      <TableContainer component={Paper} style={{ maxWidth: \"89vw\" }}>\n        <Table size=\"small\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow style={{ backgroundColor: \"#ffffbf\" }}>\n              <TableCell style={{ zIndex: 101, color: \"#000\" }}>\n                Action\n              </TableCell>\n              {/* <TableCell style={{ color: \"#000\" }}>Id</TableCell> */}\n              <TableCell style={{ color: \"#000\" }}>Site</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Block</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Inverter</TableCell>\n              {/* <TableCell style={{ color: \"#000\" }}>Group</TableCell> */}\n              {/* <TableCell style={{ color: \"#000\" }}>Make</TableCell> */}\n              {/* <TableCell style={{ color: \"#000\" }}>Number</TableCell> */}\n              {/* <TableCell style={{ color: \"#000\" }}>Type</TableCell> */}\n              {/* <TableCell style={{ color: \"#000\" }}>Slots</TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                SCB Connected\n              </TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Strings Connected\n              </TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Module Make\n              </TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Module Rating\n              </TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                AC Capacity\n              </TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                DC Capacity\n              </TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                DA Ratio\n              </TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                DC overloading\n              </TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Peak 1\n              </TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Peak 2\n              </TableCell> */}\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S1\n              </TableCell>\n              <TableCell\n                style={{\n                  whiteSpace: \"nowrap\",\n                  color: \"#000\",\n                }}\n              >\n                S1-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S2\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S2-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S3\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S3-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S4\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S4-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S5\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S5-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S6\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S6-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S7\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S7-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S8\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S8-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S9\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S9-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S10\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S10-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S11\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S11-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S12\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S12-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S13\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S13-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S14\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S14-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S15\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S15-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S16\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S16-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S17\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S17-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S18\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S18-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S19\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S19-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S20\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S20-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S21\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S21-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S22\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S22-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S23\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S23-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S24\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S24-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S25\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S25-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S26\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S26-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S27\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S27-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S28\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S28-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S29\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S29-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S30\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S30-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S31\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S31-Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S32\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                S32-Field\n              </TableCell>\n              {/* {paginatedData.map((row, index) => {\n                return (\n                  <TableCell\n                    style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n                    key={row}\n                  >\n                    {Object.keys(row)}\n                  </TableCell>\n                );\n              })} */}\n\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Omega Id\n              </TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Tech Name\n              </TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Tech Mob\n              </TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Tech Email\n              </TableCell> */}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedData.map((row, index) => {\n              // console.log(row);\n\n              return (\n                <TableRow\n                  key={row.id}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell style={{ zIndex: 1 }}>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleInverterUpdate(row)}\n                      style={{ paddingInline: \".5rem\" }}\n                    >\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                  </TableCell>\n                  {/* <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell> */}\n                  <TableCell>{row.sitename}</TableCell>\n                  <TableCell>{row.block}</TableCell>\n                  <TableCell>{row.inverter}</TableCell>\n                  {/* <TableCell style={{ whiteSpace: \"nowrap\" }}>\n                    {row.inv_group}\n                  </TableCell> */}\n                  {/* <TableCell>{row.inverter_make}</TableCell> */}\n                  {/* <TableCell>{row.inverter_num}</TableCell> */}\n                  {/* <TableCell style={{ whiteSpace: \"nowrap\" }}>\n                    {row.inverter_type}\n                  </TableCell> */}\n                  {/* <TableCell>{row.slots}</TableCell> */}\n                  {/* <TableCell>{row.scb_connected}</TableCell> */}\n                  {/* <TableCell>{row.strings_connected}</TableCell> */}\n\n                  {/* <TableCell style={{ whiteSpace: \"nowrap\" }}>\n                    {row.connected_module_make}\n                  </TableCell> */}\n                  {/* <TableCell>{row.module_rating}</TableCell> */}\n                  {/* <TableCell>{row.ac_capacity_kw}</TableCell> */}\n                  {/* <TableCell>{row.dc_capacity_kw}</TableCell> */}\n                  {/* <TableCell>{row.da_ratio}</TableCell> */}\n\n                  {/* <TableCell>{row.dc_overloading}</TableCell> */}\n\n                  {/* <TableCell>{row.peak1}</TableCell> */}\n                  {/* <TableCell>{row.peak2}</TableCell> */}\n\n                  <TableCell\n                    style={{ color: row.s1_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s1}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s1_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s1_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s2_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s2}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s2_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s2_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s3_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s3}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s3_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s3_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s4_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s4}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s4_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s4_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s5_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s5}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s5_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s5_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s6_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s6}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s6_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s6_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s7_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s7}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s7_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s7_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s8_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s8}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s8_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s8_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s9_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s9}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s9_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s9_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s10_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s10}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s10_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s10_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s11_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s11}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s11_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s11_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s12_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s12}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s12_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s12_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s13_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s13}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s13_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s13_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s14_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s14}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s14_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s14_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s15_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s15}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s15_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s15_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s16_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s16}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s16_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s16_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s17_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s17}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s17_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s17_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s18_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s18}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s18_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s18_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s19_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s19}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s19_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s19_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s20_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s20}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s20_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s20_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s21_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s21}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s21_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s21_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s22_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s22}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s22_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s22_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s23_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s23}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s23_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s23_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s24_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s24}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s24_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s24_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s25_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s25}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s25_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s25_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s26_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s26}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s26_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s26_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s27_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s27}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s27_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s27_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s28_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s28}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s28_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s28_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s29_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s29}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s29_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s29_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s30_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s30}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s30_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s30_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s31_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s31}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s31_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s31_field}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s32_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s32}\n                  </TableCell>\n                  <TableCell\n                    style={{ color: row.s32_status ? \"grey\" : \"black\" }}\n                  >\n                    {row.s32_field}\n                  </TableCell>\n\n                  {/* <TableCell>{row.omegaid}</TableCell> */}\n                  {/* <TableCell>{row.techname}</TableCell> */}\n                  {/* <TableCell>{row.techmob}</TableCell> */}\n                  {/* <TableCell>{row.email}</TableCell> */}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Grid\n        container\n        justifyContent=\"flex-end\"\n        style={{ marginLeft: \"-10rem\", marginTop: \".25rem\" }}\n      >\n        <Grid item>\n          <Pagination\n            count={pageCount}\n            page={page}\n            onChange={handlePageChange}\n            shape=\"rounded\"\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { Button, Grid, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { tempSitesBlocksInverters } from \"../../../constants/SiteNames\";\nimport MultiDropdown from \"../../UI/MultiDropdown\";\nimport { SERVER_URL } from \"../../../constants/constants\";\nimport InvertersScbTable from \"./InvertersScbTable\";\nimport { inverters } from \"../../../constants/csvParameters\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport CustomDropdown from \"../../UI/CustomDropdown\";\nimport MultiDropdownSingle from \"../../UI/MultiDropdownSingle\";\nimport { AppState } from \"../../../AppContext\";\n\nexport default function ManageInvScb({\n  updateInverterScb,\n  refreshInverterTable,\n}) {\n  const { setEnabledLinearProgress } = AppState();\n\n  const [disabledViewBtn, setDisabledViewBtn] = useState(false);\n  // if multiple sites, all blocks; if single site and multiple blocks, all inverters\n  const [sitesBlocksInverters, setSitesBlocksInverters] = useState(\n    tempSitesBlocksInverters\n  );\n  const [selectedSites, setSelectedSites] = useState(\n    sitesBlocksInverters[0].name\n  );\n\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n\n  const getSites = (sites = siteNamesAndBlocks) => {\n    return sites.map((site) => site.name);\n  };\n\n  const [siteOptions, setSiteOptions] = useState(getSites());\n\n  const [selectedBlocks, setSelectedBlocks] = useState(\n    sitesBlocksInverters[0].blocks.map((block) => block.name)\n  );\n\n  // const [selectedInverters, setSelectedInverters] = useState(\n  //   sitesBlocksInverters[0].blocks[0].inverters\n  // );\n  const [selectedInverters, setSelectedInverters] = useState([\"I01\"]);\n\n  // if multiple sites, all blocks; if single site and multiple blocks, all inverters\n  // const siteNamesAndBlocks = JSON.parse(\n  //   localStorage.getItem(\"siteNamesAndBlocks\")\n  // );\n\n  // const [sitesBlocksInverters, setSitesBlocksInverters] = useState(\n  //   tempSitesBlocksInverters\n  // );\n  // // const [selectedSites, setSelectedSites] = useState([sitesBlocksInverters[0]]);\n\n  // const [selectedSites, setSelectedSites] = useState(\n  //   sitesBlocksInverters[0].name\n  // );\n\n  // const getSites = (sites = siteNamesAndBlocks) => {\n  //   return sites.map((site) => site.name);\n  // };\n\n  // const [siteOptions, setSiteOptions] = useState(getSites());\n\n  // // const [selectedBlocks, setSelectedBlocks] = useState([\n  // //   sitesBlocksInverters[0].blocks[0],\n  // // ]);\n  // const [selectedBlocks, setSelectedBlocks] = useState(\n  //   sitesBlocksInverters[0].blocks.map((block) => block.name)\n  // );\n  // const [selectedInverters, setSelectedInverters] = useState([\n  //   sitesBlocksInverters[0].blocks[0].inverters[0],\n  // ]);\n  const [tableData, setTableData] = useState([]);\n  const [tableDataCopy, setTableDataCopy] = useState([]);\n\n  const [searchField, setSearchField] = useState(\"\");\n\n  const handleSearchFieldChange = (event) => {\n    let value = event.target.value;\n    setSearchField(value);\n  };\n\n  // const fetchDropdownValues = () => {\n  //   axios.post(SERVER_URL + \"/manageinverters/inverters\").then((response) => {\n  //     let sites = response.data.sort((a, b) =>\n  //       a.name > b.name ? 1 : b.name > a.name ? -1 : 0\n  //     );\n  //     setSitesBlocksInverters(sites);\n  //     setSelectedSites(sites[0].name);\n  //     setSelectedBlocks([sites[0].blocks[0]]);\n  //     setSelectedInverters([sites[0].blocks[0].inverters[0]]);\n  //   });\n  // };\n\n  // useEffect(() => {\n  //   fetchDropdownValues();\n  // }, []);\n  const fetchDropdownValues = () => {\n    // console.log(\"fetch drop down values\");\n    // console.log(\"Hitting: \", SERVER_URL + \"/manageinverters/inverters\");\n    axios.post(SERVER_URL + \"/manageinverters/inverters\").then((response) => {\n      // console.log(\"======>\", response.data);\n      let sites = response.data.sort((a, b) =>\n        a.name > b.name ? 1 : b.name > a.name ? -1 : 0\n      );\n      // console.log(\"fetched sites\", sites);\n      setSitesBlocksInverters(sites);\n      setSelectedSites(sites[0].name);\n      setSelectedBlocks(sites[0].blocks.map((block) => block.name));\n      //  setSelectedSiteForTable(sites[19].name);\n      //  setSelectedBlocksForTable(sites[19].blocks.map((block) => block.name));\n      // setSelectedInverters(sites[19].blocks.map((block) => block.inverters));\n    });\n  };\n\n  useEffect(() => {\n    fetchDropdownValues();\n  }, []);\n\n  // console.log(\n  //   \"site\",\n  //   selectedSites,\n  //   \"block\",\n  //   selectedBlocks,\n  //   \"Inverter\",\n  //   selectedInverters\n  // );\n  // const handleSitesChange = (event) => {\n  //   let value = event.target.value;\n  //   console.log(value);\n  //   console.log(selectedSites);\n\n  //   if (value[value.length - 1] === \"All\") {\n  //     setSelectedSites(\n  //       selectedSites.length === sitesBlocksInverters.length\n  //         ? []\n  //         : sitesBlocksInverters\n  //     );\n  //     return;\n  //   }\n\n  //   setSelectedSites((prevState) => {\n  //     let filteredValues = [];\n  //     sitesBlocksInverters.forEach((element) => {\n  //       value.forEach((innerEl) => {\n  //         if (element.name === innerEl) {\n  //           filteredValues.push(element);\n  //         }\n  //       });\n  //     });\n  //     return filteredValues;\n  //   });\n  // };\n\n  const handleSitesChange = (event) => {\n    let value = event.target.value;\n\n    // if (value[value.length - 1] === \"all\") {\n    //   setSelectedSites(\n    //     selectedSites.length === sitesBlocksInverters.length\n    //       ? []\n    //       : sitesBlocksInverters.map((site) => site.name)\n    //   );\n    //   return;\n    // }\n\n    setSelectedSites(value);\n\n    // if (value.length > 1) {\n    //   setSelectedBlocks([\"All\"]);\n    // } else {\n    //   setSelectedBlocks(\n    //     sitesBlocksInverters\n    //       .find((site) => site.name === value[0])\n    //       .blocks.map((block) => block.name)\n    //   );\n    // }\n\n    setSelectedBlocks(\n      sitesBlocksInverters\n        .find((site) => site.name === value)\n        .blocks.map((block) => block.name)\n    );\n  };\n\n  // const handleBlocksChange = (event) => {\n  //   let value = event.target.value;\n  //   console.log(value);\n  //   console.log(selectedBlocks);\n  //   if (value[value.length - 1] === \"All\") {\n  //     setSelectedBlocks(\n  //       selectedBlocks.length === sitesBlocksInverters[0].blocks.length\n  //         ? []\n  //         : sitesBlocksInverters[0].blocks\n  //     );\n  //     return;\n  //   }\n\n  //   setSelectedBlocks(value.map((element) => ({ name: element })));\n  // };\n  const handleBlocksChange = (event) => {\n    let value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setSelectedBlocks(\n        selectedBlocks.length ===\n          sitesBlocksInverters.find((site) => site.name === selectedSites)\n            .blocks.length\n          ? []\n          : sitesBlocksInverters\n              .find((site) => site.name === selectedSites)\n              .blocks.map((block) => block.name)\n      );\n      return;\n    }\n\n    setSelectedBlocks(value);\n  };\n\n  // const handleInvertersChange = (event) => {\n  //   let value = event.target.value;\n\n  //   if (value[value.length - 1] === \"All\") {\n  //     setSelectedInverters(\n  //       selectedInverters.length ===\n  //         sitesBlocksInverters[0].blocks[0].inverters.length\n  //         ? []\n  //         : sitesBlocksInverters[0].blocks[0].inverters\n  //     );\n  //     return;\n  //   }\n\n  //   setSelectedInverters(value.map((element) => ({ name: element })));\n  // };\n  const handleInvertersChange = (event) => {\n    let value = event.target.value.sort();\n\n    if (value[value.length - 1] === \"all\") {\n      // console.log(\"abc\");\n\n      if (selectedInverters.length === 0) {\n        setSelectedInverters(getInverterOptions());\n      } else {\n        setSelectedInverters([]);\n      }\n\n      return;\n    }\n    setSelectedInverters(value);\n    // setSelectedInverter(value.map((element) => ({ name: element })));\n  };\n  const getInverterOptions = () => {\n    let inverters = [];\n    try {\n      const site = sitesBlocksInverters.find(\n        (site) => site.name === selectedSites\n      );\n      // console.log(\"261\", site);\n      let block = site[\"blocks\"].find(\n        (block) => block.name === selectedBlocks[0]\n      );\n\n      // console.log(\"265\", block);\n      const foundInveters =\n        selectedBlocks.length > 1\n          ? [\"All\"]\n          : block?.inverters.map((inv) => inv.name);\n\n      inverters = foundInveters.length > 0 ? foundInveters.sort() : [];\n      // console.log(\"268\", foundInveters, inverters);\n    } catch (error) {\n      inverters = [];\n    }\n    return inverters;\n  };\n\n  const handleView = () => {\n    setEnabledLinearProgress(true);\n    setDisabledViewBtn(true);\n    // console.log(selectedSites, selectedBlocks, selectedInverters);\n    axios\n      .post(SERVER_URL + \"/scbUpdate\", {\n        sites: selectedSites,\n        blocks: selectedBlocks,\n        // inverters: selectedInverters,\n        // sites: selectedSites.map((element) => element.name),\n        // blocks:\n        //   selectedSites.length > 1\n        //     ? [\"all\"]\n        //     : selectedBlocks.map((element) => element.name),\n        inverters: selectedBlocks.length > 1 ? [\"all\"] : selectedInverters,\n      })\n      .then((response) => {\n        console.log(\"124--scb data\", response.data);\n        // const data = response.data.map((block) => block.block);\n        // console.log(\"data\", data);\n        setTableData(response.data);\n        setTableDataCopy(response.data);\n        setEnabledLinearProgress(false);\n        setDisabledViewBtn(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setEnabledLinearProgress(false);\n        setDisabledViewBtn(false);\n      });\n  };\n\n  // useEffect(() => {\n  //   handleView();\n  // }, [refreshInverterTable]);\n\n  const handleSearch = () => {\n    if (searchField === \"\") {\n      setTableData(tableDataCopy);\n      return;\n    }\n    let searchedInverter = tableData.filter(\n      (element) =>\n        String(element.inverter).toLowerCase() ===\n        String(searchField).toLowerCase()\n    );\n    setTableData(searchedInverter);\n  };\n\n  const setAndGetAll = (dropdown) => {\n    // if (dropdown === 'inverters') {\n    //     setSelectedInverters([])\n    // } else {\n    //     setSelectedBlocks([]);\n    // }\n\n    return [\"All\"];\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        style={{ paddingRight: \"10rem\" }}\n        alignItems=\"flex-end\"\n      >\n        <Grid item>\n          <Grid container spacing={2} alignItems=\"flex-end\">\n            {/* <Grid item>\n              <MultiDropdown\n                label={\"Site\"}\n                // items={sitesBlocksInverters}\n                items={siteNamesAndBlocks}\n                handleChange={handleSitesChange}\n                selectedItems={selectedSites}\n              />\n            </Grid> */}\n            <Grid item>\n              <CustomDropdown\n                label={\"Site\"}\n                // items={sitesBlocksInverters.map((site) => site.name)}\n                items={siteOptions}\n                handleChange={handleSitesChange}\n                selectedItem={selectedSites}\n              />\n            </Grid>\n            <Grid item>\n              {/* <MultiDropdown\n                label={\"Block\"}\n                // items={selectedSites.length <= 0 ? [] : selectedSites[0].blocks}\n                items={\n                  sitesBlocksInverters.find(\n                    (site) => site.name === selectedSites\n                  )\n                    ? getBlocks()\n                    : []\n                }\n                handleChange={handleBlocksChange}\n                // selectedItems={\n                //   selectedSites.length > 1\n                //     ? setAndGetAll(\"blocks\")\n                //     : selectedBlocks\n                // }\n                selectedItems={selectedBlocks}\n              /> */}\n              <MultiDropdownSingle\n                label={\"Block\"}\n                items={\n                  sitesBlocksInverters.find(\n                    (site) => site.name === selectedSites\n                  )\n                    ? sitesBlocksInverters\n                        .find((site) => site.name === selectedSites)\n                        .blocks.map((block) => block.name)\n                    : []\n                }\n                handleChange={handleBlocksChange}\n                selectedItems={selectedBlocks}\n              />\n            </Grid>\n            <Grid item>\n              {/* <MultiDropdown\n                label={\"Inverter\"}\n                items={\n                  selectedSites.length <= 0 || selectedBlocks.length <= 0\n                    ? []\n                    : sitesBlocksInverters.blocks[0].inverters\n                }\n                handleChange={handleInvertersChange}\n                selectedItems={\n                  selectedSites.length > 1 || selectedBlocks.length > 1\n                    ? setAndGetAll(\"inverters\")\n                    : selectedInverters\n                }\n              /> */}\n              <MultiDropdownSingle\n                label={\"Inverter\"}\n                items={getInverterOptions()}\n                handleChange={handleInvertersChange}\n                selectedItems={\n                  selectedBlocks.length > 1\n                    ? setAndGetAll(\"inverters\")\n                    : selectedInverters\n                }\n              />\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                color=\"primary\"\n                onClick={handleView}\n              >\n                View\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item>\n          <TextField\n            id=\"search\"\n            placeholder=\"Enter inverter\"\n            value={searchField}\n            onChange={handleSearchFieldChange}\n            style={{ maxWidth: \"8rem\", marginRight: \".5rem\" }}\n          />\n          <Button variant=\"outlined\" size=\"small\" onClick={handleSearch}>\n            Search\n          </Button>\n        </Grid>\n      </Grid>\n\n      <Grid\n        container\n        style={{\n          marginTop: \".5rem\",\n          // paddingRight: \"5rem\",\n          marginRight: \"10rem\",\n        }}\n      >\n        <InvertersScbTable\n          data={tableData}\n          updateInverterScb={updateInverterScb}\n        />\n      </Grid>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nexport default function MessageTable({ data, updateInverterScb }) {\n  const rowsConst = 10;\n\n  const [page, setPage] = useState(0);\n\n  const [pageCount, setPageCount] = useState(0);\n\n  const [paginatedData, setPaginatedData] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      // console.log(data);\n      setPage(() => (data.length > 0 ? 1 : 0));\n      setPageCount(() =>\n        data.length > 0 ? Math.ceil(data.length / rowsConst) : 0\n      );\n      setPaginatedData(() => (data.length > 0 ? data.slice(0, rowsConst) : []));\n    }\n  }, [data]);\n\n  const handlePageChange = (event, value) => {\n    let paginatedData = data.slice(rowsConst * (value - 1), rowsConst * value);\n    setPaginatedData(paginatedData);\n    setPage(value);\n  };\n\n  //   const handleInverterUpdate = (row) => {\n  // let userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n\n  //     if (\n  //       (userDetails.role === \"admin\" &&\n  //         (userDetails.email === \"akasmishra@datablare.com\" ||\n  //           userDetails.email === \"veerpratap@acme.in\" ||\n  //           userDetails.email === \"sumit.datablare@gmail.com\")) ||\n  //       userDetails.email === \"acmeace@acme.in\"\n  //     ) {\n  //       // window.alert('The update feature is temporarily disabled.');\n  //       updateInverterScb(row);\n  //     } else {\n  //       window.alert(\"The update is not allowed.\");\n  //     }\n  //   };\n\n  return (\n    <Grid container>\n      <TableContainer component={Paper} style={{ maxWidth: \"89vw\" }}>\n        <Table size=\"small\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow style={{ backgroundColor: \"#ffffbf\" }}>\n              {/* <TableCell style={{ zIndex: 101, color: \"#000\" }}>\n                Action\n              </TableCell> */}\n              {/* <TableCell style={{ color: \"#000\" }}>Id</TableCell> */}\n              <TableCell style={{ color: \"#000\" }}>Site</TableCell>\n              <TableCell style={{ color: \"#000\" }}>From</TableCell>\n              <TableCell style={{ color: \"#000\" }}>To</TableCell>\n\n              <TableCell style={{ color: \"#000\" }}>Status</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Time</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Send/Receive</TableCell>\n\n              {/* {paginatedData.map((row, index) => {\n                return (\n                  <TableCell\n                    style={{ whiteSpace: \"nowrap\", color: \"#000\" }}\n                    key={row}\n                  >\n                    {Object.keys(row)}\n                  </TableCell>\n                );\n              })} */}\n\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Omega Id\n              </TableCell> */}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedData.map((row, index) => {\n              // console.log(row);\n\n              return (\n                <TableRow\n                  key={row.phoneNumber}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  {/* <TableCell style={{ zIndex: 1 }}>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleInverterUpdate(row)}\n                      style={{ paddingInline: \".5rem\" }}\n                    >\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                  </TableCell> */}\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.site == null ? `x` : row.site}\n                  </TableCell>\n                  <TableCell>{row.phonenumber}</TableCell>\n                  <TableCell>{row.message}</TableCell>\n                  <TableCell>{row.status}</TableCell>\n                  <TableCell style={{ whiteSpace: \"nowrap\" }}>\n                    {/* {row.timestamp} */}\n                    {row.timestamp === null\n                      ? `x`\n                      : new Date(Number(row.timestamp * 1000)).toLocaleString()}\n                  </TableCell>\n\n                  <TableCell style={{ whiteSpace: \"nowrap\" }}>\n                    {row.typebox}\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Grid\n        container\n        justify=\"flex-end\"\n        style={{ marginLeft: \"-10rem\", marginTop: \".25rem\" }}\n      >\n        <Grid item>\n          <Pagination\n            count={pageCount}\n            page={page}\n            onChange={handlePageChange}\n            shape=\"rounded\"\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\nimport axios from \"axios\";\n// import { SERVER_URL } from \"../../../constants/constants\";\nimport { SMS_URL } from \"../../../constants/constants\";\nimport { SMS_URL2 } from \"../../../constants/constants\";\n\nimport Button from \"@material-ui/core/Button\";\n// import { Stack } from \"react-bootstrap\";\nimport MessageTable from \"./MessageTable\";\nimport { AppState } from \"../../../AppContext\";\nimport MultiDropdownSingle from \"../../UI/MultiDropdownSingle\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport CustomDropdown from \"../../UI/CustomDropdown\";\nimport { red } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      //   margin: theme.spacing(1),\n      width: \"6rem\",\n      fontSize: 13,\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n\n    // inputRoot: {\n    //   fontSize: 13,\n    // },\n    // labelRoot: {\n    //   fontSize: \"5px\",\n    //   color: \"red\",\n    //   \"&$labelFocused\": {\n    //     color: \"purple\",\n    //     fontSize: \"5px\",\n    //   },\n    // },\n    // labelFocused: { fontSize: \"5px\", color: \"red\" },\n  },\n  textField: {\n    width: 120,\n  },\n}));\n\nconst inboxoutboxValue = [\"Send\", \"Received\", \"Draft\"];\nconst inputTextTypeValue = [\"ACE-CMS:\"];\nconst testModemColor = [\"OK\", \"ERROR\"];\n\nconst FONT_SIZE = 9;\nconst DEFAULT_INPUT_WIDTH = 95;\n\nexport default function Message() {\n  const { setEnabledLinearProgress } = AppState();\n\n  const classes = useStyles();\n  const CHARACTER_LIMIT = 13;\n  const [mobileNo, setMobileNo] = useState(\"\");\n\n  const [inputText, setInputText] = useState(\"\");\n  const [inputTextType, setInputTextType] = useState(\"ACE-CMS:\");\n  const [status, setStatus] = useState(\"\");\n  const [testModem, setTestModem] = useState(\"AT+CMGF=1\");\n\n  const [inboxoutbox, setInboxoutbox] = useState(inboxoutboxValue);\n\n  const [inboxOutboxTable, setInboxOutboxTable] = useState();\n\n  const [waitingStatus, setWaitingStatus] = useState(false);\n\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n\n  const getSites = (sites = siteNamesAndBlocks) => {\n    return sites.map((site) => site.name);\n  };\n\n  const [selectedSites, setSelectedSites] = useState(getSites());\n\n  const [siteOptions, setSiteOptions] = useState(getSites());\n\n  const getFromDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(0, 1, 0, 0);\n    return newDate;\n  };\n\n  const getToDate = (date) => {\n    let newDate = new Date(date.getTime());\n    newDate.setHours(23, 59, 59, 999);\n    return newDate;\n  };\n\n  const [fromDate, setFromDate] = useState(() => {\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    return getFromDate(date);\n  });\n\n  const [toDate, setToDate] = useState(() => {\n    let date = new Date();\n    return getToDate(date);\n  });\n  //   console.log(\n  //     \"--->\",\n  //     \"sites\",\n  //     selectedSites,\n  //     \"timestamp\",\n  //     [\n  //       Number((fromDate.getTime() / 1000).toFixed()),\n  //       Number(toDate.getTime() / 1000).toFixed(),\n  //     ],\n  //     \"list\",\n  //     inboxoutbox\n  //   );\n  const handleFromDateChange = (date) => {\n    setFromDate(getFromDate(date));\n    // fetchPerformance(date.getTime(), toDate.getTime(), selectedSite);\n  };\n\n  const handleToDateChange = (date) => {\n    setToDate(getToDate(date));\n    // fetchPerformance(fromDate.getTime(), date.getTime(), selectedSite);\n  };\n\n  const handleSitesChange = (event) => {\n    const value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setSelectedSites(\n        selectedSites.length === siteOptions.length ? [] : siteOptions\n      );\n      return;\n    }\n\n    setSelectedSites(value);\n  };\n\n  const handleInboxOutbox = (event) => {\n    const value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setInboxoutbox(\n        inboxoutbox.length === inboxoutboxValue.length ? [] : inboxoutboxValue\n      );\n      return;\n    }\n\n    setInboxoutbox(value);\n  };\n\n  //  const [textValue, setTextValue] = useState(\"\");\n  const [inputWidth, setInputWidth] = useState(DEFAULT_INPUT_WIDTH);\n\n  useEffect(() => {\n    if (testModem.length * FONT_SIZE > DEFAULT_INPUT_WIDTH) {\n      setInputWidth((testModem.length - 2) * FONT_SIZE);\n    } else {\n      setInputWidth(DEFAULT_INPUT_WIDTH);\n    }\n  }, [testModem]);\n\n  // console.log(mobileNo, inputText);\n\n  const handleMoblie = (event, key) => {\n    let value = event.target.value;\n    setMobileNo(value);\n  };\n  const handleTextarea = (event, key) => {\n    let value = event.target.value;\n    setInputText(value);\n  };\n\n  const handleinputTextType = (event, key) => {\n    let value = event.target.value;\n    setInputTextType(value);\n  };\n\n  const sendMessage = () => {\n    setEnabledLinearProgress(true);\n    setWaitingStatus(true);\n    // Todo: Make it more secure by using token.\n    // console.log(\"hittttt\", mobileNo, inputText, status);\n    axios\n      .post(SMS_URL + \"/sentsms\", {\n        phone: mobileNo,\n        message: inputTextType + inputText,\n      })\n      .then((response) => {\n        // console.log(\"Send Message Response\", response.data, status);\n        setStatus(response.data.Status);\n        setEnabledLinearProgress(false);\n        setWaitingStatus(false);\n      })\n      .catch((err) => {\n        // console.log(err);\n        setEnabledLinearProgress(false);\n        setWaitingStatus(false);\n      });\n  };\n\n  // useEffect(() => {\n  //   setMobileNo(\"\");\n  //   setInputText(\"\");\n  //   // setStatus(\"Status\");\n  // }, [status]);\n\n  const getOutBoxInbox = () => {\n    setEnabledLinearProgress(true);\n    // Todo: Make it more secure by using token.\n    // console.log(\"Out Box\");\n    axios\n      .post(SMS_URL2 + \"/filter\", {\n        sites: selectedSites,\n        timestamp: [\n          Number((fromDate.getTime() / 1000).toFixed()),\n          Number((toDate.getTime() / 1000).toFixed()),\n        ],\n        // timestamp: [1672309353, 1678631874],\n        list: inboxoutbox,\n      })\n      .then((response) => {\n        // console.log(\"get the Outbox\", response);\n        setInboxOutboxTable(response.data);\n        setEnabledLinearProgress(false);\n      })\n      .catch((err) => {\n        // console.log(err);\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  useEffect(() => {\n    getOutBoxInbox();\n  }, [status]);\n\n  const handleTestmodem = () => {\n    setEnabledLinearProgress(true);\n    // Todo: Make it more secure by using token.\n    // console.log(\"Test Modem\");\n    axios\n      .post(SMS_URL + \"/testmodem\", { atcmd: testModem })\n      .then((response) => {\n        // console.log(\"Test Modem -->\", response);\n        setTestModem(response.data.Status[1]);\n        setEnabledLinearProgress(false);\n      })\n      .catch((err) => {\n        // console.log(err);\n        setEnabledLinearProgress(false);\n      });\n  };\n\n  // const getColor = (row) => {\n  //   const num = row;\n\n  //   // blue\n  //   let color = \"#1976d2\";\n  //   // let color = \"red\";\n\n  //   // red\n  //   if (num === Error) {\n  //     color = \"#d32f2f\";\n  //   }\n\n  //   // green\n  //   if (num === `Ok`) {\n  //     color = \"#4caf50\";\n  //   }\n\n  //   return color;\n  // };\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          {/* <form className={classes.root} noValidate autoComplete=\"off\"> */}\n          <TextField\n            className={classes.root}\n            inputProps={{\n              maxlength: CHARACTER_LIMIT,\n              // style: { fontSize: 13 },\n              classes: { root: classes.inputRoot },\n            }}\n            InputLabelProps={{\n              classes: {\n                root: classes.labelRoot,\n                focused: classes.labelFocused,\n              },\n            }}\n            // inputProps={{ style: { fontSize: 13 } }}\n            autoComplete=\"off\"\n            id=\"standard-basic\"\n            value={mobileNo}\n            // style={{ fontSize: 13 }}\n            label=\"Mobile No\"\n            size=\"small\"\n            onChange={handleMoblie}\n          />\n          {/* </form> */}\n        </Grid>\n        <Grid\n          item\n          style={{\n            marginTop: \"-2.8px\",\n            marginLeft: \"0.5rem\",\n          }}\n        >\n          <CustomDropdown\n            // label=\"Site Email Field\"\n            items={inputTextTypeValue}\n            handleChange={handleinputTextType}\n            selectedItem={inputTextType}\n          />\n        </Grid>\n        <Grid\n          item\n          style={{\n            marginTop: \"1rem\",\n            marginLeft: \"0.5rem\",\n          }}\n        >\n          {/* <Stack\n          direction=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          //   spacing={2}\n        > */}\n          <TextareaAutosize\n            maxLength={160}\n            data-limit-row-len=\"true\"\n            maxRows={4}\n            // inputProps={{ style: { fontSize: 13 } }}\n            style={{\n              fontSize: 13,\n              minHeight: \"1vh\",\n              minWidth: \"20rem\",\n              maxWidth: \"25rem\",\n            }}\n            value={inputText}\n            aria-label=\"empty textarea\"\n            placeholder=\"Type your message here\"\n            onChange={handleTextarea}\n          />\n          {/* </Stack> */}\n        </Grid>\n        <Grid item style={{ marginTop: \"1rem\", marginLeft: \"0.5rem\" }}>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            color=\"primary\"\n            style={{ fontSize: \"11px\" }}\n            onClick={sendMessage}\n            className={classes.button}\n            endIcon={<SendRoundedIcon />}\n          >\n            Send\n          </Button>\n        </Grid>\n        <Grid item style={{ marginTop: \"1.3rem\", marginLeft: \"0.5rem\" }}>\n          {/* <Typography>Status:{status}</Typography> */}\n          <Typography>\n            {waitingStatus ? (\n              <Typography style={{ color: \"#ffc400\" }}>Waiting</Typography>\n            ) : (\n              status\n            )}\n          </Typography>\n          {/* <TextField\n            InputProps={{\n              readOnly: true,\n            }}\n            size=\"small\"\n            variant=\"outlined\"\n            value={status}\n            // style={{ fontSize: \"11px\" }}\n            id=\"standard-read-only-input\"\n            // style={{ width: \"6rem\", minWidth: \"10rem\" }}\n            onChange={(e) => setStatus(e.target.value)}\n            inputProps={{\n              style: {\n                width: `${inputWidth - 15}px`,\n                height: \"0.2rem\",\n                fontSize: 13,\n              },\n            }}\n            // inputProps={{\n            //   style: {\n            //     height: \"0.6rem\",\n            //     // padding: \"0 14px\",\n            //   },\n            // }}\n            // label=\"Read Only\"\n            // defaultValue=\"Status\"\n          /> */}\n        </Grid>\n        <Grid item style={{ marginTop: \"1.25rem\", marginLeft: \"15rem\" }}>\n          <TextField\n            // InputProps={{\n            //   readOnly: true,\n            // }}\n            size=\"small\"\n            variant=\"outlined\"\n            value={testModem}\n            // style={{ fontSize: \"11px\" }}\n            id=\"standard-read-only-input\"\n            // style={{ width: \"6rem\", minWidth: \"10rem\" }}\n            onChange={(e) => setTestModem(e.target.value)}\n            inputProps={{\n              style: {\n                width: `${inputWidth - 15}px`,\n                height: \"0.2rem\",\n                fontSize: 13,\n                color:\n                  testModem === testModemColor[0]\n                    ? \"#4caf50\"\n                    : testModem === testModemColor[1]\n                    ? \"#d32f2f\"\n                    : \"#000\",\n              },\n            }}\n            // inputProps={{\n            //   style: {\n            //     height: \"0.6rem\",\n            //     // padding: \"0 14px\",\n            //   },\n            // }}\n            // label=\"Read Only\"\n            // defaultValue=\"Status\"\n          />\n        </Grid>\n        <Grid item style={{ marginTop: \"1rem\", marginLeft: \"0.5rem\" }}>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            color=\"primary\"\n            style={{ fontSize: \"11px\" }}\n            onClick={handleTestmodem}\n            className={classes.button}\n            // endIcon={<SendRoundedIcon />}\n          >\n            TestModem\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item>\n          <MultiDropdownSingle\n            label=\"Sites\"\n            handleChange={handleSitesChange}\n            items={siteOptions}\n            selectedItems={selectedSites}\n          />\n        </Grid>\n        <Grid item style={{ marginLeft: \"0.5rem\" }}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              autoOk={true}\n              disableToolbar\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              id=\"from-date-picker-inline\"\n              label=\"From\"\n              value={fromDate}\n              onChange={handleFromDateChange}\n              KeyboardButtonProps={{\n                \"aria-labelte\": \"from date\",\n              }}\n              style={{ marginRight: \"0.5rem\" }}\n              className={classes.textField}\n              InputProps={{\n                style: {\n                  fontSize: \".8rem\",\n                },\n              }}\n            />\n\n            <KeyboardDatePicker\n              autoOk={true}\n              disableToolbar\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              id=\"to-date-picker-inline\"\n              label=\"To\"\n              value={toDate}\n              onChange={handleToDateChange}\n              KeyboardButtonProps={{\n                \"aria-label\": \"to date\",\n              }}\n              className={classes.textField}\n              InputProps={{\n                style: {\n                  fontSize: \".8rem\",\n                },\n              }}\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item style={{ marginLeft: \"0.5rem\" }}>\n          <MultiDropdownSingle\n            label=\"Send/Receive\"\n            items={inboxoutboxValue}\n            selectedItems={inboxoutbox}\n            handleChange={handleInboxOutbox}\n          />\n        </Grid>\n        <Grid item style={{ marginTop: \"1rem\", marginLeft: \"0.5rem\" }}>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            color=\"primary\"\n            style={{ fontSize: \"11px\" }}\n            onClick={getOutBoxInbox}\n            className={classes.button}\n            // endIcon={<SendRoundedIcon />}\n          >\n            View\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container style={{ marginTop: \"0.5rem\" }}>\n        <MessageTable data={inboxOutboxTable} />\n      </Grid>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nexport default function AlertadminTable({ data, updateSite }) {\n  const rowsConst = 10;\n\n  const [page, setPage] = useState(0);\n\n  const [pageCount, setPageCount] = useState(0);\n\n  const [paginatedData, setPaginatedData] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      // console.log(data);\n      setPage(() => (data.length > 0 ? 1 : 0));\n      setPageCount(() =>\n        data.length > 0 ? Math.ceil(data.length / rowsConst) : 0\n      );\n      setPaginatedData(() => (data.length > 0 ? data.slice(0, rowsConst) : []));\n    }\n  }, [data]);\n\n  const handlePageChange = (event, value) => {\n    let paginatedData = data.slice(rowsConst * (value - 1), rowsConst * value);\n    setPaginatedData(paginatedData);\n    setPage(value);\n  };\n\n  const handleInverterUpdate = (row) => {\n    let userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n\n    if (\n      userDetails.role === \"admin\" &&\n      (userDetails.email === \"sumit.datablare@gmail.com\" ||\n        userDetails.email === \"veerpratap@acme.in\" ||\n        userDetails.email === \"aman@datablare.com\" ||\n        userDetails.email === \"acmeace@acme.in\")\n    ) {\n      // window.alert('The update feature is temporarily disabled.');\n      updateSite(row);\n    } else {\n      window.alert(\"The update is not allowed.\");\n    }\n  };\n\n  return (\n    <Grid container>\n      <TableContainer component={Paper} style={{ maxWidth: \"91vw\" }}>\n        <Table size=\"small\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow style={{ backgroundColor: \"#ffffbf\" }}>\n              <TableCell style={{ zIndex: 101 }}>Action</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Id</TableCell>\n              <TableCell style={{ color: \"#000\" }}>Site</TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                System Id\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Mob Notification\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Email Notification\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                HO O&M Mob\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                HO O&M Email\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                HO O&M Email Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                IT Mob\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                IT Email\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                IT Email Field\n              </TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Site Mob\n              </TableCell>\n              <TableCell style={{ color: \"#000\" }}>Site Email</TableCell>\n              <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Site Email Field\n              </TableCell>\n              {/* <TableCell style={{ color: \"#000\" }}>HO Contact</TableCell> */}\n              {/* <TableCell style={{ color: \"#000\" }}>Addl. Contact</TableCell> */}\n              {/* <TableCell style={{ color: \"#000\" }}>Time</TableCell> */}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedData.map((row, index) => {\n              return (\n                <TableRow\n                  key={row.id}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell style={{ zIndex: 1 }}>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleInverterUpdate(row)}\n                      style={{ paddingInline: \".5rem\" }}\n                    >\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell>\n                  <TableCell>{row.sitename}</TableCell>\n                  <TableCell style={{ whiteSpace: \"nowrap\" }}>\n                    {row.systemid}\n                  </TableCell>\n                  <TableCell>{row.mobile_notification.join(\",\")}</TableCell>\n                  <TableCell>{row.email_notification.join(\",\")}</TableCell>\n                  <TableCell>{row.ho_om_mob.join(\",\")}</TableCell>\n                  <TableCell>{row.ho_om_email.join(\",\")}</TableCell>\n                  <TableCell>{row.ho_om_email_field.join(\",\")}</TableCell>\n                  <TableCell style={{ whiteSpace: \"nowrap\" }}>\n                    {row.it_mob.join(\",\")}\n                  </TableCell>\n                  <TableCell>{row.it_email.join(\",\")}</TableCell>\n                  <TableCell>{row.email_field_it.join(\",\")}</TableCell>\n                  <TableCell>{row.site_mob.join(\",\")}</TableCell>\n                  <TableCell>{row.site_email.join(\",\")}</TableCell>\n                  <TableCell>{row.site_email_field.join(\",\")}</TableCell>\n                  {/* <TableCell>{row.timestamp}</TableCell> */}\n                  {/* <TableCell>\n                    {row.mob_no && row.mob_no.length > 0\n                      ? row.mob_no.join(\",\")\n                      : \"\"}\n                  </TableCell> */}\n                  {/* <TableCell>{row.ho_coordinator}</TableCell> */}\n                  {/* <TableCell>\n                    {row.emails && row.emails.length > 0\n                      ? row.emails.join(\",\")\n                      : \"\"}\n                  </TableCell> */}\n                  {/* <TableCell>{row.editedby}</TableCell> */}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Grid\n        container\n        justify=\"flex-end\"\n        style={{ marginTop: \".25rem\", marginRight: \"1.2rem\" }}\n      >\n        <Grid item>\n          <Pagination\n            count={pageCount}\n            page={page}\n            onChange={handlePageChange}\n            shape=\"rounded\"\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { Grid, TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { SERVER_URL } from \"../../../constants/constants\";\nimport MultiDropdownSingle from \"../../UI/MultiDropdownSingle\";\nimport SingleDropdown from \"../../Performance/TrendLine/SingleDropdown\";\nimport CustomDropdown from \"../../UI/CustomDropdown\";\nimport Button from \"@material-ui/core/Button\";\nimport AlertadminTable from \"./AlertadminTable\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      //   margin: theme.spacing(1),\n      width: \"6rem\",\n      fontSize: 13,\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n\n    // inputRoot: {\n    //   fontSize: 13,\n    // },\n    // labelRoot: {\n    //   fontSize: \"5px\",\n    //   color: \"red\",\n    //   \"&$labelFocused\": {\n    //     color: \"purple\",\n    //     fontSize: \"5px\",\n    //   },\n    // },\n    // labelFocused: { fontSize: \"5px\", color: \"red\" },\n  },\n  textField: {\n    width: 120,\n  },\n}));\n\nconst smsService = [\"Network\", \"Service\", \"Scb\"];\nconst emailField = [\"To\", \"CC\", \"BCC\"];\n\nexport default function Alertadmin() {\n  const classes = useStyles();\n\n  const siteNamesAndBlocks = JSON.parse(\n    localStorage.getItem(\"siteNamesAndBlocks\")\n  );\n\n  const getSingleSites = (sites = siteNamesAndBlocks) => {\n    const singleSite = sites.map((site) => site.name);\n    return singleSite[0];\n  };\n  const getSites = (sites = siteNamesAndBlocks) => {\n    return sites.map((site) => site.name);\n  };\n\n  const [selectedSites, setSelectedSites] = useState([getSingleSites()]);\n\n  const [siteOptions, setSiteOptions] = useState(getSites());\n\n  const [siteUniqueId, setSiteUniqueId] = useState();\n  const [smsNotification, setSmsNotification] = useState(smsService);\n  const [emailNotification, setEmailNotification] = useState(smsService);\n  const [itMob, setItMob] = useState([]);\n  const [hoMob, setHoMob] = useState([]);\n  const [siteMob, setSiteMob] = useState([]);\n  const [itEmail, setItEmail] = useState([]);\n  const [itEmailField, setItEmailField] = useState([emailField[0]]);\n  const [hoEmail, setHoEmail] = useState([]);\n  const [hoEmailField, setHoEmailField] = useState(emailField[0]);\n  const [siteEmail, setSiteEmail] = useState([]);\n  const [siteEmailField, setSiteEmailField] = useState(emailField[0]);\n  const [tableData, setTableData] = useState();\n\n  //   console.log(smsNotification, itMob);\n\n  const handleSitesChange = (event) => {\n    const value = event.target.value;\n\n    // if (value[value.length - 1] === \"all\") {\n    //   setSelectedSites(\n    //     selectedSites.length === siteOptions.length ? [] : siteOptions\n    //   );\n    //   return;\n    // }\n\n    setSelectedSites(value);\n  };\n\n  const handleSmsService = (event) => {\n    const value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setSmsNotification(\n        smsNotification.length === smsService.length ? [] : smsService\n      );\n      return;\n    }\n\n    setSmsNotification(value);\n  };\n  const handleEmailService = (event) => {\n    const value = event.target.value;\n\n    if (value[value.length - 1] === \"all\") {\n      setEmailNotification(\n        emailNotification.length === smsService.length ? [] : smsService\n      );\n      return;\n    }\n\n    setEmailNotification(value);\n  };\n\n  const handleitMob = (event, key) => {\n    let value = event.target.value;\n    setItMob(value.split(\",\"));\n    // console.log(\"value\", value);\n    // if (key === \"emails\" || key === \"mob_no\") {\n    //   setSelectedSite((prevState) => ({\n    //     ...prevState,\n    //     [key]: String(value).split(\",\"),\n    //   }));\n    // } else {\n    //   setSelectedSite((prevState) => ({ ...prevState, [key]: value }));\n    // }\n  };\n\n  const handlehoMob = (event, key) => {\n    let value = event.target.value;\n    setHoMob(value.split(\",\"));\n  };\n  const handlesiteMob = (event, key) => {\n    let value = event.target.value;\n    setSiteMob(value.split(\",\"));\n  };\n  const handleitEmail = (event, key) => {\n    let value = event.target.value;\n    setItEmail(value.split(\",\"));\n  };\n  const handleitEmailField = (event, key) => {\n    let value = event.target.value;\n    setItEmailField(value);\n  };\n  const handlehoEmail = (event, key) => {\n    let value = event.target.value;\n    setHoEmail(value.split(\",\"));\n  };\n  const handlehoEmailField = (event, key) => {\n    let value = event.target.value;\n    setHoEmailField(value);\n  };\n  const handlesiteEmail = (event, key) => {\n    let value = event.target.value;\n    setSiteEmail(value.split(\",\"));\n  };\n  const handlesiteEmailField = (event, key) => {\n    let value = event.target.value;\n    setSiteEmailField(value);\n  };\n\n  const getAlert = () => {\n    //   setEnabledLinearProgress(true);\n    // Todo: Make it more secure by using token.\n    console.log(\"Get Alert\");\n    axios\n      .post(SERVER_URL + \"/alert/inserts\", {\n        sites: selectedSites,\n        mobileNotification: smsNotification,\n        emailNotification: emailNotification,\n        itMob: itMob,\n        hoMob: hoMob,\n        siteMob: siteMob,\n        itEmail: itEmail,\n        itEmailField: [itEmailField],\n        hoEmail: hoEmail,\n        hoEmailField: [hoEmailField],\n        siteEmail: siteEmail,\n        siteEmailField: [siteEmailField],\n      })\n      .then((response) => {\n        console.log(\"getAlert\", response);\n        // setTableData(response.data);\n        //   setEnabledLinearProgress(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        //   setEnabledLinearProgress(false);\n      });\n  };\n  const getUpdate = () => {\n    //   setEnabledLinearProgress(true);\n    // Todo: Make it more secure by using token.\n    console.log(\"Get Update\");\n    axios\n      .post(SERVER_URL + \"/alert/update\", {\n        uniqueId: siteUniqueId,\n        sites: selectedSites,\n        mobileNotification: smsNotification,\n        emailNotification: emailNotification,\n        itMob: itMob,\n        hoMob: hoMob,\n        siteMob: siteMob,\n        itEmail: itEmail,\n        itEmailField: [itEmailField],\n        hoEmail: hoEmail,\n        hoEmailField: [hoEmailField],\n        siteEmail: siteEmail,\n        siteEmailField: [siteEmailField],\n      })\n      .then((response) => {\n        console.log(\"getUpdate\", response);\n        // setTableData(response.data);\n        //   setEnabledLinearProgress(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        //   setEnabledLinearProgress(false);\n      });\n  };\n  const getAlertTabledata = () => {\n    //   setEnabledLinearProgress(true);\n    // Todo: Make it more secure by using token.\n    console.log(\"Get Alert Table\");\n    axios\n      .get(SERVER_URL + \"/alert\")\n      .then((response) => {\n        console.log(\"getAlert\", response.data);\n        let sortedData = response.data.sort((a, b) =>\n          a.sitename > b.sitename ? 1 : a.sitename < b.sitename ? -1 : 0\n        );\n        setTableData(sortedData);\n        //   setEnabledLinearProgress(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        //   setEnabledLinearProgress(false);\n      });\n  };\n\n  useEffect(() => {\n    getAlertTabledata();\n  }, [selectedSites]);\n\n  const handleEditClick = (row) => {\n    console.log(row);\n    setSiteUniqueId(row.unique_id);\n    setSelectedSites(row.sitename);\n    setSmsNotification(row.mobile_notification);\n    setEmailNotification(row.email_notification);\n    setItMob(row.it_mob);\n    setHoMob(row.ho_om_mob);\n    setSiteMob(row.site_mob);\n    setItEmail(row.it_email);\n    setItEmailField(row.email_field_it);\n    setHoEmail(row.ho_om_email);\n    setHoEmailField(row.ho_om_email_field);\n    setSiteEmail(row.site_email);\n    setSiteEmailField(row.site_email_field);\n\n    // setEditedbyEmail(emaileditedby);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"flex-start\"\n        alignItems=\"flex-start\"\n        spacing={1}\n      >\n        <Grid item xs={2} sm={1} md>\n          <CustomDropdown\n            label=\"Sites\"\n            handleChange={handleSitesChange}\n            items={siteOptions}\n            selectedItem={selectedSites}\n          />\n        </Grid>\n        <Grid item xs={2} sm={1} md>\n          <MultiDropdownSingle\n            label=\"SMS Notification\"\n            items={smsService}\n            selectedItems={smsNotification}\n            handleChange={handleSmsService}\n          />\n        </Grid>\n        <Grid item xs={2} sm={1} md>\n          <MultiDropdownSingle\n            label=\"Email Notification\"\n            items={smsService}\n            selectedItems={emailNotification}\n            handleChange={handleEmailService}\n          />\n        </Grid>\n        <Grid item xs={2} sm={1} md>\n          <TextField\n            className={classes.root}\n            inputProps={{\n              // style: { fontSize: 13 },\n              classes: { root: classes.inputRoot },\n            }}\n            InputLabelProps={{\n              classes: {\n                root: classes.labelRoot,\n                focused: classes.labelFocused,\n              },\n            }}\n            label=\"IT Mob\"\n            // inputProps={{ style: { fontSize: 13 } }}\n            // style={{\n            //   maxWidth: \"6rem\",\n            //   // marginRight: \"0rem\",\n            // }}\n            id=\"it mob\"\n            value={itMob}\n            onChange={handleitMob}\n          />\n        </Grid>\n        <Grid item xs={2} sm={1} md>\n          <TextField\n            className={classes.root}\n            inputProps={{\n              // style: { fontSize: 13 },\n              classes: { root: classes.inputRoot },\n            }}\n            InputLabelProps={{\n              classes: {\n                root: classes.labelRoot,\n                focused: classes.labelFocused,\n              },\n            }}\n            label=\"HO O&M Mob\"\n            id=\"ho mob\"\n            value={hoMob}\n            onChange={handlehoMob}\n          />\n        </Grid>\n        <Grid item xs={2} sm={1} md>\n          <TextField\n            className={classes.root}\n            inputProps={{\n              // style: { fontSize: 13 },\n              classes: { root: classes.inputRoot },\n            }}\n            InputLabelProps={{\n              classes: {\n                root: classes.labelRoot,\n                focused: classes.labelFocused,\n              },\n            }}\n            label=\"Site Mob\"\n            id=\"site mob\"\n            value={siteMob}\n            onChange={handlesiteMob}\n          />\n        </Grid>\n        <Grid item xs={2} sm={1} md>\n          <TextField\n            className={classes.root}\n            inputProps={{\n              // style: { fontSize: 13 },\n              classes: { root: classes.inputRoot },\n            }}\n            InputLabelProps={{\n              classes: {\n                root: classes.labelRoot,\n                focused: classes.labelFocused,\n              },\n            }}\n            label=\"IT Email\"\n            id=\"it email\"\n            value={itEmail}\n            onChange={handleitEmail}\n          />\n        </Grid>\n        <Grid item xs={2} sm={1} md>\n          <CustomDropdown\n            label=\"IT Email Field\"\n            items={emailField}\n            handleChange={handleitEmailField}\n            selectedItem={itEmailField}\n          />\n        </Grid>\n        <Grid item xs sm md>\n          <TextField\n            className={classes.root}\n            inputProps={{\n              // style: { fontSize: 13 },\n              classes: { root: classes.inputRoot },\n            }}\n            InputLabelProps={{\n              classes: {\n                root: classes.labelRoot,\n                focused: classes.labelFocused,\n              },\n            }}\n            label=\"HO O&M Email\"\n            id=\"ho email\"\n            value={hoEmail}\n            onChange={handlehoEmail}\n          />\n        </Grid>\n        <Grid item xs sm md>\n          <CustomDropdown\n            label=\"HO O&M Email Field\"\n            items={emailField}\n            handleChange={handlehoEmailField}\n            selectedItem={hoEmailField}\n          />\n        </Grid>\n        <Grid item>\n          <TextField\n            className={classes.root}\n            inputProps={{\n              // style: { fontSize: 13 },\n              classes: { root: classes.inputRoot },\n            }}\n            InputLabelProps={{\n              classes: {\n                root: classes.labelRoot,\n                focused: classes.labelFocused,\n              },\n            }}\n            label=\"Site Email\"\n            id=\"site email\"\n            value={siteEmail}\n            onChange={handlesiteEmail}\n          />\n        </Grid>\n        <Grid item>\n          <CustomDropdown\n            label=\"Site Email Field\"\n            items={emailField}\n            handleChange={handlesiteEmailField}\n            selectedItem={siteEmailField}\n          />\n        </Grid>\n        <Grid item style={{ marginTop: \"1rem\" }}>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            color=\"primary\"\n            style={{ fontSize: \"11px\" }}\n            onClick={getAlert}\n            className={classes.button}\n            // endIcon={<SendRoundedIcon />}\n          >\n            Create\n          </Button>\n        </Grid>\n        <Grid item style={{ marginTop: \"1rem\" }}>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            color=\"primary\"\n            style={{ fontSize: \"11px\" }}\n            onClick={getUpdate}\n            className={classes.button}\n            // endIcon={<SendRoundedIcon />}\n          >\n            Update\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container style={{ marginTop: \".5rem\", paddingRight: \"1rem\" }}>\n        <AlertadminTable data={tableData} updateSite={handleEditClick} />\n      </Grid>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport SiteRanking from \"../components/Performance/SiteRanking\";\nimport DataAvailability from \"../components/Admin/DataAvailability\";\nimport NewUser from \"../components/Admin/CreateUser/NewUser\";\nimport ManageUsers from \"../components/Admin/Users/ManageUsers\";\nimport ManageUser from \"../components/Admin/Users/ManageUser\";\nimport ManageInverters from \"../components/Admin/ManageInverters/ManageInverters\";\nimport ManageSites from \"../components/Admin/ManageSites/ManageSites\";\nimport Logs from \"../components/Admin/Logs/Logs\";\nimport SLD from \"../components/Admin/SLD/SLD\";\nimport RemoteConfig from \"../components/Admin/RemoteConfig/RemoteConfig\";\nimport Replication from \"../components/Admin/Replication/Replication\";\nimport ManageInvScb from \"../components/Admin/ManageInvScb/ManageInvScb\";\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Message from \"../components/Admin/MessageFeat/Message\";\nimport Alertadmin from \"../components/Admin/Alertadmin/Alertadmin\";\n\nconst useStyles = makeStyles({\n  tabs: {\n    \"& .MuiTabs-indicator\": {\n      // backgroundColor: \"orange\",\n      // height: 3,\n    },\n    \"& .MuiTab-root.Mui-selected\": {\n      color: \"#148F77\",\n    },\n  },\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        // <Box sx={{ p: 1 }}>\n        <Box sx={{ paddingTop: 1 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scb-tab-${index}`,\n    \"aria-controls\": `scb-tabpanel-${index}`,\n  };\n}\n\nexport default function Analytics({\n  updateInverter,\n  updateInverterScb,\n  refreshInverterTable,\n  updateSite,\n  refreshSiteEditTable,\n  handleSessionExpire,\n}) {\n  const [value, setValue] = React.useState(0);\n  const classes = useStyles();\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box>\n      <Tabs\n        value={value}\n        className={classes.tabs}\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        style={{ color: \"#000000\", width: \"76rem\", marginLeft: \"-1rem\" }}\n        TabIndicatorProps={{\n          style: { background: \"#148F77\" },\n        }}\n        // textColor=\"#148F77\"\n        onChange={handleChange}\n        aria-label=\"analytics tabs\"\n        // indicatorColor=\"#148F77\"\n      >\n        <Tab label=\"Sites\" {...a11yProps(0)} />\n        <Tab label=\"Inverters\" {...a11yProps(1)} />\n        <Tab label=\"Inv-Scb\" {...a11yProps(2)} />\n        <Tab label=\"Users\" {...a11yProps(3)} />\n        <Tab label=\"Data Availability\" {...a11yProps(4)} />\n\n        <Tab label=\"Logs\" {...a11yProps(5)} />\n        <Tab label=\"Remote Config\" {...a11yProps(6)} />\n        <Tab label=\"SLD\" {...a11yProps(7)} />\n        <Tab label=\"Replication\" {...a11yProps(8)} />\n        {/* <Tab label=\"SMS\" {...a11yProps(9)} />\n        <Tab label=\"Alert\" {...a11yProps(10)} /> */}\n      </Tabs>\n\n      <TabPanel value={value} index={0} style={{ paddingTop: \"0.5rem\" }}>\n        <ManageSites\n          updateSite={updateSite}\n          refreshSiteEditTable={refreshSiteEditTable}\n        />\n      </TabPanel>\n      <TabPanel value={value} index={1} style={{ paddingTop: \"0.5rem\" }}>\n        <ManageInverters\n          updateInverter={updateInverter}\n          refreshInverterTable={refreshInverterTable}\n        />\n      </TabPanel>\n      <TabPanel value={value} index={2} style={{ paddingTop: \"0.5rem\" }}>\n        <ManageInvScb\n          updateInverterScb={updateInverterScb}\n          refreshInverterTable={refreshInverterTable}\n        />\n      </TabPanel>\n      <TabPanel value={value} index={3} style={{ paddingTop: \"0.5rem\" }}>\n        <ManageUser />\n      </TabPanel>\n      <TabPanel value={value} index={4} style={{ paddingTop: \"0.5rem\" }}>\n        <DataAvailability handleSessionExpire={handleSessionExpire} />\n      </TabPanel>\n\n      <TabPanel value={value} index={5} style={{ paddingTop: \"0.5rem\" }}>\n        <Logs />\n      </TabPanel>\n      <TabPanel value={value} index={6} style={{ paddingTop: \"0.5rem\" }}>\n        <RemoteConfig />\n      </TabPanel>\n      <TabPanel value={value} index={7} style={{ paddingTop: \"0.5rem\" }}>\n        <SLD />\n      </TabPanel>\n      <TabPanel value={value} index={8} style={{ paddingTop: \"0.5rem\" }}>\n        <Replication />\n      </TabPanel>\n      {/* <TabPanel value={value} index={9} style={{ paddingTop: \"0.5rem\" }}>\n        <Message />\n      </TabPanel>\n      <TabPanel value={value} index={10} style={{ paddingTop: \"0.5rem\" }}>\n        <Alertadmin />\n      </TabPanel> */}\n    </Box>\n  );\n}\n","import { Card, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Bar, BarChart, CartesianGrid, Cell, XAxis, YAxis } from \"recharts\";\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    const labelStr = String(label);\n    return (\n      <div style={{ color: \"#009688\" }}>\n        {labelStr.split(\" \")[0]}: {payload[0].value}\n        {label === \"Humidity\" ? \"%\" : \"°C\"}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst CustomizedLabel = ({ x, y, fill, value, index }) => {\n  return (\n    <text\n      x={x}\n      y={y}\n      dx=\"10\"\n      dy=\"-10\"\n      fontSize=\"10\"\n      fontFamily=\"sans-serif\"\n      fill={fill}\n      textAnchor=\"middle\"\n    >\n      {value}\n      {index >= 10 ? \"%\" : \"°C\"}\n    </text>\n  );\n};\n\nexport default function AmbientModuleTemp({\n  ambientTemp,\n  moduleTemp,\n  humidity,\n  ambientTemp2,\n  moduleTemp2,\n  humidity2,\n  temperatureData,\n}) {\n  const data = [\n    {\n      name: \"Amb 1\",\n      value:\n        Number(temperatureData.ambienttemp1) &&\n        Number(temperatureData.ambienttemp1) !== -111\n          ? Number(temperatureData.ambienttemp1).toFixed(1)\n          : 0,\n    },\n    {\n      name: \"Amb 2\",\n      value:\n        Number(temperatureData.ambienttemp2) &&\n        Number(temperatureData.ambienttemp2) !== -111\n          ? Number(temperatureData.ambienttemp2).toFixed(1)\n          : 0,\n    },\n    {\n      name: \"Amb 3\",\n      value:\n        Number(temperatureData.ambienttemp3) &&\n        Number(temperatureData.ambienttemp3) !== -111\n          ? Number(temperatureData.ambienttemp3).toFixed(1)\n          : 0,\n    },\n    {\n      name: \"Amb 4\",\n      value:\n        Number(temperatureData.ambienttemp4) &&\n        Number(temperatureData.ambienttemp4) !== -111\n          ? Number(temperatureData.ambienttemp4).toFixed(1)\n          : 0,\n    },\n    {\n      name: \"Amb 5\",\n      value:\n        Number(temperatureData.ambienttemp5) &&\n        Number(temperatureData.ambienttemp5) !== -111\n          ? Number(temperatureData.ambienttemp5).toFixed(1)\n          : 0,\n    },\n    {\n      name: \"Mod 1\",\n      value:\n        Number(temperatureData.moduletemp1) &&\n        Number(temperatureData.moduletemp1) !== -111\n          ? Number(temperatureData.moduletemp1).toFixed(1)\n          : 0,\n    },\n    {\n      name: \"Mod 2\",\n      value:\n        Number(temperatureData.moduletemp2) &&\n        Number(temperatureData.moduletemp2) !== -111\n          ? Number(temperatureData.moduletemp2).toFixed(1)\n          : 0,\n    },\n    {\n      name: \"Mod 3\",\n      value:\n        Number(temperatureData.moduletemp3) &&\n        Number(temperatureData.moduletemp3) !== -111\n          ? Number(temperatureData.moduletemp3).toFixed(1)\n          : 0,\n    },\n    {\n      name: \"Mod 4\",\n      value:\n        Number(temperatureData.moduletemp4) &&\n        Number(temperatureData.moduletemp4) !== -111\n          ? Number(temperatureData.moduletemp4).toFixed(1)\n          : 0,\n    },\n    {\n      name: \"Mod 5\",\n      value:\n        Number(temperatureData.moduletemp5) &&\n        Number(temperatureData.moduletemp5) !== -111\n          ? Number(temperatureData.moduletemp5).toFixed(1)\n          : 0,\n    },\n    {\n      name: \"Hum 1\",\n      value:\n        Number(temperatureData.humidity1) &&\n        Number(temperatureData.humidity) !== -111\n          ? Number(temperatureData.humidity1).toFixed(1)\n          : 0,\n    },\n    {\n      name: \"Hum 2\",\n      value:\n        Number(temperatureData.humidity2) &&\n        Number(temperatureData.humidity2) !== -111\n          ? Number(temperatureData.humidity2).toFixed(1)\n          : 0,\n    },\n    {\n      name: \"Hum 3\",\n      value:\n        Number(temperatureData.humidity3) &&\n        Number(temperatureData.humidity3) !== -111\n          ? Number(temperatureData.humidity3).toFixed(1)\n          : 0,\n    },\n    {\n      name: \"Hum 4\",\n      value:\n        Number(temperatureData.humidity4) &&\n        Number(temperatureData.humidity4) !== -111\n          ? Number(temperatureData.humidity4).toFixed(1)\n          : 0,\n    },\n    {\n      name: \"Hum 5\",\n      value:\n        Number(temperatureData.humidity5) &&\n        Number(temperatureData.humidity5) !== -111\n          ? Number(temperatureData.humidity5).toFixed(1)\n          : 0,\n    },\n  ];\n  return (\n    <Card\n      elevation={6}\n      style={{\n        // height: '310px',\n        paddingTop: \".5rem\",\n        paddingBottom: \".5rem\",\n        paddingLeft: \"0rem\",\n        paddingRight: \"0rem\",\n        height: 255,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        // justifyContent: \"center\",\n      }}\n    >\n      <Typography>Temperatures {\" and \"} Humidity</Typography>\n      <BarChart\n        width={800}\n        height={200}\n        data={data}\n        margin={{\n          //   top: 5,\n          right: 50,\n          //   left: 1,\n          bottom: 15,\n        }}\n        barSize={20}\n      >\n        <XAxis\n          dataKey=\"name\"\n          scale=\"point\"\n          padding={{ left: 20 }}\n          angle={315}\n          tickMargin={15}\n          // tick={{ fontSize: 10 }}\n        />\n        <YAxis domain={[0, 100]} />\n        {/* <Tooltip /> */}\n\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <Bar\n          isAnimationActive={false}\n          dataKey=\"value\"\n          fill=\"#8884d8\"\n          background={{ fill: \"#eee\" }}\n          label={<CustomizedLabel />}\n          //   label={{ position: \"top\" }}\n        >\n          {/* <LabelList dataKey='name' content={renderCustomizedLabel} /> */}\n          {data.map((entry, index) => {\n            if (index < 5) {\n              return (\n                <Cell cursor=\"pointer\" fill=\"#42a5f5\" key={`cell-${index}`} />\n              );\n            } else if (index >= 5 && index < 10) {\n              return (\n                <Cell cursor=\"pointer\" fill=\"#82ca9d\" key={`cell-${index}`} />\n              );\n            } else {\n              return (\n                <Cell cursor=\"pointer\" fill=\"#8884d8\" key={`cell-${index}`} />\n              );\n            }\n          })}\n        </Bar>\n      </BarChart>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nexport default function BiaxialLineChart({\n  data,\n  interval,\n  width,\n  height,\n  leftAxisY,\n  rightAxisY,\n}) {\n  // console.log(\"Biaxial line data\", data);\n  const [opacity, setOpacity] = useState({\n    ghi1: 1,\n    ghi2: 1,\n    ghi3: 1,\n    ghi4: 1,\n    ghi5: 1,\n    gti1: 1,\n    gti2: 1,\n    gti3: 1,\n    gti4: 1,\n    gti5: 1,\n    pg: 1,\n  });\n\n  const selectLine = (dataKey) => {\n    setOpacity((prevState) => {\n      return { ...prevState, [dataKey]: prevState[dataKey] === 0 ? 1 : 0 };\n    });\n  };\n\n  const renderLegend = (props) => {\n    const { payload } = props;\n\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\" }}>\n        {payload.map((entry, index) => {\n          // <li key={`item-${index}`}>{entry.value}</li>\n\n          return (\n            <strong\n              key={entry.value}\n              style={{\n                fontSize: \"1rem\",\n                color: entry.color,\n                cursor: \"pointer\",\n                opacity: opacity[entry.dataKey] === 0 ? 0.5 : 1,\n              }}\n              onClick={() => selectLine(entry.dataKey)}\n            >\n              {String(entry.value).toUpperCase()}\n            </strong>\n          );\n        })}\n      </div>\n    );\n  };\n\n  // const renderLegend = ({ payload }) => {\n  //   return (\n  //     <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\" }}>\n  //       {payload.map(({ dataKey, color }) => {\n  //         return (\n  //           <strong\n  //             key={dataKey}\n  //             style={{\n  //               fontSize: \"1rem\",\n  //               color: color,\n  //               cursor: \"pointer\",\n  //               opacity: opacity[dataKey] === 0 ? 0.5 : 1,\n  //             }}\n  //             onClick={() => selectLine(dataKey)}\n  //           >\n  //             {String(dataKey.value).toUpperCase()}\n  //           </strong>\n  //         );\n  //       })}\n  //     </div>\n  //   );\n  // };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"83%\">\n      <LineChart\n        // width={width}\n        // height={height}\n        data={data}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"time\" interval={interval} />\n        <YAxis yAxisId=\"left\" domain={leftAxisY} />\n        <YAxis yAxisId=\"right\" domain={rightAxisY} orientation=\"right\" />\n        <Tooltip />\n        <Legend content={renderLegend} />\n        <Line\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey=\"ghi1\"\n          // stroke=\"#3498DB\"\n          stroke=\"#5499C7\"\n          strokeWidth={2}\n          strokeOpacity={opacity.ghi1}\n          activeDot={{ r: 6 }}\n          dot={false}\n          name=\"GHI 1\"\n        />\n        <Line\n          name=\"GHI 2\"\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey=\"ghi2\"\n          // stroke=\"#F5B041\"\n          stroke=\"#AF7AC5\"\n          strokeWidth={2}\n          strokeOpacity={opacity.ghi2}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n        <Line\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey=\"ghi3\"\n          // stroke=\"#3498DB\"\n          stroke=\"#5499C7\"\n          strokeWidth={2}\n          strokeOpacity={opacity.ghi3}\n          activeDot={{ r: 6 }}\n          dot={false}\n          name=\"GHI 3\"\n        />\n        {data.ghi4 && (\n          <Line\n            name=\"GHI 4\"\n            yAxisId=\"left\"\n            type=\"monotone\"\n            dataKey=\"ghi4\"\n            // stroke=\"#F5B041\"\n            stroke=\"#AF7AC5\"\n            strokeWidth={2}\n            strokeOpacity={opacity.ghi4}\n            activeDot={{ r: 6 }}\n            dot={false}\n          />\n        )}\n        {data.ghi5 && (\n          <Line\n            yAxisId=\"left\"\n            type=\"monotone\"\n            dataKey=\"ghi5\"\n            // stroke=\"#3498DB\"\n            stroke=\"#5499C7\"\n            strokeWidth={2}\n            strokeOpacity={opacity.ghi5}\n            activeDot={{ r: 6 }}\n            dot={false}\n            name=\"GHI 5\"\n          />\n        )}\n\n        <Line\n          name=\"GTI 1\"\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey=\"gti1\"\n          // stroke=\"#AF7AC5\"\n          stroke=\"#F5B041\"\n          strokeWidth={2}\n          strokeOpacity={opacity.gti1}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n        <Line\n          name=\"GTI 2\"\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey=\"gti2\"\n          stroke=\"#E67E22\"\n          strokeWidth={2}\n          strokeOpacity={opacity.gti2}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n        <Line\n          name=\"GTI 3\"\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey=\"gti3\"\n          // stroke=\"#AF7AC5\"\n          stroke=\"#F5B041\"\n          strokeWidth={2}\n          strokeOpacity={opacity.gti3}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n        <Line\n          name=\"GTI 4\"\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey=\"gti4\"\n          stroke=\"#E67E22\"\n          strokeWidth={2}\n          strokeOpacity={opacity.gti4}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n        <Line\n          name=\"GTI 5\"\n          yAxisId=\"left\"\n          type=\"monotone\"\n          dataKey=\"gti5\"\n          // stroke=\"#AF7AC5\"\n          stroke=\"#F5B041\"\n          strokeWidth={2}\n          strokeOpacity={opacity.gti5}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n        <Line\n          name=\"PG\"\n          yAxisId=\"right\"\n          type=\"monotone\"\n          dataKey=\"pg\"\n          stroke=\"#82ca9d\"\n          strokeWidth={2}\n          strokeOpacity={opacity.pg}\n          activeDot={{ r: 6 }}\n          dot={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useEffect, useState } from \"react\";\nimport { inverters } from \"../../constants/csvParameters\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#ffffbf\",\n    color: theme.palette.common.black,\n    fontSize: 16,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    maxHeight: \"80vh\",\n    maxWidth: \"90vw\",\n  },\n});\n\nconst CustomizedSubRow = ({ value, inverters }) => {\n  let rowBackgroundColor = null;\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          backgroundColor: rowBackgroundColor,\n        }}\n      >\n        <strong\n          style={{\n            paddingLeft: \"2.5rem\",\n          }}\n        >\n          {value.heading}\n        </strong>\n      </StyledTableCell>\n      {Array.from(Array(inverters).keys()).map((element, index) => {\n        return (\n          <StyledTableCell\n            align=\"center\"\n            style={{ backgroundColor: rowBackgroundColor }}\n          >\n            <span>\n              {isNaN(Number(value[\"inv\" + Number(index + 1)]))\n                ? \"-\"\n                : Number(value[\"inv\" + Number(index + 1)]) === -111\n                ? \"X\"\n                : Number(value[\"inv\" + Number(index + 1)]).toFixed(2)}\n            </span>\n          </StyledTableCell>\n        );\n      })}\n    </StyledTableRow>\n  );\n};\n\nconst CustomizedRow = ({ value, inverters }) => {\n  // console.log(inverters);\n  return (\n    <StyledTableRow>\n      <StyledTableCell\n        component=\"th\"\n        scope=\"row\"\n        style={{\n          paddingTop: \".6rem\",\n          paddingBottom: \".6rem\",\n          position: \"sticky\",\n          left: 0,\n          backgroundColor: \"white\",\n          minWidth: \"300px\",\n        }}\n      >\n        <strong style={{ paddingLeft: \"1rem\" }}>{value.heading}</strong>\n      </StyledTableCell>\n\n      {Array.from(Array(inverters).keys()).map((element, index) => {\n        return (\n          <StyledTableCell align=\"center\">\n            {isNaN(Number(value[\"inv\" + Number(index + 1)]))\n              ? \"-\"\n              : Number(value[\"inv\" + Number(index + 1)]) === -111\n              ? \"X\"\n              : Number(value[\"inv\" + Number(index + 1)]).toFixed(2)}\n          </StyledTableCell>\n        );\n      })}\n    </StyledTableRow>\n  );\n};\n\nexport default function InverterTable({ values, block }) {\n  // console.log(\"Inverter table values\", values);\n  const classes = useStyles();\n\n  const [tableRows, setTableRows] = useState([]);\n\n  const [openRowsS, setOpenRowsS] = React.useState(false);\n  const [openRowsPV, setopenRowsPV] = React.useState(false);\n\n  const [inverters, setInverters] = useState(4);\n\n  // useEffect(() => {\n  //   // console.log(inverters);\n  //   setInverters(4);\n  // }, [block]);\n\n  const onRowDropDownClick = (tag) => {\n    if (tag === \"S\") {\n      setOpenRowsS((prevState) => {\n        return !prevState;\n      });\n    } else {\n      setopenRowsPV((prevState) => {\n        return !prevState;\n      });\n    }\n  };\n\n  const CustomizedRowGroup = ({ title, tag, openRows }) => {\n    let rowBackgroundColor = \"#EBF5FB\";\n    return (\n      <StyledTableRow>\n        <StyledTableCell\n          component=\"th\"\n          scope=\"row\"\n          colSpan={37}\n          style={{\n            // paddingTop: \".6rem\",\n            // paddingBottom: \".6rem\",\n            backgroundColor: rowBackgroundColor,\n          }}\n        >\n          <strong\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \".5rem\",\n              color: \"#000\",\n            }}\n          >\n            {title}\n          </strong>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => onRowDropDownClick(tag)}\n            style={{ color: \"#000\" }}\n          >\n            {openRows ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </StyledTableCell>\n      </StyledTableRow>\n    );\n  };\n\n  useEffect(() => {\n    let subRowsS = [];\n    let subRowsPV = [];\n\n    let otherRows = [];\n\n    let firstIndexRowS = null;\n    let lastIndexRowS = null;\n\n    let firstIndexRowPV = null;\n    let lastIndexRowPV = null;\n\n    for (let i = 0; i < values.length; i++) {\n      if (values[i].heading.match(/S[1-4] [^/]/i)) {\n        if (!firstIndexRowS) {\n          firstIndexRowS = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Slots\"}\n              tag={\"S\"}\n              openRows={openRowsS}\n            />\n          );\n        }\n        lastIndexRowS = i;\n        subRowsS.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            inverters={inverters}\n          />\n        );\n      } else if (\n        values[i].heading.match(/[S]3[0-4]|2[0-9]|1[0-9]|[1-9] [/] S[1-4]CB/i)\n      ) {\n        if (!firstIndexRowPV) {\n          firstIndexRowPV = i;\n          otherRows.push(\n            <CustomizedRowGroup\n              key={i}\n              title={\"Inverter Strings\"}\n              tag={\"PV\"}\n              openRows={openRowsPV}\n            />\n          );\n        }\n        lastIndexRowPV = i;\n        subRowsPV.push(\n          <CustomizedSubRow\n            key={values[i].heading}\n            value={values[i]}\n            inverters={inverters}\n          />\n        );\n      } else {\n        otherRows.push(\n          <CustomizedRow key={i} value={values[i]} inverters={inverters} />\n        );\n      }\n    }\n\n    let newRows = [...otherRows];\n\n    if (openRowsS && openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n      newRows = [...newRows, subRowsPV];\n    } else if (openRowsS && !openRowsPV) {\n      newRows.splice(firstIndexRowS + 1, 0, ...subRowsS);\n    } else if (!openRowsS && openRowsPV) {\n      newRows = [...newRows, subRowsPV];\n    } else {\n      newRows = [...otherRows];\n    }\n\n    setTableRows(newRows);\n  }, [values, openRowsS, openRowsPV]);\n\n  return (\n    <TableContainer\n      component={Paper}\n      elevation={6}\n      className={classes.tableContainer}\n    >\n      <Table stickyHeader={true} aria-label=\"customized table\" size=\"small\">\n        <TableHead>\n          <TableRow\n          // style={{\n          //   position: \"sticky\",\n          //   left: 0,\n          // }}\n          >\n            <StyledTableCell\n              style={{\n                paddingTop: \".7rem\",\n                paddingLeft: \"1.75rem\",\n                paddingBottom: \".7rem\",\n                zIndex: 101,\n              }}\n            >\n              <strong>Parameters</strong>\n            </StyledTableCell>\n\n            {Array.from(Array(inverters).keys()).map((element, index) => {\n              return (\n                <StyledTableCell\n                  align=\"center\"\n                  // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n                  style={{ minWidth: \"100px\" }}\n                >\n                  <strong>Inv {index + 1}</strong>\n                </StyledTableCell>\n              );\n            })}\n            {/* <StyledTableCell\n              align=\"center\"\n              // style={{ paddingTop: \".5rem\", paddingBottom: \".5rem\" }}\n            >\n              <strong>Inv 2</strong>\n            </StyledTableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{tableRows}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { Card, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function CustomCard2({\n  firstTitle,\n  secondTitle,\n  firstValue,\n  secondValue,\n  imagePath,\n  imageHeight,\n}) {\n  return (\n    <Card elevation={4} style={{ height: \"80px\" }}>\n      <Grid\n        container\n        alignItems=\"center\"\n        style={{\n          padding: \"1rem 2rem 1rem 1rem\",\n        }}\n      >\n        <img\n          src={imagePath}\n          alt={imagePath}\n          style={{ height: imageHeight, marginRight: \"1rem\" }}\n        />\n        <Grid item>\n          <Grid container>\n            <Grid item xs={5}>\n              <Typography>{firstTitle}</Typography>\n            </Grid>\n            <Grid item xs={2} />\n            <Grid item xs={5} style={{ paddingLeft: \".25rem\" }}>\n              <Typography>{secondTitle}</Typography>\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item xs={5}>\n              <Typography color=\"primary\">{firstValue}</Typography>\n            </Grid>\n            <Grid item xs={2} />\n            <Grid item xs={5} style={{ paddingLeft: \".25rem\" }}>\n              <Typography color=\"primary\">{secondValue}</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n","import { Card, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function GhiGtiCard({ elements, imagePath, imageHeight }) {\n  return (\n    <Card\n      elevation={4}\n      style={{\n        width: \"100%\",\n        paddingInline: \"1rem\",\n        paddingBlock: \".7rem\",\n      }}\n    >\n      <Grid\n        container\n        alignItems=\"center\"\n        style={{ height: \"100%\", width: \"100%\" }}\n      >\n        <Grid item>\n          <img\n            src={imagePath}\n            alt={imagePath}\n            style={{ height: imageHeight }}\n          />\n        </Grid>\n        <Grid item xs style={{ marginLeft: \"1.5rem\" }}>\n          <Grid container justifyContent=\"space-between\">\n            {elements.map((element) => {\n              const ghiTitle = element[\"ghiTitle\"];\n              const gtiTitle = element[\"gtiTitle\"];\n              const ghiValue = element[\"ghiValue\"];\n              const gtiValue = element[\"gtiValue\"];\n              const ghiLocation = element[\"ghiLocation\"];\n              const gtiLocation = element[\"gtiLocation\"];\n              return (\n                <Grid item>\n                  <Grid container style={{ textAlign: \"center\" }}>\n                    <Grid item xs={6}>\n                      <Typography variant=\"body2\">{ghiTitle}</Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography variant=\"body2\">{gtiTitle}</Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography color=\"primary\" variant=\"body2\">\n                        {ghiValue}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography color=\"primary\" variant=\"body2\">\n                        {gtiValue}\n                      </Typography>\n                    </Grid>\n                    {/* <Grid item xs={12}>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {ghiLocation}\n                      </Typography>\n                    </Grid> */}\n                    <Grid item xs={12}>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {gtiLocation}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n","import { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport CustomCard from \"../CustomCard\";\nimport CustomCard2 from \"./CustomCard2\";\nimport CustomCard2b from \"./CustomCard2b\";\nimport GhiGtiCard from \"./GhiGtiCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  // cardGridContainerStyle: {\n  //   marginTop: theme.spacing(3.5),\n  // },\n}));\n\nconst getValue = (value) => {\n  if (value === undefined || value === null) {\n    return \"-\";\n  }\n\n  if (value === \"-111\") {\n    return \"x\";\n  } else {\n    return Number(value).toFixed(2);\n  }\n};\n\nconst getLocationValue = (value) => {\n  if (value === undefined || value === null) {\n    return \"-\";\n  }\n\n  if (value === \"-111\") {\n    return \"x\";\n  } else {\n    return value;\n  }\n};\n\nexport default function CustomCards({\n  day_generation = 0,\n  revenue = 0,\n  peak_power = 0,\n  ghi,\n  gti,\n  ghi2,\n  gti2,\n  ghi3,\n  gti3,\n  ghi4,\n  gti4,\n  ghi5,\n  gti5,\n  plant_pr = 0,\n  grid_availability = 0,\n  plant_availability = 0,\n  cardsValues,\n}) {\n  const classes = useStyles();\n\n  const getFormattedRevenue = (revenue) => {\n    if (isNaN(revenue)) {\n      return \"x\";\n    }\n    const revenueNum = Number(revenue).toFixed(0);\n    if (revenueNum < 0) {\n      return \"0\";\n    }\n    const revenueStr = revenueNum;\n    let lastThree = revenueStr.substring(revenueStr.length - 3);\n    let otherNumbers = revenueStr.substring(0, revenueStr.length - 3);\n    if (otherNumbers !== \"\") {\n      lastThree = \",\" + lastThree;\n    }\n    let res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\n    return res;\n  };\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        style={{ marginTop: \"0rem\" }}\n        justifyContent=\"space-between\"\n        // className={customCardsStyle.materialGrid}\n        // spacing={3}\n      >\n        <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/powerGeneration.png\"\n            imageHeight={48}\n            title=\"Generation\"\n            value={\n              Number(day_generation) === -111 ? (\n                \"x\"\n              ) : (\n                <span>\n                  {Number(day_generation).toFixed(2)}&nbsp;<small>MWH</small>\n                </span>\n              )\n            }\n          />\n        </Grid>\n        <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/revenue.png\"\n            imageHeight={42}\n            title=\"Revenue\"\n            value={<span>{getFormattedRevenue(revenue)}</span>}\n          />\n        </Grid>\n        <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/peakPower.png\"\n            imageHeight={45}\n            title=\"Peak Power\"\n            value={\n              Number(peak_power) === -111 || isNaN(Number(peak_power)) ? (\n                \"x\"\n              ) : (\n                <span>\n                  {Number(peak_power).toFixed(2)}&nbsp;<small>MW</small>\n                </span>\n              )\n            }\n          />\n        </Grid>\n        {/* <Grid item>\n          <CustomCard2b\n            imagePath=\"/static/images/ray.png\"\n            imageHeight={50}\n            firstTitle=\"GHI\"\n            secondTitle=\"GTI\"\n            firstValue={Number(ghi) === -111 ? \"x\" : Number(ghi).toFixed(2)}\n            secondValue={Number(gti) === -111 ? \"x\" : Number(gti).toFixed(2)}\n            ghi2={Number(ghi2) === -111 ? \"x\" : Number(ghi2).toFixed(2)}\n            gti2={Number(gti2) === -111 ? \"x\" : Number(gti2).toFixed(2)}\n          />\n        </Grid> */}\n        {/* <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/peakPower.png\"\n            imageHeight={54}\n            title=\"Two\"\n            value={\n              <span>\n                {Number(peak_power).toFixed(2)}&nbsp;<small>MW</small>\n              </span>\n            }\n          />\n        </Grid>\n        <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/peakPower.png\"\n            imageHeight={54}\n            title=\"Three\"\n            value={\n              <span>\n                {Number(peak_power).toFixed(2)}&nbsp;<small>MW</small>\n              </span>\n            }\n          />\n        </Grid> */}\n        <Grid item>\n          <CustomCard\n            imagePath=\"/static/images/plantPR.png\"\n            imageHeight={45}\n            title=\"Plant PR\"\n            value={\n              Number(plant_pr) === -111 ? (\n                \"x\"\n              ) : (\n                <span>{Number(plant_pr).toFixed(0)}%</span>\n              )\n            }\n          />\n        </Grid>\n        <Grid item>\n          <CustomCard2\n            imagePath=\"/static/images/gridAvailability.png\"\n            imageHeight={50}\n            firstTitle=\"GA\"\n            secondTitle=\"PA\"\n            firstValue={\n              <span>\n                {Number(cardsValues.ga) === -111\n                  ? \"x\"\n                  : Number(cardsValues.ga)\n                      .toFixed(1)\n                      .replace(/[.,]00$/, \"\")}\n                {Number(cardsValues.ga) !== -111 && \"%\"}\n              </span>\n            }\n            secondValue={\n              <span>\n                {Number(cardsValues.pa) === -111\n                  ? \"x\"\n                  : Number(cardsValues.pa)\n                      .toFixed(1)\n                      .replace(/[.,]00$/, \"\")}\n                {Number(cardsValues.pa) !== -111 && \"%\"}\n              </span>\n            }\n          />\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        style={{ marginTop: \"1.5rem\" }}\n      >\n        <Grid item xs={12}>\n          <GhiGtiCard\n            imagePath=\"/static/images/ray.png\"\n            imageHeight={50}\n            elements={[\n              {\n                ghiTitle: \"GHI 1\",\n                ghiValue: getValue(ghi),\n                ghiLocation: getLocationValue(cardsValues.ghi1location),\n                gtiTitle: \"GTI 1\",\n                gtiValue: getValue(gti),\n                gtiLocation: getLocationValue(cardsValues.gti1location),\n              },\n\n              {\n                ghiTitle: \"GHI 2\",\n                ghiValue: getValue(ghi2),\n                ghiLocation: getLocationValue(cardsValues.ghi2location),\n                gtiTitle: \"GTI 2\",\n                gtiValue: getValue(gti2),\n                gtiLocation: getLocationValue(cardsValues.gti2location),\n              },\n\n              {\n                ghiTitle: \"GHI 3\",\n                ghiValue: getValue(ghi3),\n                ghiLocation: getLocationValue(cardsValues.ghi3location),\n                gtiTitle: \"GTI 3\",\n                gtiValue: getValue(gti3),\n                gtiLocation: getLocationValue(cardsValues.gti3location),\n              },\n\n              {\n                ghiTitle: \"GHI 4\",\n                ghiValue: getValue(ghi4),\n                ghiLocation: getLocationValue(cardsValues.ghi4location),\n                gtiTitle: \"GTI 4\",\n                gtiValue: getValue(gti4),\n                gtiLocation: getLocationValue(cardsValues.gti4location),\n              },\n\n              {\n                ghiTitle: \"GHI 5\",\n                ghiValue: getValue(ghi5),\n                ghiLocation: getLocationValue(cardsValues.ghi5location),\n                gtiTitle: \"GTI 5\",\n                gtiValue: getValue(gti5),\n                gtiLocation: getLocationValue(cardsValues.gti5location),\n              },\n            ]}\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import { Card, Grid, Typography } from \"@material-ui/core\";\nimport C3Chart from \"react-c3js\";\nimport \"../../c3.css\";\nimport React, { useState, useLayoutEffect, useEffect } from \"react\";\n\nexport default function PowerGenerationGauge({ totalExport, maxValue }) {\n  const [totalExportNum, setTotalExportNum] = useState(0);\n\n  useEffect(() => {\n    let value =\n      Number(totalExport) && Number(totalExport) !== -111\n        ? Number(totalExport)\n        : 0;\n    if (value !== totalExport) {\n      setTotalExportNum(value);\n    }\n  }, [totalExport]);\n\n  return (\n    <Card elevation={6} style={{ height: 255, width: 350 }}>\n      <Typography\n        style={{ marginLeft: \"1rem\", marginTop: \".5rem\" }}\n        variant=\"h6\"\n      >\n        Power Generation\n      </Typography>\n      <Grid container justify=\"center\">\n        <Grid item style={{ height: \"parent\" }}>\n          <C3Chart\n            data={{\n              columns: [[\"Current Export\", totalExportNum]],\n              type: \"gauge\",\n            }}\n            gauge={{\n              label: {\n                format: function (value) {\n                  return value + \" MW\";\n                },\n                show: true,\n              },\n              min: 0,\n              max: maxValue,\n              width: 45,\n            }}\n            color={{\n              pattern: [\"#4caf50\"],\n            }}\n            size={{\n              height: 200,\n            }}\n          />\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nfunction Compass({ size, rotate }) {\n  useEffect(() => {\n    // console.log(\"useEffect for rotation running...\");\n\n    const needle = document.getElementById(\"needle\");\n\n    // let rotationValue = String(360 - rotate);\n    let rotationValue = Number(rotate) && Number(rotate) !== -111 ? Number(rotate) : 0;\n\n    needle.style.transformOrigin = \"center\";\n    needle.style.transform = `rotate(${rotationValue}deg)`;\n  }, [rotate]);\n\n  return (\n    <svg\n      width={String(size)}\n      height={String(size)}\n      viewBox=\"0 0 316 316\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g id=\"body\">\n        <circle\n          id=\"Ellipse\"\n          cx=\"158\"\n          cy=\"158\"\n          r=\"154\"\n          fill=\"white\"\n          stroke=\"#616161\"\n          // stroke-width=\"8\"\n          strokeWidth=\"8\"\n        />\n        <path\n          id=\"N\"\n          d=\"M164.094 53H161.832L153.242 39.8516V53H150.98V35.9375H153.242L161.855 49.1445V35.9375H164.094V53Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NW\"\n          d=\"M65.8047 80H64.4854L59.4746 72.3301V80H58.1553V70.0469H59.4746L64.499 77.751V70.0469H65.8047V80ZM70.2822 76.8623L70.4736 78.1748L70.7539 76.9922L72.7227 70.0469H73.8301L75.751 76.9922L76.0244 78.1953L76.2363 76.8555L77.7812 70.0469H79.1006L76.6875 80H75.4912L73.4404 72.7471L73.2832 71.9883L73.126 72.7471L71 80H69.8037L67.3975 70.0469H68.71L70.2822 76.8623Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SW\"\n          d=\"M61.0879 241.563C59.9622 241.24 59.1419 240.843 58.627 240.374C58.1165 239.9 57.8613 239.317 57.8613 238.624C57.8613 237.84 58.1735 237.193 58.7979 236.683C59.4268 236.168 60.2425 235.91 61.2451 235.91C61.9287 235.91 62.5371 236.042 63.0703 236.307C63.6081 236.571 64.0228 236.936 64.3145 237.4C64.6107 237.865 64.7588 238.373 64.7588 238.925H63.4395C63.4395 238.323 63.248 237.852 62.8652 237.51C62.4824 237.163 61.9424 236.99 61.2451 236.99C60.598 236.99 60.0921 237.134 59.7275 237.421C59.3675 237.703 59.1875 238.098 59.1875 238.604C59.1875 239.009 59.3584 239.353 59.7002 239.636C60.0465 239.914 60.6322 240.169 61.457 240.401C62.2865 240.634 62.9336 240.891 63.3984 241.174C63.8678 241.452 64.2142 241.778 64.4375 242.151C64.6654 242.525 64.7793 242.965 64.7793 243.471C64.7793 244.277 64.4648 244.924 63.8359 245.412C63.207 245.895 62.3662 246.137 61.3135 246.137C60.6299 246.137 59.9919 246.007 59.3994 245.747C58.807 245.483 58.349 245.123 58.0254 244.667C57.7064 244.211 57.5469 243.694 57.5469 243.115H58.8662C58.8662 243.717 59.0872 244.193 59.5293 244.544C59.9759 244.89 60.5706 245.063 61.3135 245.063C62.0062 245.063 62.5371 244.922 62.9062 244.64C63.2754 244.357 63.46 243.972 63.46 243.484C63.46 242.997 63.2891 242.621 62.9473 242.356C62.6055 242.088 61.9857 241.823 61.0879 241.563ZM68.6143 242.862L68.8057 244.175L69.0859 242.992L71.0547 236.047H72.1621L74.083 242.992L74.3564 244.195L74.5684 242.855L76.1133 236.047H77.4326L75.0195 246H73.8232L71.7725 238.747L71.6152 237.988L71.458 238.747L69.332 246H68.1357L65.7295 236.047H67.042L68.6143 242.862Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SE\"\n          d=\"M246.088 241.563C244.962 241.24 244.142 240.843 243.627 240.374C243.117 239.9 242.861 239.317 242.861 238.624C242.861 237.84 243.174 237.193 243.798 236.683C244.427 236.168 245.243 235.91 246.245 235.91C246.929 235.91 247.537 236.042 248.07 236.307C248.608 236.571 249.023 236.936 249.314 237.4C249.611 237.865 249.759 238.373 249.759 238.925H248.439C248.439 238.323 248.248 237.852 247.865 237.51C247.482 237.163 246.942 236.99 246.245 236.99C245.598 236.99 245.092 237.134 244.728 237.421C244.368 237.703 244.188 238.098 244.188 238.604C244.188 239.009 244.358 239.353 244.7 239.636C245.047 239.914 245.632 240.169 246.457 240.401C247.286 240.634 247.934 240.891 248.398 241.174C248.868 241.452 249.214 241.778 249.438 242.151C249.665 242.525 249.779 242.965 249.779 243.471C249.779 244.277 249.465 244.924 248.836 245.412C248.207 245.895 247.366 246.137 246.313 246.137C245.63 246.137 244.992 246.007 244.399 245.747C243.807 245.483 243.349 245.123 243.025 244.667C242.706 244.211 242.547 243.694 242.547 243.115H243.866C243.866 243.717 244.087 244.193 244.529 244.544C244.976 244.89 245.571 245.063 246.313 245.063C247.006 245.063 247.537 244.922 247.906 244.64C248.275 244.357 248.46 243.972 248.46 243.484C248.46 242.997 248.289 242.621 247.947 242.356C247.605 242.088 246.986 241.823 246.088 241.563ZM257.094 241.399H252.78V244.927H257.791V246H251.468V236.047H257.723V237.127H252.78V240.326H257.094V241.399Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NE\"\n          d=\"M249.805 80H248.485L243.475 72.3301V80H242.155V70.0469H243.475L248.499 77.751V70.0469H249.805V80ZM257.762 75.3994H253.448V78.9268H258.459V80H252.136V70.0469H258.391V71.127H253.448V74.3262H257.762V75.3994Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"W\"\n          d=\"M34.6602 160.621L34.9883 162.871L35.4688 160.844L38.8438 148.938H40.7422L44.0352 160.844L44.5039 162.906L44.8672 160.609L47.5156 148.938H49.7773L45.6406 166H43.5898L40.0742 153.566L39.8047 152.266L39.5352 153.566L35.8906 166H33.8398L29.7148 148.938H31.9648L34.6602 160.621Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"E\"\n          d=\"M285.625 158.113H278.23V164.16H286.82V166H275.98V148.938H286.703V150.789H278.23V156.273H285.625V158.113Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"S\"\n          d=\"M157.008 271.395C155.078 270.84 153.672 270.16 152.789 269.355C151.914 268.543 151.477 267.543 151.477 266.355C151.477 265.012 152.012 263.902 153.082 263.027C154.16 262.145 155.559 261.703 157.277 261.703C158.449 261.703 159.492 261.93 160.406 262.383C161.328 262.836 162.039 263.461 162.539 264.258C163.047 265.055 163.301 265.926 163.301 266.871H161.039C161.039 265.84 160.711 265.031 160.055 264.445C159.398 263.852 158.473 263.555 157.277 263.555C156.168 263.555 155.301 263.801 154.676 264.293C154.059 264.777 153.75 265.453 153.75 266.32C153.75 267.016 154.043 267.605 154.629 268.09C155.223 268.566 156.227 269.004 157.641 269.402C159.062 269.801 160.172 270.242 160.969 270.727C161.773 271.203 162.367 271.762 162.75 272.402C163.141 273.043 163.336 273.797 163.336 274.664C163.336 276.047 162.797 277.156 161.719 277.992C160.641 278.82 159.199 279.234 157.395 279.234C156.223 279.234 155.129 279.012 154.113 278.566C153.098 278.113 152.312 277.496 151.758 276.715C151.211 275.934 150.938 275.047 150.938 274.055H153.199C153.199 275.086 153.578 275.902 154.336 276.504C155.102 277.098 156.121 277.395 157.395 277.395C158.582 277.395 159.492 277.152 160.125 276.668C160.758 276.184 161.074 275.523 161.074 274.688C161.074 273.852 160.781 273.207 160.195 272.754C159.609 272.293 158.547 271.84 157.008 271.395Z\"\n          fill=\"black\"\n        />\n        <line\n          id=\"Line 1\"\n          x1=\"159\"\n          y1=\"8\"\n          x2=\"159\"\n          y2=\"23\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 3\"\n          x1=\"23\"\n          y1=\"160\"\n          x2=\"8\"\n          y2=\"160\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 5\"\n          x1=\"57.8995\"\n          y1=\"65.3137\"\n          x2=\"47.2929\"\n          y2=\"54.7071\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 7\"\n          x1=\"47.2929\"\n          y1=\"261.899\"\n          x2=\"57.8995\"\n          y2=\"251.293\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 8\"\n          x1=\"258.293\"\n          y1=\"63.8995\"\n          x2=\"268.9\"\n          y2=\"53.2929\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 6\"\n          x1=\"269.899\"\n          y1=\"260.314\"\n          x2=\"259.293\"\n          y2=\"249.707\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 4\"\n          x1=\"308\"\n          y1=\"157\"\n          x2=\"293\"\n          y2=\"157\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 2\"\n          x1=\"159\"\n          y1=\"293\"\n          x2=\"159\"\n          y2=\"308\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n      </g>\n      <g id=\"needle\">\n        <path\n          id=\"Polygon 1\"\n          d=\"M158 68L168 158H157H148L158 68Z\"\n          // fill=\"#D50000\"\n          fill=\"#4caf50\"\n        />\n        <path\n          id=\"Polygon 2\"\n          d=\"M158 248L148 158H159H168L158 248Z\"\n          // fill=\"#9E9E9E\"\n          fill=\"#bdbdbd\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nCompass.defaultProps = {\n  size: \"300\",\n  rotate: 0,\n};\n\nexport default Compass;\n","import React from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@material-ui/core\";\nimport Compass from \"./Compass\";\n\nexport default function Wind({ windDirection, windSpeed, rain }) {\n  return (\n    <Card\n      elevation={6}\n      style={{\n        padding: \".5rem 1rem\",\n        height: 255,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Typography align=\"center\">\n        Wind <span style={{ color: \"#4caf50\" }}>Direction</span>\n        {\" & \"}\n        <span style={{ color: \"#2196f3\" }}>Speed</span>\n      </Typography>\n      <div style={{ textAlign: \"center\", padding: \".5rem\" }}>\n        <Compass\n          size={Number.isNaN(rain) === true ? 140 : 120}\n          rotate={windDirection}\n        />\n      </div>\n      <div>\n        <Typography align=\"center\">\n          <span\n            style={{\n              color: \"#4caf50\",\n            }}\n          >\n            {Number(windDirection) === -111 ? (\n              \"x\"\n            ) : (\n              <span>{windDirection} °</span>\n            )}\n          </span>\n          <span\n            style={{\n              marginLeft: \"1rem\",\n              color: \"#2196f3\",\n            }}\n          >\n            {Number(windSpeed) === -111 ? \"x\" : <span>{windSpeed} m/s</span>}\n          </span>\n        </Typography>\n        {!Number.isNaN(rain) && (\n          <Typography\n            // variant=\"h6\"\n            color=\"textSecondary\"\n            align=\"center\"\n            style={{ marginTop: \".25rem\", marginBottom: \".25rem\" }}\n          >\n            Rain: {Number(rain) === -111 ? \"x\" : <span>{rain} mm</span>}\n          </Typography>\n        )}\n      </div>\n    </Card>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nfunction Compass({ size, rotate }) {\n  useEffect(() => {\n    // console.log(\"useEffect for rotation running...\");\n\n    const needle = document.getElementById(\"needle2\");\n\n    // let rotationValue = String(360 - rotate);\n    let rotationValue = Number(rotate) && Number(rotate) !== -111 ? Number(rotate) : 0;\n\n    needle.style.transformOrigin = \"center\";\n    needle.style.transform = `rotate(${rotationValue}deg)`;\n  }, [rotate]);\n\n  return (\n    <svg\n      width={String(size)}\n      height={String(size)}\n      viewBox=\"0 0 316 316\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g id=\"body\">\n        <circle\n          id=\"Ellipse\"\n          cx=\"158\"\n          cy=\"158\"\n          r=\"154\"\n          fill=\"white\"\n          stroke=\"#616161\"\n          // stroke-width=\"8\"\n          strokeWidth=\"8\"\n        />\n        <path\n          id=\"N\"\n          d=\"M164.094 53H161.832L153.242 39.8516V53H150.98V35.9375H153.242L161.855 49.1445V35.9375H164.094V53Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NW\"\n          d=\"M65.8047 80H64.4854L59.4746 72.3301V80H58.1553V70.0469H59.4746L64.499 77.751V70.0469H65.8047V80ZM70.2822 76.8623L70.4736 78.1748L70.7539 76.9922L72.7227 70.0469H73.8301L75.751 76.9922L76.0244 78.1953L76.2363 76.8555L77.7812 70.0469H79.1006L76.6875 80H75.4912L73.4404 72.7471L73.2832 71.9883L73.126 72.7471L71 80H69.8037L67.3975 70.0469H68.71L70.2822 76.8623Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SW\"\n          d=\"M61.0879 241.563C59.9622 241.24 59.1419 240.843 58.627 240.374C58.1165 239.9 57.8613 239.317 57.8613 238.624C57.8613 237.84 58.1735 237.193 58.7979 236.683C59.4268 236.168 60.2425 235.91 61.2451 235.91C61.9287 235.91 62.5371 236.042 63.0703 236.307C63.6081 236.571 64.0228 236.936 64.3145 237.4C64.6107 237.865 64.7588 238.373 64.7588 238.925H63.4395C63.4395 238.323 63.248 237.852 62.8652 237.51C62.4824 237.163 61.9424 236.99 61.2451 236.99C60.598 236.99 60.0921 237.134 59.7275 237.421C59.3675 237.703 59.1875 238.098 59.1875 238.604C59.1875 239.009 59.3584 239.353 59.7002 239.636C60.0465 239.914 60.6322 240.169 61.457 240.401C62.2865 240.634 62.9336 240.891 63.3984 241.174C63.8678 241.452 64.2142 241.778 64.4375 242.151C64.6654 242.525 64.7793 242.965 64.7793 243.471C64.7793 244.277 64.4648 244.924 63.8359 245.412C63.207 245.895 62.3662 246.137 61.3135 246.137C60.6299 246.137 59.9919 246.007 59.3994 245.747C58.807 245.483 58.349 245.123 58.0254 244.667C57.7064 244.211 57.5469 243.694 57.5469 243.115H58.8662C58.8662 243.717 59.0872 244.193 59.5293 244.544C59.9759 244.89 60.5706 245.063 61.3135 245.063C62.0062 245.063 62.5371 244.922 62.9062 244.64C63.2754 244.357 63.46 243.972 63.46 243.484C63.46 242.997 63.2891 242.621 62.9473 242.356C62.6055 242.088 61.9857 241.823 61.0879 241.563ZM68.6143 242.862L68.8057 244.175L69.0859 242.992L71.0547 236.047H72.1621L74.083 242.992L74.3564 244.195L74.5684 242.855L76.1133 236.047H77.4326L75.0195 246H73.8232L71.7725 238.747L71.6152 237.988L71.458 238.747L69.332 246H68.1357L65.7295 236.047H67.042L68.6143 242.862Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SE\"\n          d=\"M246.088 241.563C244.962 241.24 244.142 240.843 243.627 240.374C243.117 239.9 242.861 239.317 242.861 238.624C242.861 237.84 243.174 237.193 243.798 236.683C244.427 236.168 245.243 235.91 246.245 235.91C246.929 235.91 247.537 236.042 248.07 236.307C248.608 236.571 249.023 236.936 249.314 237.4C249.611 237.865 249.759 238.373 249.759 238.925H248.439C248.439 238.323 248.248 237.852 247.865 237.51C247.482 237.163 246.942 236.99 246.245 236.99C245.598 236.99 245.092 237.134 244.728 237.421C244.368 237.703 244.188 238.098 244.188 238.604C244.188 239.009 244.358 239.353 244.7 239.636C245.047 239.914 245.632 240.169 246.457 240.401C247.286 240.634 247.934 240.891 248.398 241.174C248.868 241.452 249.214 241.778 249.438 242.151C249.665 242.525 249.779 242.965 249.779 243.471C249.779 244.277 249.465 244.924 248.836 245.412C248.207 245.895 247.366 246.137 246.313 246.137C245.63 246.137 244.992 246.007 244.399 245.747C243.807 245.483 243.349 245.123 243.025 244.667C242.706 244.211 242.547 243.694 242.547 243.115H243.866C243.866 243.717 244.087 244.193 244.529 244.544C244.976 244.89 245.571 245.063 246.313 245.063C247.006 245.063 247.537 244.922 247.906 244.64C248.275 244.357 248.46 243.972 248.46 243.484C248.46 242.997 248.289 242.621 247.947 242.356C247.605 242.088 246.986 241.823 246.088 241.563ZM257.094 241.399H252.78V244.927H257.791V246H251.468V236.047H257.723V237.127H252.78V240.326H257.094V241.399Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NE\"\n          d=\"M249.805 80H248.485L243.475 72.3301V80H242.155V70.0469H243.475L248.499 77.751V70.0469H249.805V80ZM257.762 75.3994H253.448V78.9268H258.459V80H252.136V70.0469H258.391V71.127H253.448V74.3262H257.762V75.3994Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"W\"\n          d=\"M34.6602 160.621L34.9883 162.871L35.4688 160.844L38.8438 148.938H40.7422L44.0352 160.844L44.5039 162.906L44.8672 160.609L47.5156 148.938H49.7773L45.6406 166H43.5898L40.0742 153.566L39.8047 152.266L39.5352 153.566L35.8906 166H33.8398L29.7148 148.938H31.9648L34.6602 160.621Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"E\"\n          d=\"M285.625 158.113H278.23V164.16H286.82V166H275.98V148.938H286.703V150.789H278.23V156.273H285.625V158.113Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"S\"\n          d=\"M157.008 271.395C155.078 270.84 153.672 270.16 152.789 269.355C151.914 268.543 151.477 267.543 151.477 266.355C151.477 265.012 152.012 263.902 153.082 263.027C154.16 262.145 155.559 261.703 157.277 261.703C158.449 261.703 159.492 261.93 160.406 262.383C161.328 262.836 162.039 263.461 162.539 264.258C163.047 265.055 163.301 265.926 163.301 266.871H161.039C161.039 265.84 160.711 265.031 160.055 264.445C159.398 263.852 158.473 263.555 157.277 263.555C156.168 263.555 155.301 263.801 154.676 264.293C154.059 264.777 153.75 265.453 153.75 266.32C153.75 267.016 154.043 267.605 154.629 268.09C155.223 268.566 156.227 269.004 157.641 269.402C159.062 269.801 160.172 270.242 160.969 270.727C161.773 271.203 162.367 271.762 162.75 272.402C163.141 273.043 163.336 273.797 163.336 274.664C163.336 276.047 162.797 277.156 161.719 277.992C160.641 278.82 159.199 279.234 157.395 279.234C156.223 279.234 155.129 279.012 154.113 278.566C153.098 278.113 152.312 277.496 151.758 276.715C151.211 275.934 150.938 275.047 150.938 274.055H153.199C153.199 275.086 153.578 275.902 154.336 276.504C155.102 277.098 156.121 277.395 157.395 277.395C158.582 277.395 159.492 277.152 160.125 276.668C160.758 276.184 161.074 275.523 161.074 274.688C161.074 273.852 160.781 273.207 160.195 272.754C159.609 272.293 158.547 271.84 157.008 271.395Z\"\n          fill=\"black\"\n        />\n        <line\n          id=\"Line 1\"\n          x1=\"159\"\n          y1=\"8\"\n          x2=\"159\"\n          y2=\"23\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 3\"\n          x1=\"23\"\n          y1=\"160\"\n          x2=\"8\"\n          y2=\"160\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 5\"\n          x1=\"57.8995\"\n          y1=\"65.3137\"\n          x2=\"47.2929\"\n          y2=\"54.7071\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 7\"\n          x1=\"47.2929\"\n          y1=\"261.899\"\n          x2=\"57.8995\"\n          y2=\"251.293\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 8\"\n          x1=\"258.293\"\n          y1=\"63.8995\"\n          x2=\"268.9\"\n          y2=\"53.2929\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 6\"\n          x1=\"269.899\"\n          y1=\"260.314\"\n          x2=\"259.293\"\n          y2=\"249.707\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 4\"\n          x1=\"308\"\n          y1=\"157\"\n          x2=\"293\"\n          y2=\"157\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 2\"\n          x1=\"159\"\n          y1=\"293\"\n          x2=\"159\"\n          y2=\"308\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n      </g>\n      <g id=\"needle2\">\n        <path\n          id=\"Polygon 1\"\n          d=\"M158 68L168 158H157H148L158 68Z\"\n          // fill=\"#D50000\"\n          fill=\"#4caf50\"\n        />\n        <path\n          id=\"Polygon 2\"\n          d=\"M158 248L148 158H159H168L158 248Z\"\n          // fill=\"#9E9E9E\"\n          fill=\"#bdbdbd\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nCompass.defaultProps = {\n  size: \"300\",\n  rotate: 0,\n};\n\nexport default Compass;\n","import React from \"react\";\nimport { Grid, Card, CardContent, Typography } from \"@material-ui/core\";\nimport Compass2 from \"./Compass2\";\n\nexport default function Wind({ windDirection, windSpeed, rain }) {\n  return (\n    <Card\n      elevation={6}\n      style={{\n        padding: \".5rem 1rem\",\n        height: 255,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Typography align=\"center\">\n        Wind <span style={{ color: \"#4caf50\" }}>Direction</span>\n        {\" & \"}\n        <span style={{ color: \"#2196f3\" }}>Speed</span>\n      </Typography>\n      <div style={{ textAlign: \"center\", padding: \".5rem\" }}>\n        <Compass2\n          size={Number.isNaN(rain) === true ? 140 : 120}\n          rotate={windDirection}\n        />\n      </div>\n      <div>\n        <Typography align=\"center\">\n          <span\n            style={{\n              color: \"#4caf50\",\n            }}\n          >\n            {Number(windDirection) === -111 ? (\n              \"x\"\n            ) : (\n              <span>{windDirection} °</span>\n            )}\n          </span>\n          <span\n            style={{\n              marginLeft: \"1rem\",\n              color: \"#2196f3\",\n            }}\n          >\n            {Number(windSpeed) === -111 ? \"x\" : <span>{windSpeed} m/s</span>}\n          </span>\n        </Typography>\n        {!Number.isNaN(rain) && (\n          <Typography\n            // variant=\"h6\"\n            color=\"textSecondary\"\n            align=\"center\"\n            style={{ marginTop: \".25rem\", marginBottom: \".25rem\" }}\n          >\n            Rain: {Number(rain) === -111 ? \"x\" : <span>{rain} mm</span>}\n          </Typography>\n        )}\n      </div>\n    </Card>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nfunction Compass({ size, rotate }) {\n  useEffect(() => {\n    // console.log(\"useEffect for rotation running...\");\n\n    const needle = document.getElementById(\"needle2\");\n\n    // let rotationValue = String(360 - rotate);\n    let rotationValue = Number(rotate) && Number(rotate) !== -111 ? Number(rotate) : 0;\n\n    needle.style.transformOrigin = \"center\";\n    needle.style.transform = `rotate(${rotationValue}deg)`;\n  }, [rotate]);\n\n  return (\n    <svg\n      width={String(size)}\n      height={String(size)}\n      viewBox=\"0 0 316 316\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g id=\"body\">\n        <circle\n          id=\"Ellipse\"\n          cx=\"158\"\n          cy=\"158\"\n          r=\"154\"\n          fill=\"white\"\n          stroke=\"#616161\"\n          // stroke-width=\"8\"\n          strokeWidth=\"8\"\n        />\n        <path\n          id=\"N\"\n          d=\"M164.094 53H161.832L153.242 39.8516V53H150.98V35.9375H153.242L161.855 49.1445V35.9375H164.094V53Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NW\"\n          d=\"M65.8047 80H64.4854L59.4746 72.3301V80H58.1553V70.0469H59.4746L64.499 77.751V70.0469H65.8047V80ZM70.2822 76.8623L70.4736 78.1748L70.7539 76.9922L72.7227 70.0469H73.8301L75.751 76.9922L76.0244 78.1953L76.2363 76.8555L77.7812 70.0469H79.1006L76.6875 80H75.4912L73.4404 72.7471L73.2832 71.9883L73.126 72.7471L71 80H69.8037L67.3975 70.0469H68.71L70.2822 76.8623Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SW\"\n          d=\"M61.0879 241.563C59.9622 241.24 59.1419 240.843 58.627 240.374C58.1165 239.9 57.8613 239.317 57.8613 238.624C57.8613 237.84 58.1735 237.193 58.7979 236.683C59.4268 236.168 60.2425 235.91 61.2451 235.91C61.9287 235.91 62.5371 236.042 63.0703 236.307C63.6081 236.571 64.0228 236.936 64.3145 237.4C64.6107 237.865 64.7588 238.373 64.7588 238.925H63.4395C63.4395 238.323 63.248 237.852 62.8652 237.51C62.4824 237.163 61.9424 236.99 61.2451 236.99C60.598 236.99 60.0921 237.134 59.7275 237.421C59.3675 237.703 59.1875 238.098 59.1875 238.604C59.1875 239.009 59.3584 239.353 59.7002 239.636C60.0465 239.914 60.6322 240.169 61.457 240.401C62.2865 240.634 62.9336 240.891 63.3984 241.174C63.8678 241.452 64.2142 241.778 64.4375 242.151C64.6654 242.525 64.7793 242.965 64.7793 243.471C64.7793 244.277 64.4648 244.924 63.8359 245.412C63.207 245.895 62.3662 246.137 61.3135 246.137C60.6299 246.137 59.9919 246.007 59.3994 245.747C58.807 245.483 58.349 245.123 58.0254 244.667C57.7064 244.211 57.5469 243.694 57.5469 243.115H58.8662C58.8662 243.717 59.0872 244.193 59.5293 244.544C59.9759 244.89 60.5706 245.063 61.3135 245.063C62.0062 245.063 62.5371 244.922 62.9062 244.64C63.2754 244.357 63.46 243.972 63.46 243.484C63.46 242.997 63.2891 242.621 62.9473 242.356C62.6055 242.088 61.9857 241.823 61.0879 241.563ZM68.6143 242.862L68.8057 244.175L69.0859 242.992L71.0547 236.047H72.1621L74.083 242.992L74.3564 244.195L74.5684 242.855L76.1133 236.047H77.4326L75.0195 246H73.8232L71.7725 238.747L71.6152 237.988L71.458 238.747L69.332 246H68.1357L65.7295 236.047H67.042L68.6143 242.862Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SE\"\n          d=\"M246.088 241.563C244.962 241.24 244.142 240.843 243.627 240.374C243.117 239.9 242.861 239.317 242.861 238.624C242.861 237.84 243.174 237.193 243.798 236.683C244.427 236.168 245.243 235.91 246.245 235.91C246.929 235.91 247.537 236.042 248.07 236.307C248.608 236.571 249.023 236.936 249.314 237.4C249.611 237.865 249.759 238.373 249.759 238.925H248.439C248.439 238.323 248.248 237.852 247.865 237.51C247.482 237.163 246.942 236.99 246.245 236.99C245.598 236.99 245.092 237.134 244.728 237.421C244.368 237.703 244.188 238.098 244.188 238.604C244.188 239.009 244.358 239.353 244.7 239.636C245.047 239.914 245.632 240.169 246.457 240.401C247.286 240.634 247.934 240.891 248.398 241.174C248.868 241.452 249.214 241.778 249.438 242.151C249.665 242.525 249.779 242.965 249.779 243.471C249.779 244.277 249.465 244.924 248.836 245.412C248.207 245.895 247.366 246.137 246.313 246.137C245.63 246.137 244.992 246.007 244.399 245.747C243.807 245.483 243.349 245.123 243.025 244.667C242.706 244.211 242.547 243.694 242.547 243.115H243.866C243.866 243.717 244.087 244.193 244.529 244.544C244.976 244.89 245.571 245.063 246.313 245.063C247.006 245.063 247.537 244.922 247.906 244.64C248.275 244.357 248.46 243.972 248.46 243.484C248.46 242.997 248.289 242.621 247.947 242.356C247.605 242.088 246.986 241.823 246.088 241.563ZM257.094 241.399H252.78V244.927H257.791V246H251.468V236.047H257.723V237.127H252.78V240.326H257.094V241.399Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NE\"\n          d=\"M249.805 80H248.485L243.475 72.3301V80H242.155V70.0469H243.475L248.499 77.751V70.0469H249.805V80ZM257.762 75.3994H253.448V78.9268H258.459V80H252.136V70.0469H258.391V71.127H253.448V74.3262H257.762V75.3994Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"W\"\n          d=\"M34.6602 160.621L34.9883 162.871L35.4688 160.844L38.8438 148.938H40.7422L44.0352 160.844L44.5039 162.906L44.8672 160.609L47.5156 148.938H49.7773L45.6406 166H43.5898L40.0742 153.566L39.8047 152.266L39.5352 153.566L35.8906 166H33.8398L29.7148 148.938H31.9648L34.6602 160.621Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"E\"\n          d=\"M285.625 158.113H278.23V164.16H286.82V166H275.98V148.938H286.703V150.789H278.23V156.273H285.625V158.113Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"S\"\n          d=\"M157.008 271.395C155.078 270.84 153.672 270.16 152.789 269.355C151.914 268.543 151.477 267.543 151.477 266.355C151.477 265.012 152.012 263.902 153.082 263.027C154.16 262.145 155.559 261.703 157.277 261.703C158.449 261.703 159.492 261.93 160.406 262.383C161.328 262.836 162.039 263.461 162.539 264.258C163.047 265.055 163.301 265.926 163.301 266.871H161.039C161.039 265.84 160.711 265.031 160.055 264.445C159.398 263.852 158.473 263.555 157.277 263.555C156.168 263.555 155.301 263.801 154.676 264.293C154.059 264.777 153.75 265.453 153.75 266.32C153.75 267.016 154.043 267.605 154.629 268.09C155.223 268.566 156.227 269.004 157.641 269.402C159.062 269.801 160.172 270.242 160.969 270.727C161.773 271.203 162.367 271.762 162.75 272.402C163.141 273.043 163.336 273.797 163.336 274.664C163.336 276.047 162.797 277.156 161.719 277.992C160.641 278.82 159.199 279.234 157.395 279.234C156.223 279.234 155.129 279.012 154.113 278.566C153.098 278.113 152.312 277.496 151.758 276.715C151.211 275.934 150.938 275.047 150.938 274.055H153.199C153.199 275.086 153.578 275.902 154.336 276.504C155.102 277.098 156.121 277.395 157.395 277.395C158.582 277.395 159.492 277.152 160.125 276.668C160.758 276.184 161.074 275.523 161.074 274.688C161.074 273.852 160.781 273.207 160.195 272.754C159.609 272.293 158.547 271.84 157.008 271.395Z\"\n          fill=\"black\"\n        />\n        <line\n          id=\"Line 1\"\n          x1=\"159\"\n          y1=\"8\"\n          x2=\"159\"\n          y2=\"23\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 3\"\n          x1=\"23\"\n          y1=\"160\"\n          x2=\"8\"\n          y2=\"160\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 5\"\n          x1=\"57.8995\"\n          y1=\"65.3137\"\n          x2=\"47.2929\"\n          y2=\"54.7071\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 7\"\n          x1=\"47.2929\"\n          y1=\"261.899\"\n          x2=\"57.8995\"\n          y2=\"251.293\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 8\"\n          x1=\"258.293\"\n          y1=\"63.8995\"\n          x2=\"268.9\"\n          y2=\"53.2929\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 6\"\n          x1=\"269.899\"\n          y1=\"260.314\"\n          x2=\"259.293\"\n          y2=\"249.707\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 4\"\n          x1=\"308\"\n          y1=\"157\"\n          x2=\"293\"\n          y2=\"157\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 2\"\n          x1=\"159\"\n          y1=\"293\"\n          x2=\"159\"\n          y2=\"308\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n      </g>\n      <g id=\"needle2\">\n        <path\n          id=\"Polygon 1\"\n          d=\"M158 68L168 158H157H148L158 68Z\"\n          // fill=\"#D50000\"\n          fill=\"#4caf50\"\n        />\n        <path\n          id=\"Polygon 2\"\n          d=\"M158 248L148 158H159H168L158 248Z\"\n          // fill=\"#9E9E9E\"\n          fill=\"#bdbdbd\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nCompass.defaultProps = {\n  size: \"300\",\n  rotate: 0,\n};\n\nexport default Compass;\n","import React, { useEffect } from \"react\";\n\nfunction Compass({ size, rotate }) {\n  useEffect(() => {\n    // console.log(\"useEffect for rotation running...\");\n\n    const needle = document.getElementById(\"needle2\");\n\n    // let rotationValue = String(360 - rotate);\n    let rotationValue = Number(rotate) && Number(rotate) !== -111 ? Number(rotate) : 0;\n\n    needle.style.transformOrigin = \"center\";\n    needle.style.transform = `rotate(${rotationValue}deg)`;\n  }, [rotate]);\n\n  return (\n    <svg\n      width={String(size)}\n      height={String(size)}\n      viewBox=\"0 0 316 316\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g id=\"body\">\n        <circle\n          id=\"Ellipse\"\n          cx=\"158\"\n          cy=\"158\"\n          r=\"154\"\n          fill=\"white\"\n          stroke=\"#616161\"\n          // stroke-width=\"8\"\n          strokeWidth=\"8\"\n        />\n        <path\n          id=\"N\"\n          d=\"M164.094 53H161.832L153.242 39.8516V53H150.98V35.9375H153.242L161.855 49.1445V35.9375H164.094V53Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NW\"\n          d=\"M65.8047 80H64.4854L59.4746 72.3301V80H58.1553V70.0469H59.4746L64.499 77.751V70.0469H65.8047V80ZM70.2822 76.8623L70.4736 78.1748L70.7539 76.9922L72.7227 70.0469H73.8301L75.751 76.9922L76.0244 78.1953L76.2363 76.8555L77.7812 70.0469H79.1006L76.6875 80H75.4912L73.4404 72.7471L73.2832 71.9883L73.126 72.7471L71 80H69.8037L67.3975 70.0469H68.71L70.2822 76.8623Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SW\"\n          d=\"M61.0879 241.563C59.9622 241.24 59.1419 240.843 58.627 240.374C58.1165 239.9 57.8613 239.317 57.8613 238.624C57.8613 237.84 58.1735 237.193 58.7979 236.683C59.4268 236.168 60.2425 235.91 61.2451 235.91C61.9287 235.91 62.5371 236.042 63.0703 236.307C63.6081 236.571 64.0228 236.936 64.3145 237.4C64.6107 237.865 64.7588 238.373 64.7588 238.925H63.4395C63.4395 238.323 63.248 237.852 62.8652 237.51C62.4824 237.163 61.9424 236.99 61.2451 236.99C60.598 236.99 60.0921 237.134 59.7275 237.421C59.3675 237.703 59.1875 238.098 59.1875 238.604C59.1875 239.009 59.3584 239.353 59.7002 239.636C60.0465 239.914 60.6322 240.169 61.457 240.401C62.2865 240.634 62.9336 240.891 63.3984 241.174C63.8678 241.452 64.2142 241.778 64.4375 242.151C64.6654 242.525 64.7793 242.965 64.7793 243.471C64.7793 244.277 64.4648 244.924 63.8359 245.412C63.207 245.895 62.3662 246.137 61.3135 246.137C60.6299 246.137 59.9919 246.007 59.3994 245.747C58.807 245.483 58.349 245.123 58.0254 244.667C57.7064 244.211 57.5469 243.694 57.5469 243.115H58.8662C58.8662 243.717 59.0872 244.193 59.5293 244.544C59.9759 244.89 60.5706 245.063 61.3135 245.063C62.0062 245.063 62.5371 244.922 62.9062 244.64C63.2754 244.357 63.46 243.972 63.46 243.484C63.46 242.997 63.2891 242.621 62.9473 242.356C62.6055 242.088 61.9857 241.823 61.0879 241.563ZM68.6143 242.862L68.8057 244.175L69.0859 242.992L71.0547 236.047H72.1621L74.083 242.992L74.3564 244.195L74.5684 242.855L76.1133 236.047H77.4326L75.0195 246H73.8232L71.7725 238.747L71.6152 237.988L71.458 238.747L69.332 246H68.1357L65.7295 236.047H67.042L68.6143 242.862Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SE\"\n          d=\"M246.088 241.563C244.962 241.24 244.142 240.843 243.627 240.374C243.117 239.9 242.861 239.317 242.861 238.624C242.861 237.84 243.174 237.193 243.798 236.683C244.427 236.168 245.243 235.91 246.245 235.91C246.929 235.91 247.537 236.042 248.07 236.307C248.608 236.571 249.023 236.936 249.314 237.4C249.611 237.865 249.759 238.373 249.759 238.925H248.439C248.439 238.323 248.248 237.852 247.865 237.51C247.482 237.163 246.942 236.99 246.245 236.99C245.598 236.99 245.092 237.134 244.728 237.421C244.368 237.703 244.188 238.098 244.188 238.604C244.188 239.009 244.358 239.353 244.7 239.636C245.047 239.914 245.632 240.169 246.457 240.401C247.286 240.634 247.934 240.891 248.398 241.174C248.868 241.452 249.214 241.778 249.438 242.151C249.665 242.525 249.779 242.965 249.779 243.471C249.779 244.277 249.465 244.924 248.836 245.412C248.207 245.895 247.366 246.137 246.313 246.137C245.63 246.137 244.992 246.007 244.399 245.747C243.807 245.483 243.349 245.123 243.025 244.667C242.706 244.211 242.547 243.694 242.547 243.115H243.866C243.866 243.717 244.087 244.193 244.529 244.544C244.976 244.89 245.571 245.063 246.313 245.063C247.006 245.063 247.537 244.922 247.906 244.64C248.275 244.357 248.46 243.972 248.46 243.484C248.46 242.997 248.289 242.621 247.947 242.356C247.605 242.088 246.986 241.823 246.088 241.563ZM257.094 241.399H252.78V244.927H257.791V246H251.468V236.047H257.723V237.127H252.78V240.326H257.094V241.399Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NE\"\n          d=\"M249.805 80H248.485L243.475 72.3301V80H242.155V70.0469H243.475L248.499 77.751V70.0469H249.805V80ZM257.762 75.3994H253.448V78.9268H258.459V80H252.136V70.0469H258.391V71.127H253.448V74.3262H257.762V75.3994Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"W\"\n          d=\"M34.6602 160.621L34.9883 162.871L35.4688 160.844L38.8438 148.938H40.7422L44.0352 160.844L44.5039 162.906L44.8672 160.609L47.5156 148.938H49.7773L45.6406 166H43.5898L40.0742 153.566L39.8047 152.266L39.5352 153.566L35.8906 166H33.8398L29.7148 148.938H31.9648L34.6602 160.621Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"E\"\n          d=\"M285.625 158.113H278.23V164.16H286.82V166H275.98V148.938H286.703V150.789H278.23V156.273H285.625V158.113Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"S\"\n          d=\"M157.008 271.395C155.078 270.84 153.672 270.16 152.789 269.355C151.914 268.543 151.477 267.543 151.477 266.355C151.477 265.012 152.012 263.902 153.082 263.027C154.16 262.145 155.559 261.703 157.277 261.703C158.449 261.703 159.492 261.93 160.406 262.383C161.328 262.836 162.039 263.461 162.539 264.258C163.047 265.055 163.301 265.926 163.301 266.871H161.039C161.039 265.84 160.711 265.031 160.055 264.445C159.398 263.852 158.473 263.555 157.277 263.555C156.168 263.555 155.301 263.801 154.676 264.293C154.059 264.777 153.75 265.453 153.75 266.32C153.75 267.016 154.043 267.605 154.629 268.09C155.223 268.566 156.227 269.004 157.641 269.402C159.062 269.801 160.172 270.242 160.969 270.727C161.773 271.203 162.367 271.762 162.75 272.402C163.141 273.043 163.336 273.797 163.336 274.664C163.336 276.047 162.797 277.156 161.719 277.992C160.641 278.82 159.199 279.234 157.395 279.234C156.223 279.234 155.129 279.012 154.113 278.566C153.098 278.113 152.312 277.496 151.758 276.715C151.211 275.934 150.938 275.047 150.938 274.055H153.199C153.199 275.086 153.578 275.902 154.336 276.504C155.102 277.098 156.121 277.395 157.395 277.395C158.582 277.395 159.492 277.152 160.125 276.668C160.758 276.184 161.074 275.523 161.074 274.688C161.074 273.852 160.781 273.207 160.195 272.754C159.609 272.293 158.547 271.84 157.008 271.395Z\"\n          fill=\"black\"\n        />\n        <line\n          id=\"Line 1\"\n          x1=\"159\"\n          y1=\"8\"\n          x2=\"159\"\n          y2=\"23\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 3\"\n          x1=\"23\"\n          y1=\"160\"\n          x2=\"8\"\n          y2=\"160\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 5\"\n          x1=\"57.8995\"\n          y1=\"65.3137\"\n          x2=\"47.2929\"\n          y2=\"54.7071\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 7\"\n          x1=\"47.2929\"\n          y1=\"261.899\"\n          x2=\"57.8995\"\n          y2=\"251.293\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 8\"\n          x1=\"258.293\"\n          y1=\"63.8995\"\n          x2=\"268.9\"\n          y2=\"53.2929\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 6\"\n          x1=\"269.899\"\n          y1=\"260.314\"\n          x2=\"259.293\"\n          y2=\"249.707\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 4\"\n          x1=\"308\"\n          y1=\"157\"\n          x2=\"293\"\n          y2=\"157\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 2\"\n          x1=\"159\"\n          y1=\"293\"\n          x2=\"159\"\n          y2=\"308\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n      </g>\n      <g id=\"needle2\">\n        <path\n          id=\"Polygon 1\"\n          d=\"M158 68L168 158H157H148L158 68Z\"\n          // fill=\"#D50000\"\n          fill=\"#4caf50\"\n        />\n        <path\n          id=\"Polygon 2\"\n          d=\"M158 248L148 158H159H168L158 248Z\"\n          // fill=\"#9E9E9E\"\n          fill=\"#bdbdbd\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nCompass.defaultProps = {\n  size: \"300\",\n  rotate: 0,\n};\n\nexport default Compass;\n","import React, { useEffect } from \"react\";\n\nfunction Compass({ size, rotate }) {\n  useEffect(() => {\n    // console.log(\"useEffect for rotation running...\");\n\n    const needle = document.getElementById(\"needle2\");\n\n    // let rotationValue = String(360 - rotate);\n    let rotationValue = Number(rotate) && Number(rotate) !== -111 ? Number(rotate) : 0;\n\n    needle.style.transformOrigin = \"center\";\n    needle.style.transform = `rotate(${rotationValue}deg)`;\n  }, [rotate]);\n\n  return (\n    <svg\n      width={String(size)}\n      height={String(size)}\n      viewBox=\"0 0 316 316\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g id=\"body\">\n        <circle\n          id=\"Ellipse\"\n          cx=\"158\"\n          cy=\"158\"\n          r=\"154\"\n          fill=\"white\"\n          stroke=\"#616161\"\n          // stroke-width=\"8\"\n          strokeWidth=\"8\"\n        />\n        <path\n          id=\"N\"\n          d=\"M164.094 53H161.832L153.242 39.8516V53H150.98V35.9375H153.242L161.855 49.1445V35.9375H164.094V53Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NW\"\n          d=\"M65.8047 80H64.4854L59.4746 72.3301V80H58.1553V70.0469H59.4746L64.499 77.751V70.0469H65.8047V80ZM70.2822 76.8623L70.4736 78.1748L70.7539 76.9922L72.7227 70.0469H73.8301L75.751 76.9922L76.0244 78.1953L76.2363 76.8555L77.7812 70.0469H79.1006L76.6875 80H75.4912L73.4404 72.7471L73.2832 71.9883L73.126 72.7471L71 80H69.8037L67.3975 70.0469H68.71L70.2822 76.8623Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SW\"\n          d=\"M61.0879 241.563C59.9622 241.24 59.1419 240.843 58.627 240.374C58.1165 239.9 57.8613 239.317 57.8613 238.624C57.8613 237.84 58.1735 237.193 58.7979 236.683C59.4268 236.168 60.2425 235.91 61.2451 235.91C61.9287 235.91 62.5371 236.042 63.0703 236.307C63.6081 236.571 64.0228 236.936 64.3145 237.4C64.6107 237.865 64.7588 238.373 64.7588 238.925H63.4395C63.4395 238.323 63.248 237.852 62.8652 237.51C62.4824 237.163 61.9424 236.99 61.2451 236.99C60.598 236.99 60.0921 237.134 59.7275 237.421C59.3675 237.703 59.1875 238.098 59.1875 238.604C59.1875 239.009 59.3584 239.353 59.7002 239.636C60.0465 239.914 60.6322 240.169 61.457 240.401C62.2865 240.634 62.9336 240.891 63.3984 241.174C63.8678 241.452 64.2142 241.778 64.4375 242.151C64.6654 242.525 64.7793 242.965 64.7793 243.471C64.7793 244.277 64.4648 244.924 63.8359 245.412C63.207 245.895 62.3662 246.137 61.3135 246.137C60.6299 246.137 59.9919 246.007 59.3994 245.747C58.807 245.483 58.349 245.123 58.0254 244.667C57.7064 244.211 57.5469 243.694 57.5469 243.115H58.8662C58.8662 243.717 59.0872 244.193 59.5293 244.544C59.9759 244.89 60.5706 245.063 61.3135 245.063C62.0062 245.063 62.5371 244.922 62.9062 244.64C63.2754 244.357 63.46 243.972 63.46 243.484C63.46 242.997 63.2891 242.621 62.9473 242.356C62.6055 242.088 61.9857 241.823 61.0879 241.563ZM68.6143 242.862L68.8057 244.175L69.0859 242.992L71.0547 236.047H72.1621L74.083 242.992L74.3564 244.195L74.5684 242.855L76.1133 236.047H77.4326L75.0195 246H73.8232L71.7725 238.747L71.6152 237.988L71.458 238.747L69.332 246H68.1357L65.7295 236.047H67.042L68.6143 242.862Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"SE\"\n          d=\"M246.088 241.563C244.962 241.24 244.142 240.843 243.627 240.374C243.117 239.9 242.861 239.317 242.861 238.624C242.861 237.84 243.174 237.193 243.798 236.683C244.427 236.168 245.243 235.91 246.245 235.91C246.929 235.91 247.537 236.042 248.07 236.307C248.608 236.571 249.023 236.936 249.314 237.4C249.611 237.865 249.759 238.373 249.759 238.925H248.439C248.439 238.323 248.248 237.852 247.865 237.51C247.482 237.163 246.942 236.99 246.245 236.99C245.598 236.99 245.092 237.134 244.728 237.421C244.368 237.703 244.188 238.098 244.188 238.604C244.188 239.009 244.358 239.353 244.7 239.636C245.047 239.914 245.632 240.169 246.457 240.401C247.286 240.634 247.934 240.891 248.398 241.174C248.868 241.452 249.214 241.778 249.438 242.151C249.665 242.525 249.779 242.965 249.779 243.471C249.779 244.277 249.465 244.924 248.836 245.412C248.207 245.895 247.366 246.137 246.313 246.137C245.63 246.137 244.992 246.007 244.399 245.747C243.807 245.483 243.349 245.123 243.025 244.667C242.706 244.211 242.547 243.694 242.547 243.115H243.866C243.866 243.717 244.087 244.193 244.529 244.544C244.976 244.89 245.571 245.063 246.313 245.063C247.006 245.063 247.537 244.922 247.906 244.64C248.275 244.357 248.46 243.972 248.46 243.484C248.46 242.997 248.289 242.621 247.947 242.356C247.605 242.088 246.986 241.823 246.088 241.563ZM257.094 241.399H252.78V244.927H257.791V246H251.468V236.047H257.723V237.127H252.78V240.326H257.094V241.399Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"NE\"\n          d=\"M249.805 80H248.485L243.475 72.3301V80H242.155V70.0469H243.475L248.499 77.751V70.0469H249.805V80ZM257.762 75.3994H253.448V78.9268H258.459V80H252.136V70.0469H258.391V71.127H253.448V74.3262H257.762V75.3994Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"W\"\n          d=\"M34.6602 160.621L34.9883 162.871L35.4688 160.844L38.8438 148.938H40.7422L44.0352 160.844L44.5039 162.906L44.8672 160.609L47.5156 148.938H49.7773L45.6406 166H43.5898L40.0742 153.566L39.8047 152.266L39.5352 153.566L35.8906 166H33.8398L29.7148 148.938H31.9648L34.6602 160.621Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"E\"\n          d=\"M285.625 158.113H278.23V164.16H286.82V166H275.98V148.938H286.703V150.789H278.23V156.273H285.625V158.113Z\"\n          fill=\"black\"\n        />\n        <path\n          id=\"S\"\n          d=\"M157.008 271.395C155.078 270.84 153.672 270.16 152.789 269.355C151.914 268.543 151.477 267.543 151.477 266.355C151.477 265.012 152.012 263.902 153.082 263.027C154.16 262.145 155.559 261.703 157.277 261.703C158.449 261.703 159.492 261.93 160.406 262.383C161.328 262.836 162.039 263.461 162.539 264.258C163.047 265.055 163.301 265.926 163.301 266.871H161.039C161.039 265.84 160.711 265.031 160.055 264.445C159.398 263.852 158.473 263.555 157.277 263.555C156.168 263.555 155.301 263.801 154.676 264.293C154.059 264.777 153.75 265.453 153.75 266.32C153.75 267.016 154.043 267.605 154.629 268.09C155.223 268.566 156.227 269.004 157.641 269.402C159.062 269.801 160.172 270.242 160.969 270.727C161.773 271.203 162.367 271.762 162.75 272.402C163.141 273.043 163.336 273.797 163.336 274.664C163.336 276.047 162.797 277.156 161.719 277.992C160.641 278.82 159.199 279.234 157.395 279.234C156.223 279.234 155.129 279.012 154.113 278.566C153.098 278.113 152.312 277.496 151.758 276.715C151.211 275.934 150.938 275.047 150.938 274.055H153.199C153.199 275.086 153.578 275.902 154.336 276.504C155.102 277.098 156.121 277.395 157.395 277.395C158.582 277.395 159.492 277.152 160.125 276.668C160.758 276.184 161.074 275.523 161.074 274.688C161.074 273.852 160.781 273.207 160.195 272.754C159.609 272.293 158.547 271.84 157.008 271.395Z\"\n          fill=\"black\"\n        />\n        <line\n          id=\"Line 1\"\n          x1=\"159\"\n          y1=\"8\"\n          x2=\"159\"\n          y2=\"23\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 3\"\n          x1=\"23\"\n          y1=\"160\"\n          x2=\"8\"\n          y2=\"160\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 5\"\n          x1=\"57.8995\"\n          y1=\"65.3137\"\n          x2=\"47.2929\"\n          y2=\"54.7071\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 7\"\n          x1=\"47.2929\"\n          y1=\"261.899\"\n          x2=\"57.8995\"\n          y2=\"251.293\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 8\"\n          x1=\"258.293\"\n          y1=\"63.8995\"\n          x2=\"268.9\"\n          y2=\"53.2929\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 6\"\n          x1=\"269.899\"\n          y1=\"260.314\"\n          x2=\"259.293\"\n          y2=\"249.707\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 4\"\n          x1=\"308\"\n          y1=\"157\"\n          x2=\"293\"\n          y2=\"157\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n        <line\n          id=\"Line 2\"\n          x1=\"159\"\n          y1=\"293\"\n          x2=\"159\"\n          y2=\"308\"\n          stroke=\"#616161\"\n          // stroke-width=\"4\"\n          strokeWidth=\"4\"\n        />\n      </g>\n      <g id=\"needle2\">\n        <path\n          id=\"Polygon 1\"\n          d=\"M158 68L168 158H157H148L158 68Z\"\n          // fill=\"#D50000\"\n          fill=\"#4caf50\"\n        />\n        <path\n          id=\"Polygon 2\"\n          d=\"M158 248L148 158H159H168L158 248Z\"\n          // fill=\"#9E9E9E\"\n          fill=\"#bdbdbd\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nCompass.defaultProps = {\n  size: \"300\",\n  rotate: 0,\n};\n\nexport default Compass;\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {\n  KeyboardDateTimePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport \"date-fns\";\nimport { parse } from \"date-fns\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport AmbientModuleTemp from \"../components/Badisidd/AmbientModuleTemp\";\nimport BiaxialLineChart from \"../components/Badisidd/BiaxialLineChart\";\nimport BlockTable from \"../components/Badisidd/BlockTable\";\nimport CustomCards from \"../components/Badisidd/CustomCards\";\nimport PowerGenerationGauge from \"../components/Badisidd/PowerGenerationGauge\";\nimport Wind from \"../components/Badisidd/Wind\";\nimport Wind2 from \"../components/Badisidd/Wind2\";\nimport Wind3 from \"../components/Badisidd/Wind3\";\nimport Wind4 from \"../components/Badisidd/Wind4\";\nimport Wind5 from \"../components/Badisidd/Wind5\";\nimport SiteCalendar from \"../components/UI/SiteCalendar\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport customStyle from \"./Site.css\";\nimport { AppState } from \"../../src/AppContext\";\nimport { Button } from \"@material-ui/core\";\nimport SitestatusBar from \"../components/UI/SitestatusBar\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  gaugeChartStyle: {\n    marginTop: theme.spacing(12),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  modalCardStyle: {\n    width: 340,\n    height: \"fit-content\",\n  },\n  gridBreakpoint: {\n    [theme.breakpoints.up(\"md\")]: {},\n  },\n}));\n\nexport default function Badisidd({\n  handleSessionExpire,\n  handleClickOpen,\n  sitestatusBar,\n}) {\n  const classes = useStyles();\n\n  const { intervalTime } = AppState();\n\n  // User details\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const userId = localStorage.getItem(\"userId\");\n\n  const serverUrl = SERVER_URL;\n\n  // Main time state\n  const [mainTime, setMainTime] = useState(new Date().getTime());\n\n  // Status and Time states\n  const [status, setStatus] = useState(0);\n  const [timestamp, setTimestamp] = useState(undefined);\n\n  // cards/ boxes states (generation, revenue, peak power, plant pr, and grid availability)\n  const [cardsValues, setCardsValues] = useState({});\n\n  // totalExport state\n  const [totalExport, setTotalExport] = useState(0);\n  const [gaugePercent, setGaugePercent] = useState(0);\n\n  // temperatures states (ambient and module)\n  const [ambientTemp, setAmbientTemp] = useState(0);\n  const [moduleTemp, setModuleTemp] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n  const [ambientTemp2, setAmbientTemp2] = useState(0);\n  const [moduleTemp2, setModuleTemp2] = useState(0);\n  const [humidity2, setHumidity2] = useState(0);\n\n  // wind direction and speed states\n  const [windDirection, setWindDirection] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [rain, setRain] = useState(0);\n  const [windDirection2, setWindDirection2] = useState(0);\n  const [windSpeed2, setWindSpeed2] = useState(0);\n  const [rain2, setRain2] = useState(0);\n\n  // irradiance / generation data\n  const [irradianceGenerationData, setIrradianceGenerationData] = useState([\n    {\n      time: \"00:00\",\n      gti1: \"0.00\",\n      gti2: \"0,00\",\n      gti3: \"0.00\",\n      gti4: \"0,00\",\n      gti5: \"0.00\",\n      ghi1: \"0.00\",\n      ghi2: \"0.00\",\n      ghi3: \"0.00\",\n      ghi4: \"0.00\",\n      ghi5: \"0.00\",\n      pg: \"0.00\",\n    },\n  ]);\n\n  // block select-button value state\n  const [blockTableId, setBlockTableId] = React.useState(1);\n\n  // blockTableObjects from Inverter Values\n  const [blockTableObjects, setBlockTableObjects] = useState([]);\n\n  const [isNextCount, setIsNextCount] = useState(0);\n  // console.log(isNextCount);\n\n  useEffect(() => {\n    if (isNextCount !== 0) {\n      // console.log(\"isNextCount\", isNextCount);\n      getSiteData(mainTime);\n    }\n  }, [isNextCount]);\n\n  const getEnablePacket = () => {\n    if (isNextCount !== 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  const getIsNext = () => {\n    if (isNextCount > 0) {\n      return \"1\";\n    } else {\n      return \"0\";\n    }\n  };\n\n  // Functions related to header (status and time)\n  const getFormattedDateAndTimeString = (timestamp) => {\n    const date = new Date(timestamp);\n    return (\n      <span>\n        {String(date.getDate()).padStart(2, \"0\")}/\n        {String(date.getMonth() + 1).padStart(2, \"0\")}/{date.getFullYear()}\n        <span>&emsp;</span>\n        {date\n          .toLocaleString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          })\n          .toUpperCase()}\n      </span>\n    );\n  };\n\n  const getStatusAndTime = (startTime, endTime, beginTime) => {\n    // console.log(\n    //   \"getStatusAndTime function called\",\n    //   startTime,\n    //   endTime,\n    //   beginTime\n    // );\n    axios\n      .get(serverUrl + \"/badisidd/site\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"status: \", response.data.status);\n        // console.log(\"time: \", response.data.time);\n        setStatus(response.data.status);\n        setTimestamp(response.data.time * 1000);\n      })\n      .catch((error) => {\n        // console.log(error);\n        // if (error.response.status === 401) {\n        //   handleSessionExpire();\n        // }\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n\n          // setLogoutMsg(true);\n        }\n      });\n  };\n\n  /**\n   * Functions related to time slider\n   */\n  // let timeSliderLabel = null;\n  let timeSliderLabel2 = null;\n  // const [timeSliderActivated, setTimeSliderActivated] = useState(false);\n  const [openTimeSliderSuccessAlert, setOpenTimeSliderSuccessAlert] =\n    useState(false);\n\n  const getFormattedTimeString = (date) => {\n    return date\n      .toLocaleString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n      })\n      .toUpperCase();\n  };\n\n  // const timeSliderLabelFormat = (value) => {\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n\n  //   timeSliderLabel = document.getElementById(\"timeSliderLabel\");\n\n  //   if (timeSliderLabel) {\n  //     timeSliderLabel.innerText = getFormattedTimeString(date);\n  //   }\n\n  //   return date.toLocaleTimeString();\n  // };\n\n  // const handleTimeSliderValueChange = (event, value) => {\n  //   console.log(value);\n  //   const date = new Date();\n  //   date.setHours(0, 0, 0, 0);\n  //   date.setMinutes(value);\n  //   console.log(\"Time slider changed value: \", date.toLocaleTimeString());\n  //   setMainTime(date.getTime());\n  // };\n\n  // const handleTimeSliderToggle = () => {\n  //   setTimeSliderActivated((prevState) => !prevState);\n  //   if (timeSliderActivated === true) {\n  //     setOpenTimeSliderSuccessAlert(true);\n  //   }\n  // };\n\n  // const getSliderStartDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(0, 1, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  // const getSliderEndDateLabel = () => {\n  //   const date = new Date();\n  //   date.setHours(24, 0, 0, 0);\n  //   return (\n  //     <span>\n  //       {date\n  //         .toLocaleString([], {\n  //           hour: \"2-digit\",\n  //           // minute: \"2-digit\",\n  //           hour12: true,\n  //         })\n  //         .toUpperCase()}\n  //       <span>&nbsp;</span>\n  //       {String(date.getDate()).padStart(2, \"0\")}/\n  //       {String(date.getMonth() + 1).padStart(2, \"0\")}\n  //     </span>\n  //   );\n  // };\n\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [openDateTimePicker, setOpenDateTimePicker] = useState(false);\n\n  const [isTimeReset, setIsTimeReset] = useState(true);\n\n  const handleTimeSliderToggleClose = () => {\n    setOpenTimeSliderSuccessAlert(false);\n  };\n\n  const handleDateChange = (date) => {\n    try {\n      setIsTimeReset(false);\n    } finally {\n      setSelectedDate(date);\n      setOpenDateTimePicker(false);\n    }\n  };\n\n  const handleTimeReset = () => {\n    setIsNextCount(0);\n    let now = new Date();\n    setSelectedDate(now);\n    setMainTime(now.getTime());\n    setOpenTimeSliderSuccessAlert(true);\n    setIsTimeReset(true);\n  };\n\n  useEffect(() => {\n    setMainTime(selectedDate.getTime());\n  }, [selectedDate]);\n\n  const getMinDateForPicker = () => {\n    // Sep 10, 2021 12:00:00 PM\n    const startTime = new Date(1631275200000);\n    return startTime;\n  };\n\n  /**\n   * END of Functions related to time slider\n   */\n\n  // Function relaed to custom cards\n  const getCardsValues = (startTime, endTime, beginTime) => {\n    // console.log(\"getCardsValues function called\");\n    axios\n      .get(serverUrl + \"/badisidd/boxes\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(response.data);\n        setCardsValues(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const getStartTime = (time) => {\n    let date = new Date(time);\n    date.setHours(12, 1, 0, 0);\n    return date.getTime();\n  };\n\n  const [customGeneration, setCustomGeneration] = useState(0);\n\n  const getGeneration = (startTime, endTime, beginTime) => {\n    // console.log(\"getGeneration\");\n    axios\n      .post(\n        serverUrl + \"/badisidd/generation\",\n        { startTime: getStartTime(startTime), endTime: endTime },\n        {\n          headers: {\n            jwtToken: userToken,\n          },\n        }\n      )\n      .then((response) => {\n        // console.log(response.data);\n        setCustomGeneration(Number(response.data));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to Power Generation Gauge\n  const getTotalExport = (startTime, endTime, beginTime) => {\n    // console.log(\"getTotalExport function called\");\n    axios\n      .get(serverUrl + \"/badisidd/gauge\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"totalExport: \", response.data.value);\n        const value = response.data.value;\n        setTotalExport(Number(value).toFixed(2));\n        // Dividing by 50 because upper limit is 50 MW\n        setGaugePercent(Number(value).toFixed(1) / 50);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const [temperatureData, setTemperatureData] = useState({});\n\n  // Function related to Ambient and Module Temperatures\n  const getTemperatures = (startTime, endTime, beginTime) => {\n    // console.log(\"getTemperatures function called\");\n    axios\n      .get(serverUrl + \"/badisidd/temperature\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"temperatures: \", response.data);\n        // const ambientTempStr = response.data.ambientTemp;\n        // const moduleTempStr = response.data.moduleTemp;\n        // const humidityStr = response.data.humidity;\n        // const ambientTempStr2 = response.data.ambientTemp2;\n        // const moduleTempStr2 = response.data.moduleTemp2;\n        // const humidityStr2 = response.data.humidity2;\n        // // console.log(ambientTempStr, moduleTempStr, humidityStr);\n        // setAmbientTemp(Number(ambientTempStr).toFixed(1));\n        // setModuleTemp(Number(moduleTempStr).toFixed(1));\n        // setHumidity(Number(humidityStr).toFixed(1));\n        // setAmbientTemp2(Number(ambientTempStr2).toFixed(1));\n        // setModuleTemp2(Number(moduleTempStr2).toFixed(1));\n        // setHumidity2(Number(humidityStr2).toFixed(1));\n        setTemperatureData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to wind direction and speed\n  const getWindDirectionAndSpeed = (startTime, endTime, beginTime) => {\n    // console.log(\"getWindDirectionAndSpeed function called\");\n    axios\n      .get(serverUrl + \"/badisidd/wind\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"wind: \", response.data);\n        const windDirectionStr = response.data.winddirection1;\n        const windSpeedStr = response.data.windspeed1;\n        const rainStr = response.data.rain1;\n        const windDirectionStr2 = response.data.winddirection2;\n        const windSpeedStr2 = response.data.windspeed2;\n        const rainStr2 = response.data.rain2;\n        // console.log(\"Wind: \", windDirectionStr, windSpeedStr, rain);\n        setWindDirection(Number(windDirectionStr).toFixed(0));\n        setWindSpeed(Number(windSpeedStr).toFixed(1));\n        setRain(Number(rainStr).toFixed(1));\n        setWindDirection2(Number(windDirectionStr2).toFixed(0));\n        setWindSpeed2(Number(windSpeedStr2).toFixed(1));\n        setRain2(Number(rainStr2).toFixed(1));\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Function related to BiaxialLineChart\n  const getIrradianceGenerationData = (startTime, endTime, beginTime) => {\n    // console.log(\"getIrradianceGenerationData function called\");\n    axios\n      .get(serverUrl + \"/badisidd/graph\", {\n        headers: {\n          jwtToken: userToken,\n          startTime: startTime,\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"i/g data: \", response.data);\n        setIrradianceGenerationData(response.data);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  // Functions related to Inverter Values block table\n  const formatInverterValues = (data, block) => {\n    // console.log(\"data: \", data);\n    let arrayOfObjectsX = [];\n\n    let arrayFromObject = Object.entries(data);\n    // console.log(\"Object entries: \", arrayFromObject);\n\n    const heading = [\n      \"L1 I\",\n      \"L2 I\",\n      \"L3 I\",\n      \"L1 V\",\n      \"L2 V\",\n      \"L3 V\",\n      \"Frequency\",\n      \"DC I\",\n      \"DC V\",\n      \"Active Power\",\n      \"DC Power\",\n      \"Reactive Power\",\n      \"PF\",\n      \"Cab Temp\",\n      \"IGBT Temp\",\n      \"DC Energy\",\n      \"S1 L1 I\",\n      \"S1 L2 I\",\n      \"S1 L3 I\",\n      \"S1 L1 V\",\n      \"S1 L2 V\",\n      \"S1 L3 V\",\n      \"S1 DC I\",\n      \"S1 DC V\",\n      \"S1 Active Power\",\n      \"S1 DC Power\",\n      \"S1 PF\",\n      \"S1 IGBT Temp\",\n      \"S1 CAB Temp\",\n      \"S2 L1 I\",\n      \"S2 L2 I\",\n      \"S2 L3 I\",\n      \"S2 L1 V\",\n      \"S2 L2 V\",\n      \"S2 L3 V\",\n      \"S2 DC I\",\n      \"S2 DC V\",\n      \"S2 Active Power\",\n      \"S2 DC Power\",\n      \"S2 PF\",\n      \"S2 IGBT Temp\",\n      \"S2 CAB Temp\",\n      \"S3 L1 I\",\n      \"S3 L2 I\",\n      \"S3 L3 I\",\n      \"S3 L1 V\",\n      \"S3 L2 V\",\n      \"S3 L3 V\",\n      \"S3 DC I\",\n      \"S3 DC V\",\n      \"S3 Active Power\",\n      \"S3 DC Power\",\n      \"S3 PF\",\n      \"S3 IGBT Temp\",\n      \"S3 CAB Temp\",\n      \"S4 L1 I\",\n      \"S4 L2 I\",\n      \"S4 L3 I\",\n      \"S4 L1 V\",\n      \"S4 L2 V\",\n      \"S4 L3 V\",\n      \"S4 DC I\",\n      \"S4 DC V\",\n      \"S4 Active Power\",\n      \"S4 DC Power\",\n      \"S4 PF\",\n      \"S4 IGBT Temp\",\n      \"S4 CAB Temp\",\n      \"S1 + S2 Peak Active Power\",\n      \"S3 + S4 Peak Active Power\",\n      \"S1 / S1CB1 I\",\n      \"S2 / S1CB2 I\",\n      \"S3 / S1CB3 I\",\n      \"S4 / S1CB4 I\",\n      \"S5 / S1CB5 I\",\n      \"S6 / S1CB6 I\",\n      \"S7 / S1CB7 I\",\n      \"S8 / S1CB8 I\",\n      \"S9 / S2CB1 I\",\n      \"S10 / S2CB2 I\",\n      \"S11 / S2CB3 I\",\n      \"S12 / S2CB4 I\",\n      \"S13 / S2CB5 I\",\n      \"S14 / S2CB6 I\",\n      \"S15 / S2CB7 I\",\n      \"S16 / S2CB8 I\",\n      \"S17 / S3CB1 I\",\n      \"S18 / S3CB2 I\",\n      \"S19 / S3CB3 I\",\n      \"S20 / S3CB4 I\",\n      \"S21 / S3CB5 I\",\n      \"S22 / S3CB6 I\",\n      \"S23 / S3CB7 I\",\n      \"S24 / S3CB8 I\",\n      \"S25 / S4CB1 I\",\n      \"S26 / S4CB2 I\",\n      \"S27 / S4CB3 I\",\n      \"S28 / S4CB4 I\",\n      \"S29 / S4CB5 I\",\n      \"S30 / S4CB6 I\",\n      \"S31 / S4CB7 I\",\n      \"S32 / S4CB8 I\",\n    ];\n\n    if (block === 23 || block === 24 || block === 25 || block === 26) {\n      let voltageValues = [\n        \"S1 / S1CB1 V\",\n        \"S2 / S1CB2 V\",\n        \"S3 / S1CB3 V\",\n        \"S4 / S1CB4 V\",\n        \"S5 / S1CB5 V\",\n        \"S6 / S1CB6 V\",\n        \"S7 / S1CB7 V\",\n        \"S8 / S1CB8 V\",\n        \"S9 / S2CB1 V\",\n        \"S10 / S2CB2 V\",\n        \"S11 / S2CB3 V\",\n        \"S12 / S2CB4 V\",\n        \"S13 / S2CB5 V\",\n        \"S14 / S2CB6 V\",\n        \"S15 / S2CB7 V\",\n        \"S16 / S2CB8 V\",\n        \"S17 / S3CB1 V\",\n        \"S18 / S3CB2 V\",\n        \"S19 / S3CB3 V\",\n        \"S20 / S3CB4 V\",\n        \"S21 / S3CB5 V\",\n        \"S22 / S3CB6 V\",\n        \"S23 / S3CB7 V\",\n        \"S24 / S3CB8 V\",\n        \"S25 / S4CB1 V\",\n        \"S26 / S4CB2 V\",\n        \"S27 / S4CB3 V\",\n        \"S28 / S4CB4 V\",\n        \"S29 / S4CB5 V\",\n        \"S30 / S4CB6 V\",\n        \"S31 / S4CB7 V\",\n        \"S32 / S4CB8 V\",\n      ];\n\n      heading.push(...voltageValues);\n    }\n\n    for (let i = 0; i < heading.length; i++) {\n      let invArray = [];\n      Array.from(Array(36).keys()).map((element, index) => {\n        invArray.push({ [\"inv\" + Number(index + 1)]: NaN });\n      });\n\n      try {\n        if (arrayFromObject[i][1]) {\n          invArray[0][\"inv1\"] = arrayFromObject[i][1];\n        }\n        for (let j = 1; j < 36; j++) {\n          if (arrayFromObject[heading.length * j + i][1]) {\n            invArray[j][\"inv\" + Number(j + 1)] =\n              arrayFromObject[heading.length * j + i][1];\n          }\n        }\n      } catch (error) {}\n\n      const invsObject = {};\n      invArray.forEach((value, index) => {\n        invsObject[\"inv\" + Number(index + 1)] =\n          value[\"inv\" + Number(index + 1)];\n      });\n\n      // console.log(invsObject);\n\n      arrayOfObjectsX.push({\n        heading: heading[i],\n        ...invsObject,\n      });\n    }\n\n    // console.log(\"arrayOfObjectsX\", arrayOfObjectsX);\n\n    setBlockTableObjects([...arrayOfObjectsX]);\n    // console.log(blockTableObjects);\n  };\n\n  const getInverterValues = (block, startTime, endTime, beginTime) => {\n    // console.log(\"getInverterValues function called\", block, startTime, endTime);\n    axios\n      .get(serverUrl + \"/badisidd/grid/B\" + String(block).padStart(2, 0), {\n        headers: {\n          jwtToken: userToken,\n          startTime: new Date(1632225600000).getTime(), // Sep 21, 2021 12:00:00 PM\n          endTime: endTime,\n          beginTime: beginTime,\n          enablePacket: getEnablePacket(),\n          clientPacketTime: timestamp,\n          isNext: getIsNext(),\n        },\n      })\n      .then((response) => {\n        // console.log(\"block and inverters\", block, response.data);\n        // console.log(\"Object Entries: \", Object.entries(response.data));\n        // format the data\n        formatInverterValues(response.data, block);\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n  };\n\n  const handleBlockChange = (event) => {\n    setBlockTableId(event.target.value);\n    let date = new Date();\n    date.setDate(new Date().getDate() - 1);\n    date.setHours(23, 50, 0, 0);\n\n    let fiveAM = new Date(mainTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getInverterValues(event.target.value, date.getTime(), mainTime, beginTime);\n  };\n\n  // Function to call above functions to get data related to badisidd site\n  const getSiteData = (endTime) => {\n    // console.log(\"getSiteData\", endTime);\n    // const midnight = new Date();\n    // // Handle crash by setting startTime to 11:50 pm.\n    // midnight.setDate(new Date().getDate() - 1);\n    // midnight.setHours(23, 50, 0, 0);\n    // const startTime = midnight.getTime();\n\n    const startTime = 1623696973 * 1000;\n    let newEndTime = endTime;\n\n    if (isTimeReset) {\n      newEndTime = Date.now();\n      // console.log(\"TIME TO FETCH 'newEndTime':\", newEndTime);\n    } else {\n      newEndTime = endTime;\n      // console.log(\"TIME TO FETCH:\", newEndTime);\n    }\n\n    let fiveAM = new Date(newEndTime);\n    fiveAM.setHours(5, 0, 0, 0);\n    let beginTime = fiveAM.getTime();\n\n    getStatusAndTime(startTime, newEndTime, beginTime);\n    getCardsValues(startTime, newEndTime, beginTime);\n    getTotalExport(startTime, newEndTime, beginTime);\n    getGeneration(startTime, newEndTime, beginTime);\n    getTemperatures(startTime, newEndTime, beginTime);\n    getWindDirectionAndSpeed(startTime, newEndTime, beginTime);\n    getIrradianceGenerationData(startTime, newEndTime, beginTime);\n    getInverterValues(blockTableId, startTime, newEndTime, beginTime);\n  };\n\n  // useEffect to fetch data related to badisidd site\n  useEffect(() => {\n    // console.log(\"useEffect to fetch data related to badisidd site\");\n\n    timeSliderLabel2 = document.getElementById(\"timeSliderLabel2\");\n\n    if (timeSliderLabel2) {\n      timeSliderLabel2.innerText = getFormattedTimeString(new Date());\n    }\n\n    getSiteData(mainTime);\n\n    // Fetch data every 2 minutes\n    const interval = setInterval(() => {\n      getSiteData(mainTime);\n    }, intervalTime);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [mainTime]);\n\n  const [justifyProp, setJustifyProp] = useState(\"space-between\");\n  useLayoutEffect(() => {\n    const x = window.matchMedia(\"(min-width: 1280px)\");\n    if (x.matches) {\n      setJustifyProp(\"space-between\");\n    } else {\n      setJustifyProp(\"flex-start\");\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        // spacing={4}\n        // style={{ paddingTop: \".5rem\" }}\n        // style={{ paddingLeft: \".25rem\", paddingRight: \"2rem\" }}\n        // style={{\n        //   position: \"fixed\",\n        //   alignSelf: \"flex-start\",\n        //   top: 0,\n        //   overflowY: \"auto\",\n        // }}\n      >\n        <SitestatusBar\n          sitestatusBar={sitestatusBar}\n          status={status}\n          timestamp={timestamp}\n          handleClickOpen={handleClickOpen}\n          handleTimeReset={handleTimeReset}\n          setIsNextCount={setIsNextCount}\n          setOpenDateTimePicker={setOpenDateTimePicker}\n          getMinDateForPicker={getMinDateForPicker}\n          selectedDate={selectedDate}\n          getFormattedDateAndTimeString={getFormattedDateAndTimeString}\n          openDateTimePicker={openDateTimePicker}\n          handleDateChange={handleDateChange}\n        />\n        {/* <Grid item>\n          <Grid container alignItems=\"center\">\n            <Grid item> */}\n        {/* <span style={{ fontSize: \"1.25rem\" }}>badisidd</span> */}\n        {/* <Typography variant=\"h6\">Badisidd</Typography>\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item> */}\n        {/* <span style={{ fontSize: \"1.25rem\" }}>40 MW</span> */}\n        {/* <Typography variant=\"h6\">300 MW</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton\n                // size=\"large\"\n                color=\"primary\"\n                onClick={() => handleClickOpen()}\n                style={{ paddingInline: \".5rem\" }}\n              >\n                <NoteAddRoundedIcon fontSize=\"5rem\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item style={{ paddingRight: \"5rem\" }}>\n          <Grid container>\n            <Grid item>\n              {status === 0 ? (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#f44336\" }}>\n                //   Offline\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#f44336\" }}>\n                  Offline\n                </Typography>\n              ) : (\n                // <span style={{ fontSize: \"1.25rem\", color: \"#4caf50\" }}>\n                //   Online\n                // </span>\n                <Typography variant=\"h6\" style={{ color: \"#4caf50\" }}>\n                  Online\n                </Typography>\n              )}\n            </Grid>\n            <Grid item style={{ margin: \"0 1rem\" }}></Grid>\n            <Grid item>\n              {timestamp === undefined ? (\n                <CircularProgress\n                  size={30}\n                  // style={{ marginRight: '.5rem' }}\n                />\n              ) : (\n                <Typography variant=\"h6\">\n                  {getFormattedDateAndTimeString(timestamp)}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item>\n          <Grid container>\n            <Grid item>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDateTimePicker\n                  style={{ width: 1, visibility: \"hidden\" }}\n                  value={selectedDate}\n                  open={openDateTimePicker}\n                  onClose={() => setOpenDateTimePicker(false)}\n                  onChange={handleDateChange}\n                  format=\"dd/MM/yyyy hh:mm a\"\n                  minDate={getMinDateForPicker()}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <SiteCalendar\n              setOpenDateTimePicker={setOpenDateTimePicker}\n              setIsNextCount={setIsNextCount}\n            />\n            <Grid item>\n              <IconButton\n                // variant=\"outlined\"\n                // color=\"primary\"\n                onClick={handleTimeReset}\n              >\n                <UpdateIcon color=\"primary\" fontSize=\"large\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n        {/* <Grid item className={classes.grow} /> */}\n        {/* <Grid item> */}\n        {/* <Grid container spacing={7}> */}\n        {/* <Grid item>\n              <ToggleButton\n                style={{ margin: \"0rem\" }}\n                value=\"check\"\n                size=\"small\"\n                selected={timeSliderActivated}\n                onChange={handleTimeSliderToggle}\n              >\n                {timeSliderActivated && (\n                  <Typography color=\"primary\" variant=\"h6\" id=\"timeSliderLabel\">\n                    00:00 AM\n                  </Typography>\n                )}\n                {!timeSliderActivated && (\n                  <Typography\n                    style={{ color: \"#4caf50\" }}\n                    variant=\"h6\"\n                    id=\"timeSliderLabel2\"\n                  >\n                    {getFormattedTimeString(new Date())}\n                  </Typography>\n                )}\n              </ToggleButton>\n            </Grid> */}\n\n        {/* <Grid item style={{ paddingRight: \"3rem\" }}>\n              <Slider\n                style={{ width: 300 }}\n                disabled={!timeSliderActivated}\n                onChangeCommitted={handleTimeSliderValueChange}\n                aria-labelledby=\"time-slider\"\n                valueLabelFormat={timeSliderLabelFormat}\n                min={0}\n                max={1440}\n                defaultValue={0}\n                marks={[\n                  {\n                    value: 1,\n                    label: getSliderStartDateLabel(),\n                  },\n                  {\n                    value: 1440,\n                    label: getSliderEndDateLabel(),\n                  },\n                ]}\n                valueLabelDisplay=\"off\"\n              />\n            </Grid> */}\n        {/* </Grid> */}\n        {/* </Grid> */}\n      </Grid>\n      <div style={{ marginTop: \"1.5rem\" }} />\n      <CustomCards\n        day_generation={cardsValues.day_generation}\n        revenue={cardsValues.day_generation * 1000 * 2.74}\n        peak_power={cardsValues.peak_power}\n        ghi={cardsValues.ghi1}\n        gti={cardsValues.gti1}\n        ghi2={cardsValues.ghi2}\n        gti2={cardsValues.gti2}\n        ghi3={cardsValues.ghi3}\n        gti3={cardsValues.gti3}\n        ghi4={cardsValues.ghi4}\n        gti4={cardsValues.gti4}\n        ghi5={cardsValues.ghi5}\n        gti5={cardsValues.gti5}\n        plant_pr={cardsValues.plant_pr}\n        grid_availability={cardsValues.grid_availability}\n        plant_availability={cardsValues.plant_availability}\n        cardsValues={cardsValues}\n      />\n      <Grid\n        container\n        // justify={justifyProp}\n        // className={classes.grow}\n        // spacing={2}\n        justifyContent=\"space-between\"\n        style={{ marginTop: \"1.5rem\" }}\n      >\n        <Grid item>\n          <PowerGenerationGauge totalExport={totalExport} maxValue={300} />\n        </Grid>\n\n        <Grid item>\n          <AmbientModuleTemp\n            ambientTemp={ambientTemp}\n            moduleTemp={moduleTemp}\n            humidity={humidity}\n            ambientTemp2={ambientTemp2}\n            moduleTemp2={moduleTemp2}\n            humidity2={humidity2}\n            temperatureData={temperatureData}\n          />\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        style={{ marginTop: \"1.5rem\" }}\n        // justifyContent=\"space-between\"\n      >\n        <Grid item>\n          <Wind\n            windDirection={windDirection}\n            windSpeed={windSpeed}\n            rain={rain}\n          />\n        </Grid>\n        <Grid item style={{ marginLeft: \"2rem\" }}>\n          <Wind2\n            windDirection={windDirection2}\n            windSpeed={windSpeed2}\n            rain={rain2}\n          />\n        </Grid>\n      </Grid>\n      <Card\n        elevation={6}\n        style={{ marginTop: \"2.5rem\", height: \"500px\", width: \"100%\" }}\n      >\n        <Typography\n          variant=\"h6\"\n          color=\"textSecondary\"\n          style={{\n            marginLeft: \"1.5rem\",\n            marginTop: \"1rem\",\n            marginBottom: \"1.5rem\",\n          }}\n        >\n          Irradiance / Generation\n        </Typography>\n\n        <BiaxialLineChart\n          data={irradianceGenerationData}\n          interval={12}\n          leftAxisY={[0, 1500]}\n          rightAxisY={[0, 300]}\n        />\n      </Card>\n\n      <Grid\n        container\n        style={{\n          marginTop: \"3rem\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid\n            container\n            spacing={2}\n            alignItems=\"center\"\n            style={{ marginBottom: \".5rem\" }}\n          >\n            <Grid item>\n              <Typography variant=\"h6\" color=\"textSecondary\">\n                Inverter Values\n              </Typography>\n            </Grid>\n            <Grid item className={classes.grow} />\n            <Grid item>\n              <Typography style={{ marginLeft: \".25rem\" }}>\n                Selected Block:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <Select value={blockTableId} onChange={handleBlockChange}>\n                  {Array.from(Array(24).keys()).map((element, index) => {\n                    return (\n                      <MenuItem value={index + 1}>\n                        B{String(index + 1).padStart(2, 0)}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <BlockTable values={blockTableObjects} block={blockTableId} />\n        </Grid>\n      </Grid>\n      {/* <Snackbar\n        open={timeSliderActivated}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Alert severity=\"info\">Time slider activated!</Alert>\n      </Snackbar> */}\n      <Snackbar\n        open={openTimeSliderSuccessAlert}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        autoHideDuration={4000}\n        onClose={handleTimeSliderToggleClose}\n      >\n        <Alert onClose={handleTimeSliderToggleClose} severity=\"success\">\n          {/* Time is reset to {getFormattedTimeString(new Date())} */}\n          Time is reset!\n        </Alert>\n      </Snackbar>\n      <div style={{ marginBottom: \"2rem\" }} />\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport NoteAddRoundedIcon from \"@material-ui/icons/NoteAddRounded\";\n// import SimpleDialogDemo from \"./SimpleDialog\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nexport default function Mltable({\n  data,\n  updateSite,\n  fromDate,\n  toDate,\n  handleClickOpen,\n  sendNotemsg,\n}) {\n  const rowsConst = 10;\n\n  const [page, setPage] = useState(0);\n\n  const [pageCount, setPageCount] = useState(0);\n\n  const [paginatedData, setPaginatedData] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      // console.log(data);\n      setPage(() => (data.length > 0 ? 1 : 0));\n      setPageCount(() =>\n        data.length > 0 ? Math.ceil(data.length / rowsConst) : 0\n      );\n      setPaginatedData(() => (data.length > 0 ? data.slice(0, rowsConst) : []));\n    }\n  }, [data]);\n\n  const handlePageChange = (event, value) => {\n    let paginatedData = data.slice(rowsConst * (value - 1), rowsConst * value);\n    setPaginatedData(paginatedData);\n    setPage(value);\n  };\n\n  //   const handleInverterUpdate = (row) => {\n  //     let userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n\n  //     if (\n  //       userDetails.role === \"admin\" &&\n  //       (userDetails.email === \"sumit.datablare@gmail.com\" ||\n  //         userDetails.email === \"veerpratap@acme.in\" ||\n  //         userDetails.email === \"aman@datablare.com\" ||\n  //         userDetails.email === \"acmeace@acme.in\")\n  //     ) {\n  //       // window.alert('The update feature is temporarily disabled.');\n  //       updateSite(row);\n  //     } else {\n  //       window.alert(\"The update is not allowed.\");\n  //     }\n  //   };\n\n  return (\n    <Grid container>\n      <TableContainer component={Paper} style={{ width: \"91vw\" }}>\n        <Table size=\"small\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow style={{ backgroundColor: \"#ffffbf\" }}>\n              <TableCell align=\"center\" style={{ zIndex: 101 }}>\n                Site\n              </TableCell>\n              <TableCell align=\"center\" style={{ zIndex: 101 }}>\n                Date time\n              </TableCell>\n              <TableCell align=\"center\" style={{ color: \"#000\" }}>\n                Actual PG\n              </TableCell>\n              {/* <TableCell style={{ color: \"#000\" }}>Ref.DT</TableCell> */}\n              <TableCell align=\"center\" style={{ color: \"#000\" }}>\n                Ref.PG\n              </TableCell>\n              <TableCell align=\"center\" style={{ color: \"#000\" }}>\n                Diff PG\n              </TableCell>\n              <TableCell align=\"center\" style={{ color: \"#000\" }}>\n                Diff PG High/Low\n              </TableCell>\n              {/* <TableCell style={{ color: \"#000\" }}>Inverters</TableCell> */}\n              {/* <TableCell style={{ color: \"#000\" }}>Status</TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                Billing Rates\n              </TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                DB Pool\n              </TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                System Id\n              </TableCell> */}\n              {/* <TableCell style={{ whiteSpace: \"nowrap\", color: \"#000\" }}>\n                System Ip\n              </TableCell> */}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {paginatedData.map((row, index) => {\n              return (\n                <TableRow\n                  key={row.index}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  {/* <TableCell style={{ zIndex: 1 }}>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleInverterUpdate(row)}\n                      style={{ paddingInline: \".5rem\" }}\n                    >\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                  </TableCell> */}\n                  {/* <TableCell style={{ zIndex: 1 }}>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleClickOpen(row)}\n                      style={{ paddingInline: \".5rem\" }}\n                    >\n                      <NoteAddRoundedIcon fontSize=\"small\" />\n                    </IconButton>\n                  </TableCell> */}\n                  {/* <TableCell component=\"th\" scope=\"row\">\n                    {row.id}\n                  </TableCell> */}\n                  <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                    {row.Sitename}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {/* {new Date(Number(row.Time * 1000)).toLocaleString()} */}\n                    {row.Time}\n                  </TableCell>\n                  <TableCell align=\"center\">{row.ActualPG}</TableCell>\n                  {/* <TableCell>{row.RefData}</TableCell> */}\n                  <TableCell align=\"center\">{row.RefPG}</TableCell>\n                  <TableCell align=\"center\">\n                    {/* {row.PowerDifference} */}\n                    {parseFloat(row.PowerDifference).toFixed(2)}\n                  </TableCell>\n                  <TableCell align=\"center\">{row.mesaage}</TableCell>\n                  {/* <TableCell>{row.}</TableCell> */}\n                  {/* <TableCell style={{ whiteSpace: \"nowrap\" }}>\n                    {row.systemid}\n                  </TableCell> */}\n                  {/* <TableCell>{row.systemip}</TableCell> */}\n                  {/* <TableCell>{row.nationalhead_email}</TableCell> */}\n                  {/* <TableCell>{row.zonalhead_email}</TableCell> */}\n                  {/* <TableCell>{row.siteincharge_email}</TableCell> */}\n                  {/* <TableCell>\n                    {row.mob_no && row.mob_no.length > 0\n                      ? row.mob_no.join(\",\")\n                      : \"\"}\n                  </TableCell> */}\n                  {/* <TableCell>{row.ho_coordinator}</TableCell> */}\n                  {/* <TableCell>\n                    {row.emails && row.emails.length > 0\n                      ? row.emails.join(\",\")\n                      : \"\"}\n                  </TableCell> */}\n                  {/* <TableCell>{row.editedby}</TableCell> */}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Grid\n        container\n        justify=\"flex-end\"\n        style={{ marginTop: \".25rem\", marginRight: \"1.2rem\" }}\n      >\n        <Grid item>\n          <Pagination\n            count={pageCount}\n            page={page}\n            onChange={handlePageChange}\n            shape=\"rounded\"\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport SiteRanking from \"../components/Performance/SiteRanking\";\nimport CustomCSV from \"./CustomCSV\";\nimport QuickCSV from \"../components/CSV/QuickCSV\";\nimport Prediction from \"../pages/Predictions\";\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Ml from \"./Ml\";\n\nconst useStyles = makeStyles({\n  tabs: {\n    \"& .MuiTabs-indicator\": {\n      backgroundColor: \"#148F77\",\n      // height: 3,\n    },\n    \"& .MuiTab-root.Mui-selected\": {\n      color: \"#148F77\",\n    },\n  },\n});\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scb-tab-${index}`,\n    \"aria-controls\": `scb-tabpanel-${index}`,\n  };\n}\n\nexport default function Mlprediction({ handleSessionExpire }) {\n  const [value, setValue] = React.useState(0);\n  const classes = useStyles();\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box>\n      <Tabs\n        style={{ color: \"#000000\" }}\n        className={classes.tabs}\n        value={value}\n        onChange={handleChange}\n        aria-label=\"analytics tabs\"\n        // indicatorColor=\"primary\"\n      >\n        <Tab label=\"ML Prediction\" {...a11yProps(0)} />\n        <Tab label=\"ML\" {...a11yProps(1)} />\n      </Tabs>\n\n      <TabPanel value={value} index={0}>\n        {/* <CustomCSV handleSessionExpire={handleSessionExpire} /> */}\n        <Prediction handleSessionExpire={handleSessionExpire} />\n      </TabPanel>\n      {/* <TabPanel value={value} index={1}>\n        <Ml />\n      </TabPanel> */}\n    </Box>\n  );\n}\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport axios from \"axios\";\nimport clsx from \"clsx\";\nimport \"date-fns\";\nimport moment from \"moment\";\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport Byagwat from \"../pages/Byagwat\";\nimport Kherakhurd from \"../pages/Kherakhurd\";\nimport InverterEfficiency from \"../pages/InverterEfficiency\";\nimport Predictions from \"../pages/Predictions\";\nimport Sites from \"../pages/Sites\";\nimport Hindupur from \"../pages/Hindupur\";\nimport Sircilla from \"../pages/Sircilla\";\nimport Gadarpur from \"../pages/Gadarpur\";\nimport ExportData from \"../pages/CustomCSV\";\nimport Yemmiganur from \"../pages/Yemmiganur\";\nimport BallotIcon from \"@material-ui/icons/Ballot\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport Mahoba from \"../pages/Mahoba\";\nimport Balangir from \"../pages/Balangir\";\nimport BhadlaL2 from \"../pages/BhadlaL2\";\nimport Jhandekalan from \"../pages/Jhandekalan\";\nimport Nangla from \"../pages/Nangla\";\nimport BhadlaL3 from \"../pages/BhadlaL3\";\nimport SCB from \"../pages/SCB\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport Fab from \"@material-ui/core/Fab\";\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\nimport {\n  Badge,\n  Box,\n  CircularProgress,\n  FormControlLabel,\n  FormLabel,\n  LinearProgress,\n  Paper,\n  Radio,\n  RadioGroup,\n  Tooltip,\n} from \"@material-ui/core\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport \"./CustomDrawer.css\";\nimport DoubleArrowIcon from \"@material-ui/icons/DoubleArrow\";\nimport ArrowLeftIcon from \"@material-ui/icons/ArrowLeft\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport Mankhera from \"../pages/Mankhera\";\nimport Jhunir from \"../pages/Jhunir\";\nimport Bhongir from \"../pages/Bhongir\";\nimport Padmajiwadi from \"../pages/Padmajiwadi\";\nimport Mothkur from \"../pages/Mothkur\";\nimport Sadashivpet from \"../pages/Sadashivpet\";\nimport Pattikonda from \"../pages/Pattikonda\";\nimport Rayachoti from \"../pages/Rayachoti\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport Bikaner from \"../pages/Bikaner\";\nimport Santhipuram from \"../pages/Santhipuram\";\nimport { SpaRounded } from \"@material-ui/icons\";\nimport Chittorgarh from \"../pages/Chittorgarh\";\nimport Chattisgarh from \"../pages/Chattisgarh\";\nimport Balanagar from \"../pages/Balanagar\";\nimport Kosigi from \"../pages/Kosigi\";\nimport Sandur from \"../pages/Sandur\";\nimport Kudligi from \"../pages/Kudligi\";\nimport Gulelgudda from \"../pages/Gulelgudda\";\nimport Hukkeri from \"../pages/Hukkeri\";\nimport AddSite from \"../pages/AddSite\";\nimport Kittur from \"../pages/Kittur\";\nimport Bazpur from \"../pages/Bazpur\";\nimport Baznagar from \"../pages/Bazpur\";\nimport Bidar from \"../pages/Bidar\";\nimport Sidlaghatta from \"../pages/Sidlaghatta\";\nimport Khilchipur from \"../pages/Khilchipur\";\nimport Khambhat from \"../pages/Khambhat\";\nimport Alerts from \"../pages/Alerts\";\nimport CustomDiagram from \"../pages/CustomDiagram\";\nimport Analytics from \"../pages/Analytics\";\nimport Performance from \"../pages/Performance\";\nimport Chittaguppa from \"../pages/Chittuguppa\";\nimport Chittuguppa from \"../pages/Chittuguppa\";\nimport Farhatabad from \"../pages/Farhatabad\";\nimport Godhur from \"../pages/Godhur\";\nimport Manthani from \"../pages/Manthani\";\nimport BankaM from \"../pages/BankaM\";\nimport BankaN from \"../pages/BankaN\";\nimport Maddur from \"../pages/Maddur\";\nimport CSV from \"../pages/CSV\";\nimport Admin from \"../pages/Admin\";\nimport Comparison from \"../components/Comparison/Comparison\";\nimport CustomSnackbar from \"../components/UI/CustomSnackbar\";\nimport { AppState } from \"../AppContext\";\nimport LossAnalytics from \"../pages/LossAnalytics\";\nimport InvertColorsIcon from \"@material-ui/icons/InvertColors\";\nimport Badisidd from \"../pages/Badisidd\";\nimport Mlprediction from \"../pages/Mlprediction\";\nimport NoteDialog from \"../components/Badisidd/NoteDialog\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst drawerWidth = 240;\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // height: 20,\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  sectionDesktop: {\n    // display: 'none',\n    // [theme.breakpoints.up('md')]: {\n    //   display: 'flex',\n    // },\n    display: \"flex\",\n  },\n  content: {\n    flexGrow: 1,\n    paddingTop: theme.spacing(1),\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n  },\n  flexContent: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  expandMoreIconButtonStyle: {\n    marginLeft: theme.spacing(0.5),\n  },\n  userNotificationIconButtonStyle: {\n    marginRight: theme.spacing(2),\n  },\n  companyNameStyle: {\n    marginRight: \"auto\",\n    marginLeft: theme.spacing(2),\n  },\n  modalCardStyle: {\n    width: 300,\n    height: \"fit-content\",\n  },\n  notificationAccordionheading: {\n    fontSize: theme.typography.pxToRem(11),\n    // flexBasis: \"45%\",\n    // flexShrink: 0,\n  },\n  notificationAccordionSubheading: {\n    fontSize: theme.typography.pxToRem(11),\n    color: theme.palette.text.secondary,\n  },\n  customizeToolbar: {\n    // maxHeight: 20\n  },\n  linearProgressPrimaryColor: {\n    backgroundColor: \"#00695C\",\n  },\n  inputOutlineColor: {\n    outlineColor: \"#21618C\",\n  },\n}));\n\nconst menuListItems = [\"SCB\"];\n\n// const modal = {\n//   openModal: false,\n//   modal: 'inverter',\n//   data: {}\n// }\n\nexport default function CustomDrawer(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  //Note feat to show message\n  const [open, setOpen] = React.useState(false);\n  const [showNotemsg, setShowNotemsg] = useState([]);\n  const [notesite, setNotesite] = useState(\"Badisidd\");\n\n  const handleClickOpen = (row) => {\n    // console.log(\"sites data\", row);\n    // setNotesite(row);\n    setOpen(true);\n    // getNotemsg();\n  };\n  const handleClosed = (value) => {\n    setOpen(false);\n    // setSelectedValue(value);\n  };\n\n  const history = useHistory();\n  const username = localStorage.getItem(\"username\", \"Admin\");\n  const userToken = localStorage.getItem(\"userToken\");\n  // const userId = localStorage.getItem('userId');\n\n  const { setEnableDarkTheme, enabledLinearProgress } = AppState();\n\n  // useEffect to check if user is logged in\n  useEffect(() => {\n    if (!userToken || userToken === \"\") {\n      history.push(\"/login\");\n      return;\n    }\n\n    axios\n      .post(\n        SERVER_URL + \"/admin/sitesDropdown\",\n        {\n          email: localStorage.getItem(\"userEmail\"),\n        },\n        {\n          headers: {\n            jwtToken: localStorage.getItem(\"userToken\"),\n            // jwtToken: jwtToken,\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\n          },\n        }\n      )\n      .then((response) => {\n        localStorage.setItem(\n          \"siteNamesCaps\",\n          JSON.stringify(response.data[0].siteNamesCaps)\n        );\n        localStorage.setItem(\n          \"siteNamesAndBlocks\",\n          JSON.stringify(response.data[0].siteNamesAndBlocks)\n        );\n      })\n      .catch((error) => {\n        localStorage.setItem(\"siteNamesCaps\", JSON.stringify([]));\n        localStorage.setItem(\"siteNamesAndBlocks\", JSON.stringify([]));\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n        }\n      });\n\n    if (localStorage.getItem(\"sitesSidePanelLocalStorage\")) {\n      setSitesSidePanelData(\n        JSON.parse(localStorage.getItem(\"sitesSidePanelLocalStorage\"))\n      );\n    }\n\n    const interval = setInterval(() => {\n      if (localStorage.getItem(\"sitesSidePanelLocalStorage\")) {\n        setSitesSidePanelData(\n          JSON.parse(localStorage.getItem(\"sitesSidePanelLocalStorage\"))\n        );\n      }\n    }, 360000);\n\n    fetchNotificationsData(userToken);\n\n    let notificationInterval = setInterval(() => {\n      fetchNotificationsData(userToken);\n    }, 360000);\n\n    return () => {\n      clearInterval(interval);\n      clearInterval(notificationInterval);\n    };\n  }, []);\n\n  const serverUrl = SERVER_URL;\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const [notificationsAnchorEl, setNotificationsAnchorEl] = useState(null);\n  const openNotificationsPopover = Boolean(notificationsAnchorEl);\n  const notificationsPopoverId = openNotificationsPopover\n    ? \"notifications-popover\"\n    : undefined;\n\n  const openAccountMenu = Boolean(anchorEl);\n\n  const getMenu = () => {\n    let userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n    let kies = userDetails.menu;\n    let menu = [];\n    kies.forEach((key) => {\n      if (key.includes(\"admin\")) {\n        menu.push(\"Admin\");\n      }\n      if (key.includes(\"sites\")) {\n        menu.push(\"Sites\");\n      }\n      if (key.includes(\"inverterEfficiency\")) {\n        menu.push(\"Inverter Efficiency\");\n      }\n      if (key.includes(\"ml\")) {\n        menu.push(\"ML Predictions\");\n      }\n      if (key.includes(\"scb\")) {\n        menu.push(\"SCB\");\n      }\n      if (key.includes(\"analytics\")) {\n        menu.push(\"Analytics\");\n      }\n      if (key.includes(\"performance\")) {\n        menu.push(\"Performance\");\n      }\n      if (key.includes(\"csv\")) {\n        menu.push(\"CSV\");\n      }\n      // menu.push(\"Loss Analytics\");\n      if (key.includes(\"alerts\")) {\n        menu.push(\"Alerts\");\n      }\n    });\n\n    return menu;\n  };\n\n  // Side menu list item index state\n  const [listItemIndex, setListItemIndex] = useState((prevState) => {\n    return !userToken || userToken === \"\"\n      ? history.push(\"/login\")\n      : getMenu().find((menu) => menu === \"Sites\")\n      ? \"Sites\"\n      : !userToken || userToken === \"\"\n      ? history.push(\"/login\")\n      : getMenu()[0];\n  });\n\n  // Selected site states\n  const [selectedSite, setSelectedSite] = useState(\"none\");\n  const [isSiteSelected, setIsSiteSelected] = useState(true);\n\n  /**\n   * States and Functions related to Download Excel Modal\n   */\n  // downloadExcelModal state\n  const [toggleDownloadExcelModal, setToggleDownloadExcelModal] =\n    useState(false);\n\n  // Show or hide download excel alert\n  const [displayDownloadExcelAlert, setDisplayDownloadExcelAlert] =\n    useState(false);\n  const [noDataFound, setNoDataFound] = useState(false);\n  const [disabledDownloadExcelButton, setDisabledDownloadExcelButton] =\n    useState(false);\n\n  // From and To dates states for Excel\n  const [excelFromDate, setExcelFromDate] = useState(() => {\n    let prevDay = new Date();\n    prevDay.setDate(new Date().getDate() - 1);\n    prevDay.setHours(0, 0, 0, 0);\n    return prevDay.getTime();\n  });\n  const [excelToDate, setExcelToDate] = useState(() => {\n    let day = new Date();\n    day.setHours(23, 59, 59, 999);\n    return day.getTime();\n  });\n\n  const handleExcelFromDate = (date) => {\n    let fromDate = new Date(date);\n    let fromDateTime = fromDate.getTime();\n    // console.log(\"From date by picker\", fromDate);\n    setExcelFromDate(fromDateTime);\n  };\n\n  const handleExcelToDate = (date) => {\n    let toDate = new Date(date);\n    toDate.setHours(23, 59, 59, 999);\n    let toDateTime = toDate.getTime();\n    // console.log(\"To date by picker\", toDate);\n    setExcelToDate(toDateTime);\n  };\n\n  const handleModalClose = () => {\n    setModalState((prevState) => {\n      return {\n        openModal: false,\n        openCSVModal: false,\n        openTicketModal: false,\n        openInverterModal: false,\n        openInverterScbModal: false,\n        openSiteEditModal: false,\n      };\n    });\n  };\n\n  const handleSiteChange = (event) => {\n    setIsSiteSelected(true);\n    setSelectedSite(event.target.value);\n  };\n\n  const handleDownloadExcelButtonClick = () => {\n    if (selectedSite === \"none\") {\n      try {\n        setIsSiteSelected(false);\n      } finally {\n        return;\n      }\n    }\n\n    // Reset alerts\n    try {\n      setIsSiteSelected(true);\n      setDisabledDownloadExcelButton(true);\n      setDisplayDownloadExcelAlert(false);\n      setNoDataFound(false);\n    } finally {\n      let isDifferenceNegative = compareExcelDates(excelFromDate, excelToDate);\n\n      if (isDifferenceNegative) {\n        setDisplayDownloadExcelAlert(isDifferenceNegative);\n        setDisabledDownloadExcelButton(false);\n      } else {\n        getExcelFile();\n      }\n    }\n  };\n\n  const getExcelFile = () => {\n    // console.log(\"getExcelFile function called...\");\n\n    // console.log(\"selectedSite\", selectedSite);\n\n    // if (\n    //   selectedSite === \"Chattisgarh\" ||\n    //   selectedSite === \"Byagwat\" ||\n    //   selectedSite === \"Kherakhurd\" ||\n    //   selectedSite === \"Hindupur\" ||\n    //   selectedSite === \"Sircilla\" ||\n    //   selectedSite === \"Gadarpur\" ||\n    //   selectedSite === \"Yemmiganur\"\n    // ) {\n    let selectedSiteCopy = String(selectedSite).includes(\"Banka\")\n      ? selectedSite.replace(/ +/g, \"\")\n      : selectedSite;\n\n    if (selectedSiteCopy === \"Bhadla L2\") {\n      selectedSiteCopy = \"bhadlal2\";\n    }\n    if (selectedSiteCopy === \"Bhadla L3\") {\n      selectedSiteCopy = \"bhadlal3\";\n    }\n    if (selectedSiteCopy !== \"Hindpur\") {\n      let fileName1 = selectedSiteCopy + \"_wms_mcr\";\n      let fileName2 = selectedSiteCopy + \"_inverters\";\n      try {\n        getExportData(\n          1,\n          `${serverUrl}/${selectedSiteCopy.toLowerCase()}/excel${1}`,\n          fileName1\n        );\n      } finally {\n        getExportData(\n          2,\n          `${serverUrl}/${selectedSiteCopy.toLowerCase()}/excel${2}`,\n          fileName2\n        );\n      }\n    } else {\n      let fileName1 = selectedSiteCopy + \"_wms_mcr\";\n      getExportData(1, `${serverUrl}/reports/${selectedSiteCopy}`, fileName1);\n    }\n  };\n\n  const getExportData = (number, route, fileName) => {\n    // console.log(route);\n    // console.log(\n    //   \"Inside getExortData\",\n    //   new Date(excelFromDate),\n    //   new Date(excelToDate)\n    // );\n    // console.log(route);\n    axios\n      .post(\n        route,\n        {\n          fromDate: new Date(excelFromDate).getTime(),\n          toDate: new Date(excelToDate).getTime(),\n        },\n        {\n          headers: {\n            jwtToken: userToken,\n            responseType: \"blob\",\n          },\n        }\n      )\n      .then((response) => {\n        // console.log(response);\n        // Code to download csv/ excel\n        const downloadUrl = window.URL.createObjectURL(\n          new Blob([response.data])\n        );\n        const link = document.createElement(\"a\");\n        link.href = downloadUrl;\n        let fromDate = new Date(excelFromDate);\n        let toDate = new Date(excelToDate);\n        let filename = `${fileName}_${fromDate.getDate()}_${\n          fromDate.getMonth() + 1\n        }_${fromDate.getFullYear()}-${toDate.getDate()}_${\n          toDate.getMonth() + 1\n        }_${toDate.getFullYear()}.csv`;\n        link.setAttribute(\"download\", filename);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        setDisabledDownloadExcelButton(false);\n        handleModalClose();\n      })\n      .catch((error) => {\n        // console.log(error);\n        setNoDataFound(true);\n        setDisabledDownloadExcelButton(false);\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n        }\n      });\n  };\n\n  const compareExcelDates = (from, to) => {\n    let fromDate = new Date(from).getTime();\n    let toDate = new Date(to).getTime();\n\n    let differenceInTime = toDate - fromDate;\n\n    // console.log(differenceInTime);\n\n    if (differenceInTime >= 0) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const getSiteNames = () => {\n    let siteNames = localStorage.getItem(\"siteNames\");\n    // console.log(\"siteNames\", siteNames);\n    if (siteNames !== null) {\n      let siteNamesArray = siteNames.split(\",\");\n      // console.log(siteNamesArray);\n      return siteNamesArray;\n    }\n  };\n\n  const handleDrawerOpen = () => {\n    setOpenDrawer(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpenDrawer(false);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleNotificationsClose = () => {\n    setNotificationsAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    // console.log(\"logout\");\n    handletokenlogout();\n    setAnchorEl(null);\n    localStorage.clear();\n    history.replace(\"/login\");\n  };\n\n  const handletokenlogout = () => {\n    axios\n      .post(SERVER_URL + \"/user/logout\", {})\n      .then((response) => {})\n      .catch((error) => {});\n  };\n\n  const handleSessionExpire = () => {\n    localStorage.setItem(\"isAuthSnackbarOpened\", true);\n    handleLogout();\n    window.location.reload();\n  };\n\n  const [modalState, setModalState] = useState({\n    openModal: false,\n    openCSVModal: false,\n  });\n\n  const handleModalStateChange = (key) => {\n    // setModalState((prevState) => )\n  };\n\n  const [clickedNotificationData, setClickedNotificationData] = useState({});\n\n  const handleNotificationClick = (row) => {\n    setClickedNotificationData(row);\n    setModalState({ openModal: true, openCSVModal: true });\n  };\n\n  const handleListItemMenuClick = (index, text) => {\n    switch (text) {\n      case \"Admin\":\n        setListItemIndex(\"Admin\");\n        setSelectedSiteFromChild(\"\");\n        break;\n      case \"Sites\":\n        setListItemIndex(\"Sites\");\n        setSelectedSiteFromChild(\"\");\n        break;\n      case \"Inverter Efficiency\":\n        setListItemIndex(\"Inverter Efficiency\");\n        setSelectedSiteFromChild(\"\");\n        break;\n      case \"ML Predictions\":\n        setListItemIndex(\"ML Predictions\");\n        setSelectedSiteFromChild(\"\");\n        break;\n      case \"SCB\":\n        setListItemIndex(\"SCB\");\n        setSelectedSiteFromChild(\"\");\n        break;\n      case \"Analytics\":\n        setListItemIndex(\"Analytics\");\n        setSelectedSiteFromChild(\"\");\n        break;\n      case \"Performance\":\n        setListItemIndex(\"Performance\");\n        setSelectedSiteFromChild(\"\");\n        break;\n      case \"CSV\":\n        setListItemIndex(\"CSV\");\n        setSelectedSiteFromChild(\"\");\n        break;\n      case \"Alerts\":\n        setListItemIndex(\"Alerts\");\n        setSelectedSiteFromChild(\"\");\n        break;\n      // case 9:\n      //   setListItemIndex(9);\n      //   setSelectedSiteFromChild(\"\");\n      //   break;\n      default:\n        // setToggleDownloadExcelModal(true);\n        setModalState((prevState) => {\n          return { openModal: true, openCSVModal: false };\n        });\n        compareExcelDates(excelFromDate, excelToDate);\n    }\n  };\n\n  /**\n   * Functions related to site page/ component change\n   */\n  const [selectedSiteFromChild, setSelectedSiteFromChild] = useState(\"\");\n  const [sitestatusBar, setSitestatusBar] = useState({});\n\n  const handleSiteClick = (row) => {\n    // console.log(row, \"--745\");\n    setSitestatusBar(row);\n    setSelectedSiteFromChild(row.name);\n    setNotesite(row.name);\n    getNotemsg();\n  };\n\n  /**\n   * END of functions related to site page/ component change\n   */\n\n  // Side panel for sites\n  const [openSitesSidePanel, setOpenSitesSidePanel] = useState(false);\n  const [sitesSidePanelData, setSitesSidePanelData] = useState({\n    totalSites: 0,\n    totalCapacity: 0,\n    online: 0,\n    offline: 0,\n  });\n\n  const handleSitesSidePanelBtnClick = (event) => {\n    // console.log(openSitesSidePanel);\n    setOpenSitesSidePanel((prevState) => {\n      let sidePanel = document.getElementById(\"sitesSidePanel\");\n      prevState\n        ? (sidePanel.style.right = \"-320px\")\n        : (sidePanel.style.right = \"0px\");\n      return !prevState;\n    });\n  };\n\n  // Side panel for SCB\n  const [openSidePanel, setOpenSidePanel] = useState(false);\n\n  const handleSideNotificationsBtnClick = (event) => {\n    // let sitesSidePanel = document.getElementById(\"sitesSidePanel\");\n    // if (openSidePanel) {\n    //   setOpenSitesSidePanel(false);\n    //   sitesSidePanel.style.right = \"-320px\";\n    //   sitesSidePanel.style.display = \"block\";\n    // } else {\n    //   sitesSidePanel.style.display = \"none\";\n    // }\n\n    setOpenSidePanel((prevState) => {\n      let sidePanel = document.getElementById(\"sidePanel\");\n      prevState\n        ? (sidePanel.style.right = \"-320px\")\n        : (sidePanel.style.right = \"0px\");\n      return !prevState;\n    });\n  };\n\n  const [totalNotifications, setTotalNotifications] = useState();\n\n  const [notificationsData, setNotificationsData] = useState([]);\n\n  const getFormattedDateForNotification = (timestamp) => {\n    let date = new Date(timestamp);\n    let dateString = `${date.getDate()}/${Number(date.getMonth() + 1)}`;\n\n    return <span>{date.toLocaleTimeString()}</span>;\n  };\n\n  const getFormattedTitleForNotification = (siteName, alarm, ticket) => {\n    let title = `${String(siteName).charAt(0).toUpperCase()}${String(\n      siteName\n    ).slice(1)} - ${alarm} Down`;\n    return title;\n  };\n\n  const fetchNotificationsData = (jwtToken) => {\n    axios\n      .post(\n        SERVER_URL + \"/notification/logs\",\n        { email: localStorage.getItem(\"userEmail\") },\n        {\n          headers: {\n            // email: localStorage.getItem(\"userEmail\"),\n            jwtToken: jwtToken,\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\n            // \"Access-Control-Allow-Credential\": true,\n          },\n        }\n      )\n      .then((response) => {\n        // console.log(\"notifications\", response.data);\n        setNotificationsData(response.data);\n        setTotalNotifications(response.data.length);\n      })\n      .catch((error) => {\n        // console.log(\"notifications\", error);\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n        }\n      });\n  };\n\n  const [notificationNewStatus, setNotificationNewStatus] = useState(\"\");\n\n  const handleNotificationNewStatusChange = (status) => {\n    setNotificationNewStatus(status);\n  };\n\n  const notificationRemarksRef = useRef();\n\n  const notificationTextAreaInputChange = () => {\n    if (notificationRemarksRef.current.value !== \"\") {\n      setDisabledNotificationSubmitBtn(false);\n    } else {\n      setDisabledNotificationSubmitBtn(true);\n    }\n  };\n\n  let [disabledNotificationSubmitBtn, setDisabledNotificationSubmitBtn] =\n    useState(true);\n\n  const handleNotificationSubmit = (ticketNumber, site, alarm) => {\n    let jwtToken = localStorage.getItem(\"userToken\");\n\n    setDisabledNotificationSubmitBtn(true);\n\n    let notificationStatus =\n      notificationNewStatus === \"\" ? \"Open\" : notificationNewStatus;\n\n    // console.log(\n    //   ticketNumber,\n    //   site,\n    //   alarm,\n    //   notificationRemarksRef.current.value,\n    //   notificationStatus\n    // );\n\n    // console.log(localStorage.getItem(\"alertsTable\"));\n\n    axios\n      .post(\n        SERVER_URL + \"/notification/logs/response\",\n        {\n          ticket: ticketNumber,\n          remarks: notificationRemarksRef.current.value,\n          status: notificationStatus,\n          site: site,\n          alarm: alarm,\n          table: localStorage.getItem(\"alertsTable\"),\n        },\n        {\n          headers: {\n            jwtToken: jwtToken,\n          },\n        }\n      )\n      .then((response) => {\n        // console.log(response.data);\n        setModalState({ openModal: false, openCSVModal: false });\n        setDisabledNotificationSubmitBtn(false);\n        fetchNotificationsData(localStorage.getItem(\"userToken\"));\n      })\n      .catch((error) => {\n        // console.log(err);\n        setModalState({ openModal: false, openCSVModal: false });\n        setDisabledNotificationSubmitBtn(false);\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n        }\n      });\n  };\n  const [alertData, setAlertData] = useState();\n  const handleTicketModal = (row) => {\n    // console.log(row);\n    setAlertData(row);\n    setModalState({\n      openModal: true,\n      openCSVModal: false,\n      openTicketModal: true,\n    });\n  };\n\n  const [selectedInverter, setSelectedInverter] = useState({});\n  const [selectedInverterScb, setSelectedInverterScb] = useState({});\n  const [checked, setChecked] = React.useState(true);\n\n  const [selectedSiteEdit, setSelectedSiteEdit] = useState({});\n\n  const [snackbarState, setSnackbarState] = useState({\n    open: false,\n    severity: \"info\",\n    message: \"snackbar\",\n  });\n\n  const handleToggle = (bool) => {\n    setSnackbarState((prevState) => ({ ...prevState, open: bool }));\n  };\n\n  const [refreshInverterTable, setRefreshInverterTable] = useState({});\n  const [refreshSiteEditTable, setRefreshSiteEditTable] = useState({});\n\n  const updateInverter = (row) => {\n    // console.log(row);\n    setSelectedInverter(row);\n    setModalState((prevState) => ({\n      ...prevState,\n      openModal: true,\n      openInverterModal: true,\n    }));\n  };\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const updateInverterScb = (row) => {\n    // console.log(row);\n    setSelectedInverterScb(row);\n    setModalState((prevState) => ({\n      ...prevState,\n      openModal: true,\n      openInverterScbModal: true,\n    }));\n  };\n\n  const updateSite = (row) => {\n    // console.log(row);\n    setSelectedSiteEdit(row);\n    setModalState((prevState) => ({\n      ...prevState,\n      openModal: true,\n      openSiteEditModal: true,\n    }));\n  };\n\n  const handleUpdateInverter = () => {\n    axios\n      .post(\n        SERVER_URL + \"/manageinverters/edit\",\n        { ...selectedInverter },\n        {\n          jwtToken: localStorage.getItem(\"userToken\"),\n        }\n      )\n      .then((response) => {\n        setModalState((prevState) => ({\n          ...prevState,\n          openModal: false,\n          openInverterModal: false,\n          openCSVModal: false,\n          openTicketModal: false,\n        }));\n        setSnackbarState((prevState) => ({\n          ...prevState,\n          open: true,\n          severity: \"success\",\n          message: `Inverter: ${selectedInverter.inverter} updated!`,\n        }));\n        setRefreshInverterTable(response.data);\n      })\n      .catch((error) => {\n        setSnackbarState((prevState) => ({\n          ...prevState,\n          open: true,\n          severity: \"error\",\n          message: \"Update failed!\",\n        }));\n        setRefreshInverterTable(error);\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n        }\n      });\n  };\n  console.log(\"962---scb\", selectedInverterScb);\n  const handleUpdateInverterScb = () => {\n    axios\n      .post(\n        SERVER_URL + \"/scbUpdate/update\",\n        { ...selectedInverterScb },\n        {\n          jwtToken: localStorage.getItem(\"userToken\"),\n        }\n      )\n      .then((response) => {\n        console.log(\"==scb\", response);\n        setModalState((prevState) => ({\n          ...prevState,\n          openModal: false,\n          openInverterScbModal: false,\n          openCSVModal: false,\n          openTicketModal: false,\n        }));\n        setSnackbarState((prevState) => ({\n          ...prevState,\n          open: true,\n          severity: \"success\",\n          message: `Inverter: ${selectedInverterScb.inverter} updated!`,\n        }));\n        setRefreshInverterTable(response.data);\n      })\n      .catch((error) => {\n        setSnackbarState((prevState) => ({\n          ...prevState,\n          open: true,\n          severity: \"error\",\n          message: \"Update failed!\",\n        }));\n        setRefreshInverterTable(error);\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n        }\n      });\n  };\n\n  const handleUpdateSite = () => {\n    axios\n      .post(\n        SERVER_URL + \"/sitemaster/edit\",\n        { ...selectedSiteEdit, email: localStorage.getItem(\"userEmail\") },\n        {\n          jwtToken: localStorage.getItem(\"userToken\"),\n        }\n      )\n      .then((response) => {\n        // console.log(response.data);\n        setModalState((prevState) => ({\n          ...prevState,\n          openModal: false,\n          openSiteEditModal: false,\n          openCSVModal: false,\n          openTicketModal: false,\n        }));\n        setSnackbarState((prevState) => ({\n          ...prevState,\n          open: true,\n          severity: \"success\",\n          message: `Site: ${selectedSiteEdit.sitename} updated!`,\n        }));\n        setRefreshSiteEditTable(response.data);\n      })\n      .catch((error) => {\n        setSnackbarState((prevState) => ({\n          ...prevState,\n          open: true,\n          severity: \"error\",\n          message: \"Update failed!\",\n        }));\n        setRefreshSiteEditTable(error);\n        if (error?.response?.status === 401) {\n          handleSessionExpire();\n        }\n      });\n  };\n\n  const getNotemsg = () => {\n    // console.log(\"Get Note msg hit\", notesite);\n    // setEnabledLinearProgress(true);\n    axios\n      .post(SERVER_URL + \"/api/users/get/messages\", {\n        site: notesite,\n        // noteMsg: notemsg,\n      })\n      .then((response) => {\n        // console.log(\"inside then\", response.data);\n        const data = response.data;\n        setShowNotemsg(data);\n\n        // setSnackbarState((prevState) => ({\n        //   ...prevState,\n        //   open: true,\n        //   severity: \"success\",\n        //   message: `Site: ${selectedSite.sitename} updated!`,\n        // }));\n\n        // handleView();\n        // setEnabledLinearProgress(false);\n      })\n      .catch((err) => {\n        // setSnackbarState((prevState) => ({\n        //   ...prevState,\n        //   open: true,\n        //   severity: \"error\",\n        //   message: \"Update failed!\",\n        // }));\n        // handleView();\n        // setEnabledLinearProgress(false);\n      });\n  };\n\n  useEffect(() => {\n    getNotemsg();\n  }, [notesite]);\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: openDrawer,\n        })}\n      >\n        <Toolbar className={classes.customizeToolbar}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: openDrawer,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            className={classes.grow}\n            style={{ textAlign: \"center\", paddingLeft: \"7.5rem\" }}\n          >\n            ACME ACE\n          </Typography>\n          <div className={classes.sectionDesktop}>\n            <div>\n              <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <IconButton\n                  color=\"inherit\"\n                  style={{ marginRight: \".5rem\" }}\n                  onClick={() => setEnableDarkTheme((prevState) => !prevState)}\n                >\n                  <InvertColorsIcon />\n                </IconButton>\n                <IconButton\n                  aria-label=\"notification count\"\n                  color=\"inherit\"\n                  style={{ marginRight: \"1.25rem\" }}\n                  onClick={() => {\n                    setOpenSidePanel((prevState) => {\n                      if (totalNotifications > 0) {\n                        let sidePanel = document.getElementById(\"sidePanel\");\n                        prevState\n                          ? (sidePanel.style.right = \"-320px\")\n                          : (sidePanel.style.right = \"0px\");\n                        return !prevState;\n                      } else {\n                        return prevState;\n                      }\n                    });\n                  }}\n                >\n                  <Badge badgeContent={totalNotifications} color=\"secondary\">\n                    <NotificationsIcon />\n                  </Badge>\n                </IconButton>\n                <Typography>{username}</Typography>\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"expand more icon button\"\n                  color=\"inherit\"\n                  onClick={handleMenu}\n                  size=\"small\"\n                  className={classes.expandMoreIconButtonStyle}\n                >\n                  <ExpandMoreIcon />\n                </IconButton>\n              </Grid>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={openAccountMenu}\n                onClose={handleClose}\n              >\n                {/* <MenuItem onClick={handleClose}>Profile</MenuItem> */}\n                <MenuItem onClick={handleLogout}>Log out</MenuItem>\n              </Menu>\n              <Popover\n                id={notificationsPopoverId}\n                open={false}\n                anchorEl={notificationsAnchorEl}\n                onClose={handleNotificationsClose}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"right\",\n                }}\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n              >\n                <Paper\n                  style={{\n                    padding: \"1rem\",\n                    maxWidth: \"300px\",\n                  }}\n                >\n                  <Accordion>\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls=\"panel1a-content\"\n                      id=\"panel1a-header\"\n                    >\n                      <Typography\n                        className={classes.notificationAccordionheading}\n                      >\n                        23/06 10:10\n                      </Typography>\n                      <Typography\n                        className={classes.notificationAccordionSubheading}\n                        style={{ color: \"orange\" }}\n                      >\n                        SCB\n                      </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <Typography>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                      </Typography>\n                    </AccordionDetails>\n                  </Accordion>\n                  <Accordion>\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls=\"panel2a-content\"\n                      id=\"panel2a-header\"\n                    >\n                      <Typography\n                        className={classes.notificationAccordionheading}\n                      >\n                        23/06 18:20\n                      </Typography>\n                      <Typography\n                        className={classes.notificationAccordionSubheading}\n                        style={{ color: \"orange\" }}\n                      >\n                        SCB\n                      </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <Typography>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                      </Typography>\n                    </AccordionDetails>\n                  </Accordion>\n                </Paper>\n              </Popover>\n            </div>\n          </div>\n        </Toolbar>\n        {enabledLinearProgress && (\n          <Box sx={{ width: \"100%\" }}>\n            <LinearProgress style={{ backgroundColor: \"#2874A6 \" }} />\n          </Box>\n        )}\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: openDrawer,\n          [classes.drawerClose]: !openDrawer,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: openDrawer,\n            [classes.drawerClose]: !openDrawer,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          {/* <AppsIcon /> */}\n          <Typography\n            color=\"textSecondary\"\n            className={classes.companyNameStyle}\n          >\n            {moment(new Date()).format(\"ll\")}\n          </Typography>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {username &&\n            !username.includes(\"Gadarpur\") &&\n            getMenu().map((text, index) => (\n              <ListItem\n                button\n                key={text}\n                selected={text === listItemIndex}\n                onClick={() => handleListItemMenuClick(index, text)}\n              >\n                <ListItemIcon\n                  key={text + `icon`}\n                  style={{ marginLeft: \".4rem\" }}\n                >\n                  {text === \"Admin\" ? (\n                    <img\n                      src=\"/static/images/mainMenu/admin.png\"\n                      alt=\"admin\"\n                      width=\"28\"\n                    />\n                  ) : text === \"Sites\" ? (\n                    <img\n                      src=\"/static/images/mainMenu/dashboard.png\"\n                      alt=\"sites\"\n                      width=\"28\"\n                    />\n                  ) : // <DashboardIcon />\n                  // ) : index === 1 ? (\n                  //   <div\n                  //     style={{\n                  //       width: \"1.4rem\",\n                  //       height: \"1.4rem\",\n                  //       borderRadius: \"4px\",\n                  //       color: \"#fff\",\n                  //       backgroundColor: \"#626262\",\n                  //       display: \"flex\",\n                  //       justifyContent: \"center\",\n                  //       alignItems: \"center\",\n                  //     }}\n                  //   >\n                  //     <Typography>B</Typography>\n                  //   </div>\n                  text === \"Inverter Efficiency\" ? (\n                    <img\n                      src=\"/static/images/mainMenu/efficiency.png\"\n                      alt=\"efficiency\"\n                      width=\"26\"\n                    />\n                  ) : // <BarChartIcon />\n                  text === \"ML Predictions\" ? (\n                    <img\n                      src=\"/static/images/mainMenu/prediction.png\"\n                      alt=\"prediction\"\n                      width=\"30\"\n                    />\n                  ) : text === \"SCB\" ? (\n                    <img\n                      src=\"/static/images/mainMenu/scb.png\"\n                      alt=\"scb\"\n                      width=\"25\"\n                    />\n                  ) : text === \"Analytics\" ? (\n                    <img\n                      src=\"/static/images/mainMenu/analytics.png\"\n                      alt=\"analytics\"\n                      width=\"28\"\n                    />\n                  ) : text === \"Performance\" ? (\n                    <img\n                      src=\"/static/images/mainMenu/performance.png\"\n                      alt=\"performance\"\n                      width=\"28\"\n                    />\n                  ) : text === \"CSV\" ? (\n                    <img\n                      src=\"/static/images/mainMenu/customCSV.png\"\n                      alt=\"custom csv\"\n                      width=\"28\"\n                    />\n                  ) : text === \"Alerts\" ? (\n                    <img\n                      src=\"/static/images/mainMenu/alerts.png\"\n                      alt=\"alerts\"\n                      width=\"28\"\n                    />\n                  ) : text === \"Loss Analytics\" ? (\n                    <img\n                      src=\"/static/images/mainMenu/lossAnalytics.png\"\n                      alt=\"loss analytics\"\n                      width=\"26\"\n                    />\n                  ) : (\n                    <img\n                      src=\"/static/images/mainMenu/quickCSV.png\"\n                      alt=\"quick csv\"\n                      width=\"28\"\n                    />\n                    // <CloudDownloadIcon />\n                  )}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          {username &&\n            username.includes(\"Gadarpur\") &&\n            [\"SCB\"].map((text, index) => (\n              <ListItem\n                button\n                key={text}\n                selected={index === listItemIndex}\n                onClick={() => handleListItemMenuClick(index)}\n              >\n                <ListItemIcon key={text}>\n                  {index === 0 && (\n                    <img\n                      src=\"/static/images/mainMenu/scb.png\"\n                      alt=\"scb\"\n                      width=\"25\"\n                    />\n                  )}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n        </List>\n      </Drawer>\n      <main\n        id=\"sitesSidePanel\"\n        className={classes.content}\n        style={{\n          position: \"fixed\",\n          right: \"-320px\",\n          transition: \"0.5s\",\n          top: \"21vh\",\n          padding: 0,\n          pointerEvents: \"none\",\n          zIndex: 101,\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            width: \"360px\",\n          }}\n        >\n          <IconButton onClick={handleSitesSidePanelBtnClick} size=\"small\">\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                // backgroundColor: \"#EC7063\",\n                backgroundColor: \"#2874A6\",\n                paddingBlock: \".5rem\",\n                paddingInline: \".5rem\",\n                borderRadius: \"5px\",\n                pointerEvents: \"auto\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"10px\",\n                }}\n              >\n                {/* <InfoIcon style={{ color: \"white\" }} fontSize=\"small\" /> */}\n                <em style={{ color: \"white\", fontWeight: \"bold\" }}>i</em>\n                <DoubleArrowIcon\n                  style={{ color: \"white\" }}\n                  className={\n                    openSitesSidePanel\n                      ? \"doubleArrowIconRight\"\n                      : \"doubleArrowIconLeft\"\n                  }\n                  fontSize=\"small\"\n                />\n              </div>\n            </div>\n          </IconButton>\n          <Paper\n            style={{\n              margin: \".25rem\",\n              padding: \".5rem\",\n              // maxHeight: \"200px\",\n              // overflowY: \"scroll\",\n              width: \"335px\",\n              backgroundColor: \"white\",\n              // display: \"flex\",\n            }}\n            // className=\"notificationsPaperBackgroundDark\"\n            elevation={1}\n          >\n            <Typography\n              className={classes.notificationAccordionheading}\n              style={{ color: \"#000\" }}\n            >\n              Total Sites: {sitesSidePanelData.totalSites}&emsp;\n            </Typography>\n            <Typography\n              className={classes.notificationAccordionheading}\n              style={{ color: \"#000\" }}\n            >\n              Total Capacity:{\" \"}\n              {Number(sitesSidePanelData.totalCapacity).toFixed(0)} {/* 1714 */}\n              <small>MW</small>\n            </Typography>\n            {/* <br /> */}\n            <Typography\n              style={{ color: \"green\" }}\n              className={classes.notificationAccordionheading}\n            >\n              Online: {sitesSidePanelData.online}&emsp;\n            </Typography>\n            <Typography\n              style={{ color: \"red\" }}\n              className={classes.notificationAccordionheading}\n            >\n              Offline: {sitesSidePanelData.offline}\n            </Typography>\n          </Paper>\n        </div>\n      </main>\n      <main\n        id=\"sidePanel\"\n        className={classes.content}\n        style={{\n          position: \"fixed\",\n          right: \"-320px\",\n          transition: \"0.5s\",\n          top: \"35vh\",\n          padding: 0,\n\n          pointerEvents: \"auto\",\n          zIndex: 101,\n        }}\n      >\n        <div style={{ display: \"flex\", alignItems: \"center\", width: \"360px\" }}>\n          <IconButton\n            onClick={handleSideNotificationsBtnClick}\n            disabled={notificationsData.length === 0}\n            size=\"small\"\n            style={{ pointerEvents: \"auto\" }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"#EC7063\",\n                paddingBlock: \".5rem\",\n                paddingInline: \".5rem\",\n                borderRadius: \"5px\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"10px\",\n                }}\n              >\n                <NotificationsIcon\n                  style={{ color: \"white\" }}\n                  fontSize=\"small\"\n                />\n                <DoubleArrowIcon\n                  style={{ color: \"white\" }}\n                  className={\n                    openSidePanel\n                      ? \"doubleArrowIconRight\"\n                      : \"doubleArrowIconLeft\"\n                  }\n                  fontSize=\"small\"\n                />\n              </div>\n            </div>\n          </IconButton>\n          <div\n            style={{\n              width: \"320px\",\n              padding: \".3rem\",\n              maxHeight: \"390px\",\n              overflowY: \"scroll\",\n            }}\n            className=\"notificationsPaperBackground\"\n          >\n            {notificationsData.length > 0 &&\n              notificationsData.map((element, index) => {\n                return (\n                  <Accordion\n                    key={element.timestamp}\n                    onClick={(e) => {\n                      localStorage.setItem(\"alertsTable\", \"notification_open\");\n                      handleNotificationClick(element);\n                    }}\n                    expanded={false}\n                    style={{ pointerEvents: \"auto\", marginBottom: \"-0.9rem\" }}\n                  >\n                    <AccordionSummary\n                      // expandIcon={<ExpandMoreIcon />}\n\n                      aria-controls=\"alert-content\"\n                      id=\"alert-header\"\n                    >\n                      <Typography\n                        // variant=\"body2\"\n                        className={classes.notificationAccordionheading}\n                      >\n                        {getFormattedDateForNotification(\n                          element.timestamp * 1000\n                        )}\n                      </Typography>\n                      <span style={{ marginInline: \".5rem\" }}></span>\n                      <Typography\n                        // variant=\"body2\"\n\n                        className={classes.notificationAccordionSubheading}\n                        style={{ color: \"red\" }}\n                      >\n                        <span style={{ color: \"black\" }}>\n                          {element.ticket}\n                          &emsp;\n                        </span>\n                        {getFormattedTitleForNotification(\n                          element.site,\n                          element.alarm\n                        )}\n                      </Typography>\n                    </AccordionSummary>\n                    {/* <AccordionDetails\n                      style={{ paddingTop: \"0rem\", paddingBottom: \".75rem\" }}\n                    >\n                      <Typography\n                        style={{ fontSize: \".75rem\", cursor: \"pointer\" }}\n                        title=\"Click to open detail\"\n                        onClick={() => handleNotificationClick(index)}\n                      >\n                        {element.issue}\n                      </Typography>\n                    </AccordionDetails> */}\n                  </Accordion>\n                );\n              })}\n          </div>\n        </div>\n      </main>\n      {listItemIndex === \"Admin\" &&\n        selectedSiteFromChild === \"\" &&\n        username &&\n        !username.includes(\"Gadarpur\") && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Admin\n              updateInverter={updateInverter}\n              updateInverterScb={updateInverterScb}\n              refreshInverterTable={refreshInverterTable}\n              refreshSiteEditTable={refreshSiteEditTable}\n              updateSite={updateSite}\n              handleSessionExpire={handleSessionExpire}\n            />\n          </main>\n        )}\n      {listItemIndex === \"Sites\" &&\n        selectedSiteFromChild === \"\" &&\n        username &&\n        !username.includes(\"Gadarpur\") && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            {/* <Comparison /> */}\n            <Sites\n              handleSiteClickInParent={handleSiteClick}\n              handleSessionExpire={handleSessionExpire}\n              setOpen={setOpen}\n              open={open}\n              setShowNotemsg={setShowNotemsg}\n\n              // handleClickOpen={handleClickOpen}\n            />\n          </main>\n        )}\n      {listItemIndex === \"Inverter Efficiency\" &&\n        username &&\n        !username.includes(\"Gadarpur\") && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <InverterEfficiency handleSessionExpire={handleSessionExpire} />\n          </main>\n        )}\n      {listItemIndex === \"ML Predictions\" &&\n        username &&\n        !username.includes(\"Gadarpur\") && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Mlprediction handleSessionExpire={handleSessionExpire} />\n          </main>\n        )}\n      {/* {listItemIndex === 'SCB' ||\n        (listItemIndex === 0 && username && username.includes(\"Gadarpur\") && (\n          <main className={classes.content} style={{ paddingRight: 0 }}>\n            <div className={classes.toolbar} />\n            <SCB handleSessionExpire={handleSessionExpire} />\n          </main>\n        ))\n      } */}\n      {listItemIndex === \"SCB\" && (\n        <main className={classes.content} style={{ paddingRight: 0 }}>\n          <div className={classes.toolbar} />\n          <SCB handleSessionExpire={handleSessionExpire} />\n        </main>\n      )}\n      {listItemIndex === \"Analytics\" &&\n        username &&\n        !username.includes(\"Gadarpur\") && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Analytics handleSessionExpire={handleSessionExpire} />\n          </main>\n        )}\n      {listItemIndex === \"Performance\" &&\n        username &&\n        !username.includes(\"Gadarpur\") && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Performance handleSessionExpire={handleSessionExpire} />\n          </main>\n        )}\n      {listItemIndex === \"CSV\" &&\n        username &&\n        !username.includes(\"Gadarpur\") && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <CSV handleSessionExpire={handleSessionExpire} />\n          </main>\n        )}\n      {/* {listItemIndex === 8 && username && !username.includes(\"Gadarpur\") && (\n        <main className={classes.flexContent}>\n          <div className={classes.toolbar} />\n          <LossAnalytics />\n        </main>\n      )} */}\n      {listItemIndex === \"Alerts\" &&\n        username &&\n        !username.includes(\"Gadarpur\") && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Alerts\n              handleSessionExpire={handleSessionExpire}\n              handleTicketModal={handleTicketModal}\n              handleNotificationClick={handleNotificationClick}\n            />\n          </main>\n        )}\n\n      <noscript>Render site on click</noscript>\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Byagwat\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Byagwat\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Kherakhurd\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Kherakhurd\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Hindupur\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Hindupur\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Sircilla\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Sircilla\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Gadarpur\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Gadarpur\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Yemmiganur\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Yemmiganur\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Mahoba\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Mahoba\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Balangir\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Balangir\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Bhadla L2\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <BhadlaL2\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Jhandekalan\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Jhandekalan\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Bhadla L3\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <BhadlaL3\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Nangla\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Nangla\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Mankhera\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Mankhera\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Jhunir\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Jhunir\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Bhongir\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Bhongir\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Padmajiwadi\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Padmajiwadi\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Mothkur\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Mothkur\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Sadashivpet\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Sadashivpet\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Pattikonda\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Pattikonda\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Rayachoti\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Rayachoti\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Bikaner\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Bikaner\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Santhipuram\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Santhipuram\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Chittorgarh\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Chittorgarh\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Chattisgarh\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Chattisgarh\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Balanagar\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Balanagar\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Kosigi\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Kosigi\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Sandur\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Sandur\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Kudligi\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Kudligi\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Gulelgudda\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Gulelgudda\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Hukkeri\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Hukkeri\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Kittur\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Kittur\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Bazpur\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Bazpur\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Sidlaghatta\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Sidlaghatta\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Khilchipur\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Khilchipur\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Khambhat\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Khambhat\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Bidar\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Bidar\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Chittuguppa\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Chittuguppa\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" &&\n        selectedSiteFromChild === \"Farhatabad\" && (\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Farhatabad\n              handleSessionExpire={handleSessionExpire}\n              handleClickOpen={handleClickOpen}\n              sitestatusBar={sitestatusBar}\n            />\n          </main>\n        )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Godhur\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Godhur\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Manthani\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Manthani\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Banka M\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <BankaM\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Banka N\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <BankaN\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Maddur\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Maddur\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n      {selectedSiteFromChild !== \"\" && selectedSiteFromChild === \"Badisidd\" && (\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Badisidd\n            handleSessionExpire={handleSessionExpire}\n            handleClickOpen={handleClickOpen}\n            sitestatusBar={sitestatusBar}\n          />\n        </main>\n      )}\n\n      <noscript>Download Excel File Modal</noscript>\n      <Modal\n        open={modalState.openModal}\n        onClose={handleModalClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          // paddingTop: \"10rem\",\n          alignItems: \"center\",\n        }}\n      >\n        {modalState.openCSVModal ? (\n          <Card\n            style={{\n              outline: \"none\",\n              paddingInline: \"1rem\",\n              paddingTop: \".8rem\",\n              paddingBottom: \".9rem\",\n              width: 350,\n            }}\n            elevation={4}\n          >\n            <Grid container spacing={3}>\n              <Grid item>\n                <Typography>\n                  {new Date(\n                    clickedNotificationData.timestamp * 1000\n                  ).toLocaleTimeString()}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  style={{\n                    color:\n                      clickedNotificationData.state === \"critical\"\n                        ? \"red\"\n                        : \"blue\",\n                  }}\n                >\n                  {clickedNotificationData.site[0].toUpperCase()}\n                  {clickedNotificationData.site.slice(1)} -{\" \"}\n                  {clickedNotificationData.alarm} Down\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid container style={{ marginTop: \".5rem\" }}>\n              <Grid item>\n                <Typography variant=\"body2\">\n                  Ticket: {clickedNotificationData.ticket}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid container style={{ marginTop: \".5rem\" }}>\n              <Grid item>\n                <Typography variant=\"body2\">\n                  State: {clickedNotificationData.state[0].toUpperCase()}\n                  {clickedNotificationData.state.slice(1)}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid container style={{ marginTop: \".75rem\" }}>\n              <Grid item>\n                <Typography variant=\"body2\">\n                  Description:&nbsp;\n                  {clickedNotificationData.issue}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid container style={{ marginTop: \"1rem\" }}>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Status</FormLabel>\n                <RadioGroup\n                  row\n                  aria-label=\"notification-status\"\n                  name=\"notification-status-radio-group\"\n                  onChange={(event) =>\n                    handleNotificationNewStatusChange(event.target.value)\n                  }\n                  defaultValue={clickedNotificationData.status}\n                >\n                  <FormControlLabel\n                    value=\"Open\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"Open\"\n                  />\n                  <FormControlLabel\n                    value=\"Pending\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"Pending\"\n                  />\n                  <FormControlLabel\n                    value=\"Resolved\"\n                    control={<Radio color=\"primary\" />}\n                    label=\"Resolved\"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <form onSubmit={(e) => e.preventDefault()}>\n              <Grid container style={{ marginTop: \".25rem\" }}>\n                <Grid item style={{ width: \"100%\" }}>\n                  <textarea\n                    placeholder={clickedNotificationData.remarks}\n                    rows=\"4\"\n                    style={{\n                      width: \"100%\",\n                    }}\n                    className=\"textarea\"\n                    ref={notificationRemarksRef}\n                    onChange={notificationTextAreaInputChange}\n                  />\n                </Grid>\n              </Grid>\n              <Grid\n                container\n                spacing={1}\n                justifyContent=\"flex-end\"\n                style={{ marginTop: \".1rem\" }}\n              >\n                <Grid item>\n                  <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onClick={() => {\n                      setModalState({ openModal: false, openCSVModal: false });\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={() => {\n                      handleNotificationSubmit(\n                        clickedNotificationData.ticket,\n                        clickedNotificationData.site,\n                        clickedNotificationData.alarm\n                      );\n                    }}\n                    disabled={\n                      clickedNotificationData.status === \"Resolved\"\n                        ? true\n                        : disabledNotificationSubmitBtn\n                    }\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </Card>\n        ) : modalState.openTicketModal ? (\n          <Card elevation={1} style={{ padding: \".75rem\" }}>\n            <div>\n              Ticket: <span style={{ color: \"blue\" }}>{alertData.ticket}</span>\n            </div>\n            <div style={{ marginBlock: \".2rem\" }} />\n            <div>Remarks: {alertData.remarks}</div>\n          </Card>\n        ) : modalState.openInverterModal ? (\n          <Card\n            style={{\n              outline: \"none\",\n              paddingInline: \"1rem\",\n              paddingTop: \".8rem\",\n              paddingBottom: \".9rem\",\n              width: 690,\n            }}\n            elevation={4}\n          >\n            <Grid container justifyContent=\"center\">\n              <Grid item>\n                <Typography color=\"primary\" variant=\"h6\">\n                  Update Inverter\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid container style={{ marginTop: \".25rem\" }} spacing={4}>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}>Id:</span>\n                {selectedInverter.id}\n              </Grid>\n              {/* <Grid item>Id: {selectedInverter.id}</Grid> */}\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}>Site:</span>\n                {selectedInverter.sitename}\n              </Grid>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}>Block:</span>\n                {selectedInverter.block}\n              </Grid>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}>Inverter:</span>\n                {selectedInverter.inverter}\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={1} style={{ marginTop: \".75rem\" }}>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}> Group: </span>\n                <input\n                  style={{ outlineColor: \"#21618C\" }}\n                  placeholder={selectedInverter.inv_group}\n                  onChange={(e) =>\n                    setSelectedInverter((prevState) => ({\n                      ...prevState,\n                      inv_group: e.target.value,\n                    }))\n                  }\n                  size=\"10\"\n                />\n              </Grid>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}> Make: </span>\n                <input\n                  style={{ outlineColor: \"#21618C\" }}\n                  placeholder={selectedInverter.inverter_make}\n                  onChange={(e) =>\n                    setSelectedInverter((prevState) => ({\n                      ...prevState,\n                      inverter_make: e.target.value,\n                    }))\n                  }\n                  size=\"10\"\n                />\n              </Grid>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}> Number: </span>\n                <input\n                  style={{ outlineColor: \"#21618C\" }}\n                  placeholder={selectedInverter.inverter_num}\n                  onChange={(e) =>\n                    setSelectedInverter((prevState) => ({\n                      ...prevState,\n                      inverter_num: e.target.value,\n                    }))\n                  }\n                  size=\"10\"\n                />\n              </Grid>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}> Type: </span>\n                <input\n                  style={{ outlineColor: \"#21618C\" }}\n                  placeholder={selectedInverter.inverter_type}\n                  onChange={(e) =>\n                    setSelectedInverter((prevState) => ({\n                      ...prevState,\n                      inverter_type: e.target.value,\n                    }))\n                  }\n                  size=\"11\"\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={1} style={{ marginTop: \".5rem\" }}>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}> Mod Rating: </span>\n                <input\n                  style={{ outlineColor: \"#21618C\" }}\n                  placeholder={selectedInverter.module_rating}\n                  onChange={(e) =>\n                    setSelectedInverter((prevState) => ({\n                      ...prevState,\n                      module_rating: e.target.value,\n                    }))\n                  }\n                  size=\"6\"\n                />\n              </Grid>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}> Peak 1: </span>\n                <input\n                  style={{ outlineColor: \"#21618C\" }}\n                  placeholder={selectedInverter.peak1}\n                  onChange={(e) =>\n                    setSelectedInverter((prevState) => ({\n                      ...prevState,\n                      peak1: e.target.value,\n                    }))\n                  }\n                  size=\"9\"\n                />\n              </Grid>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}>Peak 2: </span>\n                <input\n                  style={{ outlineColor: \"#21618C\" }}\n                  placeholder={selectedInverter.peak1}\n                  onChange={(e) =>\n                    setSelectedInverter((prevState) => ({\n                      ...prevState,\n                      peak2: e.target.value,\n                    }))\n                  }\n                  size=\"11\"\n                />\n              </Grid>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}> SCB Con: </span>\n                <input\n                  style={{ outlineColor: \"#21618C\" }}\n                  placeholder={selectedInverter.scb_connected}\n                  onChange={(e) =>\n                    setSelectedInverter((prevState) => ({\n                      ...prevState,\n                      scb_connected: e.target.value,\n                    }))\n                  }\n                  size=\"7\"\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={1} style={{ marginTop: \".5rem\" }}>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}>Slots: </span>\n                <input\n                  style={{ outlineColor: \"#21618C\" }}\n                  placeholder={selectedInverter.slots}\n                  onChange={(e) =>\n                    setSelectedInverter((prevState) => ({\n                      ...prevState,\n                      slots: e.target.value,\n                    }))\n                  }\n                  size=\"11\"\n                />\n              </Grid>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}> Strings Con: </span>\n                <input\n                  style={{ outlineColor: \"#21618C\" }}\n                  placeholder={selectedInverter.strings_connected}\n                  onChange={(e) =>\n                    setSelectedInverter((prevState) => ({\n                      ...prevState,\n                      strings_connected: e.target.value,\n                    }))\n                  }\n                  size=\"5\"\n                />\n              </Grid>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}> Omega Id: </span>\n                <input\n                  style={{ outlineColor: \"#21618C\" }}\n                  placeholder={selectedInverter.omegaid}\n                  onChange={(e) =>\n                    setSelectedInverter((prevState) => ({\n                      ...prevState,\n                      omegaid: e.target.value,\n                    }))\n                  }\n                  size=\"9\"\n                />\n              </Grid>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}> Tech Email: </span>\n                <input\n                  style={{ outlineColor: \"#21618C\" }}\n                  placeholder={selectedInverter.email}\n                  onChange={(e) =>\n                    setSelectedInverter((prevState) => ({\n                      ...prevState,\n                      email: e.target.value,\n                    }))\n                  }\n                  size=\"6\"\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={1} style={{ marginTop: \".5rem\" }}>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}> Tech Name: </span>\n                <input\n                  style={{ outlineColor: \"#21618C\" }}\n                  placeholder={selectedInverter.techname}\n                  onChange={(e) =>\n                    setSelectedInverter((prevState) => ({\n                      ...prevState,\n                      techname: e.target.value,\n                    }))\n                  }\n                  size=\"6\"\n                />\n              </Grid>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}> Clipping Threshold: </span>\n                <input\n                  style={{ outlineColor: \"#21618C\" }}\n                  placeholder={selectedInverter.clipping_threshold}\n                  onChange={(e) =>\n                    setSelectedInverter((prevState) => ({\n                      ...prevState,\n                      clipping_threshold: e.target.value,\n                    }))\n                  }\n                  size=\"1\"\n                />\n              </Grid>\n            </Grid>\n\n            <Grid\n              container\n              style={{ marginTop: \"1rem\" }}\n              spacing={1}\n              justifyContent=\"center\"\n            >\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"small\"\n                  onClick={handleUpdateInverter}\n                >\n                  Update\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  onClick={handleModalClose}\n                >\n                  Cancel\n                </Button>\n              </Grid>\n            </Grid>\n          </Card>\n        ) : modalState.openInverterScbModal ? (\n          <Card\n            style={{\n              outline: \"none\",\n              paddingInline: \"1rem\",\n              paddingTop: \".8rem\",\n              paddingBottom: \".9rem\",\n              width: 990,\n              pointerEvents: \"auto\",\n              // height: 500,\n            }}\n            elevation={4}\n          >\n            <Grid container justifyContent=\"center\">\n              <Grid item>\n                <Typography color=\"primary\" variant=\"h6\">\n                  Update Inverter-Scb\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={4}>\n              {/* <Grid item>Id: {selectedInverter.id}</Grid> */}\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}>Site:</span>\n                {selectedInverterScb.sitename}\n              </Grid>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}>Block:</span>{\" \"}\n                {selectedInverterScb.block}\n              </Grid>\n              <Grid item>\n                <span style={{ color: \"#21618C\" }}>Inverter:</span>{\" \"}\n                {selectedInverterScb.inverter}\n              </Grid>\n            </Grid>\n\n            {/* <Grid container style={{ marginTop: \".75rem\" }} spacing={1}> */}\n            <Grid\n              container\n              direction=\"row\"\n              justifyContent=\"flex-start\"\n              alignItems=\"flex-start\"\n              // style={{ marginTop: \"1rem\" }}\n            >\n              <Grid\n                container\n                // spacing={1}\n                alignItems=\"center\"\n                // style={{ marginLeft: \"0.2rem\" }}\n              >\n                <Grid item>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s1_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s1_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S1:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s1}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s1: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.7rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S1-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s1_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s1_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s2_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s2_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S2:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s2}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s2: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S2-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s2_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s2_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n\n                {/* <Grid container style={{ marginTop: \".5rem\" }}> */}\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s3_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s3_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S3:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s3}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s3: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.8rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S3-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s3_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s3_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s4_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s4_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.5rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S4:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s4}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s4: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.9rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S4-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s4_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s4_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid\n                container\n                // spacing={1}\n                alignItems=\"center\"\n                style={{ marginTop: \"2px\" }}\n              >\n                <Grid item>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s5_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s5_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S5:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s5}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s5: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.7rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S5-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s5_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s5_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s6_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s6_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.5rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S6:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s6}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s6: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                {/* <Grid container style={{ marginTop: \".5rem\" }}> */}\n                <Grid item style={{ marginLeft: \"0.9rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S6-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s6_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s6_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s7_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s7_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S7:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s7}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s7: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.8rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S7-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s7_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s7_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s8_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s8_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.5rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S8:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s8}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s8: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.9rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S8-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s8_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s8_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n              </Grid>\n              <Grid\n                container\n                // spacing={1}\n                alignItems=\"center\"\n                style={{ marginTop: \"2px\" }}\n              >\n                <Grid item>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s9_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s9_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.3rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S9:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s9}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s9: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.9rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S9-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s9_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s9_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s10_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s10_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S10:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s10}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s10: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.5rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S10-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s10_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s10_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s11_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s11_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S11:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s11}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s11: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S11-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s11_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s11_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s12_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s12_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S12:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s12}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s12: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S12-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s12_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s12_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n              </Grid>\n              <Grid\n                container\n                alignItems=\"center\"\n                // spacing={1}\n                style={{ marginTop: \"2px\" }}\n              >\n                <Grid item>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s13_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s13_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S13:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s13}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s13: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S13-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s13_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s13_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s14_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s14_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S14:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s14}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s14: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S14-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s14_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s14_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n\n                {/* </Grid> */}\n\n                {/* <Grid container style={{ marginTop: \".5rem\" }}> */}\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s15_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s15_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S15:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s15}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s15: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S15-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s15_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s15_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s16_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s16_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S16:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s16}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s16: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                {/* <Grid container style={{ marginTop: \".5rem\" }}> */}\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S16-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s16_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s16_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n              </Grid>\n              <Grid\n                container\n                alignItems=\"center\"\n                // spacing={1}\n                style={{ marginTop: \"2px\" }}\n              >\n                <Grid item>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s17_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s17_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S17:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s17}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s17: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S17-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s17_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s17_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s18_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s18_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S18:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s18}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s18: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S18-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s18_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s18_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s19_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s19_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S19:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s19}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s19: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S19-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s19_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s19_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s20_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s20_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S20:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s20}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s20: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S20-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s20_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s20_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n              </Grid>\n              <Grid\n                container\n                alignItems=\"center\"\n                // spacing={1}\n                style={{ marginTop: \"2px\" }}\n              >\n                <Grid item>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s21_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s21_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S21:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s21}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s21: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S21-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s21_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s21_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s22_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s22_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S22:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s22}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s22: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S22-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s22_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s22_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n\n                {/* <Grid container style={{ marginTop: \".5rem\" }}> */}\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s23_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s23_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S23:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s23}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s23: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S23-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s23_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s23_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s24_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s24_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S24:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s24}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s24: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S24-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s24_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s24_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid\n                container\n                alignItems=\"center\"\n                // spacing={1}\n                style={{ marginTop: \"2px\" }}\n              >\n                <Grid item>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s25_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s25_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S25:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s25}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s25: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S25-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s25_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s25_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s26_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s26_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S26:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s26}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s26: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                {/* <Grid container style={{ marginTop: \".5rem\" }}> */}\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S26-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s26_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s26_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s27_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s27_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S27:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s27}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s27: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S27-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s27_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s27_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s28_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s28_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S28:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s28}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s28: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S28-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s28_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s28_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n              </Grid>\n              <Grid\n                container\n                alignItems=\"center\"\n                // spacing={1}\n                style={{ marginTop: \"2px\" }}\n              >\n                <Grid item>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s29_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s29_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S29:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s29}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s29: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S29-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s29_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s29_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s30_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s30_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S30:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s30}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s30: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S30-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s30_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s30_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s31_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s31_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S31:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s31}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s31: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S31-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s31_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s31_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"1rem\" }}>\n                  <GreenCheckbox\n                    checked={selectedInverterScb.s32_status}\n                    color=\"primary\"\n                    size=\"small\"\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s32_status: e.target.checked,\n                      }))\n                    }\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Grid>\n                <Grid item>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S32:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s32}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s32: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n                <Grid item style={{ marginLeft: \"0.4rem\" }}>\n                  <span style={{ fontSize: \"0.8rem\", color: \"#21618C\" }}>\n                    S32-Field:{\" \"}\n                  </span>\n                  <input\n                    style={{ height: \"1.5rem\", outlineColor: \"#21618C\" }}\n                    placeholder={selectedInverterScb.s32_field}\n                    onChange={(e) =>\n                      setSelectedInverterScb((prevState) => ({\n                        ...prevState,\n                        s32_field: e.target.value,\n                      }))\n                    }\n                    size=\"2\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n\n            <Grid\n              container\n              style={{ marginTop: \"1rem\" }}\n              spacing={1}\n              justifyContent=\"center\"\n            >\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"small\"\n                  onClick={handleUpdateInverterScb}\n                >\n                  Update\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  onClick={handleModalClose}\n                >\n                  Cancel\n                </Button>\n              </Grid>\n            </Grid>\n          </Card>\n        ) : modalState.openSiteEditModal ? (\n          <Card\n            style={{\n              outline: \"none\",\n              paddingInline: \"1rem\",\n              paddingTop: \".8rem\",\n              paddingBottom: \".9rem\",\n              width: 550,\n            }}\n            elevation={4}\n          >\n            <Grid container justifyContent=\"center\">\n              <Grid item>\n                <Typography color=\"primary\" variant=\"h6\">\n                  Update Site\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid container style={{ marginTop: \".25rem\" }} spacing={2}>\n              <Grid item>\n                <strong>Id: </strong>\n                {selectedSiteEdit.id}\n              </Grid>\n              <Grid item>\n                <strong>Site: </strong>\n                {selectedSiteEdit.sitename}\n              </Grid>\n              <Grid item>\n                <strong>Capacity: </strong>\n                {selectedSiteEdit.capacity} MW\n              </Grid>\n              <Grid item>\n                <strong>Blocks: </strong>\n                {selectedSiteEdit.totalblocks}\n              </Grid>\n              <Grid item>\n                <strong>Inverters: </strong>\n                {selectedSiteEdit.inverters}\n              </Grid>\n              <Grid item>\n                <strong>Status: </strong>\n                {selectedSiteEdit.status}\n              </Grid>\n              <Grid item>\n                <strong>System Id: </strong>\n                {selectedSiteEdit.systemid}\n              </Grid>\n            </Grid>\n\n            <Grid container style={{ marginTop: \".75rem\" }} spacing={1}>\n              <Grid item>\n                Capacity:{\" \"}\n                <input\n                  placeholder={selectedSiteEdit.capacity}\n                  onChange={(e) =>\n                    setSelectedSiteEdit((prevState) => ({\n                      ...prevState,\n                      capacity: e.target.value,\n                    }))\n                  }\n                  size=\"5\"\n                />\n              </Grid>\n              <Grid item>\n                Billing Rate:{\" \"}\n                <input\n                  placeholder={selectedSiteEdit.billingrates}\n                  onChange={(e) =>\n                    setSelectedSiteEdit((prevState) => ({\n                      ...prevState,\n                      billingrates: e.target.value,\n                    }))\n                  }\n                  size=\"5\"\n                />\n              </Grid>\n              <Grid item>\n                System IP:{\" \"}\n                <input\n                  placeholder={selectedSiteEdit.systemip}\n                  onChange={(e) =>\n                    setSelectedSiteEdit((prevState) => ({\n                      ...prevState,\n                      systemip: e.target.value,\n                    }))\n                  }\n                  size=\"12\"\n                />\n              </Grid>\n            </Grid>\n\n            <Grid\n              container\n              style={{ marginTop: \".8rem\" }}\n              spacing={1}\n              justifyContent=\"center\"\n            >\n              <Grid item>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"small\"\n                  onClick={handleUpdateSite}\n                >\n                  Update\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onClick={handleModalClose}\n                >\n                  Cancel\n                </Button>\n              </Grid>\n            </Grid>\n          </Card>\n        ) : (\n          // <Card\n          //   className={classes.modalCardStyle}\n          //   style={{\n          //     outline: \"none\",\n          //     textAlign: \"center\",\n          //     paddingBottom: \"1rem\",\n          //   }}\n          // >\n          //   <CardContent>\n          //     <Typography variant=\"h6\" color=\"primary\">\n          //       Excel File\n          //     </Typography>\n          //     <FormControl\n          //       style={{\n          //         width: \"85%\",\n          //         textAlign: \"left\",\n          //         marginTop: \"1rem\",\n          //         marginBottom: \".5rem\",\n          //       }}\n          //     >\n          //       <InputLabel id=\"site-select-helper-label\">Site</InputLabel>\n          //       <Select\n          //         labelId=\"site-select-helper-label\"\n          //         id=\"site-select-helper\"\n          //         value={selectedSite}\n          //         onChange={handleSiteChange}\n          //       >\n          //         <MenuItem value=\"none\">\n          //           <em style={{ color: \"#9e9e9e\" }}>None</em>\n          //         </MenuItem>\n          //         {getSiteNames() &&\n          //           getSiteNames().map((siteName) => (\n          //             <MenuItem key={siteName} value={siteName}>\n          //               {siteName}\n          //             </MenuItem>\n          //           ))}\n          //       </Select>\n          //       {!isSiteSelected && (\n          //         <FormHelperText>\n          //           <span style={{ color: \"red\" }}>Select a site</span>\n          //         </FormHelperText>\n          //       )}\n          //     </FormControl>\n          //     <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          //       <KeyboardDatePicker\n          //         style={{ width: \"85%\" }}\n          //         disableToolbar\n          //         variant=\"inline\"\n          //         format=\"dd/MM/yyyy\"\n          //         margin=\"normal\"\n          //         id=\"from-date-picker-inline\"\n          //         label=\"From\"\n          //         value={excelFromDate}\n          //         onChange={handleExcelFromDate}\n          //         autoOk={true}\n          //       />\n          //       <KeyboardDatePicker\n          //         style={{ width: \"85%\" }}\n          //         disableToolbar\n          //         variant=\"inline\"\n          //         format=\"dd/MM/yyyy\"\n          //         margin=\"normal\"\n          //         id=\"to-date-picker-inline\"\n          //         label=\"To\"\n          //         value={excelToDate}\n          //         onChange={handleExcelToDate}\n          //         autoOk={true}\n          //       />\n          //     </MuiPickersUtilsProvider>\n          //   </CardContent>\n          //   <Button\n          //     variant=\"outlined\"\n          //     color=\"primary\"\n          //     onClick={handleDownloadExcelButtonClick}\n          //     disabled={disabledDownloadExcelButton}\n          //     size=\"large\"\n          //     style={{\n          //       width: \"75%\",\n          //       marginTop: \".3rem\",\n          //       marginBottom: \".5rem\",\n          //     }}\n          //     // disabled\n          //   >\n          //     Download\n          //   </Button>\n          //   {displayDownloadExcelAlert && (\n          //     <div\n          //       style={{\n          //         marginTop: \"1rem\",\n          //         marginBottom: \".5rem\",\n          //       }}\n          //     >\n          //       <span style={{ color: \"#ff9800\", fontSize: \"1rem\" }}>\n          //         Select larger 'To' date.\n          //       </span>\n          //     </div>\n          //   )}\n          //   {noDataFound && (\n          //     <div\n          //       style={{\n          //         marginTop: \"1rem\",\n          //         marginBottom: \".5rem\",\n          //       }}\n          //     >\n          //       <span style={{ color: \"#ff9800\", fontSize: \"1rem\" }}>\n          //         No data found.\n          //         <br />\n          //         Try selecting different dates.\n          //       </span>\n          //     </div>\n          //   )}\n          // </Card>\n          <></>\n        )}\n      </Modal>\n      <NoteDialog\n        // notemsg={notemsg}\n        showNotemsg={showNotemsg}\n        // sendNotemsg={sendNotemsg}\n        // getNotemsg={getNotemsg}\n        // setNotemsg={setNotemsg}\n        open={open}\n        setOpen={setOpen}\n        handleClose={handleClosed}\n        handleClickOpen={handleClickOpen}\n        // setMsgid={setMsgid}\n        // deleteNotemsg={deleteNotemsg}\n        // setAlertopen={setAlertopen}\n        // alertopen={alertopen}\n      />\n      {/* <CustomSnackbar\n        open={snackbarState.open}\n        severity={snackbarState.severity}\n        message={snackbarState.message}\n        handleToggle={handleToggle}\n      /> */}\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { SERVER_URL } from \"../constants/constants\";\n\nexport default function Dashboard() {\n  const history = useHistory();\n\n  // useEffect to check if user is logged in\n  useEffect(() => {\n    let token = window.location.href.split(\"token=\")[1];\n\n    // Find user in one login\n    axios\n      .post(SERVER_URL + \"/sso/callback\", {\n        token: token,\n      })\n      .then((response) => {\n        // console.log(response.data);\n        localStorage.setItem(\"userToken\", response.data.jwtToken);\n        localStorage.setItem(\n          \"userDetails\",\n          JSON.stringify(response.data.userDetails)\n        );\n        localStorage.setItem(\n          \"username\",\n          response.data.userDetails.firstname +\n            \" \" +\n            response.data.userDetails.lastname\n        );\n        localStorage.setItem(\"userId\", response.data.userDetails.id);\n        localStorage.setItem(\"userEmail\", response.data.userDetails.email);\n        history.replace(\"/\");\n      })\n      .catch((err) => {\n        // console.log(err);\n        history.replace(\"/login\");\n      });\n  }, []);\n\n  return <div>Please wait, login through OneLogin...</div>;\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {\"logimetrix Photon \"}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    width: \"100%\",\n    textAlign: \"center\",\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(2),\n  },\n}));\n\nconst Footer = React.forwardRef(\n  ({ footerPosition, footerBottomPosition }, ref) => {\n    const classes = useStyles();\n\n    return (\n      <footer\n        ref={ref}\n        style={{ position: footerPosition, bottom: footerBottomPosition }}\n        className={classes.footer}\n      >\n        <Copyright />\n      </footer>\n    );\n  }\n);\n\nexport default Footer;\n","import React, { useEffect, useState, useRef, useLayoutEffect } from \"react\";\nimport axios from \"axios\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Footer from \"../components/Footer\";\nimport { SERVER_URL } from \"../constants/constants\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n// import MuiAlert from \"@material-ui/lab/Alert\";\n// import { CssBaseline, FormControl, Input, InputLabel } from \"@material-ui/core\";\n// import React from 'react';\n// import Button from '@material-ui/core/Button';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { AppState } from \"../AppContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    // backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  alertStyle: {\n    marginTop: theme.spacing(2),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n  // ipAddress: {\n  //   textDecoration: \"none\",\n  //   color: \"#008CBA\",\n  // },\n}));\n\nexport default function LoginPage() {\n  const { logoutMsg, setLogoutMsg } = AppState();\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const textRef = useRef(null);\n  const footerRef = useRef(null);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(false);\n  const [openBackdrop, setOpenBackdrop] = useState(false);\n  const [isAuthSnackbarOpened, setIsAuthSnackBarOpened] = useState(false);\n  //creating IP state\n  // const [ip, setIP] = useState(\"\");\n  const [footerPosition, setFooterPosition] = useState(\"absolute\");\n  const [footerBottomPosition, setFooterBottomPosition] = useState(\"0\");\n  const [alreadyLogin, setAlreadyLogin] = useState(false);\n  // const [ipAddress, setIpAddress] = useState(\"\");\n\n  // const authContext = useContext(AuthContext);\n  // const [logoutMsg, setLogoutMsg] = useState(false);\n\n  const userToken = localStorage.getItem(\"userToken\");\n\n  useEffect(() => {\n    const isAuthSnackbarOpenedLSItem = localStorage.getItem(\n      \"isAuthSnackbarOpened\"\n    );\n    if (isAuthSnackbarOpenedLSItem && isAuthSnackbarOpenedLSItem === \"true\") {\n      // console.log(\"isAuthSnackbarOpenedLSItem value is true.\");\n      setIsAuthSnackBarOpened(true);\n      localStorage.removeItem(\"isAuthSnackbarOpened\");\n    }\n  }, []);\n\n  useEffect(() => {\n    if (userToken && userToken !== \"\") {\n      history.push(\"/\");\n    }\n  }, [userToken, history]);\n\n  useLayoutEffect(() => {\n    window.onresize = () => {\n      if (\n        textRef.current.getBoundingClientRect().bottom >\n        footerRef.current.offsetTop\n      ) {\n        setFooterPosition(\"relative\");\n        setFooterBottomPosition(\"auto\");\n      }\n\n      if (\n        window.innerHeight > footerRef.current.getBoundingClientRect().bottom\n      ) {\n        setFooterPosition(\"absolute\");\n        setFooterBottomPosition(\"0\");\n      }\n    };\n\n    return () => {\n      window.onresize = null;\n    };\n  }, []);\n\n  //creating function to load ip address from the API\n  // const getIpData = async () => {\n  //   const res = await axios.get(\"https://api.ipify.org?format=json\");\n  //   // console.log(res.data);\n  //   setIP(res.data.ip);\n  // };\n\n  // useEffect(() => {\n  //   //passing getData method to the lifecycle method\n  //   getIpData();\n  // }, []);\n\n  // console.log(ipAddress);\n  // hanlde snackbar close\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n    setIsAuthSnackBarOpened(false);\n  };\n\n  const submitHandler = (e) => {\n    // getIpData();\n    // console.log(email, password, ip);\n    e.preventDefault();\n    setLoginError(false);\n    setAlreadyLogin(false);\n    setOpenBackdrop(true);\n    axios\n      .post(\n        SERVER_URL + \"/api/users/login\",\n        {\n          email: email,\n          password: password,\n          // ip: ip,\n        },\n        {\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\n          },\n        }\n      )\n      .then((response) => {\n        // console.log(response.data);\n        localStorage.setItem(\"userToken\", response.data.jwtToken);\n        localStorage.setItem(\n          \"userDetails\",\n          JSON.stringify(response.data.userDetails)\n        );\n        localStorage.setItem(\n          \"username\",\n          response.data.userDetails.firstname +\n            \" \" +\n            response.data.userDetails.lastname\n        );\n        localStorage.setItem(\"userId\", response.data.userDetails.id);\n        localStorage.setItem(\"userEmail\", response.data.userDetails.email);\n        setLoginError(false);\n        setOpenBackdrop(false);\n        setAlreadyLogin(false);\n\n        history.replace(\"/\");\n      })\n      .catch((error) => {\n        console.log(error);\n        if (error) {\n          setLoginError(true);\n          setOpenBackdrop(false);\n        }\n\n        if (error.response.status === 403) {\n          // console.log(error.response);\n\n          // setIpAddress(error.response.data);\n\n          // console.log(ipAddress.data, \"183\");\n          setAlreadyLogin(true);\n          setLoginError(false);\n          // setOpenBackdrop(false);\n          handleClickOpen();\n        }\n        if (error.response.status === 401) {\n          // setLogoutMsg(true);\n          // localStorage.clear();\n        }\n        // if (error.response.status) {\n        //   console.log(error.response.status);\n        //   console.log(error.response.data);\n        //   setLoginError(true);\n        //   setOpenBackdrop(false);\n        // }\n      });\n  };\n\n  const replaceWithSignup = (e) => {\n    e.preventDefault();\n    history.replace(\"/signup\");\n  };\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const continueLogin = (e) => {\n    e.preventDefault();\n    setLoginError(false);\n    setAlreadyLogin(false);\n    setOpenBackdrop(true);\n    setLogoutMsg(false);\n    axios\n      .post(\n        SERVER_URL + \"/api/users/login/continue\",\n        {\n          email: email,\n          password: password,\n          // ip: ip,\n        },\n        {\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\n          },\n        }\n      )\n      .then((response) => {\n        // console.log(response.data);\n        localStorage.setItem(\"userToken\", response.data.jwtToken);\n        localStorage.setItem(\n          \"userDetails\",\n          JSON.stringify(response.data.userDetails)\n        );\n        localStorage.setItem(\n          \"username\",\n          response.data.userDetails.firstname +\n            \" \" +\n            response.data.userDetails.lastname\n        );\n        localStorage.setItem(\"userId\", response.data.userDetails.id);\n        localStorage.setItem(\"userEmail\", response.data.userDetails.email);\n        // setLogoutMsg(false);\n        history.replace(\"/\");\n        // console.log(response.status);\n      })\n      .catch((error) => {\n        console.log(error);\n        if (error) {\n          setLoginError(true);\n          setOpenBackdrop(false);\n        }\n        // if (error.response.status === 401) {\n        //   // console.log(error.response.status);\n        //   setLogoutMsg(true);\n        // }\n\n        // if (error.response.status) {\n        //   console.log(error.response.status);\n        //   console.log(error.response.data);\n        //   setLoginError(true);\n        //   setOpenBackdrop(false);\n        // }\n      });\n  };\n\n  // const handleClosed = () => {\n  //   setOpen(false);\n  // };\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n          {/* <Avatar className={classes.avatar} src='/static/images/acme.png'> */}\n          {/* <LockOutlinedIcon /> */}\n          {/* </Avatar> */}\n          <img\n            src=\"/static/images/acme.png\"\n            alt=\"ACME brand logo\"\n            style={{ width: \"12rem\", marginBottom: \"2rem\" }}\n          />\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in - ACME ACE\n          </Typography>\n          {loginError && (\n            <Alert severity=\"error\" className={classes.alertStyle}>\n              Wrong email or password is entered.\n            </Alert>\n          )}\n          {logoutMsg && (\n            <Alert severity=\"error\" className={classes.alertStyle}>\n              Someone from other system just LoggedIn with this id.\n            </Alert>\n          )}\n          {alreadyLogin && (\n            <div>\n              {/* <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n              >\n                Open alert dialog\n              </Button> */}\n              <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n              >\n                <DialogTitle id=\"alert-dialog-title\">\n                  {`User with this id is already logged in.`}\n\n                  {/* <div style={{ color: \"#008CBA\" }}>\n                    {`Public IP:`}\n                    {ipAddress.redisSavedPublicIp}\n                  </div> */}\n                  {/* <div style={{ color: \"#008CBA\" }}>\n                    {`Local IP:`}\n                    {ipAddress.ip}\n                  </div> */}\n                </DialogTitle>\n\n                <DialogContent>\n                  <DialogContentText id=\"alert-dialog-description\">\n                    Do you want to continue with this session?\n                  </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={handleClose} color=\"primary\">\n                    cancel\n                  </Button>\n                  <Button onClick={continueLogin} color=\"primary\" autoFocus>\n                    continue\n                  </Button>\n                </DialogActions>\n              </Dialog>\n            </div>\n          )}\n          <form className={classes.form} onSubmit={submitHandler}>\n            <TextField\n              variant=\"filled\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              variant=\"filled\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link ref={textRef} variant=\"body2\" onClick={replaceWithSignup}>\n                  {\"Don't have an account? Sign up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n      <Snackbar\n        open={isAuthSnackbarOpened}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        style={{ marginBottom: \"2rem\" }}\n      >\n        <Alert onClose={handleClose} severity=\"info\">\n          Session expired! Login again.\n        </Alert>\n      </Snackbar>\n      <Footer\n        ref={footerRef}\n        footerPosition={footerPosition}\n        footerBottomPosition={footerBottomPosition}\n      />\n      <Backdrop className={classes.backdrop} open={openBackdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport axios from \"axios\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { useHistory } from \"react-router-dom\";\nimport Footer from \"../components/Footer\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { SERVER_URL } from \"../constants/constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  alertStyle: {\n    marginTop: theme.spacing(2),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nexport default function SignupPage() {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const textRef = useRef(null);\n  const footerRef = useRef(null);\n\n  const userToken = localStorage.getItem(\"userToken\");\n\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassowrd, setConfirmPassword] = useState(\"\");\n  const [passwordMatch, setPasswordMatch] = useState(false);\n  const [alertPasswordMatch, setAlertPasswordMatch] = useState(false);\n  const [signupError, setSignupError] = useState(false);\n  const [userExist, setUserExist] = useState(false);\n  const [openBackdrop, setOpenBackdrop] = useState(false);\n\n  const [footerPosition, setFooterPosition] = useState(\"absolute\");\n  const [footerBottomPosition, setFooterBottomPosition] = useState(\"0\");\n\n  useEffect(() => {\n    if (userToken && userToken !== \"\") {\n      history.push(\"/\");\n    }\n  }, [userToken, history]);\n\n  useLayoutEffect(() => {\n    window.onresize = () => {\n      if (\n        textRef.current.getBoundingClientRect().bottom >\n        footerRef.current.offsetTop\n      ) {\n        setFooterPosition(\"relative\");\n        setFooterBottomPosition(\"auto\");\n      }\n\n      if (\n        window.innerHeight > footerRef.current.getBoundingClientRect().bottom\n      ) {\n        setFooterPosition(\"absolute\");\n        setFooterBottomPosition(\"0\");\n      }\n    };\n\n    return () => {\n      window.onresize = null;\n    };\n  }, []);\n\n  const replaceWithLogin = (e) => {\n    e.preventDefault();\n    history.replace(\"/login\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setAlertPasswordMatch(false);\n    setUserExist(false);\n    if (password !== confirmPassowrd) {\n      setAlertPasswordMatch(true);\n      return;\n    }\n    setOpenBackdrop(true);\n\n    axios\n      .post(SERVER_URL + \"/api/users\", {\n        firstname: firstname,\n        lastname: lastname,\n        email: email,\n        password: password,\n      })\n      .then((response) => {\n        // console.log(response.data);\n        localStorage.setItem(\"userToken\", response.data.jwtToken);\n        localStorage.setItem(\n          \"username\",\n          response.data.userDetails.firstname +\n            \" \" +\n            response.data.userDetails.lastname\n        );\n        localStorage.setItem(\"userId\", response.data.userDetails.id);\n        localStorage.setItem('userEmail', response.data.userDetails.email);\n        setSignupError(false);\n        setOpenBackdrop(false);\n        history.replace(\"/\");\n      })\n      .catch((error) => {\n        // console.log(error.response.status);\n        // console.log(error.response.data);\n        if (error.response.status === 401) {\n          setUserExist(true);\n          setSignupError(true);\n        }\n        setSignupError(true);\n        setOpenBackdrop(false);\n      });\n  };\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        {/* <CssBaseline /> */}\n        <div className={classes.paper}>\n          {/* <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar> */}\n          <img\n            src=\"/static/images/acme.png\"\n            alt=\"ACME brand logo\"\n            style={{ width: \"12rem\", marginBottom: \"2rem\" }}\n          />\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up - ACME ACE\n          </Typography>\n          {alertPasswordMatch && (\n            <Alert severity=\"warning\" className={classes.alertStyle}>\n              Passwords do not match.\n            </Alert>\n          )}\n          {userExist && (\n            <Alert severity=\"error\" className={classes.alertStyle}>\n              User already exists.\n            </Alert>\n          )}\n          {/* <Alert severity='error' className={classes.alertStyle}>\n            Wrong email or password is entered.\n          </Alert> */}\n          <form className={classes.form} onSubmit={submitHandler}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  value={firstname}\n                  onChange={(e) => setFirstname(e.target.value)}\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"lname\"\n                  value={lastname}\n                  onChange={(e) => setLastname(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  autoComplete=\"current-password\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"confirmPassword\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  value={confirmPassowrd}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  autoComplete=\"confirm-password\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled\n            >\n              Sign Up\n            </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link ref={textRef} variant=\"body2\" onClick={replaceWithLogin}>\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n      <Footer\n        ref={footerRef}\n        footerPosition={footerPosition}\n        footerBottomPosition={footerBottomPosition}\n      />\n      <Backdrop className={classes.backdrop} open={openBackdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n}\n","import { Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React from \"react\";\nimport { AppState } from \"../AppContext\";\n\nexport default function CustomSnackbar() {\n  const { snackbar, setSnackbar } = AppState();\n\n  const handleSnackbarClose = () => {\n    setSnackbar((prevState) => ({ ...prevState, open: false }));\n  };\n\n  return (\n    <Snackbar\n      open={snackbar.open}\n      autoHideDuration={6000}\n      onClose={handleSnackbarClose}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n    >\n      <Alert onClose={handleSnackbarClose} severity={snackbar.severity}>\n        {snackbar.message}\n      </Alert>\n    </Snackbar>\n  );\n}\n","// import 'fontsource-roboto'\nimport { Box, LinearProgress } from \"@material-ui/core\";\nimport { teal, blue, deepOrange } from \"@material-ui/core/colors\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme, createTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport CustomDrawer from \"./layout/CustomDrawer.js\";\nimport Dashboard from \"./pages/Dashboard\";\nimport LoginPage from \"./pages/Login\";\nimport SignupPage from \"./pages/Signup\";\n\nimport CustomSnackbar from \"./utils/CustomSnackbar\";\nimport { AppState } from \"./AppContext\";\n\nfunction App() {\n  const { enableDarkTheme } = AppState();\n  const userToken = localStorage.getItem(\"userToken\");\n  const theme = createTheme({\n    palette: enableDarkTheme\n      ? {\n          type: \"dark\",\n        }\n      : {\n          primary: blue,\n          secondary: deepOrange,\n          action: {\n            disabledBackground: \"#ffcf33\",\n            disabled: \"#ffcf33\",\n          },\n        },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Switch>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/signup\">\n          <SignupPage />\n        </Route>\n        {/* used for SSO */}\n        <Route path=\"/dashboard\">\n          <Dashboard />\n        </Route>\n        <Route exact path=\"/\">\n          <CustomDrawer />\n        </Route>\n        <Route path=\"*\" render={() => \"404 NOT FOUND\"} />\n      </Switch>\n      <CustomSnackbar />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppContext from \"./AppContext\";\n\nReactDOM.render(\n  <AppContext>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AppContext>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}